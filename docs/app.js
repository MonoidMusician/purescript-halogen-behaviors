(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (root) {
   "use strict";

/***** unorm.js *****/

/*
 * UnicodeNormalizer 1.0.0
 * Copyright (c) 2008 Matsuza
 * Dual licensed under the MIT (MIT-LICENSE.txt) and GPL (GPL-LICENSE.txt) licenses.
 * $Date: 2008-06-05 16:44:17 +0200 (Thu, 05 Jun 2008) $
 * $Rev: 13309 $
 */

   var DEFAULT_FEATURE = [null, 0, {}];
   var CACHE_THRESHOLD = 10;
   var SBase = 0xAC00, LBase = 0x1100, VBase = 0x1161, TBase = 0x11A7, LCount = 19, VCount = 21, TCount = 28;
   var NCount = VCount * TCount; // 588
   var SCount = LCount * NCount; // 11172

   var UChar = function(cp, feature){
      this.codepoint = cp;
      this.feature = feature;
   };

   // Strategies
   var cache = {};
   var cacheCounter = [];
   for (var i = 0; i <= 0xFF; ++i){
      cacheCounter[i] = 0;
   }

   function fromCache(next, cp, needFeature){
      var ret = cache[cp];
      if(!ret){
         ret = next(cp, needFeature);
         if(!!ret.feature && ++cacheCounter[(cp >> 8) & 0xFF] > CACHE_THRESHOLD){
            cache[cp] = ret;
         }
      }
      return ret;
   }

   function fromData(next, cp, needFeature){
      var hash = cp & 0xFF00;
      var dunit = UChar.udata[hash] || {};
      var f = dunit[cp];
      return f ? new UChar(cp, f) : new UChar(cp, DEFAULT_FEATURE);
   }
   function fromCpOnly(next, cp, needFeature){
      return !!needFeature ? next(cp, needFeature) : new UChar(cp, null);
   }
   function fromRuleBasedJamo(next, cp, needFeature){
      var j;
      if(cp < LBase || (LBase + LCount <= cp && cp < SBase) || (SBase + SCount < cp)){
         return next(cp, needFeature);
      }
      if(LBase <= cp && cp < LBase + LCount){
         var c = {};
         var base = (cp - LBase) * VCount;
         for (j = 0; j < VCount; ++j){
            c[VBase + j] = SBase + TCount * (j + base);
         }
         return new UChar(cp, [,,c]);
      }

      var SIndex = cp - SBase;
      var TIndex = SIndex % TCount;
      var feature = [];
      if(TIndex !== 0){
         feature[0] = [SBase + SIndex - TIndex, TBase + TIndex];
      } else {
         feature[0] = [LBase + Math.floor(SIndex / NCount), VBase + Math.floor((SIndex % NCount) / TCount)];
         feature[2] = {};
         for (j = 1; j < TCount; ++j){
            feature[2][TBase + j] = cp + j;
         }
      }
      return new UChar(cp, feature);
   }
   function fromCpFilter(next, cp, needFeature){
      return cp < 60 || 13311 < cp && cp < 42607 ? new UChar(cp, DEFAULT_FEATURE) : next(cp, needFeature);
   }

   var strategies = [fromCpFilter, fromCache, fromCpOnly, fromRuleBasedJamo, fromData];

   UChar.fromCharCode = strategies.reduceRight(function (next, strategy) {
      return function (cp, needFeature) {
         return strategy(next, cp, needFeature);
      };
   }, null);

   UChar.isHighSurrogate = function(cp){
      return cp >= 0xD800 && cp <= 0xDBFF;
   };
   UChar.isLowSurrogate = function(cp){
      return cp >= 0xDC00 && cp <= 0xDFFF;
   };

   UChar.prototype.prepFeature = function(){
      if(!this.feature){
         this.feature = UChar.fromCharCode(this.codepoint, true).feature;
      }
   };

   UChar.prototype.toString = function(){
      if(this.codepoint < 0x10000){
         return String.fromCharCode(this.codepoint);
      } else {
         var x = this.codepoint - 0x10000;
         return String.fromCharCode(Math.floor(x / 0x400) + 0xD800, x % 0x400 + 0xDC00);
      }
   };

   UChar.prototype.getDecomp = function(){
      this.prepFeature();
      return this.feature[0] || null;
   };

   UChar.prototype.isCompatibility = function(){
      this.prepFeature();
      return !!this.feature[1] && (this.feature[1] & (1 << 8));
   };
   UChar.prototype.isExclude = function(){
      this.prepFeature();
      return !!this.feature[1] && (this.feature[1] & (1 << 9));
   };
   UChar.prototype.getCanonicalClass = function(){
      this.prepFeature();
      return !!this.feature[1] ? (this.feature[1] & 0xff) : 0;
   };
   UChar.prototype.getComposite = function(following){
      this.prepFeature();
      if(!this.feature[2]){
         return null;
      }
      var cp = this.feature[2][following.codepoint];
      return cp ? UChar.fromCharCode(cp) : null;
   };

   var UCharIterator = function(str){
      this.str = str;
      this.cursor = 0;
   };
   UCharIterator.prototype.next = function(){
      if(!!this.str && this.cursor < this.str.length){
         var cp = this.str.charCodeAt(this.cursor++);
         var d;
         if(UChar.isHighSurrogate(cp) && this.cursor < this.str.length && UChar.isLowSurrogate((d = this.str.charCodeAt(this.cursor)))){
            cp = (cp - 0xD800) * 0x400 + (d -0xDC00) + 0x10000;
            ++this.cursor;
         }
         return UChar.fromCharCode(cp);
      } else {
         this.str = null;
         return null;
      }
   };

   var RecursDecompIterator = function(it, cano){
      this.it = it;
      this.canonical = cano;
      this.resBuf = [];
   };

   RecursDecompIterator.prototype.next = function(){
      function recursiveDecomp(cano, uchar){
         var decomp = uchar.getDecomp();
         if(!!decomp && !(cano && uchar.isCompatibility())){
            var ret = [];
            for(var i = 0; i < decomp.length; ++i){
               var a = recursiveDecomp(cano, UChar.fromCharCode(decomp[i]));
                ret = ret.concat(a);
            }
            return ret;
         } else {
            return [uchar];
         }
      }
      if(this.resBuf.length === 0){
         var uchar = this.it.next();
         if(!uchar){
            return null;
         }
         this.resBuf = recursiveDecomp(this.canonical, uchar);
      }
      return this.resBuf.shift();
   };

   var DecompIterator = function(it){
      this.it = it;
      this.resBuf = [];
   };

   DecompIterator.prototype.next = function(){
      var cc;
      if(this.resBuf.length === 0){
         do{
            var uchar = this.it.next();
            if(!uchar){
               break;
            }
            cc = uchar.getCanonicalClass();
            var inspt = this.resBuf.length;
            if(cc !== 0){
               for(; inspt > 0; --inspt){
                  var uchar2 = this.resBuf[inspt - 1];
                  var cc2 = uchar2.getCanonicalClass();
                  if(cc2 <= cc){
                     break;
                  }
               }
            }
            this.resBuf.splice(inspt, 0, uchar);
         } while(cc !== 0);
      }
      return this.resBuf.shift();
   };

   var CompIterator = function(it){
      this.it = it;
      this.procBuf = [];
      this.resBuf = [];
      this.lastClass = null;
   };

   CompIterator.prototype.next = function(){
      while(this.resBuf.length === 0){
         var uchar = this.it.next();
         if(!uchar){
            this.resBuf = this.procBuf;
            this.procBuf = [];
            break;
         }
         if(this.procBuf.length === 0){
            this.lastClass = uchar.getCanonicalClass();
            this.procBuf.push(uchar);
         } else {
            var starter = this.procBuf[0];
            var composite = starter.getComposite(uchar);
            var cc = uchar.getCanonicalClass();
            if(!!composite && (this.lastClass < cc || this.lastClass === 0)){
               this.procBuf[0] = composite;
            } else {
               if(cc === 0){
                  this.resBuf = this.procBuf;
                  this.procBuf = [];
               }
               this.lastClass = cc;
               this.procBuf.push(uchar);
            }
         }
      }
      return this.resBuf.shift();
   };

   var createIterator = function(mode, str){
      switch(mode){
         case "NFD":
            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true));
         case "NFKD":
            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false));
         case "NFC":
            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true)));
         case "NFKC":
            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false)));
      }
      throw mode + " is invalid";
   };
   var normalize = function(mode, str){
      var it = createIterator(mode, str);
      var ret = "";
      var uchar;
      while(!!(uchar = it.next())){
         ret += uchar.toString();
      }
      return ret;
   };

   /* API functions */
   function nfd(str){
      return normalize("NFD", str);
   }

   function nfkd(str){
      return normalize("NFKD", str);
   }

   function nfc(str){
      return normalize("NFC", str);
   }

   function nfkc(str){
      return normalize("NFKC", str);
   }

/* Unicode data */
UChar.udata={
0:{60:[,,{824:8814}],61:[,,{824:8800}],62:[,,{824:8815}],65:[,,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[,,{775:7682,803:7684,817:7686}],67:[,,{769:262,770:264,775:266,780:268,807:199}],68:[,,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[,,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[,,{775:7710}],71:[,,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[,,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[,,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[,,{770:308}],75:[,,{769:7728,780:488,803:7730,807:310,817:7732}],76:[,,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[,,{769:7742,775:7744,803:7746}],78:[,,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[,,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[,,{769:7764,775:7766}],82:[,,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[,,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[,,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[,,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[,,{771:7804,803:7806}],87:[,,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[,,{775:7818,776:7820}],89:[,,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[,,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[,,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[,,{775:7683,803:7685,817:7687}],99:[,,{769:263,770:265,775:267,780:269,807:231}],100:[,,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[,,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[,,{775:7711}],103:[,,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[,,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[,,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[,,{770:309,780:496}],107:[,,{769:7729,780:489,803:7731,807:311,817:7733}],108:[,,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[,,{769:7743,775:7745,803:7747}],110:[,,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[,,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[,,{769:7765,775:7767}],114:[,,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[,,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[,,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[,,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[,,{771:7805,803:7807}],119:[,,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[,,{775:7819,776:7821}],121:[,,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[,,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],,{772:478}],197:[[65,778],,{769:506}],198:[,,{769:508,772:482}],199:[[67,807],,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],,{769:7756,772:556,776:7758}],214:[[79,776],,{772:554}],216:[,,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],,{772:479}],229:[[97,778],,{769:507}],230:[,,{769:509,772:483}],231:[[99,807],,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],,{769:7757,772:557,776:7759}],246:[[111,776],,{772:555}],248:[,,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},
256:{256:[[65,772]],257:[[97,772]],258:[[65,774],,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],,{768:7700,769:7702}],275:[[101,772],,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],,{768:7760,769:7762}],333:[[111,772],,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],,{775:7780}],347:[[115,769],,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],,{775:7782}],353:[[115,780],,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],,{769:7800}],361:[[117,771],,{769:7801}],362:[[85,772],,{776:7802}],363:[[117,772],,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[,,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],,{772:492}],491:[[111,808],,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[,220]},
512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],,{772:480}],551:[[97,775],,{772:481}],552:[[69,807],,{774:7708}],553:[[101,807],,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],,{772:560}],559:[[111,775],,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[,,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[,220]},
768:{768:[,230],769:[,230],770:[,230],771:[,230],772:[,230],773:[,230],774:[,230],775:[,230],776:[,230,{769:836}],777:[,230],778:[,230],779:[,230],780:[,230],781:[,230],782:[,230],783:[,230],784:[,230],785:[,230],786:[,230],787:[,230],788:[,230],789:[,232],790:[,220],791:[,220],792:[,220],793:[,220],794:[,232],795:[,216],796:[,220],797:[,220],798:[,220],799:[,220],800:[,220],801:[,202],802:[,202],803:[,220],804:[,220],805:[,220],806:[,220],807:[,202],808:[,202],809:[,220],810:[,220],811:[,220],812:[,220],813:[,220],814:[,220],815:[,220],816:[,220],817:[,220],818:[,220],819:[,220],820:[,1],821:[,1],822:[,1],823:[,1],824:[,1],825:[,220],826:[,220],827:[,220],828:[,220],829:[,230],830:[,230],831:[,230],832:[[768],230],833:[[769],230],834:[,230],835:[[787],230],836:[[776,769],230],837:[,240],838:[,230],839:[,220],840:[,220],841:[,220],842:[,230],843:[,230],844:[,230],845:[,220],846:[,220],848:[,230],849:[,230],850:[,230],851:[,220],852:[,220],853:[,220],854:[,220],855:[,230],856:[,232],857:[,220],858:[,220],859:[,230],860:[,233],861:[,234],862:[,234],863:[,233],864:[,234],865:[,234],866:[,233],867:[,230],868:[,230],869:[,230],870:[,230],871:[,230],872:[,230],873:[,230],874:[,230],875:[,230],876:[,230],877:[,230],878:[,230],879:[,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[,,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[,,{768:8136,769:904,787:7960,788:7961}],919:[,,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[,,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[,,{768:8184,769:908,787:8008,788:8009}],929:[,,{788:8172}],933:[,,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[,,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],,{837:8116}],941:[[949,769]],942:[[951,769],,{837:8132}],943:[[953,769]],944:[[971,769]],945:[,,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[,,{768:8050,769:941,787:7952,788:7953}],951:[,,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[,,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[,,{768:8056,769:972,787:8000,788:8001}],961:[,,{787:8164,788:8165}],965:[,,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[,,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],,{768:8146,769:912,834:8151}],971:[[965,776],,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[,230],66423:[,230],66424:[,230],66425:[,230],66426:[,230]},
1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[,,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[,,{774:1232,776:1234}],1043:[,,{769:1027}],1045:[,,{768:1024,774:1238,776:1025}],1046:[,,{774:1217,776:1244}],1047:[,,{776:1246}],1048:[,,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[,,{769:1036}],1054:[,,{776:1254}],1059:[,,{772:1262,774:1038,776:1264,779:1266}],1063:[,,{776:1268}],1067:[,,{776:1272}],1069:[,,{776:1260}],1072:[,,{774:1233,776:1235}],1075:[,,{769:1107}],1077:[,,{768:1104,774:1239,776:1105}],1078:[,,{774:1218,776:1245}],1079:[,,{776:1247}],1080:[,,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[,,{769:1116}],1086:[,,{776:1255}],1091:[,,{772:1263,774:1118,776:1265,779:1267}],1095:[,,{776:1269}],1099:[,,{776:1273}],1101:[,,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[,,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[,,{783:1142}],1141:[,,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[,230],1156:[,230],1157:[,230],1158:[,230],1159:[,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[,,{776:1242}],1241:[,,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[,,{776:1258}],1257:[,,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},
1280:{1415:[[1381,1410],256],1425:[,220],1426:[,230],1427:[,230],1428:[,230],1429:[,230],1430:[,220],1431:[,230],1432:[,230],1433:[,230],1434:[,222],1435:[,220],1436:[,230],1437:[,230],1438:[,230],1439:[,230],1440:[,230],1441:[,230],1442:[,220],1443:[,220],1444:[,220],1445:[,220],1446:[,220],1447:[,220],1448:[,230],1449:[,230],1450:[,220],1451:[,230],1452:[,230],1453:[,222],1454:[,228],1455:[,230],1456:[,10],1457:[,11],1458:[,12],1459:[,13],1460:[,14],1461:[,15],1462:[,16],1463:[,17],1464:[,18],1465:[,19],1466:[,19],1467:[,20],1468:[,21],1469:[,22],1471:[,23],1473:[,24],1474:[,25],1476:[,230],1477:[,220],1479:[,18]},
1536:{1552:[,230],1553:[,230],1554:[,230],1555:[,230],1556:[,230],1557:[,230],1558:[,230],1559:[,230],1560:[,30],1561:[,31],1562:[,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[,,{1619:1570,1620:1571,1621:1573}],1608:[,,{1620:1572}],1610:[,,{1620:1574}],1611:[,27],1612:[,28],1613:[,29],1614:[,30],1615:[,31],1616:[,32],1617:[,33],1618:[,34],1619:[,230],1620:[,230],1621:[,220],1622:[,220],1623:[,230],1624:[,230],1625:[,230],1626:[,230],1627:[,230],1628:[,220],1629:[,230],1630:[,230],1631:[,220],1648:[,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[,,{1620:1730}],1730:[[1729,1620]],1746:[,,{1620:1747}],1747:[[1746,1620]],1749:[,,{1620:1728}],1750:[,230],1751:[,230],1752:[,230],1753:[,230],1754:[,230],1755:[,230],1756:[,230],1759:[,230],1760:[,230],1761:[,230],1762:[,230],1763:[,220],1764:[,230],1767:[,230],1768:[,230],1770:[,220],1771:[,230],1772:[,230],1773:[,220]},
1792:{1809:[,36],1840:[,230],1841:[,220],1842:[,230],1843:[,230],1844:[,220],1845:[,230],1846:[,230],1847:[,220],1848:[,220],1849:[,220],1850:[,230],1851:[,220],1852:[,220],1853:[,230],1854:[,220],1855:[,230],1856:[,230],1857:[,230],1858:[,220],1859:[,230],1860:[,220],1861:[,230],1862:[,220],1863:[,230],1864:[,220],1865:[,230],1866:[,230],2027:[,230],2028:[,230],2029:[,230],2030:[,230],2031:[,230],2032:[,230],2033:[,230],2034:[,220],2035:[,230]},
2048:{2070:[,230],2071:[,230],2072:[,230],2073:[,230],2075:[,230],2076:[,230],2077:[,230],2078:[,230],2079:[,230],2080:[,230],2081:[,230],2082:[,230],2083:[,230],2085:[,230],2086:[,230],2087:[,230],2089:[,230],2090:[,230],2091:[,230],2092:[,230],2093:[,230],2137:[,220],2138:[,220],2139:[,220],2276:[,230],2277:[,230],2278:[,220],2279:[,230],2280:[,230],2281:[,220],2282:[,230],2283:[,230],2284:[,230],2285:[,220],2286:[,220],2287:[,220],2288:[,27],2289:[,28],2290:[,29],2291:[,230],2292:[,230],2293:[,230],2294:[,220],2295:[,230],2296:[,230],2297:[,220],2298:[,220],2299:[,230],2300:[,230],2301:[,230],2302:[,230],2303:[,230]},
2304:{2344:[,,{2364:2345}],2345:[[2344,2364]],2352:[,,{2364:2353}],2353:[[2352,2364]],2355:[,,{2364:2356}],2356:[[2355,2364]],2364:[,7],2381:[,9],2385:[,230],2386:[,220],2387:[,230],2388:[,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[,7],2503:[,,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},
2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[,7],2637:[,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[,7],2765:[,9],68109:[,220],68111:[,230],68152:[,230],68153:[,1],68154:[,220],68159:[,9],68325:[,230],68326:[,220]},
2816:{2876:[,7],2887:[,,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[,,{3031:2964}],2964:[[2962,3031]],3014:[,,{3006:3018,3031:3020}],3015:[,,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[,9]},
3072:{3142:[,,{3158:3144}],3144:[[3142,3158]],3149:[,9],3157:[,84],3158:[,91],3260:[,7],3263:[,,{3285:3264}],3264:[[3263,3285]],3270:[,,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],,{3285:3275}],3275:[[3274,3285]],3277:[,9]},
3328:{3398:[,,{3390:3402,3415:3404}],3399:[,,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[,9],3530:[,9],3545:[,,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},
3584:{3635:[[3661,3634],256],3640:[,103],3641:[,103],3642:[,9],3656:[,107],3657:[,107],3658:[,107],3659:[,107],3763:[[3789,3762],256],3768:[,118],3769:[,118],3784:[,122],3785:[,122],3786:[,122],3787:[,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},
3840:{3852:[[3851],256],3864:[,220],3865:[,220],3893:[,220],3895:[,220],3897:[,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[,129],3954:[,130],3955:[[3953,3954],512],3956:[,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[,130],3963:[,130],3964:[,130],3965:[,130],3968:[,130],3969:[[3953,3968],512],3970:[,230],3971:[,230],3972:[,9],3974:[,230],3975:[,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[,220]},
4096:{4133:[,,{4142:4134}],4134:[[4133,4142]],4151:[,7],4153:[,9],4154:[,9],4237:[,220],4348:[[4316],256],69702:[,9],69759:[,9],69785:[,,{69818:69786}],69786:[[69785,69818]],69787:[,,{69818:69788}],69788:[[69787,69818]],69797:[,,{69818:69803}],69803:[[69797,69818]],69817:[,9],69818:[,7]},
4352:{69888:[,230],69889:[,230],69890:[,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[,,{69927:69934}],69938:[,,{69927:69935}],69939:[,9],69940:[,9],70003:[,7],70080:[,9]},
4608:{70197:[,9],70198:[,7],70377:[,7],70378:[,9]},
4864:{4957:[,230],4958:[,230],4959:[,230],70460:[,7],70471:[,,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[,9],70502:[,230],70503:[,230],70504:[,230],70505:[,230],70506:[,230],70507:[,230],70508:[,230],70512:[,230],70513:[,230],70514:[,230],70515:[,230],70516:[,230]},
5120:{70841:[,,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[,9],70851:[,7]},
5376:{71096:[,,{71087:71098}],71097:[,,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[,9],71104:[,7]},
5632:{71231:[,9],71350:[,9],71351:[,7]},
5888:{5908:[,9],5940:[,9],6098:[,9],6109:[,230]},
6144:{6313:[,228]},
6400:{6457:[,222],6458:[,230],6459:[,220]},
6656:{6679:[,230],6680:[,220],6752:[,9],6773:[,230],6774:[,230],6775:[,230],6776:[,230],6777:[,230],6778:[,230],6779:[,230],6780:[,230],6783:[,220],6832:[,230],6833:[,230],6834:[,230],6835:[,230],6836:[,230],6837:[,220],6838:[,220],6839:[,220],6840:[,220],6841:[,220],6842:[,220],6843:[,230],6844:[,230],6845:[,220]},
6912:{6917:[,,{6965:6918}],6918:[[6917,6965]],6919:[,,{6965:6920}],6920:[[6919,6965]],6921:[,,{6965:6922}],6922:[[6921,6965]],6923:[,,{6965:6924}],6924:[[6923,6965]],6925:[,,{6965:6926}],6926:[[6925,6965]],6929:[,,{6965:6930}],6930:[[6929,6965]],6964:[,7],6970:[,,{6965:6971}],6971:[[6970,6965]],6972:[,,{6965:6973}],6973:[[6972,6965]],6974:[,,{6965:6976}],6975:[,,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[,,{6965:6979}],6979:[[6978,6965]],6980:[,9],7019:[,230],7020:[,220],7021:[,230],7022:[,230],7023:[,230],7024:[,230],7025:[,230],7026:[,230],7027:[,230],7082:[,9],7083:[,9],7142:[,7],7154:[,9],7155:[,9]},
7168:{7223:[,7],7376:[,230],7377:[,230],7378:[,230],7380:[,1],7381:[,220],7382:[,220],7383:[,220],7384:[,220],7385:[,220],7386:[,230],7387:[,230],7388:[,220],7389:[,220],7390:[,220],7391:[,220],7392:[,230],7394:[,1],7395:[,1],7396:[,1],7397:[,1],7398:[,1],7399:[,1],7400:[,1],7405:[,220],7412:[,230],7416:[,230],7417:[,230]},
7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[,230],7617:[,230],7618:[,220],7619:[,230],7620:[,230],7621:[,230],7622:[,230],7623:[,230],7624:[,230],7625:[,230],7626:[,220],7627:[,230],7628:[,230],7629:[,234],7630:[,214],7631:[,220],7632:[,202],7633:[,230],7634:[,230],7635:[,230],7636:[,230],7637:[,230],7638:[,230],7639:[,230],7640:[,230],7641:[,230],7642:[,230],7643:[,230],7644:[,230],7645:[,230],7646:[,230],7647:[,230],7648:[,230],7649:[,230],7650:[,230],7651:[,230],7652:[,230],7653:[,230],7654:[,230],7655:[,230],7656:[,230],7657:[,230],7658:[,230],7659:[,230],7660:[,230],7661:[,230],7662:[,230],7663:[,230],7664:[,230],7665:[,230],7666:[,230],7667:[,230],7668:[,230],7669:[,230],7676:[,233],7677:[,220],7678:[,230],7679:[,220]},
7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],,{772:7736}],7735:[[108,803],,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],,{772:7772}],7771:[[114,803],,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],,{775:7784}],7779:[[115,803],,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],,{770:7852,774:7862}],7841:[[97,803],,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],,{770:7878}],7865:[[101,803],,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],,{770:7896}],7885:[[111,803],,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},
7936:{7936:[[945,787],,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],,{837:8066}],7939:[[7937,768],,{837:8067}],7940:[[7936,769],,{837:8068}],7941:[[7937,769],,{837:8069}],7942:[[7936,834],,{837:8070}],7943:[[7937,834],,{837:8071}],7944:[[913,787],,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],,{837:8074}],7947:[[7945,768],,{837:8075}],7948:[[7944,769],,{837:8076}],7949:[[7945,769],,{837:8077}],7950:[[7944,834],,{837:8078}],7951:[[7945,834],,{837:8079}],7952:[[949,787],,{768:7954,769:7956}],7953:[[949,788],,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],,{768:7962,769:7964}],7961:[[917,788],,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],,{837:8082}],7971:[[7969,768],,{837:8083}],7972:[[7968,769],,{837:8084}],7973:[[7969,769],,{837:8085}],7974:[[7968,834],,{837:8086}],7975:[[7969,834],,{837:8087}],7976:[[919,787],,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],,{837:8090}],7979:[[7977,768],,{837:8091}],7980:[[7976,769],,{837:8092}],7981:[[7977,769],,{837:8093}],7982:[[7976,834],,{837:8094}],7983:[[7977,834],,{837:8095}],7984:[[953,787],,{768:7986,769:7988,834:7990}],7985:[[953,788],,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],,{768:7994,769:7996,834:7998}],7993:[[921,788],,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8000:[[959,787],,{768:8002,769:8004}],8001:[[959,788],,{768:8003,769:8005}],8002:[[8000,768]],8003:[[8001,768]],8004:[[8000,769]],8005:[[8001,769]],8008:[[927,787],,{768:8010,769:8012}],8009:[[927,788],,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],,{768:8018,769:8020,834:8022}],8017:[[965,788],,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],,{837:8098}],8035:[[8033,768],,{837:8099}],8036:[[8032,769],,{837:8100}],8037:[[8033,769],,{837:8101}],8038:[[8032,834],,{837:8102}],8039:[[8033,834],,{837:8103}],8040:[[937,787],,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],,{837:8106}],8043:[[8041,768],,{837:8107}],8044:[[8040,769],,{837:8108}],8045:[[8041,769],,{837:8109}],8046:[[8040,834],,{837:8110}],8047:[[8041,834],,{837:8111}],8048:[[945,768],,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},
8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[,230],8401:[,230],8402:[,1],8403:[,1],8404:[,230],8405:[,230],8406:[,230],8407:[,230],8408:[,1],8409:[,1],8410:[,1],8411:[,230],8412:[,230],8417:[,230],8421:[,1],8422:[,1],8423:[,230],8424:[,220],8425:[,230],8426:[,1],8427:[,1],8428:[,220],8429:[,220],8430:[,220],8431:[,220],8432:[,230]},
8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[,,{824:8602}],8594:[,,{824:8603}],8596:[,,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[,,{824:8653}],8658:[,,{824:8655}],8660:[,,{824:8654}]},
8704:{8707:[,,{824:8708}],8708:[[8707,824]],8712:[,,{824:8713}],8713:[[8712,824]],8715:[,,{824:8716}],8716:[[8715,824]],8739:[,,{824:8740}],8740:[[8739,824]],8741:[,,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[,,{824:8769}],8769:[[8764,824]],8771:[,,{824:8772}],8772:[[8771,824]],8773:[,,{824:8775}],8775:[[8773,824]],8776:[,,{824:8777}],8777:[[8776,824]],8781:[,,{824:8813}],8800:[[61,824]],8801:[,,{824:8802}],8802:[[8801,824]],8804:[,,{824:8816}],8805:[,,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[,,{824:8820}],8819:[,,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[,,{824:8824}],8823:[,,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[,,{824:8832}],8827:[,,{824:8833}],8828:[,,{824:8928}],8829:[,,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[,,{824:8836}],8835:[,,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[,,{824:8840}],8839:[,,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[,,{824:8930}],8850:[,,{824:8931}],8866:[,,{824:8876}],8872:[,,{824:8877}],8873:[,,{824:8878}],8875:[,,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[,,{824:8938}],8883:[,,{824:8939}],8884:[,,{824:8940}],8885:[,,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},
8960:{9001:[[12296]],9002:[[12297]]},
9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},
10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},
11264:{11388:[[106],256],11389:[[86],256],11503:[,230],11504:[,230],11505:[,230]},
11520:{11631:[[11617],256],11647:[,9],11744:[,230],11745:[,230],11746:[,230],11747:[,230],11748:[,230],11749:[,230],11750:[,230],11751:[,230],11752:[,230],11753:[,230],11754:[,230],11755:[,230],11756:[,230],11757:[,230],11758:[,230],11759:[,230],11760:[,230],11761:[,230],11762:[,230],11763:[,230],11764:[,230],11765:[,230],11766:[,230],11767:[,230],11768:[,230],11769:[,230],11770:[,230],11771:[,230],11772:[,230],11773:[,230],11774:[,230],11775:[,230]},
11776:{11935:[[27597],256],12019:[[40863],256]},
12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[30000],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},
12288:{12288:[[32],256],12330:[,218],12331:[,228],12332:[,232],12333:[,222],12334:[,224],12335:[,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[,,{12441:12436}],12363:[,,{12441:12364}],12364:[[12363,12441]],12365:[,,{12441:12366}],12366:[[12365,12441]],12367:[,,{12441:12368}],12368:[[12367,12441]],12369:[,,{12441:12370}],12370:[[12369,12441]],12371:[,,{12441:12372}],12372:[[12371,12441]],12373:[,,{12441:12374}],12374:[[12373,12441]],12375:[,,{12441:12376}],12376:[[12375,12441]],12377:[,,{12441:12378}],12378:[[12377,12441]],12379:[,,{12441:12380}],12380:[[12379,12441]],12381:[,,{12441:12382}],12382:[[12381,12441]],12383:[,,{12441:12384}],12384:[[12383,12441]],12385:[,,{12441:12386}],12386:[[12385,12441]],12388:[,,{12441:12389}],12389:[[12388,12441]],12390:[,,{12441:12391}],12391:[[12390,12441]],12392:[,,{12441:12393}],12393:[[12392,12441]],12399:[,,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[,,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[,,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[,,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[,,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[,8],12442:[,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[,,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[,,{12441:12532}],12459:[,,{12441:12460}],12460:[[12459,12441]],12461:[,,{12441:12462}],12462:[[12461,12441]],12463:[,,{12441:12464}],12464:[[12463,12441]],12465:[,,{12441:12466}],12466:[[12465,12441]],12467:[,,{12441:12468}],12468:[[12467,12441]],12469:[,,{12441:12470}],12470:[[12469,12441]],12471:[,,{12441:12472}],12472:[[12471,12441]],12473:[,,{12441:12474}],12474:[[12473,12441]],12475:[,,{12441:12476}],12476:[[12475,12441]],12477:[,,{12441:12478}],12478:[[12477,12441]],12479:[,,{12441:12480}],12480:[[12479,12441]],12481:[,,{12441:12482}],12482:[[12481,12441]],12484:[,,{12441:12485}],12485:[[12484,12441]],12486:[,,{12441:12487}],12487:[[12486,12441]],12488:[,,{12441:12489}],12489:[[12488,12441]],12495:[,,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[,,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[,,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[,,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[,,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[,,{12441:12535}],12528:[,,{12441:12536}],12529:[,,{12441:12537}],12530:[,,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[,,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},
12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},
12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13000:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},
13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},
27136:{92912:[,1],92913:[,1],92914:[,1],92915:[,1],92916:[,1]},
27392:{92976:[,230],92977:[,230],92978:[,230],92979:[,230],92980:[,230],92981:[,230],92982:[,230]},
42496:{42607:[,230],42612:[,230],42613:[,230],42614:[,230],42615:[,230],42616:[,230],42617:[,230],42618:[,230],42619:[,230],42620:[,230],42621:[,230],42652:[[1098],256],42653:[[1100],256],42655:[,230],42736:[,230],42737:[,230]},
42752:{42864:[[42863],256],43000:[[294],256],43001:[[339],256]},
43008:{43014:[,9],43204:[,9],43232:[,230],43233:[,230],43234:[,230],43235:[,230],43236:[,230],43237:[,230],43238:[,230],43239:[,230],43240:[,230],43241:[,230],43242:[,230],43243:[,230],43244:[,230],43245:[,230],43246:[,230],43247:[,230],43248:[,230],43249:[,230]},
43264:{43307:[,220],43308:[,220],43309:[,220],43347:[,9],43443:[,7],43456:[,9]},
43520:{43696:[,230],43698:[,230],43699:[,230],43700:[,220],43703:[,230],43704:[,230],43710:[,230],43711:[,230],43713:[,230],43766:[,9]},
43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[,9]},
48128:{113822:[,1]},
53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[,216],119142:[,216],119143:[,1],119144:[,1],119145:[,1],119149:[,226],119150:[,216],119151:[,216],119152:[,216],119153:[,216],119154:[,216],119163:[,220],119164:[,220],119165:[,220],119166:[,220],119167:[,220],119168:[,220],119169:[,220],119170:[,220],119173:[,230],119174:[,230],119175:[,230],119176:[,230],119177:[,230],119178:[,220],119179:[,220],119210:[,230],119211:[,230],119212:[,230],119213:[,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},
53760:{119362:[,230],119363:[,230],119364:[,230]},
54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],120000:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},
54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},
54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},
55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},
59392:{125136:[,220],125137:[,220],125138:[,220],125139:[,220],125140:[,220],125141:[,220],125142:[,220]},
60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},
61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},
61952:{},
63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23000]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},
63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149000]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32000]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195000:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},
64000:{64000:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[40000]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},
64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},
64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},
64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},
65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[,230],65057:[,230],65058:[,230],65059:[,230],65060:[,230],65061:[,230],65062:[,230],65063:[,220],65064:[,220],65065:[,220],65066:[,220],65067:[,220],65068:[,220],65069:[,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},
65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}

};

   /***** Module to export */
   var unorm = {
      nfc: nfc,
      nfd: nfd,
      nfkc: nfkc,
      nfkd: nfkd
   };

   /*globals module:true,define:true*/

   // CommonJS
   if (typeof module === "object") {
      module.exports = unorm;

   // AMD
   } else if (typeof define === "function" && define.amd) {
      define("unorm", function () {
         return unorm;
      });

   // Global
   } else {
      root.unorm = unorm;
   }

   /***** Export as shim for String::normalize method *****/
   /*
      http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#november_8_2013_draft_rev_21

      21.1.3.12 String.prototype.normalize(form="NFC")
      When the normalize method is called with one argument form, the following steps are taken:

      1. Let O be CheckObjectCoercible(this value).
      2. Let S be ToString(O).
      3. ReturnIfAbrupt(S).
      4. If form is not provided or undefined let form be "NFC".
      5. Let f be ToString(form).
      6. ReturnIfAbrupt(f).
      7. If f is not one of "NFC", "NFD", "NFKC", or "NFKD", then throw a RangeError Exception.
      8. Let ns be the String value is the result of normalizing S into the normalization form named by f as specified in Unicode Standard Annex #15, UnicodeNormalizatoin Forms.
      9. Return ns.

      The length property of the normalize method is 0.

      *NOTE* The normalize function is intentionally generic; it does not require that its this value be a String object. Therefore it can be transferred to other kinds of objects for use as a method.
   */
    unorm.shimApplied = false;

   if (!String.prototype.normalize) {
      String.prototype.normalize = function(form) {
         var str = "" + this;
         form =  form === undefined ? "NFC" : form;

         if (form === "NFC") {
            return unorm.nfc(str);
         } else if (form === "NFD") {
            return unorm.nfd(str);
         } else if (form === "NFKC") {
            return unorm.nfkc(str);
         } else if (form === "NFKD") {
            return unorm.nfkd(str);
         } else {
            throw new RangeError("Invalid normalization form: " + form);
         }
      };

      unorm.shimApplied = true;
   }
}(this));

},{}],2:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Functor = require("../Data.Functor");
var Data_Semigroup = require("../Data.Semigroup");
var Alt = function (Functor0, alt) {
    this.Functor0 = Functor0;
    this.alt = alt;
};
var altArray = new Alt(function () {
    return Data_Functor.functorArray;
}, Data_Semigroup.append(Data_Semigroup.semigroupArray));
var alt = function (dict) {
    return dict.alt;
};
module.exports = {
    Alt: Alt,
    alt: alt,
    altArray: altArray
};

},{"../Data.Functor":180,"../Data.Semigroup":271}],3:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Plus = require("../Control.Plus");
var Data_Functor = require("../Data.Functor");
var Alternative = function (Applicative0, Plus1) {
    this.Applicative0 = Applicative0;
    this.Plus1 = Plus1;
};
var alternativeArray = new Alternative(function () {
    return Control_Applicative.applicativeArray;
}, function () {
    return Control_Plus.plusArray;
});
module.exports = {
    Alternative: Alternative,
    alternativeArray: alternativeArray
};

},{"../Control.Alt":2,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Plus":65,"../Data.Functor":180}],4:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Const = require("../Data.Const");
var Data_Exists = require("../Data.Exists");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var ApF = (function () {
    function ApF(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ApF.create = function (value0) {
        return function (value1) {
            return new ApF(value0, value1);
        };
    };
    return ApF;
})();
var Pure = (function () {
    function Pure(value0) {
        this.value0 = value0;
    };
    Pure.create = function (value0) {
        return new Pure(value0);
    };
    return Pure;
})();
var Ap = (function () {
    function Ap(value0) {
        this.value0 = value0;
    };
    Ap.create = function (value0) {
        return new Ap(value0);
    };
    return Ap;
})();
var retractFreeAp = function (dictApplicative) {
    return function (v) {
        if (v instanceof Pure) {
            return Control_Applicative.pure(dictApplicative)(v.value0);
        };
        if (v instanceof Ap) {
            return Data_Exists.runExists(function (v1) {
                return Control_Apply.apply(dictApplicative.Apply0())(retractFreeAp(dictApplicative)(v1.value1(Data_Unit.unit)))(v1.value0(Data_Unit.unit));
            })(v.value0);
        };
        throw new Error("Failed pattern match at Control.Applicative.Free line 32, column 1 - line 32, column 64: " + [ v.constructor.name ]);
    };
};
var foldFreeAp = function (dictApplicative) {
    return function (k) {
        return function (v) {
            if (v instanceof Pure) {
                return Control_Applicative.pure(dictApplicative)(v.value0);
            };
            if (v instanceof Ap) {
                return Data_Exists.runExists(function (v1) {
                    return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Function.flip(Control_Category.id(Control_Category.categoryFn)))(k(v1.value0(Data_Unit.unit))))(foldFreeAp(dictApplicative)(k)(v1.value1(Data_Unit.unit)));
                })(v.value0);
            };
            throw new Error("Failed pattern match at Control.Applicative.Free line 38, column 1 - line 38, column 75: " + [ k.constructor.name, v.constructor.name ]);
        };
    };
};
var ap = function (v) {
    return function (k) {
        return new Ap(Data_Exists.mkExists(new ApF(v, k)));
    };
};
var functorFreeAp = new Data_Functor.Functor(function (k) {
    return function (v) {
        if (v instanceof Pure) {
            return new Pure(k(v.value0));
        };
        if (v instanceof Ap) {
            return Data_Exists.runExists(function (v1) {
                return ap(v1.value0)(function (v3) {
                    return Data_Functor.map(functorFreeAp)(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn)(k))(v1.value1(Data_Unit.unit));
                });
            })(v.value0);
        };
        throw new Error("Failed pattern match at Control.Applicative.Free line 52, column 1 - line 52, column 45: " + [ k.constructor.name, v.constructor.name ]);
    };
});
var applyFreeAp = new Control_Apply.Apply(function () {
    return functorFreeAp;
}, function (v) {
    return function (f) {
        if (v instanceof Pure) {
            return Data_Functor.map(functorFreeAp)(v.value0)(f);
        };
        if (v instanceof Ap) {
            return Data_Exists.runExists(function (v1) {
                return ap(v1.value0)(function (v3) {
                    return Control_Apply.apply(applyFreeAp)(Data_Functor.map(functorFreeAp)(Data_Function.flip)(v1.value1(Data_Unit.unit)))(f);
                });
            })(v.value0);
        };
        throw new Error("Failed pattern match at Control.Applicative.Free line 56, column 1 - line 56, column 41: " + [ v.constructor.name, f.constructor.name ]);
    };
});
var applicativeFreeAp = new Control_Applicative.Applicative(function () {
    return applyFreeAp;
}, Pure.create);
var hoistFreeAp = function (k) {
    return function (v) {
        if (v instanceof Pure) {
            return new Pure(v.value0);
        };
        if (v instanceof Ap) {
            return Data_Exists.runExists(function (v1) {
                return ap(function (v3) {
                    return k(v1.value0(Data_Unit.unit));
                })(function (v3) {
                    return hoistFreeAp(k)(v1.value1(Data_Unit.unit));
                });
            })(v.value0);
        };
        throw new Error("Failed pattern match at Control.Applicative.Free line 44, column 1 - line 44, column 66: " + [ k.constructor.name, v.constructor.name ]);
    };
};
var liftFreeAp = function (a) {
    return ap(function (v) {
        return a;
    })(function (v) {
        return new Pure(Control_Category.id(Control_Category.categoryFn));
    });
};
var analyzeFreeAp = function (dictMonoid) {
    return function (k) {
        return function ($53) {
            return Data_Newtype.unwrap(Data_Const.newtypeConst)(foldFreeAp(Data_Const.applicativeConst(dictMonoid))(function ($54) {
                return Data_Const.Const(k($54));
            })($53));
        };
    };
};
module.exports = {
    liftFreeAp: liftFreeAp,
    retractFreeAp: retractFreeAp,
    foldFreeAp: foldFreeAp,
    hoistFreeAp: hoistFreeAp,
    analyzeFreeAp: analyzeFreeAp,
    functorFreeAp: functorFreeAp,
    applyFreeAp: applyFreeAp,
    applicativeFreeAp: applicativeFreeAp
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Const":142,"../Data.Exists":160,"../Data.Function":172,"../Data.Functor":180,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Unit":302,"../Prelude":358}],5:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var Applicative = function (Apply0, pure) {
    this.Apply0 = Apply0;
    this.pure = pure;
};
var pure = function (dict) {
    return dict.pure;
};
var unless = function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (!v) {
                return v1;
            };
            if (v) {
                return pure(dictApplicative)(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Control.Applicative line 62, column 1 - line 62, column 65: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var when = function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v) {
                return v1;
            };
            if (!v) {
                return pure(dictApplicative)(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Control.Applicative line 57, column 1 - line 57, column 63: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var liftA1 = function (dictApplicative) {
    return function (f) {
        return function (a) {
            return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
        };
    };
};
var applicativeFn = new Applicative(function () {
    return Control_Apply.applyFn;
}, function (x) {
    return function (v) {
        return x;
    };
});
var applicativeArray = new Applicative(function () {
    return Control_Apply.applyArray;
}, function (x) {
    return [ x ];
});
module.exports = {
    Applicative: Applicative,
    pure: pure,
    liftA1: liftA1,
    unless: unless,
    when: when,
    applicativeFn: applicativeFn,
    applicativeArray: applicativeArray
};

},{"../Control.Apply":7,"../Data.Functor":180,"../Data.Unit":302}],6:[function(require,module,exports){
"use strict";

exports.arrayApply = function (fs) {
  return function (xs) {
    var l = fs.length;
    var k = xs.length;
    var result = new Array(l*k);
    var n = 0;
    for (var i = 0; i < l; i++) {
      var f = fs[i];
      for (var j = 0; j < k; j++) {
        result[n++] = f(xs[j]);
      }
    }
    return result;
  };
};

},{}],7:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Category = require("../Control.Category");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Apply = function (Functor0, apply) {
    this.Functor0 = Functor0;
    this.apply = apply;
};
var applyFn = new Apply(function () {
    return Data_Functor.functorFn;
}, function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
});
var applyArray = new Apply(function () {
    return Data_Functor.functorArray;
}, $foreign.arrayApply);
var apply = function (dict) {
    return dict.apply;
};
var applyFirst = function (dictApply) {
    return function (a) {
        return function (b) {
            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
        };
    };
};
var applySecond = function (dictApply) {
    return function (a) {
        return function (b) {
            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
        };
    };
};
var lift2 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
            };
        };
    };
};
var lift3 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift4 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift5 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return apply(dictApply)(apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};
module.exports = {
    Apply: Apply,
    apply: apply,
    applyFirst: applyFirst,
    applySecond: applySecond,
    lift2: lift2,
    lift3: lift3,
    lift4: lift4,
    lift5: lift5,
    applyFn: applyFn,
    applyArray: applyArray
};

},{"../Control.Category":12,"../Data.Function":172,"../Data.Functor":180,"./foreign":6}],8:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Biapply = require("../Control.Biapply");
var Biapplicative = function (Biapply0, bipure) {
    this.Biapply0 = Biapply0;
    this.bipure = bipure;
};
var bipure = function (dict) {
    return dict.bipure;
};
module.exports = {
    bipure: bipure,
    Biapplicative: Biapplicative
};

},{"../Control.Biapply":9}],9:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Function = require("../Data.Function");
var Biapply = function (Bifunctor0, biapply) {
    this.Bifunctor0 = Bifunctor0;
    this.biapply = biapply;
};
var biapply = function (dict) {
    return dict.biapply;
};
var biapplyFirst = function (dictBiapply) {
    return function (a) {
        return function (b) {
            return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(Data_Function["const"](Control_Category.id(Control_Category.categoryFn))))(a))(b);
        };
    };
};
var biapplySecond = function (dictBiapply) {
    return function (a) {
        return function (b) {
            return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(Data_Function["const"])(Data_Function["const"]))(a))(b);
        };
    };
};
var bilift2 = function (dictBiapply) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(f)(g))(a))(b);
                };
            };
        };
    };
};
var bilift3 = function (dictBiapply) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return biapply(dictBiapply)(biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(f)(g))(a))(b))(c);
                    };
                };
            };
        };
    };
};
module.exports = {
    biapply: biapply,
    Biapply: Biapply,
    biapplyFirst: biapplyFirst,
    biapplySecond: biapplySecond,
    bilift2: bilift2,
    bilift3: bilift3
};

},{"../Control.Category":12,"../Data.Bifunctor":129,"../Data.Function":172}],10:[function(require,module,exports){
"use strict";

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];
    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }
    return result;
  };
};

},{}],11:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var Bind = function (Apply0, bind) {
    this.Apply0 = Apply0;
    this.bind = bind;
};
var Discard = function (discard) {
    this.discard = discard;
};
var discard = function (dict) {
    return dict.discard;
};
var bindFn = new Bind(function () {
    return Control_Apply.applyFn;
}, function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
});
var bindArray = new Bind(function () {
    return Control_Apply.applyArray;
}, $foreign.arrayBind);
var bind = function (dict) {
    return dict.bind;
};
var bindFlipped = function (dictBind) {
    return Data_Function.flip(bind(dictBind));
};
var composeKleisliFlipped = function (dictBind) {
    return function (f) {
        return function (g) {
            return function (a) {
                return bindFlipped(dictBind)(f)(g(a));
            };
        };
    };
};
var composeKleisli = function (dictBind) {
    return function (f) {
        return function (g) {
            return function (a) {
                return bind(dictBind)(f(a))(g);
            };
        };
    };
};
var discardUnit = new Discard(function (dictBind) {
    return bind(dictBind);
});
var ifM = function (dictBind) {
    return function (cond) {
        return function (t) {
            return function (f) {
                return bind(dictBind)(cond)(function (cond$prime) {
                    if (cond$prime) {
                        return t;
                    };
                    return f;
                });
            };
        };
    };
};
var join = function (dictBind) {
    return function (m) {
        return bind(dictBind)(m)(Control_Category.id(Control_Category.categoryFn));
    };
};
module.exports = {
    Bind: Bind,
    bind: bind,
    bindFlipped: bindFlipped,
    Discard: Discard,
    discard: discard,
    join: join,
    composeKleisli: composeKleisli,
    composeKleisliFlipped: composeKleisliFlipped,
    ifM: ifM,
    bindFn: bindFn,
    bindArray: bindArray,
    discardUnit: discardUnit
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Category":12,"../Data.Function":172,"../Data.Functor":180,"../Data.Unit":302,"./foreign":10}],12:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Category = function (Semigroupoid0, id) {
    this.Semigroupoid0 = Semigroupoid0;
    this.id = id;
};
var id = function (dict) {
    return dict.id;
};
var categoryFn = new Category(function () {
    return Control_Semigroupoid.semigroupoidFn;
}, function (x) {
    return x;
});
module.exports = {
    Category: Category,
    id: id,
    categoryFn: categoryFn
};

},{"../Control.Semigroupoid":66}],13:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Extend = require("../Control.Extend");
var Data_Functor = require("../Data.Functor");
var Comonad = function (Extend0, extract) {
    this.Extend0 = Extend0;
    this.extract = extract;
};
var extract = function (dict) {
    return dict.extract;
};
module.exports = {
    Comonad: Comonad,
    extract: extract
};

},{"../Control.Extend":16,"../Data.Functor":180}],14:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Parallel = require("../Control.Parallel");
var Control_Parallel_Class = require("../Control.Parallel.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Transform = function (x) {
    return x;
};
var Emit = (function () {
    function Emit(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Emit.create = function (value0) {
        return function (value1) {
            return new Emit(value0, value1);
        };
    };
    return Emit;
})();
var CoTransform = (function () {
    function CoTransform(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CoTransform.create = function (value0) {
        return function (value1) {
            return new CoTransform(value0, value1);
        };
    };
    return CoTransform;
})();
var Await = function (x) {
    return x;
};
var runProcess = function (dictMonadRec) {
    return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec)(function ($186) {
        return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($186));
    });
};
var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (v) {
            return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(v);
        };
    };
});
var loop = function (dictFunctor) {
    return function (dictMonad) {
        return function (me) {
            return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(dictFunctor)(dictMonad))(function (v) {
                return Data_Functor.map(Control_Monad_Free_Trans.functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0()))(Data_Maybe.maybe(new Control_Monad_Rec_Class.Loop(Data_Unit.unit))(Control_Monad_Rec_Class.Done.create))(me);
            })(Data_Unit.unit);
        };
    };
};
var fuseWithL = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictFunctor2) {
            return function (dictMonadRec) {
                return function (zap) {
                    return function (fs) {
                        return function (gs) {
                            var go = function (v) {
                                return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0)))(function (v1) {
                                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))(function (v2) {
                                        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonadRec.Monad0()))(Data_Functor.map(dictFunctor2)(function (t) {
                                            return Control_Monad_Free_Trans.freeT(function (v3) {
                                                return go(t);
                                            });
                                        })(zap(Data_Tuple.Tuple.create)(v1)(v2)));
                                    });
                                }));
                            };
                            return Control_Monad_Free_Trans.freeT(function (v) {
                                return go(new Data_Tuple.Tuple(fs, gs));
                            });
                        };
                    };
                };
            };
        };
    };
};
var fuseWith = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictFunctor2) {
            return function (dictMonadRec) {
                return function (dictParallel) {
                    return function (zap) {
                        return function (fs) {
                            return function (gs) {
                                var go = function (v) {
                                    return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictParallel.Applicative1()).Apply0())(Data_Functor.map(((dictParallel.Applicative1()).Apply0()).Functor0())(Control_Apply.lift2(Data_Either.applyEither)(zap(Data_Tuple.Tuple.create)))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))))(function (v1) {
                                        if (v1 instanceof Data_Either.Left) {
                                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Left(v1.value0));
                                        };
                                        if (v1 instanceof Data_Either.Right) {
                                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function (t) {
                                                return Control_Monad_Free_Trans.freeT(function (v2) {
                                                    return go(t);
                                                });
                                            })(v1.value0)));
                                        };
                                        throw new Error("Failed pattern match at Control.Coroutine line 80, column 5 - line 82, column 63: " + [ v1.constructor.name ]);
                                    });
                                };
                                return Control_Monad_Free_Trans.freeT(function (v) {
                                    return go(new Data_Tuple.Tuple(fs, gs));
                                });
                            };
                        };
                    };
                };
            };
        };
    };
};
var functorAwait = new Data_Functor.Functor(Data_Profunctor.rmap(profunctorAwait));
var joinConsumers = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorAwait)(functorAwait)(functorAwait)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return function (v2) {
                        return f(v(v2.value0))(v1(v2.value1));
                    };
                };
            };
        });
    };
};
var bifunctorTransform = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return function ($187) {
                return Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(f)(g)(v($187));
            };
        };
    };
});
var functorTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorTransform));
var composeTransformers = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorTransform)(functorTransform)(functorTransform)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return function (i) {
                        var v2 = v(i);
                        var v3 = v1(v2.value0);
                        return new Data_Tuple.Tuple(v3.value0, f(v2.value1)(v3.value1));
                    };
                };
            };
        });
    };
};
var transform = function (dictMonad) {
    return function (f) {
        return Control_Monad_Free_Trans.liftFreeT(functorTransform)(dictMonad)(function (i) {
            return new Data_Tuple.Tuple(f(i), Data_Unit.unit);
        });
    };
};
var transformConsumer = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorTransform)(functorAwait)(functorAwait)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return function (i) {
                        var v2 = v(i);
                        return f(v2.value1)(v1(v2.value0));
                    };
                };
            };
        });
    };
};
var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Emit(f(v.value0), g(v.value1));
        };
    };
});
var functorEmit = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorEmit));
var connect = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return f(v.value1)(v1(v.value0));
                };
            };
        });
    };
};
var emit = function (dictMonad) {
    return function (o) {
        return Control_Monad_Free_Trans.liftFreeT(functorEmit)(dictMonad)(new Emit(o, Data_Unit.unit));
    };
};
var joinProducers = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorEmit)(functorEmit)(functorEmit)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return new Emit(new Data_Tuple.Tuple(v.value0, v1.value0), f(v.value1)(v1.value1));
                };
            };
        });
    };
};
var producer = function (dictMonad) {
    return function (recv) {
        return loop(functorEmit)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonad)(recv))(function (v) {
            if (v instanceof Data_Either.Left) {
                return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorEmit)(((dictMonad.Bind1()).Apply0()).Functor0()))(emit(dictMonad)(v.value0))(Data_Maybe.Nothing.value);
            };
            if (v instanceof Data_Either.Right) {
                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonad))(new Data_Maybe.Just(v.value0));
            };
            throw new Error("Failed pattern match at Control.Coroutine line 126, column 3 - line 128, column 29: " + [ v.constructor.name ]);
        }));
    };
};
var pullFrom = function (dictMonadRec) {
    return fuseWithL(functorAwait)(functorEmit)(Data_Identity.functorIdentity)(dictMonadRec)(function (f) {
        return function (v) {
            return function (v1) {
                return Control_Applicative.pure(Data_Identity.applicativeIdentity)(f(v(v1.value0))(v1.value1));
            };
        };
    });
};
var transformProducer = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorEmit)(functorTransform)(functorEmit)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    var v2 = v1(v.value0);
                    return new Emit(v2.value0, f(v.value1)(v2.value1));
                };
            };
        });
    };
};
var bifunctorCoTransform = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return new CoTransform(f(v.value0), function ($188) {
                return g(v.value1($188));
            });
        };
    };
});
var functorCoTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorCoTransform));
var composeCoTransformers = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorCoTransform)(functorCoTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return new CoTransform(v1.value0, function (i) {
                        return f(v.value1(i))(v1.value1(v.value0));
                    });
                };
            };
        });
    };
};
var cotransform = function (dictMonad) {
    return function (o) {
        return Control_Monad_Free_Trans.freeT(function (v) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(new CoTransform(o, Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorCoTransform)(dictMonad)))));
        });
    };
};
var fuseCoTransform = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorTransform)(functorCoTransform)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    var v2 = v(v1.value0);
                    return f(v2.value1)(v1.value1(v2.value0));
                };
            };
        });
    };
};
var transformCoTransformL = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorTransform)(functorCoTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return new CoTransform(v1.value0, function (i1) {
                        var v2 = v(i1);
                        return f(v2.value1)(v1.value1(v2.value0));
                    });
                };
            };
        });
    };
};
var transformCoTransformR = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorCoTransform)(functorTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    var v2 = v1(v.value0);
                    return new CoTransform(v2.value0, function ($189) {
                        return (function (v3) {
                            return f(v3)(v2.value1);
                        })(v.value1($189));
                    });
                };
            };
        });
    };
};
var $$await = function (dictMonad) {
    return Control_Monad_Free_Trans.liftFreeT(functorAwait)(dictMonad)(Control_Category.id(Control_Category.categoryFn));
};
var consumer = function (dictMonad) {
    return function (send) {
        return loop(functorAwait)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorAwait)(dictMonad))($$await(dictMonad))(function (v) {
            return Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorAwait))(dictMonad)(send(v));
        }));
    };
};
module.exports = {
    loop: loop,
    runProcess: runProcess,
    fuseWith: fuseWith,
    fuseWithL: fuseWithL,
    Emit: Emit,
    emit: emit,
    producer: producer,
    Await: Await,
    "await": $$await,
    consumer: consumer,
    Transform: Transform,
    transform: transform,
    CoTransform: CoTransform,
    cotransform: cotransform,
    connect: connect,
    pullFrom: pullFrom,
    transformProducer: transformProducer,
    transformConsumer: transformConsumer,
    composeTransformers: composeTransformers,
    composeCoTransformers: composeCoTransformers,
    fuseCoTransform: fuseCoTransform,
    transformCoTransformL: transformCoTransformL,
    transformCoTransformR: transformCoTransformR,
    joinProducers: joinProducers,
    joinConsumers: joinConsumers,
    bifunctorEmit: bifunctorEmit,
    functorEmit: functorEmit,
    profunctorAwait: profunctorAwait,
    functorAwait: functorAwait,
    bifunctorTransform: bifunctorTransform,
    functorTransform: functorTransform,
    bifunctorCoTransform: bifunctorCoTransform,
    functorCoTransform: functorCoTransform
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Monad.Except":42,"../Control.Monad.Except.Trans":41,"../Control.Monad.Free.Trans":44,"../Control.Monad.Rec.Class":51,"../Control.Monad.Trans.Class":57,"../Control.Parallel":64,"../Control.Parallel.Class":63,"../Control.Semigroupoid":66,"../Data.Bifunctor":129,"../Data.Either":154,"../Data.Function":172,"../Data.Functor":180,"../Data.Identity":189,"../Data.Maybe":234,"../Data.Newtype":244,"../Data.Profunctor":260,"../Data.Tuple":298,"../Data.Unit":302,"../Prelude":358}],15:[function(require,module,exports){
"use strict";

exports.arrayExtend = function(f) {
  return function(xs) {
    return xs.map(function (_, i, xs) {
      return f(xs.slice(i));
    });
  };
};

},{}],16:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Category = require("../Control.Category");
var Data_Functor = require("../Data.Functor");
var Data_Semigroup = require("../Data.Semigroup");
var Extend = function (Functor0, extend) {
    this.Functor0 = Functor0;
    this.extend = extend;
};
var extendFn = function (dictSemigroup) {
    return new Extend(function () {
        return Data_Functor.functorFn;
    }, function (f) {
        return function (g) {
            return function (w) {
                return f(function (w$prime) {
                    return g(Data_Semigroup.append(dictSemigroup)(w)(w$prime));
                });
            };
        };
    });
};
var extendArray = new Extend(function () {
    return Data_Functor.functorArray;
}, $foreign.arrayExtend);
var extend = function (dict) {
    return dict.extend;
};
var extendFlipped = function (dictExtend) {
    return function (w) {
        return function (f) {
            return extend(dictExtend)(f)(w);
        };
    };
};
var duplicate = function (dictExtend) {
    return extend(dictExtend)(Control_Category.id(Control_Category.categoryFn));
};
var composeCoKleisliFlipped = function (dictExtend) {
    return function (f) {
        return function (g) {
            return function (w) {
                return f(extend(dictExtend)(g)(w));
            };
        };
    };
};
var composeCoKleisli = function (dictExtend) {
    return function (f) {
        return function (g) {
            return function (w) {
                return g(extend(dictExtend)(f)(w));
            };
        };
    };
};
module.exports = {
    Extend: Extend,
    extend: extend,
    extendFlipped: extendFlipped,
    composeCoKleisli: composeCoKleisli,
    composeCoKleisliFlipped: composeCoKleisliFlipped,
    duplicate: duplicate,
    extendFn: extendFn,
    extendArray: extendArray
};

},{"../Control.Category":12,"../Data.Functor":180,"../Data.Semigroup":271,"./foreign":15}],17:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Unit = require("../Data.Unit");
var Lazy = function (defer) {
    this.defer = defer;
};
var lazyUnit = new Lazy(function (v) {
    return Data_Unit.unit;
});
var lazyFn = new Lazy(function (f) {
    return function (x) {
        return f(Data_Unit.unit)(x);
    };
});
var defer = function (dict) {
    return dict.defer;
};
var fix = function (dictLazy) {
    return function (f) {
        return defer(dictLazy)(function (v) {
            return f(fix(dictLazy)(f));
        });
    };
};
module.exports = {
    defer: defer,
    Lazy: Lazy,
    fix: fix,
    lazyFn: lazyFn,
    lazyUnit: lazyUnit
};

},{"../Data.Unit":302}],18:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_AVar = require("../Control.Monad.Eff.AVar");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Maybe = require("../Data.Maybe");
var Prelude = require("../Prelude");
var tryTakeVar = function ($6) {
    return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_AVar.tryTakeVar($6));
};
var tryReadVar = function ($7) {
    return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_AVar.tryReadVar($7));
};
var tryPutVar = function (value) {
    return function ($8) {
        return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_AVar.tryPutVar(value)($8));
    };
};
var takeVar = function (avar) {
    return Control_Monad_Aff.makeAff(function (k) {
        return function __do() {
            var v = Control_Monad_Eff_AVar.takeVar(avar)(k)();
            return Control_Monad_Aff.effCanceler(v);
        };
    });
};
var status = function ($9) {
    return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_AVar.status($9));
};
var readVar = function (avar) {
    return Control_Monad_Aff.makeAff(function (k) {
        return function __do() {
            var v = Control_Monad_Eff_AVar.readVar(avar)(k)();
            return Control_Monad_Aff.effCanceler(v);
        };
    });
};
var putVar = function (value) {
    return function (avar) {
        return Control_Monad_Aff.makeAff(function (k) {
            return function __do() {
                var v = Control_Monad_Eff_AVar.putVar(value)(avar)(k)();
                return Control_Monad_Aff.effCanceler(v);
            };
        });
    };
};
var makeVar = function ($10) {
    return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_AVar.makeVar($10));
};
var makeEmptyVar = Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_AVar.makeEmptyVar);
var killVar = function (error) {
    return function ($11) {
        return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_AVar.killVar(error)($11));
    };
};
var isKilledVar = function ($12) {
    return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_AVar.isKilledVar($12));
};
var isFilledVar = function ($13) {
    return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_AVar.isFilledVar($13));
};
var isEmptyVar = function ($14) {
    return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_AVar.isEmptyVar($14));
};
module.exports = {
    makeVar: makeVar,
    makeEmptyVar: makeEmptyVar,
    status: status,
    isEmptyVar: isEmptyVar,
    isFilledVar: isFilledVar,
    isKilledVar: isKilledVar,
    takeVar: takeVar,
    tryTakeVar: tryTakeVar,
    putVar: putVar,
    tryPutVar: tryPutVar,
    readVar: readVar,
    tryReadVar: tryReadVar,
    killVar: killVar
};

},{"../Control.Applicative":5,"../Control.Bind":11,"../Control.Monad.Aff":22,"../Control.Monad.Eff":39,"../Control.Monad.Eff.AVar":26,"../Control.Monad.Eff.Class":27,"../Control.Monad.Eff.Exception":31,"../Control.Semigroupoid":66,"../Data.Maybe":234,"../Prelude":358}],19:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Monad_List_Trans = require("../Control.Monad.List.Trans");
var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans");
var Control_Monad_RWS_Trans = require("../Control.Monad.RWS.Trans");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Monoid = require("../Data.Monoid");
var Prelude = require("../Prelude");
var MonadAff = function (MonadEff0, liftAff) {
    this.MonadEff0 = MonadEff0;
    this.liftAff = liftAff;
};
var monadAffAff = new MonadAff(function () {
    return Control_Monad_Aff.monadEffAff;
}, Control_Category.id(Control_Category.categoryFn));
var liftAff = function (dict) {
    return dict.liftAff;
};
var monadAffContT = function (dictMonadAff) {
    return new MonadAff(function () {
        return Control_Monad_Cont_Trans.monadEffContT(dictMonadAff.MonadEff0());
    }, function ($10) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Cont_Trans.monadTransContT)((dictMonadAff.MonadEff0()).Monad0())(liftAff(dictMonadAff)($10));
    });
};
var monadAffExceptT = function (dictMonadAff) {
    return new MonadAff(function () {
        return Control_Monad_Except_Trans.monadEffExceptT(dictMonadAff.MonadEff0());
    }, function ($11) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)((dictMonadAff.MonadEff0()).Monad0())(liftAff(dictMonadAff)($11));
    });
};
var monadAffListT = function (dictMonadAff) {
    return new MonadAff(function () {
        return Control_Monad_List_Trans.monadEffListT(dictMonadAff.MonadEff0());
    }, function ($12) {
        return Control_Monad_Trans_Class.lift(Control_Monad_List_Trans.monadTransListT)((dictMonadAff.MonadEff0()).Monad0())(liftAff(dictMonadAff)($12));
    });
};
var monadAffMaybe = function (dictMonadAff) {
    return new MonadAff(function () {
        return Control_Monad_Maybe_Trans.monadEffMaybe(dictMonadAff.MonadEff0());
    }, function ($13) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)((dictMonadAff.MonadEff0()).Monad0())(liftAff(dictMonadAff)($13));
    });
};
var monadAffRWS = function (dictMonadAff) {
    return function (dictMonoid) {
        return new MonadAff(function () {
            return Control_Monad_RWS_Trans.monadEffRWS(dictMonoid)(dictMonadAff.MonadEff0());
        }, function ($14) {
            return Control_Monad_Trans_Class.lift(Control_Monad_RWS_Trans.monadTransRWST(dictMonoid))((dictMonadAff.MonadEff0()).Monad0())(liftAff(dictMonadAff)($14));
        });
    };
};
var monadAffReader = function (dictMonadAff) {
    return new MonadAff(function () {
        return Control_Monad_Reader_Trans.monadEffReader(dictMonadAff.MonadEff0());
    }, function ($15) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)((dictMonadAff.MonadEff0()).Monad0())(liftAff(dictMonadAff)($15));
    });
};
var monadAffState = function (dictMonadAff) {
    return new MonadAff(function () {
        return Control_Monad_State_Trans.monadEffState(dictMonadAff.MonadEff0());
    }, function ($16) {
        return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)((dictMonadAff.MonadEff0()).Monad0())(liftAff(dictMonadAff)($16));
    });
};
var monadAffWriter = function (dictMonadAff) {
    return function (dictMonoid) {
        return new MonadAff(function () {
            return Control_Monad_Writer_Trans.monadEffWriter(dictMonoid)(dictMonadAff.MonadEff0());
        }, function ($17) {
            return Control_Monad_Trans_Class.lift(Control_Monad_Writer_Trans.monadTransWriterT(dictMonoid))((dictMonadAff.MonadEff0()).Monad0())(liftAff(dictMonadAff)($17));
        });
    };
};
module.exports = {
    liftAff: liftAff,
    MonadAff: MonadAff,
    monadAffAff: monadAffAff,
    monadAffContT: monadAffContT,
    monadAffExceptT: monadAffExceptT,
    monadAffListT: monadAffListT,
    monadAffMaybe: monadAffMaybe,
    monadAffReader: monadAffReader,
    monadAffRWS: monadAffRWS,
    monadAffState: monadAffState,
    monadAffWriter: monadAffWriter
};

},{"../Control.Category":12,"../Control.Monad.Aff":22,"../Control.Monad.Cont.Trans":24,"../Control.Monad.Eff.Class":27,"../Control.Monad.Except.Trans":41,"../Control.Monad.List.Trans":46,"../Control.Monad.Maybe.Trans":47,"../Control.Monad.RWS.Trans":48,"../Control.Monad.Reader.Trans":50,"../Control.Monad.State.Trans":55,"../Control.Monad.Trans.Class":57,"../Control.Monad.Writer.Trans":59,"../Control.Semigroupoid":66,"../Data.Monoid":242,"../Prelude":358}],20:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var unsafeCoerceAff = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    unsafeCoerceAff: unsafeCoerceAff
};

},{"../Control.Monad.Aff":22,"../Unsafe.Coerce":366}],21:[function(require,module,exports){
/* globals setImmediate, clearImmediate, setTimeout, clearTimeout */
/* jshint -W083, -W098, -W003 */
"use strict";

var Aff = function () {
  // A unique value for empty.
  var EMPTY = {};

  /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Thread eff b -> a)
    | Sequential (ParAff aff a)

  */
  var PURE    = "Pure";
  var THROW   = "Throw";
  var CATCH   = "Catch";
  var SYNC    = "Sync";
  var ASYNC   = "Async";
  var BIND    = "Bind";
  var BRACKET = "Bracket";
  var FORK    = "Fork";
  var SEQ     = "Sequential";

  /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */
  var MAP   = "Map";
  var APPLY = "Apply";
  var ALT   = "Alt";

  // Various constructors used in interpretation
  var CONS      = "Cons";      // Cons-list, for stacks
  var RESUME    = "Resume";    // Continue indiscriminately
  var RELEASE   = "Release";   // Continue with bracket finalizers
  var FINALIZER = "Finalizer"; // A non-interruptible effect
  var FINALIZED = "Finalized"; // Marker for finalization
  var FORKED    = "Forked";    // Reference to a forked fiber, with resumption stack
  var FIBER     = "Fiber";     // Actual fiber reference
  var THUNK     = "Thunk";     // Primed effect, ready to invoke

  function Aff(tag, _1, _2, _3) {
    this.tag = tag;
    this._1  = _1;
    this._2  = _2;
    this._3  = _3;
  }

  function AffCtr(tag) {
    var fn = function (_1, _2, _3) {
      return new Aff(tag, _1, _2, _3);
    };
    fn.tag = tag;
    return fn;
  }

  function nonCanceler(error) {
    return new Aff(PURE, void 0);
  }

  function runEff(eff) {
    try {
      eff();
    } catch (error) {
      setTimeout(function () {
        throw error;
      }, 0);
    }
  }

  function runSync(left, right, eff) {
    try {
      return right(eff());
    } catch (error) {
      return left(error);
    }
  }

  function runAsync(left, eff, k) {
    try {
      return eff(k)();
    } catch (error) {
      k(left(error))();
      return nonCanceler;
    }
  }

  var Scheduler = function () {
    var limit    = 1024;
    var size     = 0;
    var ix       = 0;
    var queue    = new Array(limit);
    var draining = false;

    function drain() {
      var thunk;
      draining = true;
      while (size !== 0) {
        size--;
        thunk     = queue[ix];
        queue[ix] = void 0;
        ix        = (ix + 1) % limit;
        thunk();
      }
      draining = false;
    }

    return {
      isDraining: function () {
        return draining;
      },
      enqueue: function (cb) {
        var i, tmp;
        if (size === limit) {
          tmp = draining;
          drain();
          draining = tmp;
        }

        queue[(ix + size) % limit] = cb;
        size++;

        if (!draining) {
          drain();
        }
      }
    };
  }();

  function Supervisor(util) {
    var fibers  = {};
    var fiberId = 0;
    var count   = 0;

    return {
      register: function (fiber) {
        var fid = fiberId++;
        fiber.onComplete({
          rethrow: true,
          handler: function (result) {
            return function () {
              count--;
              delete fibers[fid];
            };
          }
        });
        fibers[fid] = fiber;
        count++;
      },
      isEmpty: function () {
        return count === 0;
      },
      killAll: function (killError, cb) {
        return function () {
          var killCount = 0;
          var kills     = {};

          function kill(fid) {
            kills[fid] = fibers[fid].kill(killError, function (result) {
              return function () {
                delete kills[fid];
                killCount--;
                if (util.isLeft(result) && util.fromLeft(result)) {
                  setTimeout(function () {
                    throw util.fromLeft(result);
                  }, 0);
                }
                if (killCount === 0) {
                  cb();
                }
              };
            })();
          }

          for (var k in fibers) {
            if (fibers.hasOwnProperty(k)) {
              killCount++;
              kill(k);
            }
          }

          fibers  = {};
          fiberId = 0;
          count   = 0;

          return function (error) {
            return new Aff(SYNC, function () {
              for (var k in kills) {
                if (kills.hasOwnProperty(k)) {
                  kills[k]();
                }
              }
            });
          };
        };
      }
    };
  }

  // Fiber state machine
  var SUSPENDED   = 0; // Suspended, pending a join.
  var CONTINUE    = 1; // Interpret the next instruction.
  var STEP_BIND   = 2; // Apply the next bind.
  var STEP_RESULT = 3; // Handle potential failure from a result.
  var PENDING     = 4; // An async effect is running.
  var RETURN      = 5; // The current stack has returned.
  var COMPLETED   = 6; // The entire fiber has completed.

  function Fiber(util, supervisor, aff) {
    // Monotonically increasing tick, increased on each asynchronous turn.
    var runTick = 0;

    // The current branch of the state machine.
    var status = SUSPENDED;

    // The current point of interest for the state machine branch.
    var step      = aff;  // Successful step
    var fail      = null; // Failure step
    var interrupt = null; // Asynchronous interrupt

    // Stack of continuations for the current fiber.
    var bhead = null;
    var btail = null;

    // Stack of attempts and finalizers for error recovery. Every `Cons` is also
    // tagged with current `interrupt` state. We use this to track which items
    // should be ignored or evaluated as a result of a kill.
    var attempts = null;

    // A special state is needed for Bracket, because it cannot be killed. When
    // we enter a bracket acquisition or finalizer, we increment the counter,
    // and then decrement once complete.
    var bracketCount = 0;

    // Each join gets a new id so they can be revoked.
    var joinId  = 0;
    var joins   = null;
    var rethrow = true;

    // Each invocation of `run` requires a tick. When an asynchronous effect is
    // resolved, we must check that the local tick coincides with the fiber
    // tick before resuming. This prevents multiple async continuations from
    // accidentally resuming the same fiber. A common example may be invoking
    // the provided callback in `makeAff` more than once, but it may also be an
    // async effect resuming after the fiber was already cancelled.
    function run(localRunTick) {
      var tmp, result, attempt, canceler;
      while (true) {
        tmp       = null;
        result    = null;
        attempt   = null;
        canceler  = null;

        switch (status) {
        case STEP_BIND:
          status = CONTINUE;
          step   = bhead(step);
          if (btail === null) {
            bhead = null;
          } else {
            bhead = btail._1;
            btail = btail._2;
          }
          break;

        case STEP_RESULT:
          if (util.isLeft(step)) {
            status = RETURN;
            fail   = step;
            step   = null;
          } else if (bhead === null) {
            status = RETURN;
          } else {
            status = STEP_BIND;
            step   = util.fromRight(step);
          }
          break;

        case CONTINUE:
          switch (step.tag) {
          case BIND:
            if (bhead) {
              btail = new Aff(CONS, bhead, btail);
            }
            bhead  = step._2;
            status = CONTINUE;
            step   = step._1;
            break;

          case PURE:
            if (bhead === null) {
              status = RETURN;
              step   = util.right(step._1);
            } else {
              status = STEP_BIND;
              step   = step._1;
            }
            break;

          case SYNC:
            status = STEP_RESULT;
            step   = runSync(util.left, util.right, step._1);
            break;

          case ASYNC:
            status = PENDING;
            step   = runAsync(util.left, step._1, function (result) {
              return function () {
                if (runTick !== localRunTick) {
                  return;
                }
                runTick++;
                Scheduler.enqueue(function () {
                  status = STEP_RESULT;
                  step   = result;
                  run(runTick);
                });
              };
            });
            return;

          case THROW:
            status = RETURN;
            fail   = util.left(step._1);
            step   = null;
            break;

          // Enqueue the Catch so that we can call the error handler later on
          // in case of an exception.
          case CATCH:
            if (bhead === null) {
              attempts = new Aff(CONS, step, attempts, interrupt);
            } else {
              attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
            }
            bhead    = null;
            btail    = null;
            status   = CONTINUE;
            step     = step._1;
            break;

          // Enqueue the Bracket so that we can call the appropriate handlers
          // after resource acquisition.
          case BRACKET:
            bracketCount++;
            if (bhead === null) {
              attempts = new Aff(CONS, step, attempts, interrupt);
            } else {
              attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
            }
            bhead  = null;
            btail  = null;
            status = CONTINUE;
            step   = step._1;
            break;

          case FORK:
            status = STEP_BIND;
            tmp    = Fiber(util, supervisor, step._2);
            if (supervisor) {
              supervisor.register(tmp);
            }
            if (step._1) {
              tmp.run();
            }
            step = tmp;
            break;

          case SEQ:
            status = CONTINUE;
            step   = sequential(util, supervisor, step._1);
            break;
          }
          break;

        case RETURN:
          bhead = null;
          btail = null;
          // If the current stack has returned, and we have no other stacks to
          // resume or finalizers to run, the fiber has halted and we can
          // invoke all join callbacks. Otherwise we need to resume.
          if (attempts === null) {
            status = COMPLETED;
            step   = interrupt || fail || step;
          } else {
            // The interrupt status for the enqueued item.
            tmp      = attempts._3;
            attempt  = attempts._1;
            attempts = attempts._2;

            switch (attempt.tag) {
            // We cannot recover from an interrupt. Otherwise we should
            // continue stepping, or run the exception handler if an exception
            // was raised.
            case CATCH:
              // We should compare the interrupt status as well because we
              // only want it to apply if there has been an interrupt since
              // enqueuing the catch.
              if (interrupt && interrupt !== tmp) {
                status = RETURN;
              } else if (fail) {
                status = CONTINUE;
                step   = attempt._2(util.fromLeft(fail));
                fail   = null;
              }
              break;

            // We cannot resume from an interrupt or exception.
            case RESUME:
              // As with Catch, we only want to ignore in the case of an
              // interrupt since enqueing the item.
              if (interrupt && interrupt !== tmp || fail) {
                status = RETURN;
              } else {
                bhead  = attempt._1;
                btail  = attempt._2;
                status = STEP_BIND;
                step   = util.fromRight(step);
              }
              break;

            // If we have a bracket, we should enqueue the handlers,
            // and continue with the success branch only if the fiber has
            // not been interrupted. If the bracket acquisition failed, we
            // should not run either.
            case BRACKET:
              bracketCount--;
              if (fail === null) {
                result   = util.fromRight(step);
                // We need to enqueue the Release with the same interrupt
                // status as the Bracket that is initiating it.
                attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);
                // We should only coninue as long as the interrupt status has not changed or
                // we are currently within a non-interruptable finalizer.
                if (interrupt === tmp || bracketCount > 0) {
                  status = CONTINUE;
                  step   = attempt._3(result);
                }
              }
              break;

            // Enqueue the appropriate handler. We increase the bracket count
            // because it should not be cancelled.
            case RELEASE:
              bracketCount++;
              attempts = new Aff(CONS, new Aff(FINALIZED, step), attempts, interrupt);
              status   = CONTINUE;
              // It has only been killed if the interrupt status has changed
              // since we enqueued the item.
              if (interrupt && interrupt !== tmp) {
                step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
              } else if (fail) {
                step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
              } else {
                step = attempt._1.completed(util.fromRight(step))(attempt._2);
              }
              break;

            case FINALIZER:
              bracketCount++;
              attempts = new Aff(CONS, new Aff(FINALIZED, step), attempts, interrupt);
              status   = CONTINUE;
              step     = attempt._1;
              break;

            case FINALIZED:
              bracketCount--;
              status = RETURN;
              step   = attempt._1;
              break;
            }
          }
          break;

        case COMPLETED:
          for (var k in joins) {
            if (joins.hasOwnProperty(k)) {
              rethrow = rethrow && joins[k].rethrow;
              runEff(joins[k].handler(step));
            }
          }
          joins = null;
          // If we have an interrupt and a fail, then the thread threw while
          // running finalizers. This should always rethrow in a fresh stack.
          if (interrupt && fail) {
            setTimeout(function () {
              throw util.fromLeft(fail);
            }, 0);
          // If we have an unhandled exception, and no other fiber has joined
          // then we need to throw the exception in a fresh stack.
          } else if (util.isLeft(step) && rethrow) {
            setTimeout(function () {
              // Guard on reathrow because a completely synchronous fiber can
              // still have an observer which was added after-the-fact.
              if (rethrow) {
                throw util.fromLeft(step);
              }
            }, 0);
          }
          return;
        case SUSPENDED:
          status = CONTINUE;
          break;
        case PENDING: return;
        }
      }
    }

    function onComplete(join) {
      return function () {
        if (status === COMPLETED) {
          rethrow = rethrow && join.rethrow;
          join.handler(step)();
          return function () {};
        }

        var jid    = joinId++;
        joins      = joins || {};
        joins[jid] = join;

        return function() {
          if (joins !== null) {
            delete joins[jid];
          }
        };
      };
    }

    function kill(error, cb) {
      return function () {
        if (status === COMPLETED) {
          cb(util.right(void 0))();
          return function () {};
        }

        var canceler = onComplete({
          rethrow: false,
          handler: function (/* unused */) {
            return cb(util.right(void 0));
          }
        })();

        switch (status) {
        case SUSPENDED:
          interrupt = util.left(error);
          status    = COMPLETED;
          step      = interrupt;
          run(runTick);
          break;
        case PENDING:
          if (interrupt === null) {
            interrupt = util.left(error);
          }
          if (bracketCount === 0) {
            if (status === PENDING) {
              attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
            }
            status   = RETURN;
            step     = null;
            fail     = null;
            run(++runTick);
          }
          break;
        default:
          if (interrupt === null) {
            interrupt = util.left(error);
          }
          if (bracketCount === 0) {
            status = RETURN;
            step   = null;
            fail   = null;
          }
        }

        return canceler;
      };
    }

    function join(cb) {
      return function () {
        var canceler = onComplete({
          rethrow: false,
          handler: cb
        })();
        if (status === SUSPENDED) {
          run(runTick);
        }
        return canceler;
      };
    }

    return {
      kill: kill,
      join: join,
      onComplete: onComplete,
      isSuspended: function () {
        return status === SUSPENDED;
      },
      run: function () {
        if (status === SUSPENDED) {
          if (!Scheduler.isDraining()) {
            Scheduler.enqueue(function () {
              run(runTick);
            });
          } else {
            run(runTick);
          }
        }
      }
    };
  }

  function runPar(util, supervisor, par, cb) {
    // Table of all forked fibers.
    var fiberId   = 0;
    var fibers    = {};

    // Table of currently running cancelers, as a product of `Alt` behavior.
    var killId    = 0;
    var kills     = {};

    // Error used for early cancelation on Alt branches.
    var early     = new Error("[ParAff] Early exit");

    // Error used to kill the entire tree.
    var interrupt = null;

    // The root pointer of the tree.
    var root      = EMPTY;

    // Walks a tree, invoking all the cancelers. Returns the table of pending
    // cancellation fibers.
    function kill(error, par, cb) {
      var step  = par;
      var head  = null;
      var tail  = null;
      var count = 0;
      var kills = {};
      var tmp, kid;

      loop: while (true) {
        tmp = null;

        switch (step.tag) {
        case FORKED:
          if (step._3 === EMPTY) {
            tmp = fibers[step._1];
            kills[count++] = tmp.kill(error, function (result) {
              return function () {
                count--;
                if (count === 0) {
                  cb(result)();
                }
              };
            });
          }
          // Terminal case.
          if (head === null) {
            break loop;
          }
          // Go down the right side of the tree.
          step = head._2;
          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
          break;
        case MAP:
          step = step._2;
          break;
        case APPLY:
        case ALT:
          if (head) {
            tail = new Aff(CONS, head, tail);
          }
          head = step;
          step = step._1;
          break;
        }
      }

      if (count === 0) {
        cb(util.right(void 0))();
      } else {
        // Run the cancelation effects. We alias `count` because it's mutable.
        kid = 0;
        tmp = count;
        for (; kid < tmp; kid++) {
          kills[kid] = kills[kid]();
        }
      }

      return kills;
    }

    // When a fiber resolves, we need to bubble back up the tree with the
    // result, computing the applicative nodes.
    function join(result, head, tail) {
      var fail, step, lhs, rhs, tmp, kid;

      if (util.isLeft(result)) {
        fail = result;
        step = null;
      } else {
        step = result;
        fail = null;
      }

      loop: while (true) {
        lhs = null;
        rhs = null;
        tmp = null;
        kid = null;

        // We should never continue if the entire tree has been interrupted.
        if (interrupt !== null) {
          return;
        }

        // We've made it all the way to the root of the tree, which means
        // the tree has fully evaluated.
        if (head === null) {
          cb(fail || step)();
          return;
        }

        // The tree has already been computed, so we shouldn't try to do it
        // again. This should never happen.
        // TODO: Remove this?
        if (head._3 !== EMPTY) {
          return;
        }

        switch (head.tag) {
        case MAP:
          if (fail === null) {
            head._3 = util.right(head._1(util.fromRight(step)));
            step    = head._3;
          } else {
            head._3 = fail;
          }
          break;
        case APPLY:
          lhs = head._1._3;
          rhs = head._2._3;
          // We can only proceed if both sides have resolved.
          if (lhs === EMPTY || rhs === EMPTY) {
            return;
          }
          // If either side resolve with an error, we should continue with
          // the first error.
          if (util.isLeft(lhs)) {
            if (util.isLeft(rhs)) {
              if (fail === lhs) {
                fail = rhs;
              }
            } else {
              fail = lhs;
            }
            step    = null;
            head._3 = fail;
          } else if (util.isLeft(rhs)) {
            step    = null;
            fail    = rhs;
            head._3 = fail;
          } else {
            step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
            head._3 = step;
          }
          break;
        case ALT:
          lhs = head._1._3;
          rhs = head._2._3;
          // We can only proceed if both have resolved or we have a success
          if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
            return;
          }
          // If both sides resolve with an error, we should continue with the
          // first error
          if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
            fail    = step === lhs ? rhs : lhs;
            step    = null;
            head._3 = fail;
          } else {
            head._3 = step;
            tmp     = true;
            kid     = killId++;
            // Once a side has resolved, we need to cancel the side that is still
            // pending before we can continue.
            kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {
              return function () {
                delete kills[kid];
                if (tmp) {
                  tmp = false;
                } else if (tail === null) {
                  join(step, null, null);
                } else {
                  join(step, tail._1, tail._2);
                }
              };
            });

            if (tmp) {
              tmp = false;
              return;
            }
          }
          break;
        }

        if (tail === null) {
          head = null;
        } else {
          head = tail._1;
          tail = tail._2;
        }
      }
    }

    function resolve(fiber) {
      return function (result) {
        return function () {
          delete fibers[fiber._1];
          fiber._3 = result;
          join(result, fiber._2._1, fiber._2._2);
        };
      };
    }

    // Walks the applicative tree, substituting non-applicative nodes with
    // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
    // as a mutable slot for memoization. In an unresolved state, the `_3`
    // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
    // the left side first, because both operations are left-associative. As
    // we `RETURN` from those branches, we then walk the right side.
    function run() {
      var status = CONTINUE;
      var step   = par;
      var head   = null;
      var tail   = null;
      var tmp, fid;

      loop: while (true) {
        tmp = null;
        fid = null;

        switch (status) {
        case CONTINUE:
          switch (step.tag) {
          case MAP:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = new Aff(MAP, step._1, EMPTY, EMPTY);
            step = step._2;
            break;
          case APPLY:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = new Aff(APPLY, EMPTY, step._2, EMPTY);
            step = step._1;
            break;
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = new Aff(ALT, EMPTY, step._2, EMPTY);
            step = step._1;
            break;
          default:
            // When we hit a leaf value, we suspend the stack in the `FORKED`.
            // When the fiber resolves, it can bubble back up the tree.
            fid    = fiberId++;
            status = RETURN;
            tmp    = step;
            step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
            tmp    = Fiber(util, supervisor, tmp);
            tmp.onComplete({
              rethrow: false,
              handler: resolve(step)
            })();
            fibers[fid] = tmp;
            if (supervisor) {
              supervisor.register(tmp);
            }
          }
          break;
        case RETURN:
          // Terminal case, we are back at the root.
          if (head === null) {
            break loop;
          }
          // If we are done with the right side, we need to continue down the
          // left. Otherwise we should continue up the stack.
          if (head._1 === EMPTY) {
            head._1 = step;
            status  = CONTINUE;
            step    = head._2;
            head._2 = EMPTY;
          } else {
            head._2 = step;
            step    = head;
            if (tail === null) {
              head  = null;
            } else {
              head  = tail._1;
              tail  = tail._2;
            }
          }
        }
      }

      // Keep a reference to the tree root so it can be cancelled.
      root = step;

      for (fid = 0; fid < fiberId; fid++) {
        fibers[fid].run();
      }
    }

    // Cancels the entire tree. If there are already subtrees being canceled,
    // we need to first cancel those joins. We will then add fresh joins for
    // all pending branches including those that were in the process of being
    // canceled.
    function cancel(error, cb) {
      interrupt = util.left(error);
      var innerKills;
      for (var kid in kills) {
        if (kills.hasOwnProperty(kid)) {
          innerKills = kills[kid];
          for (kid in innerKills) {
            if (innerKills.hasOwnProperty(kid)) {
              innerKills[kid]();
            }
          }
        }
      }

      kills = null;
      var newKills = kill(error, root, cb);

      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            for (var kid in newKills) {
              if (newKills.hasOwnProperty(kid)) {
                newKills[kid]();
              }
            }
            return nonCanceler;
          };
        });
      };
    }

    run();

    return function (killError) {
      return new Aff(ASYNC, function (killCb) {
        return function () {
          return cancel(killError, killCb);
        };
      });
    };
  }

  function sequential(util, supervisor, par) {
    return new Aff(ASYNC, function (cb) {
      return function () {
        return runPar(util, supervisor, par, cb);
      };
    });
  }

  Aff.EMPTY       = EMPTY;
  Aff.Pure        = AffCtr(PURE);
  Aff.Throw       = AffCtr(THROW);
  Aff.Catch       = AffCtr(CATCH);
  Aff.Sync        = AffCtr(SYNC);
  Aff.Async       = AffCtr(ASYNC);
  Aff.Bind        = AffCtr(BIND);
  Aff.Bracket     = AffCtr(BRACKET);
  Aff.Fork        = AffCtr(FORK);
  Aff.Seq         = AffCtr(SEQ);
  Aff.ParMap      = AffCtr(MAP);
  Aff.ParApply    = AffCtr(APPLY);
  Aff.ParAlt      = AffCtr(ALT);
  Aff.Fiber       = Fiber;
  Aff.Supervisor  = Supervisor;
  Aff.Scheduler   = Scheduler;
  Aff.nonCanceler = nonCanceler;

  return Aff;
}();

exports._pure = Aff.Pure;

exports._throwError = Aff.Throw;

exports._catchError = function (aff) {
  return function (k) {
    return Aff.Catch(aff, k);
  };
};

exports._map = function (f) {
  return function (aff) {
    if (aff.tag === Aff.Pure.tag) {
      return Aff.Pure(f(aff._1));
    } else {
      return Aff.Bind(aff, function (value) {
        return Aff.Pure(f(value));
      });
    }
  };
};

exports._bind = function (aff) {
  return function (k) {
    return Aff.Bind(aff, k);
  };
};

exports._fork = function (immediate) {
  return function (aff) {
    return Aff.Fork(immediate, aff);
  };
};

exports._liftEff = Aff.Sync;

exports._parAffMap = function (f) {
  return function (aff) {
    return Aff.ParMap(f, aff);
  };
};

exports._parAffApply = function (aff1) {
  return function (aff2) {
    return Aff.ParApply(aff1, aff2);
  };
};

exports._parAffAlt = function (aff1) {
  return function (aff2) {
    return Aff.ParAlt(aff1, aff2);
  };
};

exports.makeAff = Aff.Async;

exports.generalBracket = function (acquire) {
  return function (options) {
    return function (k) {
      return Aff.Bracket(acquire, options, k);
    };
  };
};

exports._makeFiber = function (util, aff) {
  return function () {
    return Aff.Fiber(util, null, aff);
  };
};

exports._makeSupervisedFiber = function (util, aff) {
  return function () {
    var supervisor = Aff.Supervisor(util);
    return {
      fiber: Aff.Fiber(util, supervisor, aff),
      supervisor: supervisor
    };
  };
};

exports._killAll = function (error, supervisor, cb) {
  return supervisor.killAll(error, cb);
};

exports._delay = function () {
  function setDelay(n, k) {
    if (n === 0 && typeof setImmediate !== "undefined") {
      return setImmediate(k);
    } else {
      return setTimeout(k, n);
    }
  }

  function clearDelay(n, t) {
    if (n === 0 && typeof clearImmediate !== "undefined") {
      return clearImmediate(t);
    } else {
      return clearTimeout(t);
    }
  }

  return function (right, ms) {
    return Aff.Async(function (cb) {
      return function () {
        var timer = setDelay(ms, cb(right()));
        return function () {
          return Aff.Sync(function () {
            return right(clearDelay(ms, timer));
          });
        };
      };
    });
  };
}();

exports._sequential = Aff.Seq;

},{}],22:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Eff_Unsafe = require("../Control.Monad.Eff.Unsafe");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Parallel = require("../Control.Parallel");
var Control_Parallel_Class = require("../Control.Parallel.Class");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Time_Duration = require("../Data.Time.Duration");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Fiber = function (x) {
    return x;
};
var FFIUtil = function (x) {
    return x;
};
var Canceler = function (x) {
    return x;
};
var suspendAff = $foreign._fork(false);
var newtypeCanceler = new Data_Newtype.Newtype(function (n) {
    return n;
}, Canceler);
var functorParAff = new Data_Functor.Functor($foreign._parAffMap);
var functorAff = new Data_Functor.Functor($foreign._map);
var forkAff = $foreign._fork(true);
var ffiUtil = (function () {
    var unsafeFromRight = function (v) {
        if (v instanceof Data_Either.Right) {
            return v.value0;
        };
        if (v instanceof Data_Either.Left) {
            return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
        };
        throw new Error("Failed pattern match at Control.Monad.Aff line 398, column 21 - line 400, column 31: " + [ v.constructor.name ]);
    };
    var unsafeFromLeft = function (v) {
        if (v instanceof Data_Either.Left) {
            return v.value0;
        };
        if (v instanceof Data_Either.Right) {
            return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
        };
        throw new Error("Failed pattern match at Control.Monad.Aff line 393, column 20 - line 397, column 3: " + [ v.constructor.name ]);
    };
    var isLeft = function (v) {
        if (v instanceof Data_Either.Left) {
            return true;
        };
        if (v instanceof Data_Either.Right) {
            return false;
        };
        throw new Error("Failed pattern match at Control.Monad.Aff line 388, column 12 - line 390, column 20: " + [ v.constructor.name ]);
    };
    return {
        isLeft: isLeft,
        fromLeft: unsafeFromLeft,
        fromRight: unsafeFromRight,
        left: Data_Either.Left.create,
        right: Data_Either.Right.create
    };
})();
var makeFiber = function (aff) {
    return $foreign._makeFiber(ffiUtil, aff);
};
var launchAff = function (aff) {
    return function __do() {
        var v = makeFiber(aff)();
        v.run();
        return v;
    };
};
var launchAff_ = function ($49) {
    return Data_Functor["void"](Control_Monad_Eff.functorEff)(launchAff($49));
};
var launchSuspendedAff = makeFiber;
var delay = function (v) {
    return $foreign._delay(Data_Either.Right.create, v);
};
var bracket = function (acquire) {
    return function (completed) {
        return $foreign.generalBracket(acquire)({
            killed: Data_Function["const"](completed),
            failed: Data_Function["const"](completed),
            completed: Data_Function["const"](completed)
        });
    };
};
var applyParAff = new Control_Apply.Apply(function () {
    return functorParAff;
}, $foreign._parAffApply);
var semigroupParAff = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyParAff)(Data_Semigroup.append(dictSemigroup)));
};
var monadAff = new Control_Monad.Monad(function () {
    return applicativeAff;
}, function () {
    return bindAff;
});
var bindAff = new Control_Bind.Bind(function () {
    return applyAff;
}, $foreign._bind);
var applyAff = new Control_Apply.Apply(function () {
    return functorAff;
}, Control_Monad.ap(monadAff));
var applicativeAff = new Control_Applicative.Applicative(function () {
    return applyAff;
}, $foreign._pure);
var cancelWith = function (aff) {
    return function (v) {
        return $foreign.generalBracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))({
            killed: function (e) {
                return function (v1) {
                    return v(e);
                };
            },
            failed: Data_Function["const"](Control_Applicative.pure(applicativeAff)),
            completed: Data_Function["const"](Control_Applicative.pure(applicativeAff))
        })(Data_Function["const"](aff));
    };
};
var $$finally = function (fin) {
    return function (a) {
        return bracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(Data_Function["const"](fin))(Data_Function["const"](a));
    };
};
var invincible = function (a) {
    return bracket(a)(Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit)))(Control_Applicative.pure(applicativeAff));
};
var semigroupAff = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyAff)(Data_Semigroup.append(dictSemigroup)));
};
var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
    return monadAff;
}, $foreign._liftEff);
var effCanceler = function ($50) {
    return Canceler(Data_Function["const"](Control_Monad_Eff_Class.liftEff(monadEffAff)($50)));
};
var joinFiber = function (v) {
    return $foreign.makeAff(function (k) {
        return Data_Functor.map(Control_Monad_Eff.functorEff)(effCanceler)(v.join(k));
    });
};
var functorFiber = new Data_Functor.Functor(function (f) {
    return function (t) {
        return Control_Monad_Eff_Unsafe.unsafePerformEff(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))));
    };
});
var applyFiber = new Control_Apply.Apply(function () {
    return functorFiber;
}, function (t1) {
    return function (t2) {
        return Control_Monad_Eff_Unsafe.unsafePerformEff(makeFiber(Control_Apply.apply(applyAff)(joinFiber(t1))(joinFiber(t2))));
    };
});
var applicativeFiber = new Control_Applicative.Applicative(function () {
    return applyFiber;
}, function (a) {
    return Control_Monad_Eff_Unsafe.unsafePerformEff(makeFiber(Control_Applicative.pure(applicativeAff)(a)));
});
var killFiber = function (e) {
    return function (v) {
        return Control_Bind.bind(bindAff)(Control_Monad_Eff_Class.liftEff(monadEffAff)(v.isSuspended))(function (v1) {
            if (v1) {
                return Control_Monad_Eff_Class.liftEff(monadEffAff)(Data_Functor["void"](Control_Monad_Eff.functorEff)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))));
            };
            return $foreign.makeAff(function (k) {
                return Data_Functor.map(Control_Monad_Eff.functorEff)(effCanceler)(v.kill(e, k));
            });
        });
    };
};
var liftEff$prime = function ($51) {
    return Control_Monad_Eff_Class.liftEff(monadEffAff)(Control_Monad_Eff_Unsafe.unsafeCoerceEff($51));
};
var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
    return monadAff;
}, $foreign._throwError);
var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowAff;
}, $foreign._catchError);
var attempt = Control_Monad_Error_Class["try"](monadErrorAff);
var runAff = function (k) {
    return function (aff) {
        return launchAff(Control_Bind.bindFlipped(bindAff)(function ($52) {
            return Control_Monad_Eff_Class.liftEff(monadEffAff)(k($52));
        })(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
    };
};
var runAff_ = function (k) {
    return function (aff) {
        return Data_Functor["void"](Control_Monad_Eff.functorEff)(runAff(k)(aff));
    };
};
var runSuspendedAff = function (k) {
    return function (aff) {
        return launchSuspendedAff(Control_Bind.bindFlipped(bindAff)(function ($53) {
            return Control_Monad_Eff_Class.liftEff(monadEffAff)(k($53));
        })(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
    };
};
var parallelAff = new Control_Parallel_Class.Parallel(function () {
    return applicativeParAff;
}, function () {
    return monadAff;
}, Unsafe_Coerce.unsafeCoerce, $foreign._sequential);
var applicativeParAff = new Control_Applicative.Applicative(function () {
    return applyParAff;
}, function ($54) {
    return Control_Parallel_Class.parallel(parallelAff)(Control_Applicative.pure(applicativeAff)($54));
});
var monoidParAff = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupParAff(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeParAff)(Data_Monoid.mempty(dictMonoid)));
};
var semigroupCanceler = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return function (err) {
            return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([ v(err), v1(err) ]);
        };
    };
});
var supervise = function (aff) {
    var killError = Control_Monad_Eff_Exception.error("[Aff] Child fiber outlived parent");
    var killAll = function (err) {
        return function (sup) {
            return $foreign.makeAff(function (k) {
                return $foreign._killAll(err, sup.supervisor, k(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Unit.unit)));
            });
        };
    };
    var acquire = function __do() {
        var v = $foreign._makeSupervisedFiber(ffiUtil, aff)();
        v.fiber.run();
        return v;
    };
    return $foreign.generalBracket(Control_Monad_Eff_Class.liftEff(monadEffAff)(acquire))({
        killed: function (err) {
            return function (sup) {
                return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([ killFiber(err)(sup.fiber), killAll(err)(sup) ]);
            };
        },
        failed: Data_Function["const"](killAll(killError)),
        completed: Data_Function["const"](killAll(killError))
    })(function ($55) {
        return joinFiber((function (v) {
            return v.fiber;
        })($55));
    });
};
var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
    return monadAff;
}, function (k) {
    var go = function (a) {
        return Control_Bind.bind(bindAff)(k(a))(function (v) {
            if (v instanceof Control_Monad_Rec_Class.Done) {
                return Control_Applicative.pure(applicativeAff)(v.value0);
            };
            if (v instanceof Control_Monad_Rec_Class.Loop) {
                return go(v.value0);
            };
            throw new Error("Failed pattern match at Control.Monad.Aff line 100, column 7 - line 102, column 22: " + [ v.constructor.name ]);
        });
    };
    return go;
});
var monoidAff = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAff(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeAff)(Data_Monoid.mempty(dictMonoid)));
};
var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
var monoidCanceler = new Data_Monoid.Monoid(function () {
    return semigroupCanceler;
}, nonCanceler);
var never = $foreign.makeAff(function (v) {
    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Monoid.mempty(monoidCanceler));
});
var apathize = function ($56) {
    return Data_Functor.map(functorAff)(Data_Function["const"](Data_Unit.unit))(attempt($56));
};
var altParAff = new Control_Alt.Alt(function () {
    return functorParAff;
}, $foreign._parAffAlt);
var altAff = new Control_Alt.Alt(function () {
    return functorAff;
}, function (a1) {
    return function (a2) {
        return Control_Monad_Error_Class.catchError(monadErrorAff)(a1)(Data_Function["const"](a2));
    };
});
var plusAff = new Control_Plus.Plus(function () {
    return altAff;
}, Control_Monad_Error_Class.throwError(monadThrowAff)(Control_Monad_Eff_Exception.error("Always fails")));
var plusParAff = new Control_Plus.Plus(function () {
    return altParAff;
}, Control_Parallel_Class.parallel(parallelAff)(Control_Plus.empty(plusAff)));
var alternativeParAff = new Control_Alternative.Alternative(function () {
    return applicativeParAff;
}, function () {
    return plusParAff;
});
module.exports = {
    Canceler: Canceler,
    launchAff: launchAff,
    launchAff_: launchAff_,
    launchSuspendedAff: launchSuspendedAff,
    runAff: runAff,
    runAff_: runAff_,
    runSuspendedAff: runSuspendedAff,
    forkAff: forkAff,
    suspendAff: suspendAff,
    "liftEff'": liftEff$prime,
    supervise: supervise,
    attempt: attempt,
    apathize: apathize,
    delay: delay,
    never: never,
    "finally": $$finally,
    invincible: invincible,
    killFiber: killFiber,
    joinFiber: joinFiber,
    cancelWith: cancelWith,
    bracket: bracket,
    nonCanceler: nonCanceler,
    effCanceler: effCanceler,
    functorAff: functorAff,
    applyAff: applyAff,
    applicativeAff: applicativeAff,
    bindAff: bindAff,
    monadAff: monadAff,
    semigroupAff: semigroupAff,
    monoidAff: monoidAff,
    altAff: altAff,
    plusAff: plusAff,
    monadRecAff: monadRecAff,
    monadThrowAff: monadThrowAff,
    monadErrorAff: monadErrorAff,
    monadEffAff: monadEffAff,
    functorParAff: functorParAff,
    applyParAff: applyParAff,
    applicativeParAff: applicativeParAff,
    semigroupParAff: semigroupParAff,
    monoidParAff: monoidParAff,
    altParAff: altParAff,
    plusParAff: plusParAff,
    alternativeParAff: alternativeParAff,
    parallelAff: parallelAff,
    functorFiber: functorFiber,
    applyFiber: applyFiber,
    applicativeFiber: applicativeFiber,
    newtypeCanceler: newtypeCanceler,
    semigroupCanceler: semigroupCanceler,
    monoidCanceler: monoidCanceler,
    makeAff: $foreign.makeAff,
    generalBracket: $foreign.generalBracket
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Monad":60,"../Control.Monad.Eff":39,"../Control.Monad.Eff.Class":27,"../Control.Monad.Eff.Exception":31,"../Control.Monad.Eff.Unsafe":37,"../Control.Monad.Error.Class":40,"../Control.Monad.Rec.Class":51,"../Control.Parallel":64,"../Control.Parallel.Class":63,"../Control.Plus":65,"../Control.Semigroupoid":66,"../Data.Either":154,"../Data.Foldable":164,"../Data.Function":172,"../Data.Function.Uncurried":171,"../Data.Functor":180,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Semigroup":271,"../Data.Time.Duration":291,"../Data.Unit":302,"../Partial.Unsafe":355,"../Prelude":358,"../Unsafe.Coerce":366,"./foreign":21}],23:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Prelude = require("../Prelude");
var MonadCont = function (Monad0, callCC) {
    this.Monad0 = Monad0;
    this.callCC = callCC;
};
var callCC = function (dict) {
    return dict.callCC;
};
module.exports = {
    MonadCont: MonadCont,
    callCC: callCC
};

},{"../Prelude":358}],24:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Prelude = require("../Prelude");
var ContT = function (x) {
    return x;
};
var withContT = function (f) {
    return function (v) {
        return function (k) {
            return v(f(k));
        };
    };
};
var runContT = function (v) {
    return function (k) {
        return v(k);
    };
};
var newtypeContT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ContT);
var monadTransContT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
        return function (k) {
            return Control_Bind.bind(dictMonad.Bind1())(m)(k);
        };
    };
});
var mapContT = function (f) {
    return function (v) {
        return function (k) {
            return f(v(k));
        };
    };
};
var functorContT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return function (k) {
                return v(function (a) {
                    return k(f(a));
                });
            };
        };
    });
};
var applyContT = function (dictApply) {
    return new Control_Apply.Apply(function () {
        return functorContT(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return function (k) {
                return v(function (g) {
                    return v1(function (a) {
                        return k(g(a));
                    });
                });
            };
        };
    });
};
var bindContT = function (dictBind) {
    return new Control_Bind.Bind(function () {
        return applyContT(dictBind.Apply0());
    }, function (v) {
        return function (k) {
            return function (k$prime) {
                return v(function (a) {
                    var v1 = k(a);
                    return v1(k$prime);
                });
            };
        };
    });
};
var applicativeContT = function (dictApplicative) {
    return new Control_Applicative.Applicative(function () {
        return applyContT(dictApplicative.Apply0());
    }, function (a) {
        return function (k) {
            return k(a);
        };
    });
};
var monadContT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeContT(dictMonad.Applicative0());
    }, function () {
        return bindContT(dictMonad.Bind1());
    });
};
var monadAskContT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadContT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderContT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskContT(dictMonadReader.MonadAsk0());
    }, function (f) {
        return function (v) {
            return function (k) {
                return Control_Bind.bind(((dictMonadReader.MonadAsk0()).Monad0()).Bind1())(Control_Monad_Reader_Class.ask(dictMonadReader.MonadAsk0()))(function (v1) {
                    return Control_Monad_Reader_Class.local(dictMonadReader)(f)(v(function ($45) {
                        return Control_Monad_Reader_Class.local(dictMonadReader)(Data_Function["const"](v1))(k($45));
                    }));
                });
            };
        };
    });
};
var monadContContT = function (dictMonad) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadContT(dictMonad);
    }, function (f) {
        return function (k) {
            var v = f(function (a) {
                return function (v1) {
                    return k(a);
                };
            });
            return v(k);
        };
    });
};
var monadEffContT = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadContT(dictMonadEff.Monad0());
    }, function ($46) {
        return Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($46));
    });
};
var monadStateContT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadContT(dictMonadState.Monad0());
    }, function ($47) {
        return Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)($47));
    });
};
module.exports = {
    ContT: ContT,
    runContT: runContT,
    mapContT: mapContT,
    withContT: withContT,
    newtypeContT: newtypeContT,
    monadContContT: monadContContT,
    functorContT: functorContT,
    applyContT: applyContT,
    applicativeContT: applicativeContT,
    bindContT: bindContT,
    monadContT: monadContT,
    monadTransContT: monadTransContT,
    monadEffContT: monadEffContT,
    monadAskContT: monadAskContT,
    monadReaderContT: monadReaderContT,
    monadStateContT: monadStateContT
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Monad":60,"../Control.Monad.Cont.Class":23,"../Control.Monad.Eff.Class":27,"../Control.Monad.Reader.Class":49,"../Control.Monad.State.Class":54,"../Control.Monad.Trans.Class":57,"../Control.Semigroupoid":66,"../Data.Function":172,"../Data.Functor":180,"../Data.Newtype":244,"../Prelude":358}],25:[function(require,module,exports){
/* globals exports, setTimeout */
/* jshint -W097 */

"use strict";

var AVar = function () {
  function MutableQueue () {
    this.head = null;
    this.last = null;
    this.size = 0;
  }

  function MutableCell (queue, value) {
    this.queue = queue;
    this.value = value;
    this.next  = null;
    this.prev  = null;
  }

  function AVar (value) {
    this.draining = false;
    this.error    = null;
    this.value    = value;
    this.takes    = new MutableQueue();
    this.reads    = new MutableQueue();
    this.puts     = new MutableQueue();
  }

  var EMPTY = {};

  function putLast (queue, value) {
    var cell = new MutableCell(queue, value);
    switch (queue.size) {
    case 0:
      queue.head = cell;
      break;
    case 1:
      cell.prev = queue.head;
      queue.head.next = cell;
      queue.last = cell;
      break;
    default:
      cell.prev = queue.last;
      queue.last.next = cell;
      queue.last = cell;
    }
    queue.size++;
    return cell;
  }

  function takeLast (queue) {
    var cell;
    switch (queue.size) {
    case 0:
      return null;
    case 1:
      cell = queue.head;
      queue.head = null;
      break;
    case 2:
      cell = queue.last;
      queue.head.next = null;
      queue.last = null;
      break;
    default:
      cell = queue.last;
      queue.last = cell.prev;
      queue.last.next = null;
    }
    cell.prev = null;
    cell.queue = null;
    queue.size--;
    return cell.value;
  }

  function takeHead (queue) {
    var cell;
    switch (queue.size) {
    case 0:
      return null;
    case 1:
      cell = queue.head;
      queue.head = null;
      break;
    case 2:
      cell = queue.head;
      queue.last.prev = null;
      queue.head = queue.last;
      queue.last = null;
      break;
    default:
      cell = queue.head;
      queue.head = cell.next;
      queue.head.prev = null;
    }
    cell.next = null;
    cell.queue = null;
    queue.size--;
    return cell.value;
  }

  function deleteCell (cell) {
    if (cell.queue === null) {
      return;
    }
    if (cell.queue.last === cell) {
      takeLast(cell.queue);
      return;
    }
    if (cell.queue.head === cell) {
      takeHead(cell.queue);
      return;
    }
    if (cell.prev) {
      cell.prev.next = cell.next;
    }
    if (cell.next) {
      cell.next.prev = cell.prev;
    }
    cell.queue.size--;
    cell.queue = null;
    cell.value = null;
    cell.next  = null;
    cell.prev  = null;
  }

  function drainVar (util, avar) {
    if (avar.draining) {
      return;
    }

    var ps = avar.puts;
    var ts = avar.takes;
    var rs = avar.reads;
    var p, r, t, value, rsize;

    avar.draining = true;

    /* jshint -W084 */
    while (1) {
      p = null;
      r = null;
      t = null;
      value = avar.value;
      rsize = rs.size;

      if (avar.error !== null) {
        value = util.left(avar.error);
        while (p = takeHead(ps)) {
          runEff(p.cb(value));
        }
        while (r = takeHead(rs)) {
          runEff(r(value));
        }
        while (t = takeHead(ts)) {
          runEff(t(value));
        }
        break;
      }

      // Process the next put. We do not immediately invoke the callback
      // because we want to preserve ordering. If there are takes/reads
      // we want to run those first.
      if (value === EMPTY && (p = takeHead(ps))) {
        avar.value = value = p.value;
      }

      if (value !== EMPTY) {
        // We go ahead and queue up the next take for the same reasons as
        // above. Invoking the read callbacks can affect the mutable queue.
        t = takeHead(ts);
        // We only want to process the reads queued up before running these
        // callbacks so we guard on rsize.
        while (rsize-- && (r = takeHead(rs))) {
          runEff(r(util.right(value)));
        }
        if (t !== null) {
          avar.value = EMPTY;
          runEff(t(util.right(value)));
        }
      }

      if (p !== null) {
        runEff(p.cb(util.right(void 0)));
      }

      // Callbacks could have queued up more items so we need to guard on the
      // actual mutable properties.
      if (avar.value === EMPTY && ps.size === 0 || avar.value !== EMPTY && ts.size === 0) {
        break;
      }
    }
    /* jshint +W084 */

    avar.draining = false;
  }

  function runEff(eff) {
    try {
      eff();
    } catch (error) {
      setTimeout(function () {
        throw error;
      }, 0);
    }
  }

  AVar.EMPTY      = EMPTY;
  AVar.putLast    = putLast;
  AVar.takeLast   = takeLast;
  AVar.takeHead   = takeHead;
  AVar.deleteCell = deleteCell;
  AVar.drainVar   = drainVar;

  return AVar;
}();

exports.makeEmptyVar = function () {
  return new AVar(AVar.EMPTY);
};

exports.makeVar = function (value) {
  return function () {
    return new AVar(value);
  };
};

exports._killVar = function (util, error, avar) {
  return function () {
    if (avar.error === null) {
      avar.error = error;
      avar.value = AVar.EMPTY;
      AVar.drainVar(util, avar);
    }
  };
};

exports._putVar = function (util, value, avar, cb) {
  return function () {
    var cell = AVar.putLast(avar.puts, { cb: cb, value: value });
    AVar.drainVar(util, avar);
    return function () {
      AVar.deleteCell(cell);
    };
  };
};

exports._takeVar = function (util, avar, cb) {
  return function () {
    var cell = AVar.putLast(avar.takes, cb);
    AVar.drainVar(util, avar);
    return function () {
      AVar.deleteCell(cell);
    };
  };
};

exports._readVar = function (util, avar, cb) {
  return function () {
    var cell = AVar.putLast(avar.reads, cb);
    AVar.drainVar(util, avar);
    return function () {
      AVar.deleteCell(cell);
    };
  };
};

exports._tryPutVar = function (util, value, avar) {
  return function () {
    if (avar.value === AVar.EMPTY && avar.error === null) {
      avar.value = value;
      AVar.drainVar(util, avar);
      return true;
    } else {
      return false;
    }
  };
};

exports._tryTakeVar = function (util, avar) {
  return function () {
    var value = avar.value;
    if (value === AVar.EMPTY) {
      return util.nothing;
    } else {
      avar.value = AVar.EMPTY;
      AVar.drainVar(util, avar);
      return util.just(value);
    }
  };
};

exports._tryReadVar = function (util, avar) {
  return function () {
    if (avar.value === AVar.EMPTY) {
      return util.nothing;
    } else {
      return util.just(avar.value);
    }
  };
};

exports._status = function (util, avar) {
  return function () {
    if (avar.error) {
      return util.killed(avar.error);
    }
    if (avar.value === AVar.EMPTY) {
      return util.empty;
    }
    return util.filled(avar.value);
  };
};


},{}],26:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Prelude = require("../Prelude");
var Killed = (function () {
    function Killed(value0) {
        this.value0 = value0;
    };
    Killed.create = function (value0) {
        return new Killed(value0);
    };
    return Killed;
})();
var Filled = (function () {
    function Filled(value0) {
        this.value0 = value0;
    };
    Filled.create = function (value0) {
        return new Filled(value0);
    };
    return Filled;
})();
var Empty = (function () {
    function Empty() {

    };
    Empty.value = new Empty();
    return Empty;
})();
var isKilled = function (v) {
    if (v instanceof Killed) {
        return true;
    };
    return false;
};
var isFilled = function (v) {
    if (v instanceof Filled) {
        return true;
    };
    return false;
};
var isEmpty = function (v) {
    if (v instanceof Empty) {
        return true;
    };
    return false;
};
var ffiUtil = {
    left: Data_Either.Left.create,
    right: Data_Either.Right.create,
    nothing: Data_Maybe.Nothing.value,
    just: Data_Maybe.Just.create,
    killed: Killed.create,
    filled: Filled.create,
    empty: Empty.value
};
var killVar = function (err) {
    return function (avar) {
        return $foreign._killVar(ffiUtil, err, avar);
    };
};
var putVar = function (value) {
    return function (avar) {
        return function (cb) {
            return $foreign._putVar(ffiUtil, value, avar, cb);
        };
    };
};
var readVar = function (avar) {
    return function (cb) {
        return $foreign._readVar(ffiUtil, avar, cb);
    };
};
var status = function (avar) {
    return $foreign._status(ffiUtil, avar);
};
var isEmptyVar = function ($8) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(isEmpty)(status($8));
};
var isFilledVar = function ($9) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(isFilled)(status($9));
};
var isKilledVar = function ($10) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(isKilled)(status($10));
};
var takeVar = function (avar) {
    return function (cb) {
        return $foreign._takeVar(ffiUtil, avar, cb);
    };
};
var tryPutVar = function (value) {
    return function (avar) {
        return $foreign._tryPutVar(ffiUtil, value, avar);
    };
};
var tryReadVar = function (avar) {
    return $foreign._tryReadVar(ffiUtil, avar);
};
var tryTakeVar = function (avar) {
    return $foreign._tryTakeVar(ffiUtil, avar);
};
module.exports = {
    Killed: Killed,
    Filled: Filled,
    Empty: Empty,
    takeVar: takeVar,
    tryTakeVar: tryTakeVar,
    putVar: putVar,
    tryPutVar: tryPutVar,
    readVar: readVar,
    tryReadVar: tryReadVar,
    killVar: killVar,
    status: status,
    isEmptyVar: isEmptyVar,
    isFilledVar: isFilledVar,
    isKilledVar: isKilledVar,
    isEmpty: isEmpty,
    isFilled: isFilled,
    isKilled: isKilled,
    makeVar: $foreign.makeVar,
    makeEmptyVar: $foreign.makeEmptyVar
};

},{"../Control.Monad.Eff":39,"../Control.Monad.Eff.Exception":31,"../Control.Semigroupoid":66,"../Data.Either":154,"../Data.Function.Uncurried":171,"../Data.Functor":180,"../Data.Maybe":234,"../Prelude":358,"./foreign":25}],27:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var MonadEff = function (Monad0, liftEff) {
    this.Monad0 = Monad0;
    this.liftEff = liftEff;
};
var monadEffEff = new MonadEff(function () {
    return Control_Monad_Eff.monadEff;
}, Control_Category.id(Control_Category.categoryFn));
var liftEff = function (dict) {
    return dict.liftEff;
};
module.exports = {
    liftEff: liftEff,
    MonadEff: MonadEff,
    monadEffEff: monadEffEff
};

},{"../Control.Category":12,"../Control.Monad":60,"../Control.Monad.Eff":39}],28:[function(require,module,exports){
"use strict";

exports.log = function (s) {
  return function () {
    console.log(s);
    return {};
  };
};

exports.warn = function (s) {
  return function () {
    console.warn(s);
    return {};
  };
};

exports.error = function (s) {
  return function () {
    console.error(s);
    return {};
  };
};

exports.info = function (s) {
  return function () {
    console.info(s);
    return {};
  };
};

},{}],29:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var warnShow = function (dictShow) {
    return function (a) {
        return $foreign.warn(Data_Show.show(dictShow)(a));
    };
};
var logShow = function (dictShow) {
    return function (a) {
        return $foreign.log(Data_Show.show(dictShow)(a));
    };
};
var infoShow = function (dictShow) {
    return function (a) {
        return $foreign.info(Data_Show.show(dictShow)(a));
    };
};
var errorShow = function (dictShow) {
    return function (a) {
        return $foreign.error(Data_Show.show(dictShow)(a));
    };
};
module.exports = {
    logShow: logShow,
    warnShow: warnShow,
    errorShow: errorShow,
    infoShow: infoShow,
    log: $foreign.log,
    warn: $foreign.warn,
    error: $foreign.error,
    info: $foreign.info
};

},{"../Control.Monad.Eff":39,"../Data.Show":276,"../Data.Unit":302,"./foreign":28}],30:[function(require,module,exports){
"use strict";

exports.showErrorImpl = function (err) {
  return err.stack || err.toString();
};

exports.error = function (msg) {
  return new Error(msg);
};

exports.message = function (e) {
  return e.message;
};

exports.name = function (e) {
  return e.name || "Error";
};

exports.stackImpl = function (just) {
  return function (nothing) {
    return function (e) {
      return e.stack ? just(e.stack) : nothing;
    };
  };
};

exports.throwException = function (e) {
  return function () {
    throw e;
  };
};

exports.catchException = function (c) {
  return function (t) {
    return function () {
      try {
        return t();
      } catch (e) {
        if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
          return c(e)();
        } else {
          return c(new Error(e.toString()))();
        }
      }
    };
  };
};

},{}],31:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var $$try = function (action) {
    return $foreign.catchException(function ($0) {
        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Either.Left.create($0));
    })(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Either.Right.create)(action));
};
var $$throw = function ($1) {
    return $foreign.throwException($foreign.error($1));
};
var stack = $foreign.stackImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var showError = new Data_Show.Show($foreign.showErrorImpl);
module.exports = {
    stack: stack,
    "throw": $$throw,
    "try": $$try,
    showError: showError,
    error: $foreign.error,
    message: $foreign.message,
    name: $foreign.name,
    throwException: $foreign.throwException,
    catchException: $foreign.catchException
};

},{"../Control.Applicative":5,"../Control.Monad.Eff":39,"../Control.Semigroupoid":66,"../Data.Either":154,"../Data.Functor":180,"../Data.Maybe":234,"../Data.Show":276,"../Prelude":358,"./foreign":30}],32:[function(require,module,exports){
"use strict";

exports.newRef = function (val) {
  return function () {
    return { value: val };
  };
};

exports.readRef = function (ref) {
  return function () {
    return ref.value;
  };
};

exports["modifyRef'"] = function (ref) {
  return function (f) {
    return function () {
      var t = f(ref.value);
      ref.value = t.state;
      return t.value;
    };
  };
};

exports.writeRef = function (ref) {
  return function (val) {
    return function () {
      ref.value = val;
      return {};
    };
  };
};

},{}],33:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var modifyRef = function (ref) {
    return function (f) {
        return $foreign["modifyRef'"](ref)(function (s) {
            return {
                state: f(s),
                value: Data_Unit.unit
            };
        });
    };
};
module.exports = {
    modifyRef: modifyRef,
    newRef: $foreign.newRef,
    readRef: $foreign.readRef,
    "modifyRef'": $foreign["modifyRef'"],
    writeRef: $foreign.writeRef
};

},{"../Control.Monad.Eff":39,"../Data.Unit":302,"../Prelude":358,"./foreign":32}],34:[function(require,module,exports){
"use strict";

exports.mkEffFn1 = function mkEffFn1(fn) {
  return function(x) {
    return fn(x)();
  };
};

exports.mkEffFn2 = function mkEffFn2(fn) {
  return function(a, b) {
    return fn(a)(b)();
  };
};

exports.mkEffFn3 = function mkEffFn3(fn) {
  return function(a, b, c) {
    return fn(a)(b)(c)();
  };
};

exports.mkEffFn4 = function mkEffFn4(fn) {
  return function(a, b, c, d) {
    return fn(a)(b)(c)(d)();
  };
};

exports.mkEffFn5 = function mkEffFn5(fn) {
  return function(a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e)();
  };
};

exports.mkEffFn6 = function mkEffFn6(fn) {
  return function(a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f)();
  };
};

exports.mkEffFn7 = function mkEffFn7(fn) {
  return function(a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g)();
  };
};

exports.mkEffFn8 = function mkEffFn8(fn) {
  return function(a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)();
  };
};

exports.mkEffFn9 = function mkEffFn9(fn) {
  return function(a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)();
  };
};

exports.mkEffFn10 = function mkEffFn10(fn) {
  return function(a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)();
  };
};

exports.runEffFn1 = function runEffFn1(fn) {
  return function(a) {
    return function() {
      return fn(a);
    };
  };
};

exports.runEffFn2 = function runEffFn2(fn) {
  return function(a) {
    return function(b) {
      return function() {
        return fn(a, b);
      };
    };
  };
};

exports.runEffFn3 = function runEffFn3(fn) {
  return function(a) {
    return function(b) {
      return function(c) {
        return function() {
          return fn(a, b, c);
        };
      };
    };
  };
};

exports.runEffFn4 = function runEffFn4(fn) {
  return function(a) {
    return function(b) {
      return function(c) {
        return function(d) {
          return function() {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
};

exports.runEffFn5 = function runEffFn5(fn) {
  return function(a) {
    return function(b) {
      return function(c) {
        return function(d) {
          return function(e) {
            return function() {
              return fn(a, b, c, d, e);
            };
          };
        };
      };
    };
  };
};

exports.runEffFn6 = function runEffFn6(fn) {
  return function(a) {
    return function(b) {
      return function(c) {
        return function(d) {
          return function(e) {
            return function(f) {
              return function() {
                return fn(a, b, c, d, e, f);
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffFn7 = function runEffFn7(fn) {
  return function(a) {
    return function(b) {
      return function(c) {
        return function(d) {
          return function(e) {
            return function(f) {
              return function(g) {
                return function() {
                  return fn(a, b, c, d, e, f, g);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffFn8 = function runEffFn8(fn) {
  return function(a) {
    return function(b) {
      return function(c) {
        return function(d) {
          return function(e) {
            return function(f) {
              return function(g) {
                return function(h) {
                  return function() {
                    return fn(a, b, c, d, e, f, g, h);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffFn9 = function runEffFn9(fn) {
  return function(a) {
    return function(b) {
      return function(c) {
        return function(d) {
          return function(e) {
            return function(f) {
              return function(g) {
                return function(h) {
                  return function(i) {
                    return function() {
                      return fn(a, b, c, d, e, f, g, h, i);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffFn10 = function runEffFn10(fn) {
  return function(a) {
    return function(b) {
      return function(c) {
        return function(d) {
          return function(e) {
            return function(f) {
              return function(g) {
                return function(h) {
                  return function(i) {
                    return function(j) {
                      return function() {
                        return fn(a, b, c, d, e, f, g, h, i, j);
                      };
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

},{}],35:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
module.exports = {
    mkEffFn1: $foreign.mkEffFn1,
    mkEffFn2: $foreign.mkEffFn2,
    mkEffFn3: $foreign.mkEffFn3,
    mkEffFn4: $foreign.mkEffFn4,
    mkEffFn5: $foreign.mkEffFn5,
    mkEffFn6: $foreign.mkEffFn6,
    mkEffFn7: $foreign.mkEffFn7,
    mkEffFn8: $foreign.mkEffFn8,
    mkEffFn9: $foreign.mkEffFn9,
    mkEffFn10: $foreign.mkEffFn10,
    runEffFn1: $foreign.runEffFn1,
    runEffFn2: $foreign.runEffFn2,
    runEffFn3: $foreign.runEffFn3,
    runEffFn4: $foreign.runEffFn4,
    runEffFn5: $foreign.runEffFn5,
    runEffFn6: $foreign.runEffFn6,
    runEffFn7: $foreign.runEffFn7,
    runEffFn8: $foreign.runEffFn8,
    runEffFn9: $foreign.runEffFn9,
    runEffFn10: $foreign.runEffFn10
};

},{"../Control.Monad.Eff":39,"./foreign":34}],36:[function(require,module,exports){
"use strict";

exports.unsafeCoerceEff = function (f) {
  return f;
};

},{}],37:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var unsafePerformEff = function ($0) {
    return Control_Monad_Eff.runPure($foreign.unsafeCoerceEff($0));
};
module.exports = {
    unsafePerformEff: unsafePerformEff,
    unsafeCoerceEff: $foreign.unsafeCoerceEff
};

},{"../Control.Monad.Eff":39,"../Control.Semigroupoid":66,"./foreign":36}],38:[function(require,module,exports){
"use strict";

exports.pureE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.runPure = function (f) {
  return f();
};

exports.untilE = function (f) {
  return function () {
    while (!f());
    return {};
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
      return {};
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

},{}],39:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var monadEff = new Control_Monad.Monad(function () {
    return applicativeEff;
}, function () {
    return bindEff;
});
var bindEff = new Control_Bind.Bind(function () {
    return applyEff;
}, $foreign.bindE);
var applyEff = new Control_Apply.Apply(function () {
    return functorEff;
}, Control_Monad.ap(monadEff));
var applicativeEff = new Control_Applicative.Applicative(function () {
    return applyEff;
}, $foreign.pureE);
var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
module.exports = {
    functorEff: functorEff,
    applyEff: applyEff,
    applicativeEff: applicativeEff,
    bindEff: bindEff,
    monadEff: monadEff,
    runPure: $foreign.runPure,
    untilE: $foreign.untilE,
    whileE: $foreign.whileE,
    forE: $foreign.forE,
    foreachE: $foreign.foreachE
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Monad":60,"../Data.Functor":180,"../Data.Unit":302,"./foreign":38}],40:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var MonadThrow = function (Monad0, throwError) {
    this.Monad0 = Monad0;
    this.throwError = throwError;
};
var MonadError = function (MonadThrow0, catchError) {
    this.MonadThrow0 = MonadThrow0;
    this.catchError = catchError;
};
var throwError = function (dict) {
    return dict.throwError;
};
var monadThrowMaybe = new MonadThrow(function () {
    return Data_Maybe.monadMaybe;
}, Data_Function["const"](Data_Maybe.Nothing.value));
var monadThrowEither = new MonadThrow(function () {
    return Data_Either.monadEither;
}, Data_Either.Left.create);
var monadErrorMaybe = new MonadError(function () {
    return monadThrowMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
            return v1(Data_Unit.unit);
        };
        if (v instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just(v.value0);
        };
        throw new Error("Failed pattern match at Control.Monad.Error.Class line 76, column 1 - line 76, column 50: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var monadErrorEither = new MonadError(function () {
    return monadThrowEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Either.Left) {
            return v1(v.value0);
        };
        if (v instanceof Data_Either.Right) {
            return new Data_Either.Right(v.value0);
        };
        throw new Error("Failed pattern match at Control.Monad.Error.Class line 69, column 1 - line 69, column 53: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var catchError = function (dict) {
    return dict.catchError;
};
var catchJust = function (dictMonadError) {
    return function (p) {
        return function (act) {
            return function (handler) {
                var handle = function (e) {
                    var v = p(e);
                    if (v instanceof Data_Maybe.Nothing) {
                        return throwError(dictMonadError.MonadThrow0())(e);
                    };
                    if (v instanceof Data_Maybe.Just) {
                        return handler(v.value0);
                    };
                    throw new Error("Failed pattern match at Control.Monad.Error.Class line 54, column 5 - line 56, column 26: " + [ v.constructor.name ]);
                };
                return catchError(dictMonadError)(act)(handle);
            };
        };
    };
};
var $$try = function (dictMonadError) {
    return function (a) {
        return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))(function ($21) {
            return Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0())(Data_Either.Left.create($21));
        });
    };
};
var withResource = function (dictMonadError) {
    return function (acquire) {
        return function (release) {
            return function (kleisli) {
                return Control_Bind.bind(((dictMonadError.MonadThrow0()).Monad0()).Bind1())(acquire)(function (v) {
                    return Control_Bind.bind(((dictMonadError.MonadThrow0()).Monad0()).Bind1())($$try(dictMonadError)(kleisli(v)))(function (v1) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadError.MonadThrow0()).Monad0()).Bind1())(release(v))(function () {
                            return Data_Either.either(throwError(dictMonadError.MonadThrow0()))(Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0()))(v1);
                        });
                    });
                });
            };
        };
    };
};
module.exports = {
    catchError: catchError,
    throwError: throwError,
    MonadThrow: MonadThrow,
    MonadError: MonadError,
    catchJust: catchJust,
    "try": $$try,
    withResource: withResource,
    monadThrowEither: monadThrowEither,
    monadErrorEither: monadErrorEither,
    monadThrowMaybe: monadThrowMaybe,
    monadErrorMaybe: monadErrorMaybe
};

},{"../Control.Applicative":5,"../Control.Bind":11,"../Control.Semigroupoid":66,"../Data.Either":154,"../Data.Function":172,"../Data.Functor":180,"../Data.Maybe":234,"../Data.Unit":302,"../Prelude":358}],41:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var ExceptT = function (x) {
    return x;
};
var withExceptT = function (dictFunctor) {
    return function (f) {
        return function (v) {
            var mapLeft = function (v1) {
                return function (v2) {
                    if (v2 instanceof Data_Either.Right) {
                        return new Data_Either.Right(v2.value0);
                    };
                    if (v2 instanceof Data_Either.Left) {
                        return new Data_Either.Left(v1(v2.value0));
                    };
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 44, column 3 - line 44, column 32: " + [ v1.constructor.name, v2.constructor.name ]);
                };
            };
            return ExceptT(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
        };
    };
};
var runExceptT = function (v) {
    return v;
};
var newtypeExceptT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ExceptT);
var monadTransExceptT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
        return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v));
        });
    };
});
var mapExceptT = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorExceptT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
    });
};
var except = function (dictApplicative) {
    return function ($96) {
        return ExceptT(Control_Applicative.pure(dictApplicative)($96));
    };
};
var monadExceptT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeExceptT(dictMonad);
    }, function () {
        return bindExceptT(dictMonad);
    });
};
var bindExceptT = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyExceptT(dictMonad);
    }, function (v) {
        return function (k) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
            })(function (a) {
                var v1 = k(a);
                return v1;
            }));
        };
    });
};
var applyExceptT = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
    }, Control_Monad.ap(monadExceptT(dictMonad)));
};
var applicativeExceptT = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyExceptT(dictMonad);
    }, function ($98) {
        return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
    });
};
var monadAskExceptT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadExceptT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderExceptT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskExceptT(dictMonadReader.MonadAsk0());
    }, function (f) {
        return mapExceptT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
};
var monadContExceptT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadExceptT(dictMonadCont.Monad0());
    }, function (f) {
        return ExceptT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
            var v = f(function (a) {
                return ExceptT(c(new Data_Either.Right(a)));
            });
            return v;
        }));
    });
};
var monadEffExceptT = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadExceptT(dictMonadEff.Monad0());
    }, function ($99) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($99));
    });
};
var monadRecExceptT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadExceptT(dictMonadRec.Monad0());
    }, function (f) {
        return function ($100) {
            return ExceptT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
                    var v = f(a);
                    return v;
                })())(function (m$prime) {
                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                        if (m$prime instanceof Data_Either.Left) {
                            return new Control_Monad_Rec_Class.Done(new Data_Either.Left(m$prime.value0));
                        };
                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
                            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
                        };
                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
                            return new Control_Monad_Rec_Class.Done(new Data_Either.Right(m$prime.value0.value0));
                        };
                        throw new Error("Failed pattern match at Control.Monad.Except.Trans line 76, column 14 - line 79, column 43: " + [ m$prime.constructor.name ]);
                    })());
                });
            })($100));
        };
    });
};
var monadStateExceptT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadExceptT(dictMonadState.Monad0());
    }, function (f) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
};
var monadTellExceptT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadExceptT(dictMonadTell.Monad0());
    }, function ($101) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($101));
    });
};
var monadWriterExceptT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellExceptT(dictMonadWriter.MonadTell0());
    }, mapExceptT(function (m) {
        return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(Data_Functor.map(Data_Either.functorEither)(function (r) {
                return new Data_Tuple.Tuple(r, v.value1);
            })(v.value0));
        });
    }), mapExceptT(function (m) {
        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m)(function (v) {
            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())((function () {
                if (v instanceof Data_Either.Left) {
                    return new Data_Tuple.Tuple(new Data_Either.Left(v.value0), Control_Category.id(Control_Category.categoryFn));
                };
                if (v instanceof Data_Either.Right) {
                    return new Data_Tuple.Tuple(new Data_Either.Right(v.value0.value0), v.value0.value1);
                };
                throw new Error("Failed pattern match at Control.Monad.Except.Trans line 138, column 10 - line 140, column 44: " + [ v.constructor.name ]);
            })());
        }));
    }));
};
var monadThrowExceptT = function (dictMonad) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
        return monadExceptT(dictMonad);
    }, function ($102) {
        return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)));
    });
};
var monadErrorExceptT = function (dictMonad) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadThrowExceptT(dictMonad);
    }, function (v) {
        return function (k) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function (a) {
                var v1 = k(a);
                return v1;
            })(function ($103) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($103));
            }));
        };
    });
};
var altExceptT = function (dictSemigroup) {
    return function (dictMonad) {
        return new Control_Alt.Alt(function () {
            return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
        }, function (v) {
            return function (v1) {
                return Control_Bind.bind(dictMonad.Bind1())(v)(function (v2) {
                    if (v2 instanceof Data_Either.Right) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v2.value0));
                    };
                    if (v2 instanceof Data_Either.Left) {
                        return Control_Bind.bind(dictMonad.Bind1())(v1)(function (v3) {
                            if (v3 instanceof Data_Either.Right) {
                                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v3.value0));
                            };
                            if (v3 instanceof Data_Either.Left) {
                                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v2.value0)(v3.value0)));
                            };
                            throw new Error("Failed pattern match at Control.Monad.Except.Trans line 88, column 9 - line 90, column 49: " + [ v3.constructor.name ]);
                        });
                    };
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 84, column 5 - line 90, column 49: " + [ v2.constructor.name ]);
                });
            };
        });
    };
};
var plusExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Plus.Plus(function () {
            return altExceptT(dictMonoid.Semigroup0())(dictMonad);
        }, Control_Monad_Error_Class.throwError(monadThrowExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
    };
};
var alternativeExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Alternative.Alternative(function () {
            return applicativeExceptT(dictMonad);
        }, function () {
            return plusExceptT(dictMonoid)(dictMonad);
        });
    };
};
var monadZeroExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_MonadZero.MonadZero(function () {
            return alternativeExceptT(dictMonoid)(dictMonad);
        }, function () {
            return monadExceptT(dictMonad);
        });
    };
};
var monadPlusExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_MonadPlus.MonadPlus(function () {
            return monadZeroExceptT(dictMonoid)(dictMonad);
        });
    };
};
module.exports = {
    ExceptT: ExceptT,
    runExceptT: runExceptT,
    withExceptT: withExceptT,
    mapExceptT: mapExceptT,
    except: except,
    newtypeExceptT: newtypeExceptT,
    functorExceptT: functorExceptT,
    applyExceptT: applyExceptT,
    applicativeExceptT: applicativeExceptT,
    bindExceptT: bindExceptT,
    monadExceptT: monadExceptT,
    monadRecExceptT: monadRecExceptT,
    altExceptT: altExceptT,
    plusExceptT: plusExceptT,
    alternativeExceptT: alternativeExceptT,
    monadPlusExceptT: monadPlusExceptT,
    monadZeroExceptT: monadZeroExceptT,
    monadTransExceptT: monadTransExceptT,
    monadEffExceptT: monadEffExceptT,
    monadContExceptT: monadContExceptT,
    monadThrowExceptT: monadThrowExceptT,
    monadErrorExceptT: monadErrorExceptT,
    monadAskExceptT: monadAskExceptT,
    monadReaderExceptT: monadReaderExceptT,
    monadStateExceptT: monadStateExceptT,
    monadTellExceptT: monadTellExceptT,
    monadWriterExceptT: monadWriterExceptT
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Monad":60,"../Control.Monad.Cont.Class":23,"../Control.Monad.Eff.Class":27,"../Control.Monad.Error.Class":40,"../Control.Monad.Reader.Class":49,"../Control.Monad.Rec.Class":51,"../Control.Monad.State.Class":54,"../Control.Monad.Trans.Class":57,"../Control.Monad.Writer.Class":58,"../Control.MonadPlus":61,"../Control.MonadZero":62,"../Control.Plus":65,"../Control.Semigroupoid":66,"../Data.Either":154,"../Data.Function":172,"../Data.Functor":180,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Semigroup":271,"../Data.Tuple":298,"../Prelude":358}],42:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Identity = require("../Data.Identity");
var Data_Newtype = require("../Data.Newtype");
var Prelude = require("../Prelude");
var withExcept = Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity);
var runExcept = function ($0) {
    return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
};
var mapExcept = function (f) {
    return Control_Monad_Except_Trans.mapExceptT(function ($1) {
        return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($1)));
    });
};
module.exports = {
    runExcept: runExcept,
    mapExcept: mapExcept,
    withExcept: withExcept
};

},{"../Control.Monad.Error.Class":40,"../Control.Monad.Except.Trans":41,"../Control.Semigroupoid":66,"../Data.Either":154,"../Data.Identity":189,"../Data.Newtype":244,"../Prelude":358}],43:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Prelude = require("../Prelude");
var Completed = (function () {
    function Completed(value0) {
        this.value0 = value0;
    };
    Completed.create = function (value0) {
        return new Completed(value0);
    };
    return Completed;
})();
var Failed = (function () {
    function Failed(value0) {
        this.value0 = value0;
    };
    Failed.create = function (value0) {
        return new Failed(value0);
    };
    return Failed;
})();
var Killed = (function () {
    function Killed(value0) {
        this.value0 = value0;
    };
    Killed.create = function (value0) {
        return new Killed(value0);
    };
    return Killed;
})();
var MonadFork = function (Functor1, Monad0, fork, join, suspend) {
    this.Functor1 = Functor1;
    this.Monad0 = Monad0;
    this.fork = fork;
    this.join = join;
    this.suspend = suspend;
};
var MonadKill = function (MonadFork0, MonadThrow1, kill) {
    this.MonadFork0 = MonadFork0;
    this.MonadThrow1 = MonadThrow1;
    this.kill = kill;
};
var MonadBracket = function (MonadError1, MonadKill0, bracket, never, uninterruptible) {
    this.MonadError1 = MonadError1;
    this.MonadKill0 = MonadKill0;
    this.bracket = bracket;
    this.never = never;
    this.uninterruptible = uninterruptible;
};
var uninterruptible = function (dict) {
    return dict.uninterruptible;
};
var suspend = function (dict) {
    return dict.suspend;
};
var never = function (dict) {
    return dict.never;
};
var monadForkAff = new MonadFork(function () {
    return Control_Monad_Aff.functorFiber;
}, function () {
    return Control_Monad_Aff.monadAff;
}, Control_Monad_Aff.forkAff, Control_Monad_Aff.joinFiber, Control_Monad_Aff.suspendAff);
var monadKillAff = new MonadKill(function () {
    return monadForkAff;
}, function () {
    return Control_Monad_Aff.monadThrowAff;
}, Control_Monad_Aff.killFiber);
var monadBracketAff = new MonadBracket(function () {
    return Control_Monad_Aff.monadErrorAff;
}, function () {
    return monadKillAff;
}, function (acquire) {
    return function (release) {
        return function (run) {
            return Control_Monad_Aff.generalBracket(acquire)({
                completed: function ($11) {
                    return release(Completed.create($11));
                },
                failed: function ($12) {
                    return release(Failed.create($12));
                },
                killed: function ($13) {
                    return release(Killed.create($13));
                }
            })(run);
        };
    };
}, Control_Monad_Aff.never, Control_Monad_Aff.invincible);
var kill = function (dict) {
    return dict.kill;
};
var join = function (dict) {
    return dict.join;
};
var fork = function (dict) {
    return dict.fork;
};
var monadForkReaderT = function (dictMonadFork) {
    return new MonadFork(dictMonadFork.Functor1, function () {
        return Control_Monad_Reader_Trans.monadReaderT(dictMonadFork.Monad0());
    }, function (v) {
        return function ($14) {
            return fork(dictMonadFork)(v($14));
        };
    }, function ($15) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadFork.Monad0())(join(dictMonadFork)($15));
    }, function (v) {
        return function ($16) {
            return suspend(dictMonadFork)(v($16));
        };
    });
};
var monadKillReaderT = function (dictMonadKill) {
    return new MonadKill(function () {
        return monadForkReaderT(dictMonadKill.MonadFork0());
    }, function () {
        return Control_Monad_Reader_Trans.monadThrowReaderT(dictMonadKill.MonadThrow1());
    }, function (e) {
        return function ($17) {
            return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)((dictMonadKill.MonadThrow1()).Monad0())(kill(dictMonadKill)(e)($17));
        };
    });
};
var bracket = function (dict) {
    return dict.bracket;
};
var monadBracketReaderT = function (dictMonadBracket) {
    return new MonadBracket(function () {
        return Control_Monad_Reader_Trans.monadErrorReaderT(dictMonadBracket.MonadError1());
    }, function () {
        return monadKillReaderT(dictMonadBracket.MonadKill0());
    }, function (v) {
        return function (release) {
            return function (run) {
                return function (r) {
                    return bracket(dictMonadBracket)(v(r))(function (c) {
                        return function (a) {
                            return Control_Monad_Reader_Trans.runReaderT(release(c)(a))(r);
                        };
                    })(function (a) {
                        return Control_Monad_Reader_Trans.runReaderT(run(a))(r);
                    });
                };
            };
        };
    }, Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(((dictMonadBracket.MonadError1()).MonadThrow0()).Monad0())(never(dictMonadBracket)), function (k) {
        return function (r) {
            return uninterruptible(dictMonadBracket)(Control_Monad_Reader_Trans.runReaderT(k)(r));
        };
    });
};
module.exports = {
    bracket: bracket,
    fork: fork,
    join: join,
    kill: kill,
    never: never,
    suspend: suspend,
    uninterruptible: uninterruptible,
    MonadFork: MonadFork,
    MonadKill: MonadKill,
    Completed: Completed,
    Failed: Failed,
    Killed: Killed,
    MonadBracket: MonadBracket,
    monadForkAff: monadForkAff,
    monadForkReaderT: monadForkReaderT,
    monadKillAff: monadKillAff,
    monadKillReaderT: monadKillReaderT,
    monadBracketAff: monadBracketAff,
    monadBracketReaderT: monadBracketReaderT
};

},{"../Control.Monad.Aff":22,"../Control.Monad.Error.Class":40,"../Control.Monad.Reader.Trans":50,"../Control.Monad.Trans.Class":57,"../Control.Semigroupoid":66,"../Prelude":358}],44:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Exists = require("../Data.Exists");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Bound = (function () {
    function Bound(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Bound.create = function (value0) {
        return function (value1) {
            return new Bound(value0, value1);
        };
    };
    return Bound;
})();
var FreeT = (function () {
    function FreeT(value0) {
        this.value0 = value0;
    };
    FreeT.create = function (value0) {
        return new FreeT(value0);
    };
    return FreeT;
})();
var Bind = (function () {
    function Bind(value0) {
        this.value0 = value0;
    };
    Bind.create = function (value0) {
        return new Bind(value0);
    };
    return Bind;
})();
var monadTransFreeT = function (dictFunctor) {
    return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
        return function (ma) {
            return new FreeT(function (v) {
                return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Either.Left.create)(ma);
            });
        };
    });
};
var freeT = FreeT.create;
var bound = function (m) {
    return function (f) {
        return new Bind(Data_Exists.mkExists(new Bound(m, f)));
    };
};
var functorFreeT = function (dictFunctor) {
    return function (dictFunctor1) {
        return new Data_Functor.Functor(function (f) {
            return function (v) {
                if (v instanceof FreeT) {
                    return new FreeT(function (v1) {
                        return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
                    });
                };
                if (v instanceof Bind) {
                    return Data_Exists.runExists(function (v1) {
                        return bound(v1.value0)(function ($104) {
                            return Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f)(v1.value1($104));
                        });
                    })(v.value0);
                };
                throw new Error("Failed pattern match at Control.Monad.Free.Trans line 58, column 1 - line 58, column 71: " + [ f.constructor.name, v.constructor.name ]);
            };
        });
    };
};
var bimapFreeT = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (nf) {
            return function (nm) {
                return function (v) {
                    if (v instanceof Bind) {
                        return Data_Exists.runExists(function (v1) {
                            return bound(function ($105) {
                                return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm)(v1.value0($105));
                            })(function ($106) {
                                return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm)(v1.value1($106));
                            });
                        })(v.value0);
                    };
                    if (v instanceof FreeT) {
                        return new FreeT(function (v1) {
                            return Data_Functor.map(dictFunctor1)(Data_Functor.map(Data_Either.functorEither)(function ($107) {
                                return nf(Data_Functor.map(dictFunctor)(bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm))($107));
                            }))(nm(v.value0(Data_Unit.unit)));
                        });
                    };
                    throw new Error("Failed pattern match at Control.Monad.Free.Trans line 119, column 1 - line 119, column 109: " + [ nf.constructor.name, nm.constructor.name, v.constructor.name ]);
                };
            };
        };
    };
};
var hoistFreeT = function (dictFunctor) {
    return function (dictFunctor1) {
        return bimapFreeT(dictFunctor)(dictFunctor1)(Control_Category.id(Control_Category.categoryFn));
    };
};
var interpret = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (nf) {
            return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(Control_Category.id(Control_Category.categoryFn));
        };
    };
};
var monadFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return new Control_Monad.Monad(function () {
            return applicativeFreeT(dictFunctor)(dictMonad);
        }, function () {
            return bindFreeT(dictFunctor)(dictMonad);
        });
    };
};
var bindFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return new Control_Bind.Bind(function () {
            return applyFreeT(dictFunctor)(dictMonad);
        }, function (v) {
            return function (f) {
                if (v instanceof Bind) {
                    return Data_Exists.runExists(function (v1) {
                        return bound(v1.value0)(function (x) {
                            return bound(function (v2) {
                                return v1.value1(x);
                            })(f);
                        });
                    })(v.value0);
                };
                return bound(function (v1) {
                    return v;
                })(f);
            };
        });
    };
};
var applyFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return new Control_Apply.Apply(function () {
            return functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0());
        }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
    };
};
var applicativeFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return new Control_Applicative.Applicative(function () {
            return applyFreeT(dictFunctor)(dictMonad);
        }, function (a) {
            return new FreeT(function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(a));
            });
        });
    };
};
var liftFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return function (fa) {
            return new FreeT(function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));
            });
        };
    };
};
var resume = function (dictFunctor) {
    return function (dictMonadRec) {
        var go = function (v) {
            if (v instanceof FreeT) {
                return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(v.value0(Data_Unit.unit));
            };
            if (v instanceof Bind) {
                return Data_Exists.runExists(function (v1) {
                    var v2 = v1.value0(Data_Unit.unit);
                    if (v2 instanceof FreeT) {
                        return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(v2.value0(Data_Unit.unit))(function (v3) {
                            if (v3 instanceof Data_Either.Left) {
                                return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(v1.value1(v3.value0)));
                            };
                            if (v3 instanceof Data_Either.Right) {
                                return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
                                    return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(h)(v1.value1);
                                })(v3.value0))));
                            };
                            throw new Error("Failed pattern match at Control.Monad.Free.Trans line 53, column 20 - line 55, column 67: " + [ v3.constructor.name ]);
                        });
                    };
                    if (v2 instanceof Bind) {
                        return Data_Exists.runExists(function (v3) {
                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value0(Data_Unit.unit))(function (z) {
                                return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value1(z))(v1.value1);
                            })));
                        })(v2.value0);
                    };
                    throw new Error("Failed pattern match at Control.Monad.Free.Trans line 51, column 5 - line 56, column 98: " + [ v2.constructor.name ]);
                })(v.value0);
            };
            throw new Error("Failed pattern match at Control.Monad.Free.Trans line 48, column 3 - line 48, column 75: " + [ v.constructor.name ]);
        };
        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
    };
};
var runFreeT = function (dictFunctor) {
    return function (dictMonadRec) {
        return function (interp) {
            var go = function (v) {
                if (v instanceof Data_Either.Left) {
                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(v.value0));
                };
                if (v instanceof Data_Either.Right) {
                    return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(interp(v.value0));
                };
                throw new Error("Failed pattern match at Control.Monad.Free.Trans line 127, column 3 - line 127, column 63: " + [ v.constructor.name ]);
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped((dictMonadRec.Monad0()).Bind1())(go)(resume(dictFunctor)(dictMonadRec)));
        };
    };
};
var semigroupFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return function (dictSemigroup) {
            return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyFreeT(dictFunctor)(dictMonad))(Data_Semigroup.append(dictSemigroup)));
        };
    };
};
var monadAskFreeT = function (dictFunctor) {
    return function (dictMonadAsk) {
        return new Control_Monad_Reader_Class.MonadAsk(function () {
            return monadFreeT(dictFunctor)(dictMonadAsk.Monad0());
        }, Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
    };
};
var monadEffFreeT = function (dictFunctor) {
    return function (dictMonadEff) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadFreeT(dictFunctor)(dictMonadEff.Monad0());
        }, function ($108) {
            return Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($108));
        });
    };
};
var monadStateFreeT = function (dictFunctor) {
    return function (dictMonadState) {
        return new Control_Monad_State_Class.MonadState(function () {
            return monadFreeT(dictFunctor)(dictMonadState.Monad0());
        }, function ($109) {
            return Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)($109));
        });
    };
};
var monadTellFreeT = function (dictFunctor) {
    return function (dictMonadTell) {
        return new Control_Monad_Writer_Class.MonadTell(function () {
            return monadFreeT(dictFunctor)(dictMonadTell.Monad0());
        }, function ($110) {
            return Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($110));
        });
    };
};
var monadThrowFreeT = function (dictFunctor) {
    return function (dictMonadThrow) {
        return new Control_Monad_Error_Class.MonadThrow(function () {
            return monadFreeT(dictFunctor)(dictMonadThrow.Monad0());
        }, function ($111) {
            return Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)($111));
        });
    };
};
var monadRecFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return new Control_Monad_Rec_Class.MonadRec(function () {
            return monadFreeT(dictFunctor)(dictMonad);
        }, function (f) {
            var go = function (s) {
                return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {
                    if (v instanceof Control_Monad_Rec_Class.Loop) {
                        return go(v.value0);
                    };
                    if (v instanceof Control_Monad_Rec_Class.Done) {
                        return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);
                    };
                    throw new Error("Failed pattern match at Control.Monad.Free.Trans line 81, column 15 - line 83, column 25: " + [ v.constructor.name ]);
                });
            };
            return go;
        });
    };
};
var monoidFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return function (dictMonoid) {
            return new Data_Monoid.Monoid(function () {
                return semigroupFreeT(dictFunctor)(dictMonad)(dictMonoid.Semigroup0());
            }, Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(Data_Monoid.mempty(dictMonoid)));
        };
    };
};
module.exports = {
    freeT: freeT,
    liftFreeT: liftFreeT,
    hoistFreeT: hoistFreeT,
    interpret: interpret,
    bimapFreeT: bimapFreeT,
    resume: resume,
    runFreeT: runFreeT,
    functorFreeT: functorFreeT,
    applyFreeT: applyFreeT,
    applicativeFreeT: applicativeFreeT,
    bindFreeT: bindFreeT,
    monadFreeT: monadFreeT,
    monadTransFreeT: monadTransFreeT,
    monadRecFreeT: monadRecFreeT,
    semigroupFreeT: semigroupFreeT,
    monoidFreeT: monoidFreeT,
    monadEffFreeT: monadEffFreeT,
    monadAskFreeT: monadAskFreeT,
    monadTellFreeT: monadTellFreeT,
    monadStateFreeT: monadStateFreeT,
    monadThrowFreeT: monadThrowFreeT
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Monad":60,"../Control.Monad.Eff.Class":27,"../Control.Monad.Error.Class":40,"../Control.Monad.Reader.Class":49,"../Control.Monad.Rec.Class":51,"../Control.Monad.State.Class":54,"../Control.Monad.Trans.Class":57,"../Control.Monad.Writer.Class":58,"../Control.Semigroupoid":66,"../Data.Bifunctor":129,"../Data.Either":154,"../Data.Exists":160,"../Data.Functor":180,"../Data.Monoid":242,"../Data.Semigroup":271,"../Data.Unit":302,"../Prelude":358}],45:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_CatList = require("../Data.CatList");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var ExpF = function (x) {
    return x;
};
var Free = (function () {
    function Free(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Free.create = function (value0) {
        return function (value1) {
            return new Free(value0, value1);
        };
    };
    return Free;
})();
var Return = (function () {
    function Return(value0) {
        this.value0 = value0;
    };
    Return.create = function (value0) {
        return new Return(value0);
    };
    return Return;
})();
var Bind = (function () {
    function Bind(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Bind.create = function (value0) {
        return function (value1) {
            return new Bind(value0, value1);
        };
    };
    return Bind;
})();
var toView = function ($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
        var runExpF = function (v2) {
            return v2;
        };
        var concatF = function (v2) {
            return function (r) {
                return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
            };
        };
        if (v.value0 instanceof Return) {
            var v2 = Data_CatList.uncons(v.value1);
            if (v2 instanceof Data_Maybe.Nothing) {
                $tco_done = true;
                return new Return(v.value0.value0);
            };
            if (v2 instanceof Data_Maybe.Just) {
                $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
                return;
            };
            throw new Error("Failed pattern match at Control.Monad.Free line 215, column 7 - line 219, column 64: " + [ v2.constructor.name ]);
        };
        if (v.value0 instanceof Bind) {
            $tco_done = true;
            return new Bind(v.value0.value0, function (a) {
                return concatF(v.value0.value1(a))(v.value1);
            });
        };
        throw new Error("Failed pattern match at Control.Monad.Free line 213, column 3 - line 221, column 56: " + [ v.value0.constructor.name ]);
    };
    while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
    };
    return $tco_result;
};
var runFreeM = function (dictFunctor) {
    return function (dictMonadRec) {
        return function (k) {
            var go = function (f) {
                var v = toView(f);
                if (v instanceof Return) {
                    return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(v.value0));
                };
                if (v instanceof Bind) {
                    return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(k(Data_Functor.map(dictFunctor)(v.value1)(v.value0)));
                };
                throw new Error("Failed pattern match at Control.Monad.Free line 182, column 10 - line 184, column 37: " + [ v.constructor.name ]);
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
        };
    };
};
var runFree = function (dictFunctor) {
    return function (k) {
        var go = function ($copy_f) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(f) {
                var v = toView(f);
                if (v instanceof Return) {
                    $tco_done = true;
                    return v.value0;
                };
                if (v instanceof Bind) {
                    $copy_f = k(Data_Functor.map(dictFunctor)(v.value1)(v.value0));
                    return;
                };
                throw new Error("Failed pattern match at Control.Monad.Free line 166, column 10 - line 168, column 33: " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($copy_f);
            };
            return $tco_result;
        };
        return go;
    };
};
var resume$prime = function (k) {
    return function (j) {
        return function (f) {
            var v = toView(f);
            if (v instanceof Return) {
                return j(v.value0);
            };
            if (v instanceof Bind) {
                return k(v.value0)(v.value1);
            };
            throw new Error("Failed pattern match at Control.Monad.Free line 201, column 17 - line 203, column 20: " + [ v.constructor.name ]);
        };
    };
};
var resume = function (dictFunctor) {
    return resume$prime(function (g) {
        return function (i) {
            return new Data_Either.Left(Data_Functor.map(dictFunctor)(i)(g));
        };
    })(Data_Either.Right.create);
};
var fromView = function (f) {
    return new Free(f, Data_CatList.empty);
};
var suspendF = function (dictApplicative) {
    return function (f) {
        return fromView(new Bind(Control_Applicative.pure(dictApplicative)(f), Unsafe_Coerce.unsafeCoerce));
    };
};
var freeMonad = new Control_Monad.Monad(function () {
    return freeApplicative;
}, function () {
    return freeBind;
});
var freeFunctor = new Data_Functor.Functor(function (k) {
    return function (f) {
        return Control_Bind.bindFlipped(freeBind)(function ($118) {
            return Control_Applicative.pure(freeApplicative)(k($118));
        })(f);
    };
});
var freeBind = new Control_Bind.Bind(function () {
    return freeApply;
}, function (v) {
    return function (k) {
        return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
    };
});
var freeApply = new Control_Apply.Apply(function () {
    return freeFunctor;
}, Control_Monad.ap(freeMonad));
var freeApplicative = new Control_Applicative.Applicative(function () {
    return freeApply;
}, function ($119) {
    return fromView(Return.create($119));
});
var freeMonadRec = new Control_Monad_Rec_Class.MonadRec(function () {
    return freeMonad;
}, function (k) {
    return function (a) {
        return Control_Bind.bind(freeBind)(k(a))(function (v) {
            if (v instanceof Control_Monad_Rec_Class.Loop) {
                return Control_Monad_Rec_Class.tailRecM(freeMonadRec)(k)(v.value0);
            };
            if (v instanceof Control_Monad_Rec_Class.Done) {
                return Control_Applicative.pure(freeApplicative)(v.value0);
            };
            throw new Error("Failed pattern match at Control.Monad.Free line 84, column 26 - line 86, column 21: " + [ v.constructor.name ]);
        });
    };
});
var liftF = function (f) {
    return fromView(new Bind(f, function ($120) {
        return Control_Applicative.pure(freeApplicative)($120);
    }));
};
var freeMonadTrans = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return liftF;
});
var substFree = function (k) {
    var go = function (f) {
        var v = toView(f);
        if (v instanceof Return) {
            return Control_Applicative.pure(freeApplicative)(v.value0);
        };
        if (v instanceof Bind) {
            return Control_Bind.bind(freeBind)(k(v.value0))(Data_Functor.map(Data_Functor.functorFn)(go)(v.value1));
        };
        throw new Error("Failed pattern match at Control.Monad.Free line 156, column 10 - line 158, column 33: " + [ v.constructor.name ]);
    };
    return go;
};
var hoistFree = function (k) {
    return substFree(function ($121) {
        return liftF(k($121));
    });
};
var foldableFree = function (dictFunctor) {
    return function (dictFoldable) {
        return new Data_Foldable.Foldable(function (dictMonoid) {
            return function (f) {
                var go = function ($122) {
                    return (function (v) {
                        if (v instanceof Data_Either.Left) {
                            return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(go)(v.value0);
                        };
                        if (v instanceof Data_Either.Right) {
                            return f(v.value0);
                        };
                        throw new Error("Failed pattern match at Control.Monad.Free line 91, column 21 - line 93, column 21: " + [ v.constructor.name ]);
                    })(resume(dictFunctor)($122));
                };
                return go;
            };
        }, function (f) {
            var go = function (r) {
                return function ($123) {
                    return (function (v) {
                        if (v instanceof Data_Either.Left) {
                            return Data_Foldable.foldl(dictFoldable)(go)(r)(v.value0);
                        };
                        if (v instanceof Data_Either.Right) {
                            return f(r)(v.value0);
                        };
                        throw new Error("Failed pattern match at Control.Monad.Free line 96, column 23 - line 98, column 23: " + [ v.constructor.name ]);
                    })(resume(dictFunctor)($123));
                };
            };
            return go;
        }, function (f) {
            var go = function (r) {
                return function ($124) {
                    return (function (v) {
                        if (v instanceof Data_Either.Left) {
                            return Data_Foldable.foldr(dictFoldable)(Data_Function.flip(go))(r)(v.value0);
                        };
                        if (v instanceof Data_Either.Right) {
                            return f(v.value0)(r);
                        };
                        throw new Error("Failed pattern match at Control.Monad.Free line 101, column 23 - line 103, column 23: " + [ v.constructor.name ]);
                    })(resume(dictFunctor)($124));
                };
            };
            return go;
        });
    };
};
var traversableFree = function (dictTraversable) {
    return new Data_Traversable.Traversable(function () {
        return foldableFree(dictTraversable.Functor0())(dictTraversable.Foldable1());
    }, function () {
        return freeFunctor;
    }, function (dictApplicative) {
        return function (tma) {
            return Data_Traversable.traverse(traversableFree(dictTraversable))(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(tma);
        };
    }, function (dictApplicative) {
        return function (f) {
            var go = function ($125) {
                return (function (v) {
                    if (v instanceof Data_Either.Left) {
                        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function ($126) {
                            return Control_Bind.join(freeBind)(liftF($126));
                        })(Data_Traversable.traverse(dictTraversable)(dictApplicative)(go)(v.value0));
                    };
                    if (v instanceof Data_Either.Right) {
                        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Control_Applicative.pure(freeApplicative))(f(v.value0));
                    };
                    throw new Error("Failed pattern match at Control.Monad.Free line 108, column 21 - line 110, column 30: " + [ v.constructor.name ]);
                })(resume(dictTraversable.Functor0())($125));
            };
            return go;
        };
    });
};
var foldFree = function (dictMonadRec) {
    return function (k) {
        var go = function (f) {
            var v = toView(f);
            if (v instanceof Return) {
                return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(v.value0));
            };
            if (v instanceof Bind) {
                return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(function ($127) {
                    return Control_Monad_Rec_Class.Loop.create(v.value1($127));
                })(k(v.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Free line 146, column 10 - line 148, column 37: " + [ v.constructor.name ]);
        };
        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
    };
};
var eqFree = function (dictFunctor) {
    return function (dictEq1) {
        return function (dictEq) {
            return new Data_Eq.Eq(function (x) {
                return function (y) {
                    var v = resume(dictFunctor)(y);
                    var v1 = resume(dictFunctor)(x);
                    if (v1 instanceof Data_Either.Left && v instanceof Data_Either.Left) {
                        return Data_Eq.eq1(dictEq1)(eqFree(dictFunctor)(dictEq1)(dictEq))(v1.value0)(v.value0);
                    };
                    if (v1 instanceof Data_Either.Right && v instanceof Data_Either.Right) {
                        return Data_Eq.eq(dictEq)(v1.value0)(v.value0);
                    };
                    return false;
                };
            });
        };
    };
};
var ordFree = function (dictFunctor) {
    return function (dictOrd1) {
        return function (dictOrd) {
            return new Data_Ord.Ord(function () {
                return eqFree(dictFunctor)(dictOrd1.Eq10())(dictOrd.Eq0());
            }, function (x) {
                return function (y) {
                    var v = resume(dictFunctor)(y);
                    var v1 = resume(dictFunctor)(x);
                    if (v1 instanceof Data_Either.Left && v instanceof Data_Either.Left) {
                        return Data_Ord.compare1(dictOrd1)(ordFree(dictFunctor)(dictOrd1)(dictOrd))(v1.value0)(v.value0);
                    };
                    if (v1 instanceof Data_Either.Left) {
                        return Data_Ordering.LT.value;
                    };
                    if (v instanceof Data_Either.Left) {
                        return Data_Ordering.GT.value;
                    };
                    if (v1 instanceof Data_Either.Right && v instanceof Data_Either.Right) {
                        return Data_Ord.compare(dictOrd)(v1.value0)(v.value0);
                    };
                    throw new Error("Failed pattern match at Control.Monad.Free line 54, column 17 - line 58, column 36: " + [ v1.constructor.name, v.constructor.name ]);
                };
            });
        };
    };
};
var eq1Free = function (dictFunctor) {
    return function (dictEq1) {
        return new Data_Eq.Eq1(function (dictEq) {
            return Data_Eq.eq(eqFree(dictFunctor)(dictEq1)(dictEq));
        });
    };
};
var ord1Free = function (dictFunctor) {
    return function (dictOrd1) {
        return function (dictOrd) {
            return new Data_Ord.Ord1(function () {
                return eq1Free(dictFunctor)(dictOrd1.Eq10());
            }, function (dictOrd2) {
                return Data_Ord.compare(ordFree(dictFunctor)(dictOrd1)(dictOrd2));
            });
        };
    };
};
module.exports = {
    suspendF: suspendF,
    liftF: liftF,
    hoistFree: hoistFree,
    foldFree: foldFree,
    substFree: substFree,
    runFree: runFree,
    runFreeM: runFreeM,
    resume: resume,
    "resume'": resume$prime,
    eqFree: eqFree,
    eq1Free: eq1Free,
    ordFree: ordFree,
    ord1Free: ord1Free,
    freeFunctor: freeFunctor,
    freeBind: freeBind,
    freeApplicative: freeApplicative,
    freeApply: freeApply,
    freeMonad: freeMonad,
    freeMonadTrans: freeMonadTrans,
    freeMonadRec: freeMonadRec,
    foldableFree: foldableFree,
    traversableFree: traversableFree
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Monad":60,"../Control.Monad.Rec.Class":51,"../Control.Monad.Trans.Class":57,"../Control.Semigroupoid":66,"../Data.CatList":135,"../Data.Either":154,"../Data.Eq":157,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Semigroup":271,"../Data.Traversable":296,"../Data.Tuple":298,"../Prelude":358,"../Unsafe.Coerce":366}],46:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Lazy = require("../Data.Lazy");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Yield = (function () {
    function Yield(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Yield.create = function (value0) {
        return function (value1) {
            return new Yield(value0, value1);
        };
    };
    return Yield;
})();
var Skip = (function () {
    function Skip(value0) {
        this.value0 = value0;
    };
    Skip.create = function (value0) {
        return new Skip(value0);
    };
    return Skip;
})();
var Done = (function () {
    function Done() {

    };
    Done.value = new Done();
    return Done;
})();
var ListT = function (x) {
    return x;
};
var wrapLazy = function (dictApplicative) {
    return function (v) {
        return ListT(Control_Applicative.pure(dictApplicative)(new Skip(v)));
    };
};
var wrapEffect = function (dictFunctor) {
    return function (v) {
        return ListT(Data_Functor.map(dictFunctor)(function ($178) {
            return Skip.create(Data_Lazy.defer(Data_Function["const"]($178)));
        })(v));
    };
};
var unfold = function (dictMonad) {
    return function (f) {
        return function (z) {
            var g = function (v) {
                if (v instanceof Data_Maybe.Just) {
                    return new Yield(v.value0.value1, Data_Lazy.defer(function (v1) {
                        return unfold(dictMonad)(f)(v.value0.value0);
                    }));
                };
                if (v instanceof Data_Maybe.Nothing) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 131, column 3 - line 131, column 60: " + [ v.constructor.name ]);
            };
            return ListT(Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(g)(f(z)));
        };
    };
};
var uncons = function (dictMonad) {
    return function (v) {
        var g = function (v1) {
            if (v1 instanceof Yield) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Just.create(new Data_Tuple.Tuple(v1.value0, Data_Lazy.force(v1.value1))));
            };
            if (v1 instanceof Skip) {
                return uncons(dictMonad)(Data_Lazy.force(v1.value0));
            };
            if (v1 instanceof Done) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value);
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans line 196, column 3 - line 196, column 50: " + [ v1.constructor.name ]);
        };
        return Control_Bind.bind(dictMonad.Bind1())(v)(g);
    };
};
var tail = function (dictMonad) {
    return function (l) {
        return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.snd))(uncons(dictMonad)(l));
    };
};
var stepMap = function (dictFunctor) {
    return function (f) {
        return function (v) {
            return ListT(Data_Functor.map(dictFunctor)(f)(v));
        };
    };
};
var takeWhile = function (dictApplicative) {
    return function (f) {
        var g = function (v) {
            if (v instanceof Yield) {
                var $98 = f(v.value0);
                if ($98) {
                    return new Yield(v.value0, Data_Functor.map(Data_Lazy.functorLazy)(takeWhile(dictApplicative)(f))(v.value1));
                };
                return Done.value;
            };
            if (v instanceof Skip) {
                return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(takeWhile(dictApplicative)(f))(v.value0));
            };
            if (v instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans line 155, column 3 - line 155, column 68: " + [ v.constructor.name ]);
        };
        return stepMap((dictApplicative.Apply0()).Functor0())(g);
    };
};
var scanl = function (dictMonad) {
    return function (f) {
        return function (b) {
            return function (l) {
                var g = function (v) {
                    var h = function (v1) {
                        if (v1 instanceof Yield) {
                            var b$prime$prime = f(v.value0)(v1.value0);
                            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(b$prime$prime, Data_Lazy.force(v1.value1)), v.value0));
                        };
                        if (v1 instanceof Skip) {
                            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0, Data_Lazy.force(v1.value0)), v.value0));
                        };
                        if (v1 instanceof Done) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match at Control.Monad.List.Trans line 249, column 5 - line 249, column 78: " + [ v1.constructor.name ]);
                    };
                    return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(h)(v.value1);
                };
                return unfold(dictMonad)(g)(new Data_Tuple.Tuple(b, l));
            };
        };
    };
};
var prepend$prime = function (dictApplicative) {
    return function (h) {
        return function (t) {
            return ListT(Control_Applicative.pure(dictApplicative)(new Yield(h, t)));
        };
    };
};
var prepend = function (dictApplicative) {
    return function (h) {
        return function (t) {
            return prepend$prime(dictApplicative)(h)(Data_Lazy.defer(Data_Function["const"](t)));
        };
    };
};
var nil = function (dictApplicative) {
    return ListT(Control_Applicative.pure(dictApplicative)(Done.value));
};
var singleton = function (dictApplicative) {
    return function (a) {
        return prepend(dictApplicative)(a)(nil(dictApplicative));
    };
};
var take = function (dictApplicative) {
    return function (v) {
        return function (fa) {
            if (v === 0) {
                return nil(dictApplicative);
            };
            var f = function (v1) {
                if (v1 instanceof Yield) {
                    return new Yield(v1.value0, Data_Functor.map(Data_Lazy.functorLazy)(take(dictApplicative)(v - 1 | 0))(v1.value1));
                };
                if (v1 instanceof Skip) {
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(take(dictApplicative)(v))(v1.value0));
                };
                if (v1 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 148, column 3 - line 148, column 47: " + [ v1.constructor.name ]);
            };
            return stepMap((dictApplicative.Apply0()).Functor0())(f)(fa);
        };
    };
};
var zipWith$prime = function (dictMonad) {
    return function (f) {
        var g = function (v) {
            return function (v1) {
                if (v1 instanceof Data_Maybe.Nothing) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(nil(dictMonad.Applicative0()));
                };
                if (v instanceof Data_Maybe.Nothing) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(nil(dictMonad.Applicative0()));
                };
                if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                    return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Function.flip(prepend$prime(dictMonad.Applicative0()))(Data_Lazy.defer(function (v2) {
                        return zipWith$prime(dictMonad)(f)(v.value0.value1)(v1.value0.value1);
                    })))(f(v.value0.value0)(v1.value0.value0));
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 261, column 3 - line 261, column 25: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        var loop = function (fa) {
            return function (fb) {
                return wrapEffect(((dictMonad.Bind1()).Apply0()).Functor0())(Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(fa))(function (v) {
                    return Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(fb))(function (v1) {
                        return g(v)(v1);
                    });
                }));
            };
        };
        return loop;
    };
};
var zipWith = function (dictMonad) {
    return function (f) {
        var g = function (a) {
            return function (b) {
                return Control_Applicative.pure(dictMonad.Applicative0())(f(a)(b));
            };
        };
        return zipWith$prime(dictMonad)(g);
    };
};
var newtypeListT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ListT);
var mapMaybe = function (dictFunctor) {
    return function (f) {
        var g = function (v) {
            if (v instanceof Yield) {
                return Data_Maybe.fromMaybe(Skip.create)(Data_Functor.map(Data_Maybe.functorMaybe)(Yield.create)(f(v.value0)))(Data_Functor.map(Data_Lazy.functorLazy)(mapMaybe(dictFunctor)(f))(v.value1));
            };
            if (v instanceof Skip) {
                return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(mapMaybe(dictFunctor)(f))(v.value0));
            };
            if (v instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans line 184, column 3 - line 184, column 72: " + [ v.constructor.name ]);
        };
        return stepMap(dictFunctor)(g);
    };
};
var iterate = function (dictMonad) {
    return function (f) {
        return function (a) {
            var g = function (x) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Maybe.Just(new Data_Tuple.Tuple(f(x), x)));
            };
            return unfold(dictMonad)(g)(a);
        };
    };
};
var repeat = function (dictMonad) {
    return iterate(dictMonad)(Control_Category.id(Control_Category.categoryFn));
};
var head = function (dictMonad) {
    return function (l) {
        return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.fst))(uncons(dictMonad)(l));
    };
};
var functorListT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        var g = function (v) {
            if (v instanceof Yield) {
                return new Yield(f(v.value0), Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(functorListT(dictFunctor))(f))(v.value1));
            };
            if (v instanceof Skip) {
                return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(functorListT(dictFunctor))(f))(v.value0));
            };
            if (v instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans line 281, column 5 - line 281, column 48: " + [ v.constructor.name ]);
        };
        return stepMap(dictFunctor)(g);
    });
};
var fromEffect = function (dictApplicative) {
    return function (fa) {
        return ListT(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Function.flip(Yield.create)(Data_Lazy.defer(function (v) {
            return nil(dictApplicative);
        })))(fa));
    };
};
var monadTransListT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return fromEffect(dictMonad.Applicative0());
});
var foldlRec$prime = function (dictMonadRec) {
    return function (f) {
        var loop = function (b) {
            return function (l) {
                var g = function (v) {
                    if (v instanceof Data_Maybe.Nothing) {
                        return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(b));
                    };
                    if (v instanceof Data_Maybe.Just) {
                        return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(f(b)(v.value0.value0))(function (b$prime) {
                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop({
                                a: b$prime,
                                b: v.value0.value1
                            }));
                        });
                    };
                    throw new Error("Failed pattern match at Control.Monad.List.Trans line 222, column 5 - line 222, column 45: " + [ v.constructor.name ]);
                };
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(uncons(dictMonadRec.Monad0())(l))(g);
            };
        };
        return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(loop);
    };
};
var runListTRec = function (dictMonadRec) {
    return foldlRec$prime(dictMonadRec)(function (v) {
        return function (v1) {
            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(Data_Unit.unit);
        };
    })(Data_Unit.unit);
};
var foldlRec = function (dictMonadRec) {
    return function (f) {
        var loop = function (b) {
            return function (l) {
                var g = function (v) {
                    if (v instanceof Data_Maybe.Nothing) {
                        return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(b));
                    };
                    if (v instanceof Data_Maybe.Just) {
                        return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop({
                            a: f(b)(v.value0.value0),
                            b: v.value0.value1
                        }));
                    };
                    throw new Error("Failed pattern match at Control.Monad.List.Trans line 240, column 7 - line 240, column 47: " + [ v.constructor.name ]);
                };
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(uncons(dictMonadRec.Monad0())(l))(g);
            };
        };
        return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(loop);
    };
};
var foldl$prime = function (dictMonad) {
    return function (f) {
        var loop = function (b) {
            return function (l) {
                var g = function (v) {
                    if (v instanceof Data_Maybe.Nothing) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(b);
                    };
                    if (v instanceof Data_Maybe.Just) {
                        return Control_Bind.bind(dictMonad.Bind1())(f(b)(v.value0.value0))(Data_Function.flip(loop)(v.value0.value1));
                    };
                    throw new Error("Failed pattern match at Control.Monad.List.Trans line 213, column 5 - line 213, column 35: " + [ v.constructor.name ]);
                };
                return Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(l))(g);
            };
        };
        return loop;
    };
};
var runListT = function (dictMonad) {
    return foldl$prime(dictMonad)(function (v) {
        return function (v1) {
            return Control_Applicative.pure(dictMonad.Applicative0())(Data_Unit.unit);
        };
    })(Data_Unit.unit);
};
var foldl = function (dictMonad) {
    return function (f) {
        var loop = function (b) {
            return function (l) {
                var g = function (v) {
                    if (v instanceof Data_Maybe.Nothing) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(b);
                    };
                    if (v instanceof Data_Maybe.Just) {
                        return loop(f(b)(v.value0.value0))(v.value0.value1);
                    };
                    throw new Error("Failed pattern match at Control.Monad.List.Trans line 230, column 5 - line 230, column 35: " + [ v.constructor.name ]);
                };
                return Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(l))(g);
            };
        };
        return loop;
    };
};
var filter = function (dictFunctor) {
    return function (f) {
        var g = function (v) {
            if (v instanceof Yield) {
                var s$prime = Data_Functor.map(Data_Lazy.functorLazy)(filter(dictFunctor)(f))(v.value1);
                var $151 = f(v.value0);
                if ($151) {
                    return new Yield(v.value0, s$prime);
                };
                return new Skip(s$prime);
            };
            if (v instanceof Skip) {
                var s$prime = Data_Functor.map(Data_Lazy.functorLazy)(filter(dictFunctor)(f))(v.value0);
                return new Skip(s$prime);
            };
            if (v instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans line 177, column 3 - line 177, column 80: " + [ v.constructor.name ]);
        };
        return stepMap(dictFunctor)(g);
    };
};
var dropWhile = function (dictApplicative) {
    return function (f) {
        var g = function (v) {
            if (v instanceof Yield) {
                var $156 = f(v.value0);
                if ($156) {
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(dropWhile(dictApplicative)(f))(v.value1));
                };
                return new Yield(v.value0, v.value1);
            };
            if (v instanceof Skip) {
                return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(dropWhile(dictApplicative)(f))(v.value0));
            };
            if (v instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans line 170, column 3 - line 170, column 70: " + [ v.constructor.name ]);
        };
        return stepMap((dictApplicative.Apply0()).Functor0())(g);
    };
};
var drop = function (dictApplicative) {
    return function (v) {
        return function (fa) {
            if (v === 0) {
                return fa;
            };
            var f = function (v1) {
                if (v1 instanceof Yield) {
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(drop(dictApplicative)(v - 1 | 0))(v1.value1));
                };
                if (v1 instanceof Skip) {
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(drop(dictApplicative)(v))(v1.value0));
                };
                if (v1 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 163, column 3 - line 163, column 44: " + [ v1.constructor.name ]);
            };
            return stepMap((dictApplicative.Apply0()).Functor0())(f)(fa);
        };
    };
};
var cons = function (dictApplicative) {
    return function (lh) {
        return function (t) {
            return ListT(Control_Applicative.pure(dictApplicative)(new Yield(Data_Lazy.force(lh), t)));
        };
    };
};
var unfoldableListT = function (dictMonad) {
    return new Data_Unfoldable.Unfoldable(function (f) {
        return function (b) {
            var go = function (v) {
                if (v instanceof Data_Maybe.Nothing) {
                    return nil(dictMonad.Applicative0());
                };
                if (v instanceof Data_Maybe.Just) {
                    return cons(dictMonad.Applicative0())(Control_Applicative.pure(Data_Lazy.applicativeLazy)(v.value0.value0))(Data_Lazy.defer(function (v1) {
                        return go(f(v.value0.value1));
                    }));
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 287, column 11 - line 287, column 27: " + [ v.constructor.name ]);
            };
            return go(f(b));
        };
    });
};
var semigroupListT = function (dictApplicative) {
    return new Data_Semigroup.Semigroup(concat(dictApplicative));
};
var concat = function (dictApplicative) {
    return function (x) {
        return function (y) {
            var f = function (v) {
                if (v instanceof Yield) {
                    return new Yield(v.value0, Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
                        return Data_Semigroup.append(semigroupListT(dictApplicative))(v1)(y);
                    })(v.value1));
                };
                if (v instanceof Skip) {
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
                        return Data_Semigroup.append(semigroupListT(dictApplicative))(v1)(y);
                    })(v.value0));
                };
                if (v instanceof Done) {
                    return new Skip(Data_Lazy.defer(Data_Function["const"](y)));
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 107, column 3 - line 107, column 43: " + [ v.constructor.name ]);
            };
            return stepMap((dictApplicative.Apply0()).Functor0())(f)(x);
        };
    };
};
var monoidListT = function (dictApplicative) {
    return new Data_Monoid.Monoid(function () {
        return semigroupListT(dictApplicative);
    }, nil(dictApplicative));
};
var catMaybes = function (dictFunctor) {
    return mapMaybe(dictFunctor)(Control_Category.id(Control_Category.categoryFn));
};
var monadListT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeListT(dictMonad);
    }, function () {
        return bindListT(dictMonad);
    });
};
var bindListT = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyListT(dictMonad);
    }, function (fa) {
        return function (f) {
            var g = function (v) {
                if (v instanceof Yield) {
                    var h = function (s$prime) {
                        return Data_Semigroup.append(semigroupListT(dictMonad.Applicative0()))(f(v.value0))(Control_Bind.bind(bindListT(dictMonad))(s$prime)(f));
                    };
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(h)(v.value1));
                };
                if (v instanceof Skip) {
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
                        return Control_Bind.bind(bindListT(dictMonad))(v1)(f);
                    })(v.value0));
                };
                if (v instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 298, column 5 - line 300, column 31: " + [ v.constructor.name ]);
            };
            return stepMap(((dictMonad.Bind1()).Apply0()).Functor0())(g)(fa);
        };
    });
};
var applyListT = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorListT(((dictMonad.Bind1()).Apply0()).Functor0());
    }, Control_Monad.ap(monadListT(dictMonad)));
};
var applicativeListT = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyListT(dictMonad);
    }, singleton(dictMonad.Applicative0()));
};
var monadEffListT = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadListT(dictMonadEff.Monad0());
    }, function ($179) {
        return Control_Monad_Trans_Class.lift(monadTransListT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($179));
    });
};
var altListT = function (dictApplicative) {
    return new Control_Alt.Alt(function () {
        return functorListT((dictApplicative.Apply0()).Functor0());
    }, concat(dictApplicative));
};
var plusListT = function (dictMonad) {
    return new Control_Plus.Plus(function () {
        return altListT(dictMonad.Applicative0());
    }, nil(dictMonad.Applicative0()));
};
var alternativeListT = function (dictMonad) {
    return new Control_Alternative.Alternative(function () {
        return applicativeListT(dictMonad);
    }, function () {
        return plusListT(dictMonad);
    });
};
var monadZeroListT = function (dictMonad) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeListT(dictMonad);
    }, function () {
        return monadListT(dictMonad);
    });
};
var monadPlusListT = function (dictMonad) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroListT(dictMonad);
    });
};
module.exports = {
    ListT: ListT,
    Yield: Yield,
    Skip: Skip,
    Done: Done,
    catMaybes: catMaybes,
    cons: cons,
    drop: drop,
    dropWhile: dropWhile,
    filter: filter,
    foldl: foldl,
    foldlRec: foldlRec,
    "foldl'": foldl$prime,
    "foldlRec'": foldlRec$prime,
    fromEffect: fromEffect,
    head: head,
    iterate: iterate,
    mapMaybe: mapMaybe,
    nil: nil,
    prepend: prepend,
    "prepend'": prepend$prime,
    repeat: repeat,
    runListT: runListT,
    runListTRec: runListTRec,
    scanl: scanl,
    singleton: singleton,
    tail: tail,
    take: take,
    takeWhile: takeWhile,
    uncons: uncons,
    unfold: unfold,
    wrapEffect: wrapEffect,
    wrapLazy: wrapLazy,
    zipWith: zipWith,
    "zipWith'": zipWith$prime,
    newtypeListT: newtypeListT,
    semigroupListT: semigroupListT,
    monoidListT: monoidListT,
    functorListT: functorListT,
    unfoldableListT: unfoldableListT,
    applyListT: applyListT,
    applicativeListT: applicativeListT,
    bindListT: bindListT,
    monadListT: monadListT,
    monadTransListT: monadTransListT,
    altListT: altListT,
    plusListT: plusListT,
    alternativeListT: alternativeListT,
    monadZeroListT: monadZeroListT,
    monadPlusListT: monadPlusListT,
    monadEffListT: monadEffListT
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Monad":60,"../Control.Monad.Eff.Class":27,"../Control.Monad.Rec.Class":51,"../Control.Monad.Trans.Class":57,"../Control.MonadPlus":61,"../Control.MonadZero":62,"../Control.Plus":65,"../Control.Semigroupoid":66,"../Data.Function":172,"../Data.Functor":180,"../Data.Lazy":197,"../Data.Maybe":234,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Tuple":298,"../Data.Unfoldable":300,"../Data.Unit":302,"../Prelude":358}],47:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var MaybeT = function (x) {
    return x;
};
var runMaybeT = function (v) {
    return v;
};
var newtypeMaybeT = new Data_Newtype.Newtype(function (n) {
    return n;
}, MaybeT);
var monadTransMaybeT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function ($75) {
        return MaybeT(Control_Monad.liftM1(dictMonad)(Data_Maybe.Just.create)($75));
    };
});
var mapMaybeT = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorMaybeT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v);
        };
    });
};
var monadMaybeT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeMaybeT(dictMonad);
    }, function () {
        return bindMaybeT(dictMonad);
    });
};
var bindMaybeT = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyMaybeT(dictMonad);
    }, function (v) {
        return function (f) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
                if (v1 instanceof Data_Maybe.Nothing) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value);
                };
                if (v1 instanceof Data_Maybe.Just) {
                    var v2 = f(v1.value0);
                    return v2;
                };
                throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 55, column 11 - line 57, column 42: " + [ v1.constructor.name ]);
            });
        };
    });
};
var applyMaybeT = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorMaybeT(((dictMonad.Bind1()).Apply0()).Functor0());
    }, Control_Monad.ap(monadMaybeT(dictMonad)));
};
var applicativeMaybeT = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyMaybeT(dictMonad);
    }, function ($76) {
        return MaybeT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Just.create($76)));
    });
};
var monadAskMaybeT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadMaybeT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderMaybeT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskMaybeT(dictMonadReader.MonadAsk0());
    }, function (f) {
        return mapMaybeT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
};
var monadContMaybeT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadMaybeT(dictMonadCont.Monad0());
    }, function (f) {
        return MaybeT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
            var v = f(function (a) {
                return MaybeT(c(new Data_Maybe.Just(a)));
            });
            return v;
        }));
    });
};
var monadEffMaybe = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadMaybeT(dictMonadEff.Monad0());
    }, function ($77) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($77));
    });
};
var monadRecMaybeT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadMaybeT(dictMonadRec.Monad0());
    }, function (f) {
        return function ($78) {
            return MaybeT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
                    var v = f(a);
                    return v;
                })())(function (m$prime) {
                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                        if (m$prime instanceof Data_Maybe.Nothing) {
                            return new Control_Monad_Rec_Class.Done(Data_Maybe.Nothing.value);
                        };
                        if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
                            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
                        };
                        if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
                            return new Control_Monad_Rec_Class.Done(new Data_Maybe.Just(m$prime.value0.value0));
                        };
                        throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 85, column 16 - line 88, column 43: " + [ m$prime.constructor.name ]);
                    })());
                });
            })($78));
        };
    });
};
var monadStateMaybeT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadMaybeT(dictMonadState.Monad0());
    }, function (f) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
};
var monadTellMaybeT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadMaybeT(dictMonadTell.Monad0());
    }, function ($79) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($79));
    });
};
var monadWriterMaybeT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellMaybeT(dictMonadWriter.MonadTell0());
    }, mapMaybeT(function (m) {
        return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(Data_Functor.map(Data_Maybe.functorMaybe)(function (r) {
                return new Data_Tuple.Tuple(r, v.value1);
            })(v.value0));
        });
    }), mapMaybeT(function (m) {
        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m)(function (v) {
            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())((function () {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Control_Category.id(Control_Category.categoryFn));
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Tuple.Tuple(new Data_Maybe.Just(v.value0.value0), v.value0.value1);
                };
                throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 122, column 10 - line 124, column 42: " + [ v.constructor.name ]);
            })());
        }));
    }));
};
var monadThrowMaybeT = function (dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
        return monadMaybeT(dictMonadThrow.Monad0());
    }, function (e) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
    });
};
var monadErrorMaybeT = function (dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadThrowMaybeT(dictMonadError.MonadThrow0());
    }, function (v) {
        return function (h) {
            return MaybeT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (a) {
                var v1 = h(a);
                return v1;
            }));
        };
    });
};
var altMaybeT = function (dictMonad) {
    return new Control_Alt.Alt(function () {
        return functorMaybeT(((dictMonad.Bind1()).Apply0()).Functor0());
    }, function (v) {
        return function (v1) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v2) {
                if (v2 instanceof Data_Maybe.Nothing) {
                    return v1;
                };
                return Control_Applicative.pure(dictMonad.Applicative0())(v2);
            });
        };
    });
};
var plusMaybeT = function (dictMonad) {
    return new Control_Plus.Plus(function () {
        return altMaybeT(dictMonad);
    }, Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value));
};
var alternativeMaybeT = function (dictMonad) {
    return new Control_Alternative.Alternative(function () {
        return applicativeMaybeT(dictMonad);
    }, function () {
        return plusMaybeT(dictMonad);
    });
};
var monadZeroMaybeT = function (dictMonad) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeMaybeT(dictMonad);
    }, function () {
        return monadMaybeT(dictMonad);
    });
};
var monadPlusMaybeT = function (dictMonad) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroMaybeT(dictMonad);
    });
};
module.exports = {
    MaybeT: MaybeT,
    runMaybeT: runMaybeT,
    mapMaybeT: mapMaybeT,
    newtypeMaybeT: newtypeMaybeT,
    functorMaybeT: functorMaybeT,
    applyMaybeT: applyMaybeT,
    applicativeMaybeT: applicativeMaybeT,
    bindMaybeT: bindMaybeT,
    monadMaybeT: monadMaybeT,
    monadTransMaybeT: monadTransMaybeT,
    altMaybeT: altMaybeT,
    plusMaybeT: plusMaybeT,
    alternativeMaybeT: alternativeMaybeT,
    monadPlusMaybeT: monadPlusMaybeT,
    monadZeroMaybeT: monadZeroMaybeT,
    monadRecMaybeT: monadRecMaybeT,
    monadEffMaybe: monadEffMaybe,
    monadContMaybeT: monadContMaybeT,
    monadThrowMaybeT: monadThrowMaybeT,
    monadErrorMaybeT: monadErrorMaybeT,
    monadAskMaybeT: monadAskMaybeT,
    monadReaderMaybeT: monadReaderMaybeT,
    monadStateMaybeT: monadStateMaybeT,
    monadTellMaybeT: monadTellMaybeT,
    monadWriterMaybeT: monadWriterMaybeT
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Monad":60,"../Control.Monad.Cont.Class":23,"../Control.Monad.Eff.Class":27,"../Control.Monad.Error.Class":40,"../Control.Monad.Reader.Class":49,"../Control.Monad.Rec.Class":51,"../Control.Monad.State.Class":54,"../Control.Monad.Trans.Class":57,"../Control.Monad.Writer.Class":58,"../Control.MonadPlus":61,"../Control.MonadZero":62,"../Control.Plus":65,"../Control.Semigroupoid":66,"../Data.Function":172,"../Data.Functor":180,"../Data.Maybe":234,"../Data.Newtype":244,"../Data.Tuple":298,"../Prelude":358}],48:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var RWSResult = (function () {
    function RWSResult(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    RWSResult.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new RWSResult(value0, value1, value2);
            };
        };
    };
    return RWSResult;
})();
var RWST = function (x) {
    return x;
};
var withRWST = function (f) {
    return function (m) {
        return function (r) {
            return function (s) {
                return Data_Tuple.uncurry(m)(f(r)(s));
            };
        };
    };
};
var runRWST = function (v) {
    return v;
};
var newtypeRWST = new Data_Newtype.Newtype(function (n) {
    return n;
}, RWST);
var monadTransRWST = function (dictMonoid) {
    return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
        return function (m) {
            return function (v) {
                return function (s) {
                    return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
                    });
                };
            };
        };
    });
};
var mapRWST = function (f) {
    return function (v) {
        return function (r) {
            return function (s) {
                return f(v(r)(s));
            };
        };
    };
};
var lazyRWST = new Control_Lazy.Lazy(function (f) {
    return function (r) {
        return function (s) {
            var v = f(Data_Unit.unit);
            return v(r)(s);
        };
    };
});
var functorRWST = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return function (r) {
                return function (s) {
                    return Data_Functor.map(dictFunctor)(function (v1) {
                        return new RWSResult(v1.value0, f(v1.value1), v1.value2);
                    })(v(r)(s));
                };
            };
        };
    });
};
var execRWST = function (dictMonad) {
    return function (v) {
        return function (r) {
            return function (s) {
                return Control_Bind.bind(dictMonad.Bind1())(v(r)(s))(function (v1) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value2));
                });
            };
        };
    };
};
var evalRWST = function (dictMonad) {
    return function (v) {
        return function (r) {
            return function (s) {
                return Control_Bind.bind(dictMonad.Bind1())(v(r)(s))(function (v1) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value1, v1.value2));
                });
            };
        };
    };
};
var applyRWST = function (dictBind) {
    return function (dictMonoid) {
        return new Control_Apply.Apply(function () {
            return functorRWST((dictBind.Apply0()).Functor0());
        }, function (v) {
            return function (v1) {
                return function (r) {
                    return function (s) {
                        return Control_Bind.bind(dictBind)(v(r)(s))(function (v2) {
                            return Data_Functor.mapFlipped((dictBind.Apply0()).Functor0())(v1(r)(v2.value0))(function (v3) {
                                return new RWSResult(v3.value0, v2.value1(v3.value1), Data_Semigroup.append(dictMonoid.Semigroup0())(v2.value2)(v3.value2));
                            });
                        });
                    };
                };
            };
        });
    };
};
var bindRWST = function (dictBind) {
    return function (dictMonoid) {
        return new Control_Bind.Bind(function () {
            return applyRWST(dictBind)(dictMonoid);
        }, function (v) {
            return function (f) {
                return function (r) {
                    return function (s) {
                        return Control_Bind.bind(dictBind)(v(r)(s))(function (v1) {
                            var v2 = f(v1.value1);
                            return Data_Functor.mapFlipped((dictBind.Apply0()).Functor0())(v2(r)(v1.value0))(function (v3) {
                                return new RWSResult(v3.value0, v3.value1, Data_Semigroup.append(dictMonoid.Semigroup0())(v1.value2)(v3.value2));
                            });
                        });
                    };
                };
            };
        });
    };
};
var applicativeRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Applicative.Applicative(function () {
            return applyRWST(dictMonad.Bind1())(dictMonoid);
        }, function (a) {
            return function (v) {
                return function (s) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
                };
            };
        });
    };
};
var monadRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Monad.Monad(function () {
            return applicativeRWST(dictMonad)(dictMonoid);
        }, function () {
            return bindRWST(dictMonad.Bind1())(dictMonoid);
        });
    };
};
var monadAskRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Monad_Reader_Class.MonadAsk(function () {
            return monadRWST(dictMonad)(dictMonoid);
        }, function (r) {
            return function (s) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, r, Data_Monoid.mempty(dictMonoid)));
            };
        });
    };
};
var monadReaderRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Monad_Reader_Class.MonadReader(function () {
            return monadAskRWST(dictMonad)(dictMonoid);
        }, function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return m(f(r))(s);
                    };
                };
            };
        });
    };
};
var monadEffRWS = function (dictMonoid) {
    return function (dictMonadEff) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadRWST(dictMonadEff.Monad0())(dictMonoid);
        }, function ($155) {
            return Control_Monad_Trans_Class.lift(monadTransRWST(dictMonoid))(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($155));
        });
    };
};
var monadRecRWST = function (dictMonadRec) {
    return function (dictMonoid) {
        return new Control_Monad_Rec_Class.MonadRec(function () {
            return monadRWST(dictMonadRec.Monad0())(dictMonoid);
        }, function (k) {
            return function (a) {
                var k$prime = function (r) {
                    return function (v) {
                        var v1 = k(v.value1);
                        return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(v1(r)(v.value0))(function (v2) {
                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                                if (v2.value1 instanceof Control_Monad_Rec_Class.Loop) {
                                    return new Control_Monad_Rec_Class.Loop(new RWSResult(v2.value0, v2.value1.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value2)(v2.value2)));
                                };
                                if (v2.value1 instanceof Control_Monad_Rec_Class.Done) {
                                    return new Control_Monad_Rec_Class.Done(new RWSResult(v2.value0, v2.value1.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value2)(v2.value2)));
                                };
                                throw new Error("Failed pattern match at Control.Monad.RWS.Trans line 129, column 16 - line 131, column 68: " + [ v2.value1.constructor.name ]);
                            })());
                        });
                    };
                };
                return function (r) {
                    return function (s) {
                        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
                    };
                };
            };
        });
    };
};
var monadStateRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Monad_State_Class.MonadState(function () {
            return monadRWST(dictMonad)(dictMonoid);
        }, function (f) {
            return function (v) {
                return function (s) {
                    var v1 = f(s);
                    return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(v1.value1, v1.value0, Data_Monoid.mempty(dictMonoid)));
                };
            };
        });
    };
};
var monadTellRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Monad_Writer_Class.MonadTell(function () {
            return monadRWST(dictMonad)(dictMonoid);
        }, function (w) {
            return function (v) {
                return function (s) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, Data_Unit.unit, w));
                };
            };
        });
    };
};
var monadWriterRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Monad_Writer_Class.MonadWriter(function () {
            return monadTellRWST(dictMonad)(dictMonoid);
        }, function (m) {
            return function (r) {
                return function (s) {
                    return Control_Bind.bind(dictMonad.Bind1())(m(r)(s))(function (v) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(v.value0, new Data_Tuple.Tuple(v.value1, v.value2), v.value2));
                    });
                };
            };
        }, function (m) {
            return function (r) {
                return function (s) {
                    return Control_Bind.bind(dictMonad.Bind1())(m(r)(s))(function (v) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(v.value0, v.value1.value0, v.value1.value1(v.value2)));
                    });
                };
            };
        });
    };
};
var monadThrowRWST = function (dictMonadThrow) {
    return function (dictMonoid) {
        return new Control_Monad_Error_Class.MonadThrow(function () {
            return monadRWST(dictMonadThrow.Monad0())(dictMonoid);
        }, function (e) {
            return Control_Monad_Trans_Class.lift(monadTransRWST(dictMonoid))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
        });
    };
};
var monadErrorRWST = function (dictMonadError) {
    return function (dictMonoid) {
        return new Control_Monad_Error_Class.MonadError(function () {
            return monadThrowRWST(dictMonadError.MonadThrow0())(dictMonoid);
        }, function (m) {
            return function (h) {
                return RWST(function (r) {
                    return function (s) {
                        return Control_Monad_Error_Class.catchError(dictMonadError)(m(r)(s))(function (e) {
                            var v = h(e);
                            return v(r)(s);
                        });
                    };
                });
            };
        });
    };
};
var altRWST = function (dictAlt) {
    return new Control_Alt.Alt(function () {
        return functorRWST(dictAlt.Functor0());
    }, function (v) {
        return function (v1) {
            return RWST(function (r) {
                return function (s) {
                    return Control_Alt.alt(dictAlt)(v(r)(s))(v1(r)(s));
                };
            });
        };
    });
};
var plusRWST = function (dictPlus) {
    return new Control_Plus.Plus(function () {
        return altRWST(dictPlus.Alt0());
    }, function (v) {
        return function (v1) {
            return Control_Plus.empty(dictPlus);
        };
    });
};
var alternativeRWST = function (dictMonoid) {
    return function (dictAlternative) {
        return function (dictMonad) {
            return new Control_Alternative.Alternative(function () {
                return applicativeRWST(dictMonad)(dictMonoid);
            }, function () {
                return plusRWST(dictAlternative.Plus1());
            });
        };
    };
};
module.exports = {
    RWSResult: RWSResult,
    RWST: RWST,
    runRWST: runRWST,
    evalRWST: evalRWST,
    execRWST: execRWST,
    mapRWST: mapRWST,
    withRWST: withRWST,
    newtypeRWST: newtypeRWST,
    functorRWST: functorRWST,
    applyRWST: applyRWST,
    altRWST: altRWST,
    alternativeRWST: alternativeRWST,
    bindRWST: bindRWST,
    applicativeRWST: applicativeRWST,
    monadRWST: monadRWST,
    monadTransRWST: monadTransRWST,
    lazyRWST: lazyRWST,
    monadEffRWS: monadEffRWS,
    monadAskRWST: monadAskRWST,
    monadReaderRWST: monadReaderRWST,
    monadStateRWST: monadStateRWST,
    monadTellRWST: monadTellRWST,
    monadWriterRWST: monadWriterRWST,
    monadThrowRWST: monadThrowRWST,
    monadErrorRWST: monadErrorRWST,
    monadRecRWST: monadRecRWST,
    plusRWST: plusRWST
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Lazy":17,"../Control.Monad":60,"../Control.Monad.Eff.Class":27,"../Control.Monad.Error.Class":40,"../Control.Monad.Reader.Class":49,"../Control.Monad.Rec.Class":51,"../Control.Monad.State.Class":54,"../Control.Monad.Trans.Class":57,"../Control.Monad.Writer.Class":58,"../Control.Plus":65,"../Control.Semigroupoid":66,"../Data.Function":172,"../Data.Functor":180,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Semigroup":271,"../Data.Tuple":298,"../Data.Unit":302,"../Prelude":358}],49:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor = require("../Data.Functor");
var Prelude = require("../Prelude");
var MonadAsk = function (Monad0, ask) {
    this.Monad0 = Monad0;
    this.ask = ask;
};
var MonadReader = function (MonadAsk0, local) {
    this.MonadAsk0 = MonadAsk0;
    this.local = local;
};
var monadAskFun = new MonadAsk(function () {
    return Control_Monad.monadFn;
}, Control_Category.id(Control_Category.categoryFn));
var monadReaderFun = new MonadReader(function () {
    return monadAskFun;
}, Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn));
var local = function (dict) {
    return dict.local;
};
var ask = function (dict) {
    return dict.ask;
};
var asks = function (dictMonadAsk) {
    return function (f) {
        return Data_Functor.map((((dictMonadAsk.Monad0()).Bind1()).Apply0()).Functor0())(f)(ask(dictMonadAsk));
    };
};
module.exports = {
    ask: ask,
    local: local,
    MonadAsk: MonadAsk,
    asks: asks,
    MonadReader: MonadReader,
    monadAskFun: monadAskFun,
    monadReaderFun: monadReaderFun
};

},{"../Control.Category":12,"../Control.Monad":60,"../Control.Semigroupoid":66,"../Data.Functor":180,"../Prelude":358}],50:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Distributive = require("../Data.Distributive");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Prelude = require("../Prelude");
var ReaderT = function (x) {
    return x;
};
var withReaderT = function (f) {
    return function (v) {
        return function ($66) {
            return v(f($66));
        };
    };
};
var runReaderT = function (v) {
    return v;
};
var newtypeReaderT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ReaderT);
var monadTransReaderT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function ($67) {
        return ReaderT(Data_Function["const"]($67));
    };
});
var mapReaderT = function (f) {
    return function (v) {
        return function ($68) {
            return f(v($68));
        };
    };
};
var functorReaderT = function (dictFunctor) {
    return new Data_Functor.Functor(function ($69) {
        return mapReaderT(Data_Functor.map(dictFunctor)($69));
    });
};
var distributiveReaderT = function (dictDistributive) {
    return new Data_Distributive.Distributive(function () {
        return functorReaderT(dictDistributive.Functor0());
    }, function (dictFunctor) {
        return function (f) {
            return function ($70) {
                return Data_Distributive.distribute(distributiveReaderT(dictDistributive))(dictFunctor)(Data_Functor.map(dictFunctor)(f)($70));
            };
        };
    }, function (dictFunctor) {
        return function (a) {
            return function (e) {
                return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (r) {
                    return r(e);
                })(a);
            };
        };
    });
};
var applyReaderT = function (dictApply) {
    return new Control_Apply.Apply(function () {
        return functorReaderT(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return function (r) {
                return Control_Apply.apply(dictApply)(v(r))(v1(r));
            };
        };
    });
};
var bindReaderT = function (dictBind) {
    return new Control_Bind.Bind(function () {
        return applyReaderT(dictBind.Apply0());
    }, function (v) {
        return function (k) {
            return function (r) {
                return Control_Bind.bind(dictBind)(v(r))(function (a) {
                    var v1 = k(a);
                    return v1(r);
                });
            };
        };
    });
};
var semigroupReaderT = function (dictApply) {
    return function (dictSemigroup) {
        return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyReaderT(dictApply))(Data_Semigroup.append(dictSemigroup)));
    };
};
var applicativeReaderT = function (dictApplicative) {
    return new Control_Applicative.Applicative(function () {
        return applyReaderT(dictApplicative.Apply0());
    }, function ($71) {
        return ReaderT(Data_Function["const"](Control_Applicative.pure(dictApplicative)($71)));
    });
};
var monadReaderT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeReaderT(dictMonad.Applicative0());
    }, function () {
        return bindReaderT(dictMonad.Bind1());
    });
};
var monadAskReaderT = function (dictMonad) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadReaderT(dictMonad);
    }, Control_Applicative.pure(dictMonad.Applicative0()));
};
var monadReaderReaderT = function (dictMonad) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskReaderT(dictMonad);
    }, withReaderT);
};
var monadContReaderT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadReaderT(dictMonadCont.Monad0());
    }, function (f) {
        return function (r) {
            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
                var v = f(function ($72) {
                    return ReaderT(Data_Function["const"](c($72)));
                });
                return v(r);
            });
        };
    });
};
var monadEffReader = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadReaderT(dictMonadEff.Monad0());
    }, function ($73) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($73));
    });
};
var monadRecReaderT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadReaderT(dictMonadRec.Monad0());
    }, function (k) {
        return function (a) {
            var k$prime = function (r) {
                return function (a$prime) {
                    var v = k(a$prime);
                    return Control_Bind.bindFlipped((dictMonadRec.Monad0()).Bind1())(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0()))(v(r));
                };
            };
            return function (r) {
                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(a);
            };
        };
    });
};
var monadStateReaderT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadReaderT(dictMonadState.Monad0());
    }, function ($74) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)($74));
    });
};
var monadTellReaderT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadReaderT(dictMonadTell.Monad0());
    }, function ($75) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($75));
    });
};
var monadWriterReaderT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellReaderT(dictMonadWriter.MonadTell0());
    }, mapReaderT(Control_Monad_Writer_Class.listen(dictMonadWriter)), mapReaderT(Control_Monad_Writer_Class.pass(dictMonadWriter)));
};
var monadThrowReaderT = function (dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
        return monadReaderT(dictMonadThrow.Monad0());
    }, function ($76) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)($76));
    });
};
var monadErrorReaderT = function (dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadThrowReaderT(dictMonadError.MonadThrow0());
    }, function (v) {
        return function (h) {
            return function (r) {
                return Control_Monad_Error_Class.catchError(dictMonadError)(v(r))(function (e) {
                    var v1 = h(e);
                    return v1(r);
                });
            };
        };
    });
};
var monoidReaderT = function (dictApplicative) {
    return function (dictMonoid) {
        return new Data_Monoid.Monoid(function () {
            return semigroupReaderT(dictApplicative.Apply0())(dictMonoid.Semigroup0());
        }, Control_Applicative.pure(applicativeReaderT(dictApplicative))(Data_Monoid.mempty(dictMonoid)));
    };
};
var altReaderT = function (dictAlt) {
    return new Control_Alt.Alt(function () {
        return functorReaderT(dictAlt.Functor0());
    }, function (v) {
        return function (v1) {
            return function (r) {
                return Control_Alt.alt(dictAlt)(v(r))(v1(r));
            };
        };
    });
};
var plusReaderT = function (dictPlus) {
    return new Control_Plus.Plus(function () {
        return altReaderT(dictPlus.Alt0());
    }, Data_Function["const"](Control_Plus.empty(dictPlus)));
};
var alternativeReaderT = function (dictAlternative) {
    return new Control_Alternative.Alternative(function () {
        return applicativeReaderT(dictAlternative.Applicative0());
    }, function () {
        return plusReaderT(dictAlternative.Plus1());
    });
};
var monadZeroReaderT = function (dictMonadZero) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeReaderT(dictMonadZero.Alternative1());
    }, function () {
        return monadReaderT(dictMonadZero.Monad0());
    });
};
var monadPlusReaderT = function (dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroReaderT(dictMonadPlus.MonadZero0());
    });
};
module.exports = {
    ReaderT: ReaderT,
    runReaderT: runReaderT,
    withReaderT: withReaderT,
    mapReaderT: mapReaderT,
    newtypeReaderT: newtypeReaderT,
    functorReaderT: functorReaderT,
    applyReaderT: applyReaderT,
    applicativeReaderT: applicativeReaderT,
    altReaderT: altReaderT,
    plusReaderT: plusReaderT,
    alternativeReaderT: alternativeReaderT,
    bindReaderT: bindReaderT,
    monadReaderT: monadReaderT,
    monadZeroReaderT: monadZeroReaderT,
    semigroupReaderT: semigroupReaderT,
    monoidReaderT: monoidReaderT,
    monadPlusReaderT: monadPlusReaderT,
    monadTransReaderT: monadTransReaderT,
    monadEffReader: monadEffReader,
    monadContReaderT: monadContReaderT,
    monadThrowReaderT: monadThrowReaderT,
    monadErrorReaderT: monadErrorReaderT,
    monadAskReaderT: monadAskReaderT,
    monadReaderReaderT: monadReaderReaderT,
    monadStateReaderT: monadStateReaderT,
    monadTellReaderT: monadTellReaderT,
    monadWriterReaderT: monadWriterReaderT,
    distributiveReaderT: distributiveReaderT,
    monadRecReaderT: monadRecReaderT
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Monad":60,"../Control.Monad.Cont.Class":23,"../Control.Monad.Eff.Class":27,"../Control.Monad.Error.Class":40,"../Control.Monad.Reader.Class":49,"../Control.Monad.Rec.Class":51,"../Control.Monad.State.Class":54,"../Control.Monad.Trans.Class":57,"../Control.Monad.Writer.Class":58,"../Control.MonadPlus":61,"../Control.MonadZero":62,"../Control.Plus":65,"../Control.Semigroupoid":66,"../Data.Distributive":151,"../Data.Function":172,"../Data.Functor":180,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Semigroup":271,"../Prelude":358}],51:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Unsafe = require("../Control.Monad.Eff.Unsafe");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Data_Maybe = require("../Data.Maybe");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Loop = (function () {
    function Loop(value0) {
        this.value0 = value0;
    };
    Loop.create = function (value0) {
        return new Loop(value0);
    };
    return Loop;
})();
var Done = (function () {
    function Done(value0) {
        this.value0 = value0;
    };
    Done.create = function (value0) {
        return new Done(value0);
    };
    return Done;
})();
var MonadRec = function (Monad0, tailRecM) {
    this.Monad0 = Monad0;
    this.tailRecM = tailRecM;
};
var tailRecM = function (dict) {
    return dict.tailRecM;
};
var tailRecM2 = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (b) {
                return tailRecM(dictMonadRec)(function (o) {
                    return f(o.a)(o.b);
                })({
                    a: a,
                    b: b
                });
            };
        };
    };
};
var tailRecM3 = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return tailRecM(dictMonadRec)(function (o) {
                        return f(o.a)(o.b)(o.c);
                    })({
                        a: a,
                        b: b,
                        c: c
                    });
                };
            };
        };
    };
};
var tailRecEff = function (f) {
    return function (a) {
        var fromDone = function (v) {
            var __unused = function (dictPartial1) {
                return function ($dollar16) {
                    return $dollar16;
                };
            };
            return __unused()((function () {
                if (v instanceof Done) {
                    return v.value0;
                };
                throw new Error("Failed pattern match at Control.Monad.Rec.Class line 141, column 28 - line 141, column 42: " + [ v.constructor.name ]);
            })());
        };
        var f$prime = function ($52) {
            return Control_Monad_Eff_Unsafe.unsafeCoerceEff(f($52));
        };
        return function __do() {
            var v = Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Control_Monad_ST.newSTRef)(f$prime(a))();
            (function () {
                while (!(function __do() {
                    var v1 = v.value;
                    if (v1 instanceof Loop) {
                        var v2 = f$prime(v1.value0)();
                        var v3 = v.value = v2;
                        return false;
                    };
                    if (v1 instanceof Done) {
                        return true;
                    };
                    throw new Error("Failed pattern match at Control.Monad.Rec.Class line 130, column 5 - line 135, column 26: " + [ v1.constructor.name ]);
                })()) {

                };
                return {};
            })();
            return Data_Functor.map(Control_Monad_Eff.functorEff)(fromDone)(Control_Monad_ST.readSTRef(v))();
        };
    };
};
var tailRec = function (f) {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Loop) {
                $copy_v = f(v.value0);
                return;
            };
            if (v instanceof Done) {
                $tco_done = true;
                return v.value0;
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 96, column 3 - line 96, column 25: " + [ v.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return function ($53) {
        return go(f($53));
    };
};
var monadRecMaybe = new MonadRec(function () {
    return Data_Maybe.monadMaybe;
}, function (f) {
    return function (a0) {
        var g = function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return new Done(Data_Maybe.Nothing.value);
            };
            if (v instanceof Data_Maybe.Just && v.value0 instanceof Loop) {
                return new Loop(f(v.value0.value0));
            };
            if (v instanceof Data_Maybe.Just && v.value0 instanceof Done) {
                return new Done(new Data_Maybe.Just(v.value0.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 120, column 7 - line 120, column 31: " + [ v.constructor.name ]);
        };
        return tailRec(g)(f(a0));
    };
});
var monadRecIdentity = new MonadRec(function () {
    return Data_Identity.monadIdentity;
}, function (f) {
    var runIdentity = function (v) {
        return v;
    };
    return function ($54) {
        return Data_Identity.Identity(tailRec(function ($55) {
            return runIdentity(f($55));
        })($54));
    };
});
var monadRecFunction = new MonadRec(function () {
    return Control_Monad.monadFn;
}, function (f) {
    return function (a0) {
        return function (e) {
            return tailRec(function (a) {
                return f(a)(e);
            })(a0);
        };
    };
});
var monadRecEither = new MonadRec(function () {
    return Data_Either.monadEither;
}, function (f) {
    return function (a0) {
        var g = function (v) {
            if (v instanceof Data_Either.Left) {
                return new Done(new Data_Either.Left(v.value0));
            };
            if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
                return new Loop(f(v.value0.value0));
            };
            if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
                return new Done(new Data_Either.Right(v.value0.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 112, column 7 - line 112, column 33: " + [ v.constructor.name ]);
        };
        return tailRec(g)(f(a0));
    };
});
var monadRecEff = new MonadRec(function () {
    return Control_Monad_Eff.monadEff;
}, tailRecEff);
var functorStep = new Data_Functor.Functor(function (f) {
    return function (v) {
        if (v instanceof Loop) {
            return new Loop(v.value0);
        };
        if (v instanceof Done) {
            return new Done(f(v.value0));
        };
        throw new Error("Failed pattern match at Control.Monad.Rec.Class line 28, column 1 - line 28, column 41: " + [ f.constructor.name, v.constructor.name ]);
    };
});
var forever = function (dictMonadRec) {
    return function (ma) {
        return tailRecM(dictMonadRec)(function (u) {
            return Data_Functor.voidRight((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(new Loop(u))(ma);
        })(Data_Unit.unit);
    };
};
var bifunctorStep = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Loop) {
                return new Loop(v(v2.value0));
            };
            if (v2 instanceof Done) {
                return new Done(v1(v2.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 32, column 1 - line 32, column 41: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
});
module.exports = {
    Loop: Loop,
    Done: Done,
    MonadRec: MonadRec,
    tailRec: tailRec,
    tailRecM: tailRecM,
    tailRecM2: tailRecM2,
    tailRecM3: tailRecM3,
    forever: forever,
    functorStep: functorStep,
    bifunctorStep: bifunctorStep,
    monadRecIdentity: monadRecIdentity,
    monadRecEff: monadRecEff,
    monadRecFunction: monadRecFunction,
    monadRecEither: monadRecEither,
    monadRecMaybe: monadRecMaybe
};

},{"../Control.Applicative":5,"../Control.Bind":11,"../Control.Monad":60,"../Control.Monad.Eff":39,"../Control.Monad.Eff.Unsafe":37,"../Control.Monad.ST":53,"../Control.Semigroupoid":66,"../Data.Bifunctor":129,"../Data.Either":154,"../Data.Functor":180,"../Data.Identity":189,"../Data.Maybe":234,"../Data.Unit":302,"../Partial.Unsafe":355,"../Prelude":358}],52:[function(require,module,exports){
"use strict";

exports.newSTRef = function (val) {
  return function () {
    return { value: val };
  };
};

exports.readSTRef = function (ref) {
  return function () {
    return ref.value;
  };
};

exports.modifySTRef = function (ref) {
  return function (f) {
    return function () {
      return ref.value = f(ref.value); // eslint-disable-line no-return-assign
    };
  };
};

exports.writeSTRef = function (ref) {
  return function (a) {
    return function () {
      return ref.value = a; // eslint-disable-line no-return-assign
    };
  };
};

exports.runST = function (f) {
  return f;
};

},{}],53:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var pureST = function (st) {
    return Control_Monad_Eff.runPure($foreign.runST(st));
};
module.exports = {
    pureST: pureST,
    newSTRef: $foreign.newSTRef,
    readSTRef: $foreign.readSTRef,
    modifySTRef: $foreign.modifySTRef,
    writeSTRef: $foreign.writeSTRef,
    runST: $foreign.runST
};

},{"../Control.Monad.Eff":39,"./foreign":52}],54:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var MonadState = function (Monad0, state) {
    this.Monad0 = Monad0;
    this.state = state;
};
var state = function (dict) {
    return dict.state;
};
var put = function (dictMonadState) {
    return function (s) {
        return state(dictMonadState)(function (v) {
            return new Data_Tuple.Tuple(Data_Unit.unit, s);
        });
    };
};
var modify = function (dictMonadState) {
    return function (f) {
        return state(dictMonadState)(function (s) {
            return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
        });
    };
};
var gets = function (dictMonadState) {
    return function (f) {
        return state(dictMonadState)(function (s) {
            return new Data_Tuple.Tuple(f(s), s);
        });
    };
};
var get = function (dictMonadState) {
    return state(dictMonadState)(function (s) {
        return new Data_Tuple.Tuple(s, s);
    });
};
module.exports = {
    state: state,
    MonadState: MonadState,
    get: get,
    gets: gets,
    put: put,
    modify: modify
};

},{"../Data.Tuple":298,"../Data.Unit":302,"../Prelude":358}],55:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var StateT = function (x) {
    return x;
};
var withStateT = function (f) {
    return function (v) {
        return function ($107) {
            return v(f($107));
        };
    };
};
var runStateT = function (v) {
    return v;
};
var newtypeStateT = new Data_Newtype.Newtype(function (n) {
    return n;
}, StateT);
var monadTransStateT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
        return function (s) {
            return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v, s));
            });
        };
    };
});
var mapStateT = function (f) {
    return function (v) {
        return function ($108) {
            return f(v($108));
        };
    };
};
var lazyStateT = new Control_Lazy.Lazy(function (f) {
    return function (s) {
        var v = f(Data_Unit.unit);
        return v(s);
    };
});
var functorStateT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return function (s) {
                return Data_Functor.map(dictFunctor)(function (v1) {
                    return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                })(v(s));
            };
        };
    });
};
var execStateT = function (dictFunctor) {
    return function (v) {
        return function (s) {
            return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v(s));
        };
    };
};
var evalStateT = function (dictFunctor) {
    return function (v) {
        return function (s) {
            return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
        };
    };
};
var monadStateT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeStateT(dictMonad);
    }, function () {
        return bindStateT(dictMonad);
    });
};
var bindStateT = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyStateT(dictMonad);
    }, function (v) {
        return function (f) {
            return function (s) {
                return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
                    var v3 = f(v1.value0);
                    return v3(v1.value1);
                });
            };
        };
    });
};
var applyStateT = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorStateT(((dictMonad.Bind1()).Apply0()).Functor0());
    }, Control_Monad.ap(monadStateT(dictMonad)));
};
var applicativeStateT = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyStateT(dictMonad);
    }, function (a) {
        return function (s) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
        };
    });
};
var monadAskStateT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadStateT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderStateT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskStateT(dictMonadReader.MonadAsk0());
    }, function ($109) {
        return mapStateT(Control_Monad_Reader_Class.local(dictMonadReader)($109));
    });
};
var monadContStateT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadStateT(dictMonadCont.Monad0());
    }, function (f) {
        return function (s) {
            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
                var v = f(function (a) {
                    return function (s$prime) {
                        return c(new Data_Tuple.Tuple(a, s$prime));
                    };
                });
                return v(s);
            });
        };
    });
};
var monadEffState = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadStateT(dictMonadEff.Monad0());
    }, function ($110) {
        return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($110));
    });
};
var monadRecStateT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadStateT(dictMonadRec.Monad0());
    }, function (f) {
        return function (a) {
            var f$prime = function (v) {
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
                    var v1 = f(v.value0);
                    return v1;
                })()(v.value1))(function (v1) {
                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                        if (v1.value0 instanceof Control_Monad_Rec_Class.Loop) {
                            return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
                        };
                        if (v1.value0 instanceof Control_Monad_Rec_Class.Done) {
                            return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
                        };
                        throw new Error("Failed pattern match at Control.Monad.State.Trans line 88, column 16 - line 90, column 40: " + [ v1.value0.constructor.name ]);
                    })());
                });
            };
            return function (s) {
                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, s));
            };
        };
    });
};
var monadStateStateT = function (dictMonad) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadStateT(dictMonad);
    }, function (f) {
        return StateT(function ($111) {
            return Control_Applicative.pure(dictMonad.Applicative0())(f($111));
        });
    });
};
var monadTellStateT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadStateT(dictMonadTell.Monad0());
    }, function ($112) {
        return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($112));
    });
};
var monadWriterStateT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellStateT(dictMonadWriter.MonadTell0());
    }, function (m) {
        return function (s) {
            return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m(s)))(function (v) {
                return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
            });
        };
    }, function (m) {
        return function (s) {
            return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m(s))(function (v) {
                return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
            }));
        };
    });
};
var monadThrowStateT = function (dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
        return monadStateT(dictMonadThrow.Monad0());
    }, function (e) {
        return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
    });
};
var monadErrorStateT = function (dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadThrowStateT(dictMonadError.MonadThrow0());
    }, function (v) {
        return function (h) {
            return function (s) {
                return Control_Monad_Error_Class.catchError(dictMonadError)(v(s))(function (e) {
                    var v1 = h(e);
                    return v1(s);
                });
            };
        };
    });
};
var altStateT = function (dictMonad) {
    return function (dictAlt) {
        return new Control_Alt.Alt(function () {
            return functorStateT(dictAlt.Functor0());
        }, function (v) {
            return function (v1) {
                return function (s) {
                    return Control_Alt.alt(dictAlt)(v(s))(v1(s));
                };
            };
        });
    };
};
var plusStateT = function (dictMonad) {
    return function (dictPlus) {
        return new Control_Plus.Plus(function () {
            return altStateT(dictMonad)(dictPlus.Alt0());
        }, function (v) {
            return Control_Plus.empty(dictPlus);
        });
    };
};
var alternativeStateT = function (dictMonad) {
    return function (dictAlternative) {
        return new Control_Alternative.Alternative(function () {
            return applicativeStateT(dictMonad);
        }, function () {
            return plusStateT(dictMonad)(dictAlternative.Plus1());
        });
    };
};
var monadZeroStateT = function (dictMonadZero) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeStateT(dictMonadZero.Monad0())(dictMonadZero.Alternative1());
    }, function () {
        return monadStateT(dictMonadZero.Monad0());
    });
};
var monadPlusStateT = function (dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroStateT(dictMonadPlus.MonadZero0());
    });
};
module.exports = {
    StateT: StateT,
    runStateT: runStateT,
    evalStateT: evalStateT,
    execStateT: execStateT,
    mapStateT: mapStateT,
    withStateT: withStateT,
    newtypeStateT: newtypeStateT,
    functorStateT: functorStateT,
    applyStateT: applyStateT,
    applicativeStateT: applicativeStateT,
    altStateT: altStateT,
    plusStateT: plusStateT,
    alternativeStateT: alternativeStateT,
    bindStateT: bindStateT,
    monadStateT: monadStateT,
    monadRecStateT: monadRecStateT,
    monadZeroStateT: monadZeroStateT,
    monadPlusStateT: monadPlusStateT,
    monadTransStateT: monadTransStateT,
    lazyStateT: lazyStateT,
    monadEffState: monadEffState,
    monadContStateT: monadContStateT,
    monadThrowStateT: monadThrowStateT,
    monadErrorStateT: monadErrorStateT,
    monadAskStateT: monadAskStateT,
    monadReaderStateT: monadReaderStateT,
    monadStateStateT: monadStateStateT,
    monadTellStateT: monadTellStateT,
    monadWriterStateT: monadWriterStateT
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Lazy":17,"../Control.Monad":60,"../Control.Monad.Cont.Class":23,"../Control.Monad.Eff.Class":27,"../Control.Monad.Error.Class":40,"../Control.Monad.Reader.Class":49,"../Control.Monad.Rec.Class":51,"../Control.Monad.State.Class":54,"../Control.Monad.Trans.Class":57,"../Control.Monad.Writer.Class":58,"../Control.MonadPlus":61,"../Control.MonadZero":62,"../Control.Plus":65,"../Control.Semigroupoid":66,"../Data.Function":172,"../Data.Functor":180,"../Data.Newtype":244,"../Data.Tuple":298,"../Data.Unit":302,"../Prelude":358}],56:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Identity = require("../Data.Identity");
var Data_Newtype = require("../Data.Newtype");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var withState = Control_Monad_State_Trans.withStateT;
var runState = function (v) {
    return function ($16) {
        return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(v($16));
    };
};
var mapState = function (f) {
    return Control_Monad_State_Trans.mapStateT(function ($17) {
        return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($17)));
    });
};
var execState = function (v) {
    return function (s) {
        var v1 = v(s);
        return v1.value1;
    };
};
var evalState = function (v) {
    return function (s) {
        var v1 = v(s);
        return v1.value0;
    };
};
module.exports = {
    runState: runState,
    evalState: evalState,
    execState: execState,
    mapState: mapState,
    withState: withState
};

},{"../Control.Monad.State.Class":54,"../Control.Monad.State.Trans":55,"../Control.Semigroupoid":66,"../Data.Identity":189,"../Data.Newtype":244,"../Data.Tuple":298,"../Prelude":358}],57:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Prelude = require("../Prelude");
var MonadTrans = function (lift) {
    this.lift = lift;
};
var lift = function (dict) {
    return dict.lift;
};
module.exports = {
    lift: lift,
    MonadTrans: MonadTrans
};

},{"../Prelude":358}],58:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Data_Function = require("../Data.Function");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var MonadTell = function (Monad0, tell) {
    this.Monad0 = Monad0;
    this.tell = tell;
};
var MonadWriter = function (MonadTell0, listen, pass) {
    this.MonadTell0 = MonadTell0;
    this.listen = listen;
    this.pass = pass;
};
var tell = function (dict) {
    return dict.tell;
};
var pass = function (dict) {
    return dict.pass;
};
var listen = function (dict) {
    return dict.listen;
};
var listens = function (dictMonadWriter) {
    return function (f) {
        return function (m) {
            return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(listen(dictMonadWriter)(m))(function (v) {
                return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(v.value0, f(v.value1)));
            });
        };
    };
};
var censor = function (dictMonadWriter) {
    return function (f) {
        return function (m) {
            return pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m)(function (v) {
                return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(v, f));
            }));
        };
    };
};
module.exports = {
    listen: listen,
    pass: pass,
    tell: tell,
    MonadTell: MonadTell,
    MonadWriter: MonadWriter,
    listens: listens,
    censor: censor
};

},{"../Control.Applicative":5,"../Control.Bind":11,"../Data.Function":172,"../Data.Tuple":298,"../Prelude":358}],59:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var WriterT = function (x) {
    return x;
};
var runWriterT = function (v) {
    return v;
};
var newtypeWriterT = new Data_Newtype.Newtype(function (n) {
    return n;
}, WriterT);
var monadTransWriterT = function (dictMonoid) {
    return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
        return function (m) {
            return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v, Data_Monoid.mempty(dictMonoid)));
            });
        };
    });
};
var mapWriterT = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorWriterT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return mapWriterT(Data_Functor.map(dictFunctor)(function (v) {
            return new Data_Tuple.Tuple(f(v.value0), v.value1);
        }));
    });
};
var execWriterT = function (dictFunctor) {
    return function (v) {
        return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v);
    };
};
var applyWriterT = function (dictSemigroup) {
    return function (dictApply) {
        return new Control_Apply.Apply(function () {
            return functorWriterT(dictApply.Functor0());
        }, function (v) {
            return function (v1) {
                var k = function (v3) {
                    return function (v4) {
                        return new Data_Tuple.Tuple(v3.value0(v4.value0), Data_Semigroup.append(dictSemigroup)(v3.value1)(v4.value1));
                    };
                };
                return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(k)(v))(v1);
            };
        });
    };
};
var bindWriterT = function (dictSemigroup) {
    return function (dictBind) {
        return new Control_Bind.Bind(function () {
            return applyWriterT(dictSemigroup)(dictBind.Apply0());
        }, function (v) {
            return function (k) {
                return WriterT(Control_Bind.bind(dictBind)(v)(function (v1) {
                    var v2 = k(v1.value0);
                    return Data_Functor.map((dictBind.Apply0()).Functor0())(function (v3) {
                        return new Data_Tuple.Tuple(v3.value0, Data_Semigroup.append(dictSemigroup)(v1.value1)(v3.value1));
                    })(v2);
                }));
            };
        });
    };
};
var applicativeWriterT = function (dictMonoid) {
    return function (dictApplicative) {
        return new Control_Applicative.Applicative(function () {
            return applyWriterT(dictMonoid.Semigroup0())(dictApplicative.Apply0());
        }, function (a) {
            return WriterT(Control_Applicative.pure(dictApplicative)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
        });
    };
};
var monadWriterT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Monad.Monad(function () {
            return applicativeWriterT(dictMonoid)(dictMonad.Applicative0());
        }, function () {
            return bindWriterT(dictMonoid.Semigroup0())(dictMonad.Bind1());
        });
    };
};
var monadAskWriterT = function (dictMonoid) {
    return function (dictMonadAsk) {
        return new Control_Monad_Reader_Class.MonadAsk(function () {
            return monadWriterT(dictMonoid)(dictMonadAsk.Monad0());
        }, Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
    };
};
var monadReaderWriterT = function (dictMonoid) {
    return function (dictMonadReader) {
        return new Control_Monad_Reader_Class.MonadReader(function () {
            return monadAskWriterT(dictMonoid)(dictMonadReader.MonadAsk0());
        }, function (f) {
            return mapWriterT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
        });
    };
};
var monadContWriterT = function (dictMonoid) {
    return function (dictMonadCont) {
        return new Control_Monad_Cont_Class.MonadCont(function () {
            return monadWriterT(dictMonoid)(dictMonadCont.Monad0());
        }, function (f) {
            return WriterT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
                var v = f(function (a) {
                    return WriterT(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
                });
                return v;
            }));
        });
    };
};
var monadEffWriter = function (dictMonoid) {
    return function (dictMonadEff) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadWriterT(dictMonoid)(dictMonadEff.Monad0());
        }, function ($123) {
            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($123));
        });
    };
};
var monadRecWriterT = function (dictMonoid) {
    return function (dictMonadRec) {
        return new Control_Monad_Rec_Class.MonadRec(function () {
            return monadWriterT(dictMonoid)(dictMonadRec.Monad0());
        }, function (f) {
            return function (a) {
                var f$prime = function (v) {
                    return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
                        var v1 = f(v.value0);
                        return v1;
                    })())(function (v1) {
                        return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                            if (v1.value0 instanceof Control_Monad_Rec_Class.Loop) {
                                return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v1.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v1.value1)));
                            };
                            if (v1.value0 instanceof Control_Monad_Rec_Class.Done) {
                                return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v1.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v1.value1)));
                            };
                            throw new Error("Failed pattern match at Control.Monad.Writer.Trans line 85, column 16 - line 87, column 47: " + [ v1.value0.constructor.name ]);
                        })());
                    });
                };
                return WriterT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
            };
        });
    };
};
var monadStateWriterT = function (dictMonoid) {
    return function (dictMonadState) {
        return new Control_Monad_State_Class.MonadState(function () {
            return monadWriterT(dictMonoid)(dictMonadState.Monad0());
        }, function (f) {
            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
        });
    };
};
var monadTellWriterT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Monad_Writer_Class.MonadTell(function () {
            return monadWriterT(dictMonoid)(dictMonad);
        }, function ($124) {
            return WriterT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Tuple.Tuple.create(Data_Unit.unit)($124)));
        });
    };
};
var monadWriterWriterT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Monad_Writer_Class.MonadWriter(function () {
            return monadTellWriterT(dictMonoid)(dictMonad);
        }, function (v) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1), v1.value1));
            });
        }, function (v) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0.value0, v1.value0.value1(v1.value1)));
            });
        });
    };
};
var monadThrowWriterT = function (dictMonoid) {
    return function (dictMonadThrow) {
        return new Control_Monad_Error_Class.MonadThrow(function () {
            return monadWriterT(dictMonoid)(dictMonadThrow.Monad0());
        }, function (e) {
            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
        });
    };
};
var monadErrorWriterT = function (dictMonoid) {
    return function (dictMonadError) {
        return new Control_Monad_Error_Class.MonadError(function () {
            return monadThrowWriterT(dictMonoid)(dictMonadError.MonadThrow0());
        }, function (v) {
            return function (h) {
                return WriterT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (e) {
                    var v1 = h(e);
                    return v1;
                }));
            };
        });
    };
};
var altWriterT = function (dictAlt) {
    return new Control_Alt.Alt(function () {
        return functorWriterT(dictAlt.Functor0());
    }, function (v) {
        return function (v1) {
            return Control_Alt.alt(dictAlt)(v)(v1);
        };
    });
};
var plusWriterT = function (dictPlus) {
    return new Control_Plus.Plus(function () {
        return altWriterT(dictPlus.Alt0());
    }, Control_Plus.empty(dictPlus));
};
var alternativeWriterT = function (dictMonoid) {
    return function (dictAlternative) {
        return new Control_Alternative.Alternative(function () {
            return applicativeWriterT(dictMonoid)(dictAlternative.Applicative0());
        }, function () {
            return plusWriterT(dictAlternative.Plus1());
        });
    };
};
var monadZeroWriterT = function (dictMonoid) {
    return function (dictMonadZero) {
        return new Control_MonadZero.MonadZero(function () {
            return alternativeWriterT(dictMonoid)(dictMonadZero.Alternative1());
        }, function () {
            return monadWriterT(dictMonoid)(dictMonadZero.Monad0());
        });
    };
};
var monadPlusWriterT = function (dictMonoid) {
    return function (dictMonadPlus) {
        return new Control_MonadPlus.MonadPlus(function () {
            return monadZeroWriterT(dictMonoid)(dictMonadPlus.MonadZero0());
        });
    };
};
module.exports = {
    WriterT: WriterT,
    runWriterT: runWriterT,
    execWriterT: execWriterT,
    mapWriterT: mapWriterT,
    newtypeWriterT: newtypeWriterT,
    functorWriterT: functorWriterT,
    applyWriterT: applyWriterT,
    applicativeWriterT: applicativeWriterT,
    altWriterT: altWriterT,
    plusWriterT: plusWriterT,
    alternativeWriterT: alternativeWriterT,
    bindWriterT: bindWriterT,
    monadWriterT: monadWriterT,
    monadRecWriterT: monadRecWriterT,
    monadZeroWriterT: monadZeroWriterT,
    monadPlusWriterT: monadPlusWriterT,
    monadTransWriterT: monadTransWriterT,
    monadEffWriter: monadEffWriter,
    monadContWriterT: monadContWriterT,
    monadThrowWriterT: monadThrowWriterT,
    monadErrorWriterT: monadErrorWriterT,
    monadAskWriterT: monadAskWriterT,
    monadReaderWriterT: monadReaderWriterT,
    monadStateWriterT: monadStateWriterT,
    monadTellWriterT: monadTellWriterT,
    monadWriterWriterT: monadWriterWriterT
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Monad":60,"../Control.Monad.Cont.Class":23,"../Control.Monad.Eff.Class":27,"../Control.Monad.Error.Class":40,"../Control.Monad.Reader.Class":49,"../Control.Monad.Rec.Class":51,"../Control.Monad.State.Class":54,"../Control.Monad.Trans.Class":57,"../Control.Monad.Writer.Class":58,"../Control.MonadPlus":61,"../Control.MonadZero":62,"../Control.Plus":65,"../Control.Semigroupoid":66,"../Data.Function":172,"../Data.Functor":180,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Semigroup":271,"../Data.Tuple":298,"../Data.Unit":302,"../Prelude":358}],60:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var Monad = function (Applicative0, Bind1) {
    this.Applicative0 = Applicative0;
    this.Bind1 = Bind1;
};
var whenM = function (dictMonad) {
    return function (mb) {
        return function (m) {
            return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
                return Control_Applicative.when(dictMonad.Applicative0())(v)(m);
            });
        };
    };
};
var unlessM = function (dictMonad) {
    return function (mb) {
        return function (m) {
            return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
                return Control_Applicative.unless(dictMonad.Applicative0())(v)(m);
            });
        };
    };
};
var monadFn = new Monad(function () {
    return Control_Applicative.applicativeFn;
}, function () {
    return Control_Bind.bindFn;
});
var monadArray = new Monad(function () {
    return Control_Applicative.applicativeArray;
}, function () {
    return Control_Bind.bindArray;
});
var liftM1 = function (dictMonad) {
    return function (f) {
        return function (a) {
            return Control_Bind.bind(dictMonad.Bind1())(a)(function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(f(v));
            });
        };
    };
};
var ap = function (dictMonad) {
    return function (f) {
        return function (a) {
            return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                });
            });
        };
    };
};
module.exports = {
    Monad: Monad,
    liftM1: liftM1,
    ap: ap,
    whenM: whenM,
    unlessM: unlessM,
    monadFn: monadFn,
    monadArray: monadArray
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Data.Functor":180,"../Data.Unit":302}],61:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Functor = require("../Data.Functor");
var MonadPlus = function (MonadZero0) {
    this.MonadZero0 = MonadZero0;
};
var monadPlusArray = new MonadPlus(function () {
    return Control_MonadZero.monadZeroArray;
});
module.exports = {
    MonadPlus: MonadPlus,
    monadPlusArray: monadPlusArray
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Monad":60,"../Control.MonadZero":62,"../Control.Plus":65,"../Data.Functor":180}],62:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Plus = require("../Control.Plus");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var MonadZero = function (Alternative1, Monad0) {
    this.Alternative1 = Alternative1;
    this.Monad0 = Monad0;
};
var monadZeroArray = new MonadZero(function () {
    return Control_Alternative.alternativeArray;
}, function () {
    return Control_Monad.monadArray;
});
var guard = function (dictMonadZero) {
    return function (v) {
        if (v) {
            return Control_Applicative.pure((dictMonadZero.Alternative1()).Applicative0())(Data_Unit.unit);
        };
        if (!v) {
            return Control_Plus.empty((dictMonadZero.Alternative1()).Plus1());
        };
        throw new Error("Failed pattern match at Control.MonadZero line 54, column 1 - line 54, column 52: " + [ v.constructor.name ]);
    };
};
module.exports = {
    MonadZero: MonadZero,
    guard: guard,
    monadZeroArray: monadZeroArray
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Monad":60,"../Control.Plus":65,"../Data.Functor":180,"../Data.Unit":302}],63:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var Control_Monad_Eff_Unsafe = require("../Control.Monad.Eff.Unsafe");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Compose = require("../Data.Functor.Compose");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var ParCont = function (x) {
    return x;
};
var Parallel = function (Applicative1, Monad0, parallel, sequential) {
    this.Applicative1 = Applicative1;
    this.Monad0 = Monad0;
    this.parallel = parallel;
    this.sequential = sequential;
};
var unsafeWithRef = Control_Monad_Eff_Unsafe.unsafeCoerceEff;
var sequential = function (dict) {
    return dict.sequential;
};
var parallel = function (dict) {
    return dict.parallel;
};
var newtypeParCont = new Data_Newtype.Newtype(function (n) {
    return n;
}, ParCont);
var monadParWriterT = function (dictMonoid) {
    return function (dictParallel) {
        return new Parallel(function () {
            return Control_Monad_Writer_Trans.applicativeWriterT(dictMonoid)(dictParallel.Applicative1());
        }, function () {
            return Control_Monad_Writer_Trans.monadWriterT(dictMonoid)(dictParallel.Monad0());
        }, Control_Monad_Writer_Trans.mapWriterT(parallel(dictParallel)), Control_Monad_Writer_Trans.mapWriterT(sequential(dictParallel)));
    };
};
var monadParReaderT = function (dictParallel) {
    return new Parallel(function () {
        return Control_Monad_Reader_Trans.applicativeReaderT(dictParallel.Applicative1());
    }, function () {
        return Control_Monad_Reader_Trans.monadReaderT(dictParallel.Monad0());
    }, Control_Monad_Reader_Trans.mapReaderT(parallel(dictParallel)), Control_Monad_Reader_Trans.mapReaderT(sequential(dictParallel)));
};
var monadParMaybeT = function (dictParallel) {
    return new Parallel(function () {
        return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Maybe.applicativeMaybe);
    }, function () {
        return Control_Monad_Maybe_Trans.monadMaybeT(dictParallel.Monad0());
    }, function (v) {
        return parallel(dictParallel)(v);
    }, function (v) {
        return sequential(dictParallel)(v);
    });
};
var monadParExceptT = function (dictParallel) {
    return new Parallel(function () {
        return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Either.applicativeEither);
    }, function () {
        return Control_Monad_Except_Trans.monadExceptT(dictParallel.Monad0());
    }, function (v) {
        return parallel(dictParallel)(v);
    }, function (v) {
        return sequential(dictParallel)(v);
    });
};
var monadParParCont = function (dictMonadEff) {
    return new Parallel(function () {
        return applicativeParCont(dictMonadEff);
    }, function () {
        return Control_Monad_Cont_Trans.monadContT(dictMonadEff.Monad0());
    }, ParCont, function (v) {
        return v;
    });
};
var functorParCont = function (dictMonadEff) {
    return new Data_Functor.Functor(function (f) {
        return function ($54) {
            return parallel(monadParParCont(dictMonadEff))(Data_Functor.map(Control_Monad_Cont_Trans.functorContT((((dictMonadEff.Monad0()).Bind1()).Apply0()).Functor0()))(f)(sequential(monadParParCont(dictMonadEff))($54)));
        };
    });
};
var applyParCont = function (dictMonadEff) {
    return new Control_Apply.Apply(function () {
        return functorParCont(dictMonadEff);
    }, function (v) {
        return function (v1) {
            return ParCont(function (k) {
                return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value))))(function (v2) {
                    return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value))))(function (v3) {
                        return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEff.Monad0()).Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
                            return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v3))))(function (v4) {
                                if (v4 instanceof Data_Maybe.Nothing) {
                                    return Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v2)(new Data_Maybe.Just(a))));
                                };
                                if (v4 instanceof Data_Maybe.Just) {
                                    return k(a(v4.value0));
                                };
                                throw new Error("Failed pattern match at Control.Parallel.Class line 80, column 7 - line 82, column 26: " + [ v4.constructor.name ]);
                            });
                        }))(function () {
                            return Control_Monad_Cont_Trans.runContT(v1)(function (b) {
                                return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v2))))(function (v4) {
                                    if (v4 instanceof Data_Maybe.Nothing) {
                                        return Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v3)(new Data_Maybe.Just(b))));
                                    };
                                    if (v4 instanceof Data_Maybe.Just) {
                                        return k(v4.value0(b));
                                    };
                                    throw new Error("Failed pattern match at Control.Parallel.Class line 86, column 7 - line 88, column 26: " + [ v4.constructor.name ]);
                                });
                            });
                        });
                    });
                });
            });
        };
    });
};
var applicativeParCont = function (dictMonadEff) {
    return new Control_Applicative.Applicative(function () {
        return applyParCont(dictMonadEff);
    }, function ($55) {
        return parallel(monadParParCont(dictMonadEff))(Control_Applicative.pure(Control_Monad_Cont_Trans.applicativeContT((dictMonadEff.Monad0()).Applicative0()))($55));
    });
};
var altParCont = function (dictMonadEff) {
    return new Control_Alt.Alt(function () {
        return functorParCont(dictMonadEff);
    }, function (v) {
        return function (v1) {
            return ParCont(function (k) {
                return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.newRef(false))))(function (v2) {
                    return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEff.Monad0()).Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
                        return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v2))))(function (v3) {
                            if (v3) {
                                return Control_Applicative.pure((dictMonadEff.Monad0()).Applicative0())(Data_Unit.unit);
                            };
                            return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v2)(true))))(function () {
                                return k(a);
                            });
                        });
                    }))(function () {
                        return Control_Monad_Cont_Trans.runContT(v1)(function (a) {
                            return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v2))))(function (v3) {
                                if (v3) {
                                    return Control_Applicative.pure((dictMonadEff.Monad0()).Applicative0())(Data_Unit.unit);
                                };
                                return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v2)(true))))(function () {
                                    return k(a);
                                });
                            });
                        });
                    });
                });
            });
        };
    });
};
var plusParCont = function (dictMonadEff) {
    return new Control_Plus.Plus(function () {
        return altParCont(dictMonadEff);
    }, ParCont(function (v) {
        return Control_Applicative.pure((dictMonadEff.Monad0()).Applicative0())(Data_Unit.unit);
    }));
};
var alternativeParCont = function (dictMonadEff) {
    return new Control_Alternative.Alternative(function () {
        return applicativeParCont(dictMonadEff);
    }, function () {
        return plusParCont(dictMonadEff);
    });
};
module.exports = {
    Parallel: Parallel,
    parallel: parallel,
    sequential: sequential,
    ParCont: ParCont,
    monadParExceptT: monadParExceptT,
    monadParReaderT: monadParReaderT,
    monadParWriterT: monadParWriterT,
    monadParMaybeT: monadParMaybeT,
    newtypeParCont: newtypeParCont,
    functorParCont: functorParCont,
    applyParCont: applyParCont,
    applicativeParCont: applicativeParCont,
    altParCont: altParCont,
    plusParCont: plusParCont,
    alternativeParCont: alternativeParCont,
    monadParParCont: monadParParCont
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Monad.Cont.Trans":24,"../Control.Monad.Eff":39,"../Control.Monad.Eff.Class":27,"../Control.Monad.Eff.Ref":33,"../Control.Monad.Eff.Unsafe":37,"../Control.Monad.Except.Trans":41,"../Control.Monad.Maybe.Trans":47,"../Control.Monad.Reader.Trans":50,"../Control.Monad.Writer.Trans":59,"../Control.Plus":65,"../Control.Semigroupoid":66,"../Data.Either":154,"../Data.Function":172,"../Data.Functor":180,"../Data.Functor.Compose":174,"../Data.Maybe":234,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Unit":302,"../Prelude":358}],64:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alternative = require("../Control.Alternative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Parallel_Class = require("../Control.Parallel.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Foldable = require("../Data.Foldable");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var parTraverse_ = function (dictParallel) {
    return function (dictFoldable) {
        return function (f) {
            return function ($17) {
                return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)(function ($18) {
                    return Control_Parallel_Class.parallel(dictParallel)(f($18));
                })($17));
            };
        };
    };
};
var parTraverse = function (dictParallel) {
    return function (dictTraversable) {
        return function (f) {
            return function ($19) {
                return Control_Parallel_Class.sequential(dictParallel)(Data_Traversable.traverse(dictTraversable)(dictParallel.Applicative1())(function ($20) {
                    return Control_Parallel_Class.parallel(dictParallel)(f($20));
                })($19));
            };
        };
    };
};
var parSequence_ = function (dictParallel) {
    return function (dictFoldable) {
        return parTraverse_(dictParallel)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
    };
};
var parSequence = function (dictParallel) {
    return function (dictTraversable) {
        return parTraverse(dictParallel)(dictTraversable)(Control_Category.id(Control_Category.categoryFn));
    };
};
var parOneOfMap = function (dictParallel) {
    return function (dictAlternative) {
        return function (dictFoldable) {
            return function (dictFunctor) {
                return function (f) {
                    return function ($21) {
                        return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(function ($22) {
                            return Control_Parallel_Class.parallel(dictParallel)(f($22));
                        })($21));
                    };
                };
            };
        };
    };
};
var parOneOf = function (dictParallel) {
    return function (dictAlternative) {
        return function (dictFoldable) {
            return function (dictFunctor) {
                return function ($23) {
                    return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(Control_Parallel_Class.parallel(dictParallel))($23));
                };
            };
        };
    };
};
var parApply = function (dictParallel) {
    return function (mf) {
        return function (ma) {
            return Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictParallel.Applicative1()).Apply0())(Control_Parallel_Class.parallel(dictParallel)(mf))(Control_Parallel_Class.parallel(dictParallel)(ma)));
        };
    };
};
module.exports = {
    parTraverse: parTraverse,
    parTraverse_: parTraverse_,
    parSequence: parSequence,
    parSequence_: parSequence_,
    parOneOf: parOneOf,
    parOneOfMap: parOneOfMap,
    parApply: parApply
};

},{"../Control.Alternative":3,"../Control.Apply":7,"../Control.Category":12,"../Control.Parallel.Class":63,"../Control.Semigroupoid":66,"../Data.Foldable":164,"../Data.Traversable":296,"../Prelude":358}],65:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Data_Functor = require("../Data.Functor");
var Plus = function (Alt0, empty) {
    this.Alt0 = Alt0;
    this.empty = empty;
};
var plusArray = new Plus(function () {
    return Control_Alt.altArray;
}, [  ]);
var empty = function (dict) {
    return dict.empty;
};
module.exports = {
    Plus: Plus,
    empty: empty,
    plusArray: plusArray
};

},{"../Control.Alt":2,"../Data.Functor":180}],66:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Semigroupoid = function (compose) {
    this.compose = compose;
};
var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var compose = function (dict) {
    return dict.compose;
};
var composeFlipped = function (dictSemigroupoid) {
    return function (f) {
        return function (g) {
            return compose(dictSemigroupoid)(g)(f);
        };
    };
};
module.exports = {
    compose: compose,
    Semigroupoid: Semigroupoid,
    composeFlipped: composeFlipped,
    semigroupoidFn: semigroupoidFn
};

},{}],67:[function(require,module,exports){
"use strict";

exports.clipboardData = function (e) {
  return e.clipboardData;
};

},{}],68:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM_Event_Types = require("../DOM.Event.Types");
var DOM_HTML_Event_DataTransfer = require("../DOM.HTML.Event.DataTransfer");
var Data_Foreign = require("../Data.Foreign");
var Prelude = require("../Prelude");
var eventToClipboardEvent = function ($0) {
    return DOM_Event_Types.readClipboardEvent(Data_Foreign.toForeign($0));
};
module.exports = {
    eventToClipboardEvent: eventToClipboardEvent,
    clipboardData: $foreign.clipboardData
};

},{"../Control.Semigroupoid":66,"../DOM.Event.Types":75,"../DOM.HTML.Event.DataTransfer":81,"../Data.Foreign":169,"../Prelude":358,"./foreign":67}],69:[function(require,module,exports){
"use strict";

exports.bubbles = function (e) {
  return e.bubbles;
};

exports.cancelable = function (e) {
  return e.cancelable;
};

exports.currentTarget = function (e) {
  return e.currentTarget;
};

exports.defaultPrevented = function (e) {
  return e.defaultPrevented;
};

exports.eventPhaseIndex = function (e) {
  return e.eventPhase;
};

exports.target = function (e) {
  return e.target;
};

exports.timeStamp = function (e) {
  return e.timeStamp;
};

exports.type_ = function (e) {
  return e.type;
};

exports.preventDefault = function (e) {
  return function () {
    return e.preventDefault();
  };
};

exports.stopImmediatePropagation = function (e) {
  return function () {
    return e.stopImmediatePropagation();
  };
};

exports.stopPropagation = function (e) {
  return function () {
    return e.stopPropagation();
  };
};

},{}],70:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM = require("../DOM");
var DOM_Event_EventPhase = require("../DOM.Event.EventPhase");
var DOM_Event_Types = require("../DOM.Event.Types");
var DOM_Node_Types = require("../DOM.Node.Types");
var Data_Enum = require("../Data.Enum");
var Data_Maybe = require("../Data.Maybe");
var Prelude = require("../Prelude");
var eventPhase = function (dictPartial) {
    return function ($1) {
        return Data_Maybe.fromJust(dictPartial)(Data_Enum.toEnum(DOM_Event_EventPhase.boundedEnumEventPhase)($foreign.eventPhaseIndex($1)));
    };
};
module.exports = {
    eventPhase: eventPhase,
    bubbles: $foreign.bubbles,
    cancelable: $foreign.cancelable,
    currentTarget: $foreign.currentTarget,
    defaultPrevented: $foreign.defaultPrevented,
    eventPhaseIndex: $foreign.eventPhaseIndex,
    preventDefault: $foreign.preventDefault,
    stopImmediatePropagation: $foreign.stopImmediatePropagation,
    stopPropagation: $foreign.stopPropagation,
    target: $foreign.target,
    timeStamp: $foreign.timeStamp,
    type_: $foreign.type_
};

},{"../Control.Monad.Eff":39,"../Control.Semigroupoid":66,"../DOM":117,"../DOM.Event.EventPhase":71,"../DOM.Event.Types":75,"../DOM.Node.Types":113,"../Data.Enum":155,"../Data.Maybe":234,"../Prelude":358,"./foreign":69}],71:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Bounded = require("../Data.Bounded");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Prelude = require("../Prelude");
var None = (function () {
    function None() {

    };
    None.value = new None();
    return None;
})();
var Capturing = (function () {
    function Capturing() {

    };
    Capturing.value = new Capturing();
    return Capturing;
})();
var AtTarget = (function () {
    function AtTarget() {

    };
    AtTarget.value = new AtTarget();
    return AtTarget;
})();
var Bubbling = (function () {
    function Bubbling() {

    };
    Bubbling.value = new Bubbling();
    return Bubbling;
})();
var toEnumEventPhase = function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(None.value);
    };
    if (v === 1) {
        return new Data_Maybe.Just(Capturing.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(AtTarget.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(Bubbling.value);
    };
    return Data_Maybe.Nothing.value;
};
var fromEnumEventPhase = function (v) {
    if (v instanceof None) {
        return 0;
    };
    if (v instanceof Capturing) {
        return 1;
    };
    if (v instanceof AtTarget) {
        return 2;
    };
    if (v instanceof Bubbling) {
        return 3;
    };
    throw new Error("Failed pattern match at DOM.Event.EventPhase line 40, column 3 - line 44, column 17: " + [ v.constructor.name ]);
};
var eqEventPhase = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof None && y instanceof None) {
            return true;
        };
        if (x instanceof Capturing && y instanceof Capturing) {
            return true;
        };
        if (x instanceof AtTarget && y instanceof AtTarget) {
            return true;
        };
        if (x instanceof Bubbling && y instanceof Bubbling) {
            return true;
        };
        return false;
    };
});
var ordEventPhase = new Data_Ord.Ord(function () {
    return eqEventPhase;
}, function (x) {
    return function (y) {
        if (x instanceof None && y instanceof None) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof None) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof None) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Capturing && y instanceof Capturing) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Capturing) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Capturing) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AtTarget && y instanceof AtTarget) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AtTarget) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AtTarget) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Bubbling && y instanceof Bubbling) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at DOM.Event.EventPhase line 14, column 8 - line 14, column 48: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var enumEventPhase = new Data_Enum.Enum(function () {
    return ordEventPhase;
}, Data_Enum.defaultPred(toEnumEventPhase)(fromEnumEventPhase), Data_Enum.defaultSucc(toEnumEventPhase)(fromEnumEventPhase));
var boundedEventPhase = new Data_Bounded.Bounded(function () {
    return ordEventPhase;
}, None.value, Bubbling.value);
var boundedEnumEventPhase = new Data_Enum.BoundedEnum(function () {
    return boundedEventPhase;
}, function () {
    return enumEventPhase;
}, 4, fromEnumEventPhase, toEnumEventPhase);
module.exports = {
    None: None,
    Capturing: Capturing,
    AtTarget: AtTarget,
    Bubbling: Bubbling,
    toEnumEventPhase: toEnumEventPhase,
    fromEnumEventPhase: fromEnumEventPhase,
    eqEventPhase: eqEventPhase,
    ordEventPhase: ordEventPhase,
    boundedEventPhase: boundedEventPhase,
    enumEventPhase: enumEventPhase,
    boundedEnumEventPhase: boundedEnumEventPhase
};

},{"../Data.Bounded":134,"../Data.Enum":155,"../Data.Eq":157,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Ordering":252,"../Prelude":358}],72:[function(require,module,exports){
"use strict";

exports.eventListener = function (fn) {
  return function (event) {
    return fn(event)();
  };
};

exports.addEventListener = function (type) {
  return function (listener) {
    return function (useCapture) {
      return function (target) {
        return function () {
          target.addEventListener(type, listener, useCapture);
          return {};
        };
      };
    };
  };
};

exports.removeEventListener = function (type) {
  return function (listener) {
    return function (useCapture) {
      return function (target) {
        return function () {
          target.removeEventListener(type, listener, useCapture);
          return {};
        };
      };
    };
  };
};

exports.dispatchEvent = function (event) {
  return function (target) {
    return function () {
      return target.dispatchEvent(event);
    };
  };
};

},{}],73:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var DOM = require("../DOM");
var DOM_Event_Types = require("../DOM.Event.Types");
var Prelude = require("../Prelude");
module.exports = {
    eventListener: $foreign.eventListener,
    addEventListener: $foreign.addEventListener,
    removeEventListener: $foreign.removeEventListener,
    dispatchEvent: $foreign.dispatchEvent
};

},{"../Control.Monad.Eff":39,"../Control.Monad.Eff.Exception":31,"../DOM":117,"../DOM.Event.Types":75,"../Prelude":358,"./foreign":72}],74:[function(require,module,exports){
/* global EventTarget */
"use strict";

exports._readEventTarget = function (left) {
  return function (right) {
    return function (foreign) {
      return foreign instanceof EventTarget ? right(foreign) : left("Value is not an EventTarget");
    };
  };
};

},{}],75:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foreign = require("../Data.Foreign");
var Data_Identity = require("../Data.Identity");
var Data_List_Types = require("../Data.List.Types");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var EventType = function (x) {
    return x;
};
var wheelEventToEvent = Unsafe_Coerce.unsafeCoerce;
var uiEventToEvent = Unsafe_Coerce.unsafeCoerce;
var touchEventToEvent = Unsafe_Coerce.unsafeCoerce;
var readWheelEvent = Data_Foreign.unsafeReadTagged("WheelEvent");
var readUIEvent = Data_Foreign.unsafeReadTagged("UIEvent");
var readTouchEvent = Data_Foreign.unsafeReadTagged("TouchEvent");
var readProgressEvent = Data_Foreign.unsafeReadTagged("ProgressEvent");
var readPopStateEvent = Data_Foreign.unsafeReadTagged("PopStateEvent");
var readMouseEvent = Data_Foreign.unsafeReadTagged("MouseEvent");
var readKeyboardEvent = Data_Foreign.unsafeReadTagged("KeyboardEvent");
var readInputEvent = Data_Foreign.unsafeReadTagged("InputEvent");
var readFocusEvent = Data_Foreign.unsafeReadTagged("FocusEvent");
var readEventTarget = function ($3) {
    return Data_Newtype.wrap(Control_Monad_Except_Trans.newtypeExceptT)(Data_Newtype.wrap(Data_Identity.newtypeIdentity)(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function ($4) {
        return Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Data_Foreign.ForeignError.create($4));
    })($foreign._readEventTarget(Data_Either.Left.create)(Data_Either.Right.create)($3))));
};
var readCustomEvent = Data_Foreign.unsafeReadTagged("CustomEvent");
var readCompositionEvent = Data_Foreign.unsafeReadTagged("CompositionEvent");
var readClipboardEvent = Data_Foreign.unsafeReadTagged("ClipboardEvent");
var progressEventToEvent = Unsafe_Coerce.unsafeCoerce;
var popStateEventToEvent = Unsafe_Coerce.unsafeCoerce;
var ordEventType = Data_Ord.ordString;
var newtypeEventType = new Data_Newtype.Newtype(function (n) {
    return n;
}, EventType);
var mouseEventToEvent = Unsafe_Coerce.unsafeCoerce;
var keyboardEventToEvent = Unsafe_Coerce.unsafeCoerce;
var inputEventToEvent = Unsafe_Coerce.unsafeCoerce;
var focusEventToEvent = Unsafe_Coerce.unsafeCoerce;
var eqEventType = Data_Eq.eqString;
var customEventToEvent = Unsafe_Coerce.unsafeCoerce;
var compositionEventToEvent = Unsafe_Coerce.unsafeCoerce;
var clipboardEventToEvent = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    EventType: EventType,
    readEventTarget: readEventTarget,
    customEventToEvent: customEventToEvent,
    readCustomEvent: readCustomEvent,
    uiEventToEvent: uiEventToEvent,
    readUIEvent: readUIEvent,
    focusEventToEvent: focusEventToEvent,
    readFocusEvent: readFocusEvent,
    mouseEventToEvent: mouseEventToEvent,
    readMouseEvent: readMouseEvent,
    wheelEventToEvent: wheelEventToEvent,
    readWheelEvent: readWheelEvent,
    touchEventToEvent: touchEventToEvent,
    readTouchEvent: readTouchEvent,
    inputEventToEvent: inputEventToEvent,
    readInputEvent: readInputEvent,
    keyboardEventToEvent: keyboardEventToEvent,
    readKeyboardEvent: readKeyboardEvent,
    compositionEventToEvent: compositionEventToEvent,
    readCompositionEvent: readCompositionEvent,
    popStateEventToEvent: popStateEventToEvent,
    readPopStateEvent: readPopStateEvent,
    progressEventToEvent: progressEventToEvent,
    readProgressEvent: readProgressEvent,
    clipboardEventToEvent: clipboardEventToEvent,
    readClipboardEvent: readClipboardEvent,
    newtypeEventType: newtypeEventType,
    eqEventType: eqEventType,
    ordEventType: ordEventType
};

},{"../Control.Applicative":5,"../Control.Monad.Except.Trans":41,"../Control.Semigroupoid":66,"../Data.Bifunctor":129,"../Data.Either":154,"../Data.Eq":157,"../Data.Foreign":169,"../Data.Identity":189,"../Data.List.Types":229,"../Data.Newtype":244,"../Data.Ord":251,"../Prelude":358,"../Unsafe.Coerce":366,"./foreign":74}],76:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var DOM_Event_Types = require("../DOM.Event.Types");
var Data_Foreign = require("../Data.Foreign");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var readFileList = Data_Foreign.unsafeReadTagged("FileList");
var fileToBlob = Unsafe_Coerce.unsafeCoerce;
var fileReaderToEventTarget = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    fileToBlob: fileToBlob,
    fileReaderToEventTarget: fileReaderToEventTarget,
    readFileList: readFileList
};

},{"../DOM.Event.Types":75,"../Data.Foreign":169,"../Unsafe.Coerce":366}],77:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Bounded = require("../Data.Bounded");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Loading = (function () {
    function Loading() {

    };
    Loading.value = new Loading();
    return Loading;
})();
var Interactive = (function () {
    function Interactive() {

    };
    Interactive.value = new Interactive();
    return Interactive;
})();
var Complete = (function () {
    function Complete() {

    };
    Complete.value = new Complete();
    return Complete;
})();
var toEnumReadyState = function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(Loading.value);
    };
    if (v === 1) {
        return new Data_Maybe.Just(Interactive.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(Complete.value);
    };
    return Data_Maybe.Nothing.value;
};
var showReadyState = new Data_Show.Show(function (v) {
    if (v instanceof Loading) {
        return "Loading";
    };
    if (v instanceof Interactive) {
        return "Interactive";
    };
    if (v instanceof Complete) {
        return "Complete";
    };
    throw new Error("Failed pattern match at DOM.HTML.Document.ReadyState line 16, column 10 - line 21, column 1: " + [ v.constructor.name ]);
});
var printReadyState = function (v) {
    if (v instanceof Loading) {
        return "loading";
    };
    if (v instanceof Interactive) {
        return "interactive";
    };
    if (v instanceof Complete) {
        return "complete";
    };
    throw new Error("Failed pattern match at DOM.HTML.Document.ReadyState line 22, column 19 - line 27, column 1: " + [ v.constructor.name ]);
};
var parseReadyState = function (v) {
    if (v === "loading") {
        return new Data_Maybe.Just(Loading.value);
    };
    if (v === "interactive") {
        return new Data_Maybe.Just(Interactive.value);
    };
    if (v === "complete") {
        return new Data_Maybe.Just(Complete.value);
    };
    return Data_Maybe.Nothing.value;
};
var fromEnumReadyState = function (v) {
    if (v instanceof Loading) {
        return 0;
    };
    if (v instanceof Interactive) {
        return 1;
    };
    if (v instanceof Complete) {
        return 2;
    };
    throw new Error("Failed pattern match at DOM.HTML.Document.ReadyState line 57, column 3 - line 60, column 17: " + [ v.constructor.name ]);
};
var eqReadyState = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Loading && y instanceof Loading) {
            return true;
        };
        if (x instanceof Interactive && y instanceof Interactive) {
            return true;
        };
        if (x instanceof Complete && y instanceof Complete) {
            return true;
        };
        return false;
    };
});
var ordReadyState = new Data_Ord.Ord(function () {
    return eqReadyState;
}, function (x) {
    return function (y) {
        if (x instanceof Loading && y instanceof Loading) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Loading) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Loading) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Interactive && y instanceof Interactive) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Interactive) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Interactive) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Complete && y instanceof Complete) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at DOM.HTML.Document.ReadyState line 13, column 8 - line 13, column 48: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var enumReadyState = new Data_Enum.Enum(function () {
    return ordReadyState;
}, Data_Enum.defaultPred(toEnumReadyState)(fromEnumReadyState), Data_Enum.defaultSucc(toEnumReadyState)(fromEnumReadyState));
var boundedReadyState = new Data_Bounded.Bounded(function () {
    return ordReadyState;
}, Loading.value, Complete.value);
var boundedEnumReadyState = new Data_Enum.BoundedEnum(function () {
    return boundedReadyState;
}, function () {
    return enumReadyState;
}, 3, fromEnumReadyState, toEnumReadyState);
module.exports = {
    Loading: Loading,
    Interactive: Interactive,
    Complete: Complete,
    printReadyState: printReadyState,
    parseReadyState: parseReadyState,
    toEnumReadyState: toEnumReadyState,
    fromEnumReadyState: fromEnumReadyState,
    eqReadyState: eqReadyState,
    ordReadyState: ordReadyState,
    showReadyState: showReadyState,
    boundedReadyState: boundedReadyState,
    enumReadyState: enumReadyState,
    boundedEnumReadyState: boundedEnumReadyState
};

},{"../Data.Bounded":134,"../Data.Enum":155,"../Data.Eq":157,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Show":276,"../Prelude":358}],78:[function(require,module,exports){
"use strict";

exports._body = function (doc) {
  return function () {
    return doc.body;
  };
};

exports._readyState = function (doc) {
  return function () {
    return doc.readyState;
  };
};

exports._activeElement = function (doc) {
  return function () {
    return doc.activeElement;
  };
};

},{}],79:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM = require("../DOM");
var DOM_HTML_Document_ReadyState = require("../DOM.HTML.Document.ReadyState");
var DOM_HTML_Types = require("../DOM.HTML.Types");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var readyState = function ($1) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(function ($2) {
        return Data_Maybe.fromJust()(DOM_HTML_Document_ReadyState.parseReadyState($2));
    })($foreign._readyState($1));
};
var body = function ($3) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._body($3));
};
var activeElement = function ($4) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._activeElement($4));
};
module.exports = {
    body: body,
    readyState: readyState,
    activeElement: activeElement
};

},{"../Control.Monad.Eff":39,"../Control.Semigroupoid":66,"../DOM":117,"../DOM.HTML.Document.ReadyState":77,"../DOM.HTML.Types":103,"../Data.Functor":180,"../Data.Maybe":234,"../Data.Nullable":247,"../Partial.Unsafe":355,"../Prelude":358,"./foreign":78}],80:[function(require,module,exports){
"use strict";

exports._files = function (dataTransfer) {
  return dataTransfer.files;
};

exports.types = function (dataTransfer) {
  return dataTransfer.types;
};

exports.getDataImpl = function (format) {
  return function (dataTransfer) {
    return function () {
      return dataTransfer.getData(format);
    };
  };
};

exports.setDataImpl = function (format) {
  return function (data) {
    return function (dataTransfer) {
      return function () {
        return dataTransfer.setData(format, data);
      };
    };
  };
};

},{}],81:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var DOM = require("../DOM");
var DOM_File_Types = require("../DOM.File.Types");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_MediaType = require("../Data.MediaType");
var Data_Nullable = require("../Data.Nullable");
var Prelude = require("../Prelude");
var setData = function (v) {
    return function (dat) {
        return function (dt) {
            return $foreign.setDataImpl(v)(dat)(dt);
        };
    };
};
var getData = function (v) {
    return function (dt) {
        return $foreign.getDataImpl(v)(dt);
    };
};
var files = Data_Functor.map(Data_Functor.functorFn)(Data_Nullable.toMaybe)($foreign._files);
module.exports = {
    files: files,
    getData: getData,
    setData: setData,
    types: $foreign.types
};

},{"../Control.Monad.Eff":39,"../DOM":117,"../DOM.File.Types":76,"../Data.Functor":180,"../Data.Maybe":234,"../Data.MediaType":235,"../Data.Nullable":247,"../Prelude":358,"./foreign":80}],82:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var DOM_Event_Types = require("../DOM.Event.Types");
var wheel = "wheel";
var visibilitychange = "visibilitychange";
var unload = "unload";
var transitionend = "transitionend";
var touchstart = "touchstart";
var touchmove = "touchmove";
var touchleave = "touchleave";
var touchenter = "touchenter";
var touchend = "touchend";
var touchcancel = "touchcancel";
var timeupdate = "timeupdate";
var timeout = "timeout";
var suspend = "suspend";
var submit = "submit";
var stalled = "stalled";
var show = "show";
var select = "select";
var seeking = "seeking";
var seeked = "seeked";
var scroll = "scroll";
var resize = "resize";
var reset = "reset";
var readystatechange = "readystatechange";
var ratechange = "ratechange";
var progress = "progress";
var popstate = "popstate";
var playing = "playing";
var play = "play";
var pause = "pause";
var paste = "paste";
var pageshow = "pageshow";
var pagehide = "pagehide";
var open = "open";
var mouseup = "mouseup";
var mouseover = "mouseover";
var mouseout = "mouseout";
var mousemove = "mousemove";
var mouseleave = "mouseleave";
var mouseenter = "mouseenter";
var mousedown = "mousedown";
var message = "message";
var loadstart = "loadstart";
var loadend = "loadend";
var loadedmetadata = "loadedmetadata";
var loadeddata = "loadeddata";
var load = "load";
var keyup = "keyup";
var keypress = "keypress";
var keydown = "keydown";
var invalid = "invalid";
var input = "input";
var hashchange = "hashchange";
var focusout = "focusout";
var focusin = "focusin";
var focus = "focus";
var error = "error";
var drop = "drop";
var dragstart = "dragstart";
var dragover = "dragover";
var dragleave = "dragleave";
var dragexit = "dragexit";
var dragenter = "dragenter";
var dragend = "dragend";
var drag = "drag";
var dblclick = "dblclick";
var cut = "cut";
var copy = "copy";
var contextmenu = "contextmenu";
var compositionupdate = "compositionupdate";
var compositionstart = "compositionstart";
var compositionend = "compositionend";
var complete = "complete";
var click = "click";
var change = "change";
var blur = "blur";
var beforeunload = "beforeunload";
var animationstart = "animationstart";
var animationiteration = "animationiteration";
var animationend = "animationend";
var abort = "abort";
module.exports = {
    abort: abort,
    animationend: animationend,
    animationiteration: animationiteration,
    animationstart: animationstart,
    beforeunload: beforeunload,
    blur: blur,
    change: change,
    click: click,
    complete: complete,
    compositionend: compositionend,
    compositionstart: compositionstart,
    compositionupdate: compositionupdate,
    contextmenu: contextmenu,
    copy: copy,
    cut: cut,
    dblclick: dblclick,
    drag: drag,
    dragend: dragend,
    dragenter: dragenter,
    dragexit: dragexit,
    dragleave: dragleave,
    dragover: dragover,
    dragstart: dragstart,
    drop: drop,
    error: error,
    focus: focus,
    focusin: focusin,
    focusout: focusout,
    hashchange: hashchange,
    input: input,
    invalid: invalid,
    keydown: keydown,
    keypress: keypress,
    keyup: keyup,
    load: load,
    loadeddata: loadeddata,
    loadedmetadata: loadedmetadata,
    loadend: loadend,
    loadstart: loadstart,
    message: message,
    mousedown: mousedown,
    mouseenter: mouseenter,
    mouseleave: mouseleave,
    mousemove: mousemove,
    mouseout: mouseout,
    mouseover: mouseover,
    mouseup: mouseup,
    open: open,
    pagehide: pagehide,
    pageshow: pageshow,
    paste: paste,
    pause: pause,
    play: play,
    playing: playing,
    popstate: popstate,
    progress: progress,
    ratechange: ratechange,
    readystatechange: readystatechange,
    reset: reset,
    resize: resize,
    scroll: scroll,
    seeked: seeked,
    seeking: seeking,
    select: select,
    show: show,
    stalled: stalled,
    submit: submit,
    suspend: suspend,
    timeout: timeout,
    timeupdate: timeupdate,
    touchcancel: touchcancel,
    touchend: touchend,
    touchenter: touchenter,
    touchleave: touchleave,
    touchmove: touchmove,
    touchstart: touchstart,
    transitionend: transitionend,
    unload: unload,
    visibilitychange: visibilitychange,
    wheel: wheel
};

},{"../DOM.Event.Types":75}],83:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var DOM_Event_Types = require("../DOM.Event.Types");
var Data_Foreign = require("../Data.Foreign");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var readHashChangeEvent = Data_Foreign.unsafeReadTagged("HashChangeEvent");
var readErrorEvent = Data_Foreign.unsafeReadTagged("ErrorEvent");
var readDragEvent = Data_Foreign.unsafeReadTagged("DragEvent");
var hashChangeEventToEvent = Unsafe_Coerce.unsafeCoerce;
var errorEventToEvent = Unsafe_Coerce.unsafeCoerce;
var dragEventToEvent = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    dragEventToEvent: dragEventToEvent,
    readDragEvent: readDragEvent,
    errorEventToEvent: errorEventToEvent,
    readErrorEvent: readErrorEvent,
    hashChangeEventToEvent: hashChangeEventToEvent,
    readHashChangeEvent: readHashChangeEvent
};

},{"../DOM.Event.Types":75,"../Data.Foreign":169,"../Unsafe.Coerce":366}],84:[function(require,module,exports){
"use strict";

exports.accept = function (input) {
  return function () {
    return input.accept;
  };
};

exports.setAccept = function (accept) {
  return function (input) {
    return function () {
      input.accept = accept;
    };
  };
};

// ----------------------------------------------------------------------------

exports.alt = function (input) {
  return function () {
    return input.alt;
  };
};

exports.setAlt = function (alt) {
  return function (input) {
    return function () {
      input.alt = alt;
    };
  };
};

// ----------------------------------------------------------------------------

exports.autocomplete = function (input) {
  return function () {
    return input.autocomplete;
  };
};

exports.setAutocomplete = function (autocomplete) {
  return function (input) {
    return function () {
      input.autocomplete = autocomplete;
    };
  };
};

// ----------------------------------------------------------------------------

exports.autofocus = function (input) {
  return function () {
    return input.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (input) {
    return function () {
      input.autofocus = autofocus;
    };
  };
};

// ----------------------------------------------------------------------------

exports.defaultChecked = function (input) {
  return function () {
    return input.defaultChecked;
  };
};

exports.setDefaultChecked = function (defaultChecked) {
  return function (input) {
    return function () {
      input.defaultChecked = defaultChecked;
    };
  };
};

// ----------------------------------------------------------------------------

exports.checked = function (input) {
  return function () {
    return input.checked;
  };
};

exports.setChecked = function (checked) {
  return function (input) {
    return function () {
      input.checked = checked;
    };
  };
};

// ----------------------------------------------------------------------------

exports.dirName = function (input) {
  return function () {
    return input.dirName;
  };
};

exports.setDirName = function (dirName) {
  return function (input) {
    return function () {
      input.dirName = dirName;
    };
  };
};

// ----------------------------------------------------------------------------

exports.disabled = function (input) {
  return function () {
    return input.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (input) {
    return function () {
      input.disabled = disabled;
    };
  };
};

// ----------------------------------------------------------------------------

exports._form = function (input) {
  return function () {
    return input.form;
  };
};

// ----------------------------------------------------------------------------

exports._files = function (input) {
  return function () {
    return input.files;
  };
};

// ----------------------------------------------------------------------------

exports.formAction = function (input) {
  return function () {
    return input.formAction;
  };
};

exports.setFormAction = function (formAction) {
  return function (input) {
    return function () {
      input.formAction = formAction;
    };
  };
};

// ----------------------------------------------------------------------------

exports.formEnctype = function (input) {
  return function () {
    return input.formEnctype;
  };
};

exports.setFormEnctype = function (formEnctype) {
  return function (input) {
    return function () {
      input.formEnctype = formEnctype;
    };
  };
};

// ----------------------------------------------------------------------------

exports.formMethod = function (input) {
  return function () {
    return input.formMethod;
  };
};

exports.setFormMethod = function (formMethod) {
  return function (input) {
    return function () {
      input.formMethod = formMethod;
    };
  };
};

// ----------------------------------------------------------------------------

exports.formNoValidate = function (input) {
  return function () {
    return input.formNoValidate;
  };
};

exports.setFormNoValidate = function (formNoValidate) {
  return function (input) {
    return function () {
      input.formNoValidate = formNoValidate;
    };
  };
};

// ----------------------------------------------------------------------------

exports.formTarget = function (input) {
  return function () {
    return input.formTarget;
  };
};

exports.setFormTarget = function (formTarget) {
  return function (input) {
    return function () {
      input.formTarget = formTarget;
    };
  };
};

// ----------------------------------------------------------------------------

exports.height = function (input) {
  return function () {
    return input.height;
  };
};

exports.setHeight = function (height) {
  return function (input) {
    return function () {
      input.height = height;
    };
  };
};

// ----------------------------------------------------------------------------

exports.indeterminate = function (input) {
  return function () {
    return input.indeterminate;
  };
};

exports.setIndeterminate = function (indeterminate) {
  return function (input) {
    return function () {
      input.indeterminate = indeterminate;
    };
  };
};

// ----------------------------------------------------------------------------

exports._list = function (input) {
  return function () {
    return input.list;
  };
};

// ----------------------------------------------------------------------------

exports.max = function (input) {
  return function () {
    return input.max;
  };
};

exports.setMax = function (max) {
  return function (input) {
    return function () {
      input.max = max;
    };
  };
};

// ----------------------------------------------------------------------------

exports.maxLength = function (input) {
  return function () {
    return input.maxLength;
  };
};

exports.setMaxLength = function (maxLength) {
  return function (input) {
    return function () {
      input.maxLength = maxLength;
    };
  };
};

// ----------------------------------------------------------------------------

exports.min = function (input) {
  return function () {
    return input.min;
  };
};

exports.setMin = function (min) {
  return function (input) {
    return function () {
      input.min = min;
    };
  };
};

// ----------------------------------------------------------------------------

exports.minLength = function (input) {
  return function () {
    return input.minLength;
  };
};

exports.setMinLength = function (minLength) {
  return function (input) {
    return function () {
      input.minLength = minLength;
    };
  };
};

// ----------------------------------------------------------------------------

exports.multiple = function (input) {
  return function () {
    return input.multiple;
  };
};

exports.setMultiple = function (multiple) {
  return function (input) {
    return function () {
      input.multiple = multiple;
    };
  };
};

// ----------------------------------------------------------------------------

exports.name = function (input) {
  return function () {
    return input.name;
  };
};

exports.setName = function (name) {
  return function (input) {
    return function () {
      input.name = name;
    };
  };
};

// ----------------------------------------------------------------------------

exports.pattern = function (input) {
  return function () {
    return input.pattern;
  };
};

exports.setPattern = function (pattern) {
  return function (input) {
    return function () {
      input.pattern = pattern;
    };
  };
};

// ----------------------------------------------------------------------------

exports.placeholder = function (input) {
  return function () {
    return input.placeholder;
  };
};

exports.setPlaceholder = function (placeholder) {
  return function (input) {
    return function () {
      input.placeholder = placeholder;
    };
  };
};

// ----------------------------------------------------------------------------

exports.readOnly = function (input) {
  return function () {
    return input.readOnly;
  };
};

exports.setReadOnly = function (readOnly) {
  return function (input) {
    return function () {
      input.readOnly = readOnly;
    };
  };
};

// ----------------------------------------------------------------------------

exports.required = function (input) {
  return function () {
    return input.required;
  };
};

exports.setRequired = function (required) {
  return function (input) {
    return function () {
      input.required = required;
    };
  };
};

// ----------------------------------------------------------------------------

exports.size = function (input) {
  return function () {
    return input.size;
  };
};

exports.setSize = function (size) {
  return function (input) {
    return function () {
      input.size = size;
    };
  };
};

// ----------------------------------------------------------------------------

exports.src = function (input) {
  return function () {
    return input.src;
  };
};

exports.setSrc = function (src) {
  return function (input) {
    return function () {
      input.src = src;
    };
  };
};

// ----------------------------------------------------------------------------

exports.step = function (input) {
  return function () {
    return input.step;
  };
};

exports.setStep = function (step) {
  return function (input) {
    return function () {
      input.step = step;
    };
  };
};

// ----------------------------------------------------------------------------

exports.type_ = function (input) {
  return function () {
    return input.type;
  };
};

exports.setType = function (type) {
  return function (input) {
    return function () {
      input.type = type;
    };
  };
};

// ----------------------------------------------------------------------------

exports.defaultValue = function (input) {
  return function () {
    return input.defaultValue;
  };
};

exports.setDefaultValue = function (defaultValue) {
  return function (input) {
    return function () {
      input.defaultValue = defaultValue;
    };
  };
};

// ----------------------------------------------------------------------------

exports.value = function (input) {
  return function () {
    return input.value;
  };
};

exports.setValue = function (value) {
  return function (input) {
    return function () {
      input.value = value;
    };
  };
};

// ----------------------------------------------------------------------------

exports.valueAsDate = function (input) {
  return function () {
    return input.valueAsDate;
  };
};

exports.setValueAsDate = function (valueAsDate) {
  return function (input) {
    return function () {
      input.valueAsDate = valueAsDate;
    };
  };
};

// ----------------------------------------------------------------------------

exports.valueAsNumber = function (input) {
  return function () {
    return input.valueAsNumber;
  };
};

exports.setValueAsNumber = function (valueAsNumber) {
  return function (input) {
    return function () {
      input.valueAsNumber = valueAsNumber;
    };
  };
};

// ----------------------------------------------------------------------------

exports.width = function (input) {
  return function () {
    return input.width;
  };
};

exports.setWidth = function (width) {
  return function (input) {
    return function () {
      input.width = width;
    };
  };
};

// ----------------------------------------------------------------------------

exports["stepUp'"] = function (n) {
  return function (input) {
    return function () {
      input.stepUp(n);
    };
  };
};

// ----------------------------------------------------------------------------

exports["stepDown'"] = function (n) {
  return function (input) {
    return function () {
      input.stepDown(n);
    };
  };
};

// ----------------------------------------------------------------------------

exports.value = function (input) {
  return function () {
    return input.value;
  };
};

exports.setValue = function (value) {
  return function (input) {
    return function () {
      input.value = value;
    };
  };
};

// ----------------------------------------------------------------------------

exports.willValidate = function (input) {
  return function () {
    return input.willValidate;
  };
};

// ----------------------------------------------------------------------------

exports.validity = function (input) {
  return function () {
    return input.validity;
  };
};

// ----------------------------------------------------------------------------

exports.validationMessage = function (input) {
  return function () {
    return input.validationMessage;
  };
};

// ----------------------------------------------------------------------------

exports.checkValidity = function (input) {
  return function () {
    return input.checkValidity;
  };
};

// ----------------------------------------------------------------------------

exports.setCustomValidity = function (value) {
  return function (input) {
    return function () {
      input.setCustomValidity(value);
    };
  };
};

// ----------------------------------------------------------------------------

exports.labels = function (input) {
  return function () {
    return input.labels;
  };
};

// ----------------------------------------------------------------------------

exports.select = function (input) {
  return function () {
    input.select();
  };
};

// ----------------------------------------------------------------------------

exports.selectionStart = function (input) {
  return function () {
    return input.selectionStart;
  };
};

exports.setSelectionStart = function (selectionStart) {
  return function (input) {
    return function () {
      input.selectionStart = selectionStart;
    };
  };
};

// ----------------------------------------------------------------------------

exports.selectionEnd = function (input) {
  return function () {
    return input.selectionEnd;
  };
};

exports.setSelectionEnd = function (selectionEnd) {
  return function (input) {
    return function () {
      input.selectionEnd = selectionEnd;
    };
  };
};

// ----------------------------------------------------------------------------

exports.selectionDirection = function (input) {
  return function () {
    return input.selectionDirection;
  };
};

exports.setSelectionDirection = function (selectionDirection) {
  return function (input) {
    return function () {
      input.selectionDirection = selectionDirection;
    };
  };
};

// ----------------------------------------------------------------------------

exports.setRangeText = function (replacement) {
  return function (input) {
    return function () {
      input.setRangeText(replacement);
    };
  };
};

exports["setRangeText'"] = function (replacement) {
  return function (start) {
    return function (end) {
      return function (selectionMode) {
        return function (input) {
          return function () {
            input.setRangeText(replacement, start, end, selectionMode, input);
          };
        };
      };
    };
  };
};

// ----------------------------------------------------------------------------

exports.setSelectionRange = function (start) {
  return function (end) {
    return function (direction) {
      return function (input) {
        return function () {
          input.setSelectionRange(start, end, direction, input);
        };
      };
    };
  };
};

},{}],85:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM = require("../DOM");
var DOM_File_Types = require("../DOM.File.Types");
var DOM_HTML_SelectionMode = require("../DOM.HTML.SelectionMode");
var DOM_HTML_Types = require("../DOM.HTML.Types");
var DOM_Node_Types = require("../DOM.Node.Types");
var Data_Functor = require("../Data.Functor");
var Data_JSDate = require("../Data.JSDate");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Prelude = require("../Prelude");
var stepUp = $foreign["stepUp'"](1);
var stepDown = $foreign["stepDown'"](1);
var list = function ($0) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._list($0));
};
var form = function ($1) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._form($1));
};
var files = function ($2) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._files($2));
};
module.exports = {
    form: form,
    files: files,
    list: list,
    accept: $foreign.accept,
    setAccept: $foreign.setAccept,
    alt: $foreign.alt,
    setAlt: $foreign.setAlt,
    autocomplete: $foreign.autocomplete,
    setAutocomplete: $foreign.setAutocomplete,
    autofocus: $foreign.autofocus,
    setAutofocus: $foreign.setAutofocus,
    defaultChecked: $foreign.defaultChecked,
    setDefaultChecked: $foreign.setDefaultChecked,
    checked: $foreign.checked,
    setChecked: $foreign.setChecked,
    dirName: $foreign.dirName,
    setDirName: $foreign.setDirName,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    formAction: $foreign.formAction,
    setFormAction: $foreign.setFormAction,
    formEnctype: $foreign.formEnctype,
    setFormEnctype: $foreign.setFormEnctype,
    formMethod: $foreign.formMethod,
    setFormMethod: $foreign.setFormMethod,
    formNoValidate: $foreign.formNoValidate,
    setFormNoValidate: $foreign.setFormNoValidate,
    formTarget: $foreign.formTarget,
    setFormTarget: $foreign.setFormTarget,
    height: $foreign.height,
    setHeight: $foreign.setHeight,
    indeterminate: $foreign.indeterminate,
    setIndeterminate: $foreign.setIndeterminate,
    max: $foreign.max,
    setMax: $foreign.setMax,
    maxLength: $foreign.maxLength,
    setMaxLength: $foreign.setMaxLength,
    min: $foreign.min,
    setMin: $foreign.setMin,
    minLength: $foreign.minLength,
    setMinLength: $foreign.setMinLength,
    multiple: $foreign.multiple,
    setMultiple: $foreign.setMultiple,
    name: $foreign.name,
    setName: $foreign.setName,
    pattern: $foreign.pattern,
    setPattern: $foreign.setPattern,
    placeholder: $foreign.placeholder,
    setPlaceholder: $foreign.setPlaceholder,
    readOnly: $foreign.readOnly,
    setReadOnly: $foreign.setReadOnly,
    required: $foreign.required,
    setRequired: $foreign.setRequired,
    size: $foreign.size,
    setSize: $foreign.setSize,
    src: $foreign.src,
    setSrc: $foreign.setSrc,
    step: $foreign.step,
    setStep: $foreign.setStep,
    type_: $foreign.type_,
    setType: $foreign.setType,
    defaultValue: $foreign.defaultValue,
    setDefaultValue: $foreign.setDefaultValue,
    value: $foreign.value,
    setValue: $foreign.setValue,
    valueAsDate: $foreign.valueAsDate,
    setValueAsDate: $foreign.setValueAsDate,
    valueAsNumber: $foreign.valueAsNumber,
    setValueAsNumber: $foreign.setValueAsNumber,
    width: $foreign.width,
    setWidth: $foreign.setWidth,
    "stepUp'": $foreign["stepUp'"],
    "stepDown'": $foreign["stepDown'"],
    willValidate: $foreign.willValidate,
    validity: $foreign.validity,
    validationMessage: $foreign.validationMessage,
    checkValidity: $foreign.checkValidity,
    setCustomValidity: $foreign.setCustomValidity,
    labels: $foreign.labels,
    select: $foreign.select,
    selectionStart: $foreign.selectionStart,
    setSelectionStart: $foreign.setSelectionStart,
    selectionEnd: $foreign.selectionEnd,
    setSelectionEnd: $foreign.setSelectionEnd,
    selectionDirection: $foreign.selectionDirection,
    setSelectionDirection: $foreign.setSelectionDirection,
    setRangeText: $foreign.setRangeText,
    "setRangeText'": $foreign["setRangeText'"],
    setSelectionRange: $foreign.setSelectionRange
};

},{"../Control.Monad.Eff":39,"../Control.Semigroupoid":66,"../DOM":117,"../DOM.File.Types":76,"../DOM.HTML.SelectionMode":101,"../DOM.HTML.Types":103,"../DOM.Node.Types":113,"../Data.Functor":180,"../Data.JSDate":195,"../Data.Maybe":234,"../Data.Nullable":247,"../Prelude":358,"./foreign":84}],86:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var ButtonButton = (function () {
    function ButtonButton() {

    };
    ButtonButton.value = new ButtonButton();
    return ButtonButton;
})();
var ButtonSubmit = (function () {
    function ButtonSubmit() {

    };
    ButtonSubmit.value = new ButtonSubmit();
    return ButtonSubmit;
})();
var ButtonReset = (function () {
    function ButtonReset() {

    };
    ButtonReset.value = new ButtonReset();
    return ButtonReset;
})();
var renderButtonType = function (v) {
    if (v instanceof ButtonButton) {
        return "button";
    };
    if (v instanceof ButtonSubmit) {
        return "submit";
    };
    if (v instanceof ButtonReset) {
        return "reset";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.ButtonType line 9, column 20 - line 12, column 18: " + [ v.constructor.name ]);
};
module.exports = {
    ButtonButton: ButtonButton,
    ButtonSubmit: ButtonSubmit,
    ButtonReset: ButtonReset,
    renderButtonType: renderButtonType
};

},{}],87:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Anonymous = (function () {
    function Anonymous() {

    };
    Anonymous.value = new Anonymous();
    return Anonymous;
})();
var UseCredentials = (function () {
    function UseCredentials() {

    };
    UseCredentials.value = new UseCredentials();
    return UseCredentials;
})();
var renderCrossOriginValue = function (v) {
    if (v instanceof Anonymous) {
        return "anonymous";
    };
    if (v instanceof UseCredentials) {
        return "use-credentials";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.CrossOriginValue line 8, column 26 - line 10, column 21: " + [ v.constructor.name ]);
};
module.exports = {
    Anonymous: Anonymous,
    UseCredentials: UseCredentials,
    renderCrossOriginValue: renderCrossOriginValue
};

},{}],88:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var DirLTR = (function () {
    function DirLTR() {

    };
    DirLTR.value = new DirLTR();
    return DirLTR;
})();
var DirRTL = (function () {
    function DirRTL() {

    };
    DirRTL.value = new DirRTL();
    return DirRTL;
})();
var DirAuto = (function () {
    function DirAuto() {

    };
    DirAuto.value = new DirAuto();
    return DirAuto;
})();
var renderDirValue = function (v) {
    if (v instanceof DirLTR) {
        return "ltr";
    };
    if (v instanceof DirRTL) {
        return "rtl";
    };
    if (v instanceof DirAuto) {
        return "auto";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.DirValue line 9, column 18 - line 12, column 14: " + [ v.constructor.name ]);
};
module.exports = {
    DirLTR: DirLTR,
    DirRTL: DirRTL,
    DirAuto: DirAuto,
    renderDirValue: renderDirValue
};

},{}],89:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var POST = (function () {
    function POST() {

    };
    POST.value = new POST();
    return POST;
})();
var GET = (function () {
    function GET() {

    };
    GET.value = new GET();
    return GET;
})();
var renderFormMethod = function (v) {
    if (v instanceof POST) {
        return "post";
    };
    if (v instanceof GET) {
        return "get";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.FormMethod line 8, column 20 - line 10, column 10: " + [ v.constructor.name ]);
};
module.exports = {
    POST: POST,
    GET: GET,
    renderFormMethod: renderFormMethod
};

},{}],90:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var InputButton = (function () {
    function InputButton() {

    };
    InputButton.value = new InputButton();
    return InputButton;
})();
var InputCheckbox = (function () {
    function InputCheckbox() {

    };
    InputCheckbox.value = new InputCheckbox();
    return InputCheckbox;
})();
var InputColor = (function () {
    function InputColor() {

    };
    InputColor.value = new InputColor();
    return InputColor;
})();
var InputDate = (function () {
    function InputDate() {

    };
    InputDate.value = new InputDate();
    return InputDate;
})();
var InputDatetimeLocal = (function () {
    function InputDatetimeLocal() {

    };
    InputDatetimeLocal.value = new InputDatetimeLocal();
    return InputDatetimeLocal;
})();
var InputEmail = (function () {
    function InputEmail() {

    };
    InputEmail.value = new InputEmail();
    return InputEmail;
})();
var InputFile = (function () {
    function InputFile() {

    };
    InputFile.value = new InputFile();
    return InputFile;
})();
var InputHidden = (function () {
    function InputHidden() {

    };
    InputHidden.value = new InputHidden();
    return InputHidden;
})();
var InputImage = (function () {
    function InputImage() {

    };
    InputImage.value = new InputImage();
    return InputImage;
})();
var InputMonth = (function () {
    function InputMonth() {

    };
    InputMonth.value = new InputMonth();
    return InputMonth;
})();
var InputNumber = (function () {
    function InputNumber() {

    };
    InputNumber.value = new InputNumber();
    return InputNumber;
})();
var InputPassword = (function () {
    function InputPassword() {

    };
    InputPassword.value = new InputPassword();
    return InputPassword;
})();
var InputRadio = (function () {
    function InputRadio() {

    };
    InputRadio.value = new InputRadio();
    return InputRadio;
})();
var InputRange = (function () {
    function InputRange() {

    };
    InputRange.value = new InputRange();
    return InputRange;
})();
var InputReset = (function () {
    function InputReset() {

    };
    InputReset.value = new InputReset();
    return InputReset;
})();
var InputSearch = (function () {
    function InputSearch() {

    };
    InputSearch.value = new InputSearch();
    return InputSearch;
})();
var InputSubmit = (function () {
    function InputSubmit() {

    };
    InputSubmit.value = new InputSubmit();
    return InputSubmit;
})();
var InputTel = (function () {
    function InputTel() {

    };
    InputTel.value = new InputTel();
    return InputTel;
})();
var InputText = (function () {
    function InputText() {

    };
    InputText.value = new InputText();
    return InputText;
})();
var InputTime = (function () {
    function InputTime() {

    };
    InputTime.value = new InputTime();
    return InputTime;
})();
var InputUrl = (function () {
    function InputUrl() {

    };
    InputUrl.value = new InputUrl();
    return InputUrl;
})();
var InputWeek = (function () {
    function InputWeek() {

    };
    InputWeek.value = new InputWeek();
    return InputWeek;
})();
var renderInputType = function (v) {
    if (v instanceof InputButton) {
        return "button";
    };
    if (v instanceof InputCheckbox) {
        return "checkbox";
    };
    if (v instanceof InputColor) {
        return "color";
    };
    if (v instanceof InputDate) {
        return "date";
    };
    if (v instanceof InputDatetimeLocal) {
        return "datetime-local";
    };
    if (v instanceof InputEmail) {
        return "email";
    };
    if (v instanceof InputFile) {
        return "file";
    };
    if (v instanceof InputHidden) {
        return "hidden";
    };
    if (v instanceof InputImage) {
        return "image";
    };
    if (v instanceof InputMonth) {
        return "month";
    };
    if (v instanceof InputNumber) {
        return "number";
    };
    if (v instanceof InputPassword) {
        return "password";
    };
    if (v instanceof InputRadio) {
        return "radio";
    };
    if (v instanceof InputRange) {
        return "range";
    };
    if (v instanceof InputReset) {
        return "reset";
    };
    if (v instanceof InputSearch) {
        return "search";
    };
    if (v instanceof InputSubmit) {
        return "submit";
    };
    if (v instanceof InputTel) {
        return "tel";
    };
    if (v instanceof InputText) {
        return "text";
    };
    if (v instanceof InputTime) {
        return "time";
    };
    if (v instanceof InputUrl) {
        return "url";
    };
    if (v instanceof InputWeek) {
        return "week";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType line 28, column 19 - line 50, column 16: " + [ v.constructor.name ]);
};
module.exports = {
    InputButton: InputButton,
    InputCheckbox: InputCheckbox,
    InputColor: InputColor,
    InputDate: InputDate,
    InputDatetimeLocal: InputDatetimeLocal,
    InputEmail: InputEmail,
    InputFile: InputFile,
    InputHidden: InputHidden,
    InputImage: InputImage,
    InputMonth: InputMonth,
    InputNumber: InputNumber,
    InputPassword: InputPassword,
    InputRadio: InputRadio,
    InputRange: InputRange,
    InputReset: InputReset,
    InputSearch: InputSearch,
    InputSubmit: InputSubmit,
    InputTel: InputTel,
    InputText: InputText,
    InputTime: InputTime,
    InputUrl: InputUrl,
    InputWeek: InputWeek,
    renderInputType: renderInputType
};

},{}],91:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var KindSubtitles = (function () {
    function KindSubtitles() {

    };
    KindSubtitles.value = new KindSubtitles();
    return KindSubtitles;
})();
var KindCaptions = (function () {
    function KindCaptions() {

    };
    KindCaptions.value = new KindCaptions();
    return KindCaptions;
})();
var KindDescriptions = (function () {
    function KindDescriptions() {

    };
    KindDescriptions.value = new KindDescriptions();
    return KindDescriptions;
})();
var KindChapters = (function () {
    function KindChapters() {

    };
    KindChapters.value = new KindChapters();
    return KindChapters;
})();
var KindMetadata = (function () {
    function KindMetadata() {

    };
    KindMetadata.value = new KindMetadata();
    return KindMetadata;
})();
var renderKindValue = function (v) {
    if (v instanceof KindSubtitles) {
        return "subtitles";
    };
    if (v instanceof KindCaptions) {
        return "captions";
    };
    if (v instanceof KindDescriptions) {
        return "descriptions";
    };
    if (v instanceof KindChapters) {
        return "chapters";
    };
    if (v instanceof KindMetadata) {
        return "metadata";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.KindValue line 11, column 19 - line 16, column 19: " + [ v.constructor.name ]);
};
module.exports = {
    KindSubtitles: KindSubtitles,
    KindCaptions: KindCaptions,
    KindDescriptions: KindDescriptions,
    KindChapters: KindChapters,
    KindMetadata: KindMetadata,
    renderKindValue: renderKindValue
};

},{}],92:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var MenuList = (function () {
    function MenuList() {

    };
    MenuList.value = new MenuList();
    return MenuList;
})();
var MenuContext = (function () {
    function MenuContext() {

    };
    MenuContext.value = new MenuContext();
    return MenuContext;
})();
var MenuToolbar = (function () {
    function MenuToolbar() {

    };
    MenuToolbar.value = new MenuToolbar();
    return MenuToolbar;
})();
var renderMenuType = function (v) {
    if (v instanceof MenuList) {
        return "list";
    };
    if (v instanceof MenuContext) {
        return "context";
    };
    if (v instanceof MenuToolbar) {
        return "toolbar";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.MenuType line 9, column 18 - line 12, column 18: " + [ v.constructor.name ]);
};
module.exports = {
    MenuList: MenuList,
    MenuContext: MenuContext,
    MenuToolbar: MenuToolbar,
    renderMenuType: renderMenuType
};

},{}],93:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var MenuitemCommand = (function () {
    function MenuitemCommand() {

    };
    MenuitemCommand.value = new MenuitemCommand();
    return MenuitemCommand;
})();
var MenuitemCheckbox = (function () {
    function MenuitemCheckbox() {

    };
    MenuitemCheckbox.value = new MenuitemCheckbox();
    return MenuitemCheckbox;
})();
var MenuitemRadio = (function () {
    function MenuitemRadio() {

    };
    MenuitemRadio.value = new MenuitemRadio();
    return MenuitemRadio;
})();
var renderMenuitemType = function (v) {
    if (v instanceof MenuitemCommand) {
        return "command";
    };
    if (v instanceof MenuitemCheckbox) {
        return "checkbox";
    };
    if (v instanceof MenuitemRadio) {
        return "radio";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.MenuitemType line 9, column 22 - line 12, column 20: " + [ v.constructor.name ]);
};
module.exports = {
    MenuitemCommand: MenuitemCommand,
    MenuitemCheckbox: MenuitemCheckbox,
    MenuitemRadio: MenuitemRadio,
    renderMenuitemType: renderMenuitemType
};

},{}],94:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var On = (function () {
    function On() {

    };
    On.value = new On();
    return On;
})();
var Off = (function () {
    function Off() {

    };
    Off.value = new Off();
    return Off;
})();
var renderOnOff = function (v) {
    if (v instanceof On) {
        return "on";
    };
    if (v instanceof Off) {
        return "off";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.OnOff line 8, column 15 - line 10, column 10: " + [ v.constructor.name ]);
};
module.exports = {
    On: On,
    Off: Off,
    renderOnOff: renderOnOff
};

},{}],95:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Uppercase = (function () {
    function Uppercase() {

    };
    Uppercase.value = new Uppercase();
    return Uppercase;
})();
var Lowercase = (function () {
    function Lowercase() {

    };
    Lowercase.value = new Lowercase();
    return Lowercase;
})();
var NumeralDecimal = (function () {
    function NumeralDecimal() {

    };
    NumeralDecimal.value = new NumeralDecimal();
    return NumeralDecimal;
})();
var NumeralRoman = (function () {
    function NumeralRoman(value0) {
        this.value0 = value0;
    };
    NumeralRoman.create = function (value0) {
        return new NumeralRoman(value0);
    };
    return NumeralRoman;
})();
var OrderedListNumeric = (function () {
    function OrderedListNumeric(value0) {
        this.value0 = value0;
    };
    OrderedListNumeric.create = function (value0) {
        return new OrderedListNumeric(value0);
    };
    return OrderedListNumeric;
})();
var OrderedListAlphabetic = (function () {
    function OrderedListAlphabetic(value0) {
        this.value0 = value0;
    };
    OrderedListAlphabetic.create = function (value0) {
        return new OrderedListAlphabetic(value0);
    };
    return OrderedListAlphabetic;
})();
var renderOrderedListType = function (v) {
    if (v instanceof OrderedListNumeric && v.value0 instanceof NumeralDecimal) {
        return "1";
    };
    if (v instanceof OrderedListNumeric && (v.value0 instanceof NumeralRoman && v.value0.value0 instanceof Lowercase)) {
        return "i";
    };
    if (v instanceof OrderedListNumeric && (v.value0 instanceof NumeralRoman && v.value0.value0 instanceof Uppercase)) {
        return "I";
    };
    if (v instanceof OrderedListAlphabetic && v.value0 instanceof Lowercase) {
        return "a";
    };
    if (v instanceof OrderedListAlphabetic && v.value0 instanceof Uppercase) {
        return "A";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.OrderedListType line 16, column 25 - line 21, column 38: " + [ v.constructor.name ]);
};
module.exports = {
    Uppercase: Uppercase,
    Lowercase: Lowercase,
    NumeralDecimal: NumeralDecimal,
    NumeralRoman: NumeralRoman,
    OrderedListNumeric: OrderedListNumeric,
    OrderedListAlphabetic: OrderedListAlphabetic,
    renderOrderedListType: renderOrderedListType
};

},{}],96:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var PreloadNone = (function () {
    function PreloadNone() {

    };
    PreloadNone.value = new PreloadNone();
    return PreloadNone;
})();
var PreloadAuto = (function () {
    function PreloadAuto() {

    };
    PreloadAuto.value = new PreloadAuto();
    return PreloadAuto;
})();
var PreloadMetadata = (function () {
    function PreloadMetadata() {

    };
    PreloadMetadata.value = new PreloadMetadata();
    return PreloadMetadata;
})();
var renderPreloadValue = function (v) {
    if (v instanceof PreloadNone) {
        return "none";
    };
    if (v instanceof PreloadAuto) {
        return "auto";
    };
    if (v instanceof PreloadMetadata) {
        return "metadata";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.PreloadValue line 9, column 22 - line 12, column 22: " + [ v.constructor.name ]);
};
module.exports = {
    PreloadNone: PreloadNone,
    PreloadAuto: PreloadAuto,
    PreloadMetadata: PreloadMetadata,
    renderPreloadValue: renderPreloadValue
};

},{}],97:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var ScopeRow = (function () {
    function ScopeRow() {

    };
    ScopeRow.value = new ScopeRow();
    return ScopeRow;
})();
var ScopeCol = (function () {
    function ScopeCol() {

    };
    ScopeCol.value = new ScopeCol();
    return ScopeCol;
})();
var ScopeRowGroup = (function () {
    function ScopeRowGroup() {

    };
    ScopeRowGroup.value = new ScopeRowGroup();
    return ScopeRowGroup;
})();
var ScopeColGroup = (function () {
    function ScopeColGroup() {

    };
    ScopeColGroup.value = new ScopeColGroup();
    return ScopeColGroup;
})();
var ScopeAuto = (function () {
    function ScopeAuto() {

    };
    ScopeAuto.value = new ScopeAuto();
    return ScopeAuto;
})();
var renderScopeValue = function (v) {
    if (v instanceof ScopeRow) {
        return "row";
    };
    if (v instanceof ScopeCol) {
        return "col";
    };
    if (v instanceof ScopeRowGroup) {
        return "rowgroup";
    };
    if (v instanceof ScopeColGroup) {
        return "colgroup";
    };
    if (v instanceof ScopeAuto) {
        return "auto";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.ScopeValue line 11, column 20 - line 16, column 16: " + [ v.constructor.name ]);
};
module.exports = {
    ScopeRow: ScopeRow,
    ScopeCol: ScopeCol,
    ScopeRowGroup: ScopeRowGroup,
    ScopeColGroup: ScopeColGroup,
    ScopeAuto: ScopeAuto,
    renderScopeValue: renderScopeValue
};

},{}],98:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Any = (function () {
    function Any() {

    };
    Any.value = new Any();
    return Any;
})();
var Step = (function () {
    function Step(value0) {
        this.value0 = value0;
    };
    Step.create = function (value0) {
        return new Step(value0);
    };
    return Step;
})();
var renderStepValue = function (v) {
    if (v instanceof Any) {
        return "any";
    };
    if (v instanceof Step) {
        return Data_Show.show(Data_Show.showNumber)(v.value0);
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.StepValue line 10, column 19 - line 12, column 18: " + [ v.constructor.name ]);
};
module.exports = {
    Any: Any,
    Step: Step,
    renderStepValue: renderStepValue
};

},{"../Data.Show":276,"../Prelude":358}],99:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Hard = (function () {
    function Hard() {

    };
    Hard.value = new Hard();
    return Hard;
})();
var Soft = (function () {
    function Soft() {

    };
    Soft.value = new Soft();
    return Soft;
})();
var renderWrapValue = function (v) {
    if (v instanceof Hard) {
        return "hard";
    };
    if (v instanceof Soft) {
        return "soft";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.WrapValue line 8, column 19 - line 10, column 11: " + [ v.constructor.name ]);
};
module.exports = {
    Hard: Hard,
    Soft: Soft,
    renderWrapValue: renderWrapValue
};

},{}],100:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var DOM_Event_ClipboardEvent = require("../DOM.Event.ClipboardEvent");
var DOM_Event_Types = require("../DOM.Event.Types");
var DOM_HTML_Event_Types = require("../DOM.HTML.Event.Types");
var DOM_HTML_Indexed_ButtonType = require("../DOM.HTML.Indexed.ButtonType");
var DOM_HTML_Indexed_CrossOriginValue = require("../DOM.HTML.Indexed.CrossOriginValue");
var DOM_HTML_Indexed_DirValue = require("../DOM.HTML.Indexed.DirValue");
var DOM_HTML_Indexed_FormMethod = require("../DOM.HTML.Indexed.FormMethod");
var DOM_HTML_Indexed_InputType = require("../DOM.HTML.Indexed.InputType");
var DOM_HTML_Indexed_KindValue = require("../DOM.HTML.Indexed.KindValue");
var DOM_HTML_Indexed_MenuType = require("../DOM.HTML.Indexed.MenuType");
var DOM_HTML_Indexed_MenuitemType = require("../DOM.HTML.Indexed.MenuitemType");
var DOM_HTML_Indexed_OnOff = require("../DOM.HTML.Indexed.OnOff");
var DOM_HTML_Indexed_OrderedListType = require("../DOM.HTML.Indexed.OrderedListType");
var DOM_HTML_Indexed_PreloadValue = require("../DOM.HTML.Indexed.PreloadValue");
var DOM_HTML_Indexed_ScopeValue = require("../DOM.HTML.Indexed.ScopeValue");
var DOM_HTML_Indexed_StepValue = require("../DOM.HTML.Indexed.StepValue");
var DOM_HTML_Indexed_WrapValue = require("../DOM.HTML.Indexed.WrapValue");
var Data_DateTime = require("../Data.DateTime");
var Data_MediaType = require("../Data.MediaType");
module.exports = {};

},{"../DOM.Event.ClipboardEvent":68,"../DOM.Event.Types":75,"../DOM.HTML.Event.Types":83,"../DOM.HTML.Indexed.ButtonType":86,"../DOM.HTML.Indexed.CrossOriginValue":87,"../DOM.HTML.Indexed.DirValue":88,"../DOM.HTML.Indexed.FormMethod":89,"../DOM.HTML.Indexed.InputType":90,"../DOM.HTML.Indexed.KindValue":91,"../DOM.HTML.Indexed.MenuType":92,"../DOM.HTML.Indexed.MenuitemType":93,"../DOM.HTML.Indexed.OnOff":94,"../DOM.HTML.Indexed.OrderedListType":95,"../DOM.HTML.Indexed.PreloadValue":96,"../DOM.HTML.Indexed.ScopeValue":97,"../DOM.HTML.Indexed.StepValue":98,"../DOM.HTML.Indexed.WrapValue":99,"../Data.DateTime":150,"../Data.MediaType":235}],101:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var SelectionMode = function (x) {
    return x;
};
var start = "start";
var showSelectionMode = new Data_Show.Show(function (v) {
    return "(SelectionMode " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var select = "select";
var runSelectionMode = function (v) {
    return v;
};
var preserve = "preserve";
var eqSelectionMode = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return v === v1;
    };
});
var ordSelectionMode = new Data_Ord.Ord(function () {
    return eqSelectionMode;
}, function (v) {
    return function (v1) {
        return Data_Ord.compare(Data_Ord.ordString)(v)(v1);
    };
});
var end = "end";
module.exports = {
    runSelectionMode: runSelectionMode,
    select: select,
    start: start,
    end: end,
    preserve: preserve,
    eqSelectionMode: eqSelectionMode,
    ordSelectionMode: ordSelectionMode,
    showSelectionMode: showSelectionMode
};

},{"../Data.Eq":157,"../Data.Ord":251,"../Data.Semigroup":271,"../Data.Show":276,"../Prelude":358}],102:[function(require,module,exports){
"use strict";

exports._readHTMLElement = function (failure) {
  return function (success) {
    return function (value) {
      var tag = Object.prototype.toString.call(value);
      if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
        return success(value);
      } else {
        return failure(tag);
      }
    };
  };
};

},{}],103:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM_Event_Types = require("../DOM.Event.Types");
var DOM_Node_Types = require("../DOM.Node.Types");
var Data_Either = require("../Data.Either");
var Data_Foreign = require("../Data.Foreign");
var Data_Identity = require("../Data.Identity");
var Data_List_Types = require("../Data.List.Types");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var windowToEventTarget = Unsafe_Coerce.unsafeCoerce;
var readHTMLVideoElement = Data_Foreign.unsafeReadTagged("HTMLVideoElement");
var readHTMLUListElement = Data_Foreign.unsafeReadTagged("HTMLUListElement");
var readHTMLTrackElement = Data_Foreign.unsafeReadTagged("HTMLTrackElement");
var readHTMLTitleElement = Data_Foreign.unsafeReadTagged("HTMLTitleElement");
var readHTMLTimeElement = Data_Foreign.unsafeReadTagged("HTMLTimeElement");
var readHTMLTextAreaElement = Data_Foreign.unsafeReadTagged("HTMLTextAreaElement");
var readHTMLTemplateElement = Data_Foreign.unsafeReadTagged("HTMLTemplateElement");
var readHTMLTableSectionElement = Data_Foreign.unsafeReadTagged("HTMLTableSectionElement");
var readHTMLTableRowElement = Data_Foreign.unsafeReadTagged("HTMLTableRowElement");
var readHTMLTableHeaderCellElement = Data_Foreign.unsafeReadTagged("HTMLTableHeaderCellElement");
var readHTMLTableElement = Data_Foreign.unsafeReadTagged("HTMLTableElement");
var readHTMLTableDataCellElement = Data_Foreign.unsafeReadTagged("HTMLTableDataCellElement");
var readHTMLTableColElement = Data_Foreign.unsafeReadTagged("HTMLTableColElement");
var readHTMLTableCellElement = Data_Foreign.unsafeReadTagged("HTMLTableCellElement");
var readHTMLTableCaptionElement = Data_Foreign.unsafeReadTagged("HTMLTableCaptionElement");
var readHTMLStyleElement = Data_Foreign.unsafeReadTagged("HTMLStyleElement");
var readHTMLSpanElement = Data_Foreign.unsafeReadTagged("HTMLSpanElement");
var readHTMLSourceElement = Data_Foreign.unsafeReadTagged("HTMLSourceElement");
var readHTMLSelectElement = Data_Foreign.unsafeReadTagged("HTMLSelectElement");
var readHTMLScriptElement = Data_Foreign.unsafeReadTagged("HTMLScriptElement");
var readHTMLQuoteElement = Data_Foreign.unsafeReadTagged("HTMLQuoteElement");
var readHTMLProgressElement = Data_Foreign.unsafeReadTagged("HTMLProgressElement");
var readHTMLPreElement = Data_Foreign.unsafeReadTagged("HTMLPreElement");
var readHTMLParamElement = Data_Foreign.unsafeReadTagged("HTMLParamElement");
var readHTMLParagraphElement = Data_Foreign.unsafeReadTagged("HTMLParagraphElement");
var readHTMLOutputElement = Data_Foreign.unsafeReadTagged("HTMLOutputElement");
var readHTMLOptionElement = Data_Foreign.unsafeReadTagged("HTMLOptionElement");
var readHTMLOptGroupElement = Data_Foreign.unsafeReadTagged("HTMLOptGroupElement");
var readHTMLObjectElement = Data_Foreign.unsafeReadTagged("HTMLObjectElement");
var readHTMLOListElement = Data_Foreign.unsafeReadTagged("HTMLOListElement");
var readHTMLModElement = Data_Foreign.unsafeReadTagged("HTMLModElement");
var readHTMLMeterElement = Data_Foreign.unsafeReadTagged("HTMLMeterElement");
var readHTMLMetaElement = Data_Foreign.unsafeReadTagged("HTMLMetaElement");
var readHTMLMediaElement = Data_Foreign.unsafeReadTagged("HTMLMediaElement");
var readHTMLMapElement = Data_Foreign.unsafeReadTagged("HTMLMapElement");
var readHTMLLinkElement = Data_Foreign.unsafeReadTagged("HTMLLinkElement");
var readHTMLLegendElement = Data_Foreign.unsafeReadTagged("HTMLLegendElement");
var readHTMLLabelElement = Data_Foreign.unsafeReadTagged("HTMLLabelElement");
var readHTMLLIElement = Data_Foreign.unsafeReadTagged("HTMLLIElement");
var readHTMLKeygenElement = Data_Foreign.unsafeReadTagged("HTMLKeygenElement");
var readHTMLInputElement = Data_Foreign.unsafeReadTagged("HTMLInputElement");
var readHTMLImageElement = Data_Foreign.unsafeReadTagged("HTMLImageElement");
var readHTMLIFrameElement = Data_Foreign.unsafeReadTagged("HTMLIFrameElement");
var readHTMLHtmlElement = Data_Foreign.unsafeReadTagged("HTMLHtmlElement");
var readHTMLHeadingElement = Data_Foreign.unsafeReadTagged("HTMLHeadingElement");
var readHTMLHeadElement = Data_Foreign.unsafeReadTagged("HTMLHeadElement");
var readHTMLHRElement = Data_Foreign.unsafeReadTagged("HTMLHRElement");
var readHTMLFormElement = Data_Foreign.unsafeReadTagged("HTMLFormElement");
var readHTMLFieldSetElement = Data_Foreign.unsafeReadTagged("HTMLFieldSetElement");
var readHTMLEmbedElement = Data_Foreign.unsafeReadTagged("HTMLEmbedElement");
var readHTMLElement = $foreign._readHTMLElement(function ($0) {
    return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Left.create(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Data_Foreign.TypeMismatch.create("HTMLElement")($0))));
})(function ($1) {
    return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Right.create($1));
});
var readHTMLDocument = Data_Foreign.unsafeReadTagged("HTMLDocument");
var readHTMLDivElement = Data_Foreign.unsafeReadTagged("HTMLDivElement");
var readHTMLDataListElement = Data_Foreign.unsafeReadTagged("HTMLDataListElement");
var readHTMLDataElement = Data_Foreign.unsafeReadTagged("HTMLDataElement");
var readHTMLDListElement = Data_Foreign.unsafeReadTagged("HTMLDListElement");
var readHTMLCanvasElement = Data_Foreign.unsafeReadTagged("HTMLCanvasElement");
var readHTMLButtonElement = Data_Foreign.unsafeReadTagged("HTMLButtonElement");
var readHTMLBodyElement = Data_Foreign.unsafeReadTagged("HTMLBodyElement");
var readHTMLBaseElement = Data_Foreign.unsafeReadTagged("HTMLBaseElement");
var readHTMLBRElement = Data_Foreign.unsafeReadTagged("HTMLBRElement");
var readHTMLAudioElement = Data_Foreign.unsafeReadTagged("HTMLAudioElement");
var readHTMLAreaElement = Data_Foreign.unsafeReadTagged("HTMLAreaElement");
var readHTMLAnchorElement = Data_Foreign.unsafeReadTagged("HTMLAnchorElement");
var htmlVideoElementToHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
var htmlUListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTrackElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTitleElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTimeElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTextAreaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTemplateElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTableSectionElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTableRowElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTableHeaderCellElementToHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
var htmlTableElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTableDataCellElementToHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
var htmlTableColElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTableCellElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTableCaptionElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlStyleElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlSpanElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlSourceElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlSelectElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlScriptElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlQuoteElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlProgressElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlPreElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlParamElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlParagraphElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlOutputElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlOptionElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlOptGroupElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlObjectElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlOListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlModElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlMeterElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlMetaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlMediaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlMapElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlLinkElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlLegendElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlLabelElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlLIElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlKeygenElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlInputElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlImageElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlIFrameElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlHtmlElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlHeadingElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlHeadElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlHRElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlFormElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlFieldSetElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlEmbedElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlElementToParentNode = Unsafe_Coerce.unsafeCoerce;
var htmlElementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var htmlElementToNode = Unsafe_Coerce.unsafeCoerce;
var htmlElementToEventTarget = Unsafe_Coerce.unsafeCoerce;
var htmlElementToElement = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToParentNode = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToNode = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToEventTarget = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToDocument = Unsafe_Coerce.unsafeCoerce;
var htmlDivElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlDataListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlDataElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlDListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlCanvasElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlButtonElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlBodyElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlBaseElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlBRElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlAudioElementToHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
var htmlAreaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlAnchorElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    windowToEventTarget: windowToEventTarget,
    htmlDocumentToDocument: htmlDocumentToDocument,
    htmlDocumentToNonElementParentNode: htmlDocumentToNonElementParentNode,
    htmlDocumentToParentNode: htmlDocumentToParentNode,
    htmlDocumentToNode: htmlDocumentToNode,
    htmlDocumentToEventTarget: htmlDocumentToEventTarget,
    readHTMLDocument: readHTMLDocument,
    htmlElementToElement: htmlElementToElement,
    htmlElementToParentNode: htmlElementToParentNode,
    htmlElementToNonDocumentTypeChildNode: htmlElementToNonDocumentTypeChildNode,
    htmlElementToNode: htmlElementToNode,
    htmlElementToEventTarget: htmlElementToEventTarget,
    readHTMLElement: readHTMLElement,
    htmlHtmlElementToHTMLElement: htmlHtmlElementToHTMLElement,
    readHTMLHtmlElement: readHTMLHtmlElement,
    htmlHeadElementToHTMLElement: htmlHeadElementToHTMLElement,
    readHTMLHeadElement: readHTMLHeadElement,
    htmlTitleElementToHTMLElement: htmlTitleElementToHTMLElement,
    readHTMLTitleElement: readHTMLTitleElement,
    htmlBaseElementToHTMLElement: htmlBaseElementToHTMLElement,
    readHTMLBaseElement: readHTMLBaseElement,
    htmlLinkElementToHTMLElement: htmlLinkElementToHTMLElement,
    readHTMLLinkElement: readHTMLLinkElement,
    htmlMetaElementToHTMLElement: htmlMetaElementToHTMLElement,
    readHTMLMetaElement: readHTMLMetaElement,
    htmlStyleElementToHTMLElement: htmlStyleElementToHTMLElement,
    readHTMLStyleElement: readHTMLStyleElement,
    htmlBodyElementToHTMLElement: htmlBodyElementToHTMLElement,
    readHTMLBodyElement: readHTMLBodyElement,
    htmlHeadingElementToHTMLElement: htmlHeadingElementToHTMLElement,
    readHTMLHeadingElement: readHTMLHeadingElement,
    htmlParagraphElementToHTMLElement: htmlParagraphElementToHTMLElement,
    readHTMLParagraphElement: readHTMLParagraphElement,
    htmlHRElementToHTMLElement: htmlHRElementToHTMLElement,
    readHTMLHRElement: readHTMLHRElement,
    htmlPreElementToHTMLElement: htmlPreElementToHTMLElement,
    readHTMLPreElement: readHTMLPreElement,
    htmlQuoteElementToHTMLElement: htmlQuoteElementToHTMLElement,
    readHTMLQuoteElement: readHTMLQuoteElement,
    htmlOListElementToHTMLElement: htmlOListElementToHTMLElement,
    readHTMLOListElement: readHTMLOListElement,
    htmlUListElementToHTMLElement: htmlUListElementToHTMLElement,
    readHTMLUListElement: readHTMLUListElement,
    htmlLIElementToHTMLElement: htmlLIElementToHTMLElement,
    readHTMLLIElement: readHTMLLIElement,
    htmlDListElementToHTMLElement: htmlDListElementToHTMLElement,
    readHTMLDListElement: readHTMLDListElement,
    htmlDivElementToHTMLElement: htmlDivElementToHTMLElement,
    readHTMLDivElement: readHTMLDivElement,
    htmlAnchorElementToHTMLElement: htmlAnchorElementToHTMLElement,
    readHTMLAnchorElement: readHTMLAnchorElement,
    htmlDataElementToHTMLElement: htmlDataElementToHTMLElement,
    readHTMLDataElement: readHTMLDataElement,
    htmlTimeElementToHTMLElement: htmlTimeElementToHTMLElement,
    readHTMLTimeElement: readHTMLTimeElement,
    htmlSpanElementToHTMLElement: htmlSpanElementToHTMLElement,
    readHTMLSpanElement: readHTMLSpanElement,
    htmlBRElementToHTMLElement: htmlBRElementToHTMLElement,
    readHTMLBRElement: readHTMLBRElement,
    htmlModElementToHTMLElement: htmlModElementToHTMLElement,
    readHTMLModElement: readHTMLModElement,
    htmlImageElementToHTMLElement: htmlImageElementToHTMLElement,
    readHTMLImageElement: readHTMLImageElement,
    htmlIFrameElementToHTMLElement: htmlIFrameElementToHTMLElement,
    readHTMLIFrameElement: readHTMLIFrameElement,
    htmlEmbedElementToHTMLElement: htmlEmbedElementToHTMLElement,
    readHTMLEmbedElement: readHTMLEmbedElement,
    htmlObjectElementToHTMLElement: htmlObjectElementToHTMLElement,
    readHTMLObjectElement: readHTMLObjectElement,
    htmlParamElementToHTMLElement: htmlParamElementToHTMLElement,
    readHTMLParamElement: readHTMLParamElement,
    htmlMediaElementToHTMLElement: htmlMediaElementToHTMLElement,
    readHTMLMediaElement: readHTMLMediaElement,
    htmlAudioElementToHTMLMediaElement: htmlAudioElementToHTMLMediaElement,
    readHTMLAudioElement: readHTMLAudioElement,
    htmlVideoElementToHTMLMediaElement: htmlVideoElementToHTMLMediaElement,
    readHTMLVideoElement: readHTMLVideoElement,
    htmlSourceElementToHTMLElement: htmlSourceElementToHTMLElement,
    readHTMLSourceElement: readHTMLSourceElement,
    htmlTrackElementToHTMLElement: htmlTrackElementToHTMLElement,
    readHTMLTrackElement: readHTMLTrackElement,
    htmlMapElementToHTMLElement: htmlMapElementToHTMLElement,
    readHTMLMapElement: readHTMLMapElement,
    htmlAreaElementToHTMLElement: htmlAreaElementToHTMLElement,
    readHTMLAreaElement: readHTMLAreaElement,
    htmlTableElementToHTMLElement: htmlTableElementToHTMLElement,
    readHTMLTableElement: readHTMLTableElement,
    htmlTableCaptionElementToHTMLElement: htmlTableCaptionElementToHTMLElement,
    readHTMLTableCaptionElement: readHTMLTableCaptionElement,
    htmlTableColElementToHTMLElement: htmlTableColElementToHTMLElement,
    readHTMLTableColElement: readHTMLTableColElement,
    htmlTableSectionElementToHTMLElement: htmlTableSectionElementToHTMLElement,
    readHTMLTableSectionElement: readHTMLTableSectionElement,
    htmlTableRowElementToHTMLElement: htmlTableRowElementToHTMLElement,
    readHTMLTableRowElement: readHTMLTableRowElement,
    htmlTableCellElementToHTMLElement: htmlTableCellElementToHTMLElement,
    readHTMLTableCellElement: readHTMLTableCellElement,
    htmlTableDataCellElementToHTMLTableCellElement: htmlTableDataCellElementToHTMLTableCellElement,
    readHTMLTableDataCellElement: readHTMLTableDataCellElement,
    htmlTableHeaderCellElementToHTMLTableCellElement: htmlTableHeaderCellElementToHTMLTableCellElement,
    readHTMLTableHeaderCellElement: readHTMLTableHeaderCellElement,
    htmlFormElementToHTMLElement: htmlFormElementToHTMLElement,
    readHTMLFormElement: readHTMLFormElement,
    htmlLabelElementToHTMLElement: htmlLabelElementToHTMLElement,
    readHTMLLabelElement: readHTMLLabelElement,
    htmlInputElementToHTMLElement: htmlInputElementToHTMLElement,
    readHTMLInputElement: readHTMLInputElement,
    htmlButtonElementToHTMLElement: htmlButtonElementToHTMLElement,
    readHTMLButtonElement: readHTMLButtonElement,
    htmlSelectElementToHTMLElement: htmlSelectElementToHTMLElement,
    readHTMLSelectElement: readHTMLSelectElement,
    htmlDataListElementToHTMLElement: htmlDataListElementToHTMLElement,
    readHTMLDataListElement: readHTMLDataListElement,
    htmlOptGroupElementToHTMLElement: htmlOptGroupElementToHTMLElement,
    readHTMLOptGroupElement: readHTMLOptGroupElement,
    htmlOptionElementToHTMLElement: htmlOptionElementToHTMLElement,
    readHTMLOptionElement: readHTMLOptionElement,
    htmlTextAreaElementToHTMLElement: htmlTextAreaElementToHTMLElement,
    readHTMLTextAreaElement: readHTMLTextAreaElement,
    htmlKeygenElementToHTMLElement: htmlKeygenElementToHTMLElement,
    readHTMLKeygenElement: readHTMLKeygenElement,
    htmlOutputElementToHTMLElement: htmlOutputElementToHTMLElement,
    readHTMLOutputElement: readHTMLOutputElement,
    htmlProgressElementToHTMLElement: htmlProgressElementToHTMLElement,
    readHTMLProgressElement: readHTMLProgressElement,
    htmlMeterElementToHTMLElement: htmlMeterElementToHTMLElement,
    readHTMLMeterElement: readHTMLMeterElement,
    htmlFieldSetElementToHTMLElement: htmlFieldSetElementToHTMLElement,
    readHTMLFieldSetElement: readHTMLFieldSetElement,
    htmlLegendElementToHTMLElement: htmlLegendElementToHTMLElement,
    readHTMLLegendElement: readHTMLLegendElement,
    htmlScriptElementToHTMLElement: htmlScriptElementToHTMLElement,
    readHTMLScriptElement: readHTMLScriptElement,
    htmlTemplateElementToHTMLElement: htmlTemplateElementToHTMLElement,
    readHTMLTemplateElement: readHTMLTemplateElement,
    htmlCanvasElementToHTMLElement: htmlCanvasElementToHTMLElement,
    readHTMLCanvasElement: readHTMLCanvasElement
};

},{"../Control.Applicative":5,"../Control.Monad.Eff":39,"../Control.Monad.Except.Trans":41,"../Control.Semigroupoid":66,"../DOM.Event.Types":75,"../DOM.Node.Types":113,"../Data.Either":154,"../Data.Foreign":169,"../Data.Identity":189,"../Data.List.Types":229,"../Prelude":358,"../Unsafe.Coerce":366,"./foreign":102}],104:[function(require,module,exports){
"use strict";

exports.document = function (window) {
  return function () {
    return window.document;
  };
};

exports.navigator = function (window) {
  return function () {
    return window.navigator;
  };
};

exports.location = function (window) {
  return function () {
    return window.location;
  };
};

exports.history = function(window) {
  return function() {
    return window.history;
  };
};

exports.innerWidth = function (window) {
  return function () {
    return window.innerWidth;
  };
};

exports.innerHeight = function (window) {
  return function () {
    return window.innerHeight;
  };
};

exports.alert = function (str) {
  return function (window) {
    return function () {
      window.alert(str);
      return {};
    };
  };
};

exports.confirm = function (str) {
  return function (window) {
    return function () {
      return window.confirm(str);
    };
  };
};

exports.moveBy = function (xDelta) {
  return function (yDelta) {
    return function (window) {
      return function () {
        window.moveBy(xDelta, yDelta);
        return {};
      };
    };
  };
};

exports.moveTo = function (width) {
  return function (height) {
    return function (window) {
      return function () {
        window.moveTo(width, height);
        return {};
      };
    };
  };
};

exports._open = function (url) {
  return function (name) {
    return function (features) {
      return function (window) {
        return function () {
          return window.open(url, name, features);
        };
      };
    };
  };
};

exports.outerHeight = function (window) {
  return function () {
    return window.outerHeight;
  };
};

exports.outerWidth = function (window) {
  return function () {
    return window.outerWidth;
  };
};

exports.print = function (window) {
  return function () {
    window.print();
    return {};
  };
};

exports._prompt = function (str) {
  return function (defaultText) {
    return function (window) {
      return function () {
        return window.prompt(str, defaultText);
      };
    };
  };
};

exports.resizeBy = function (xDelta) {
  return function (yDelta) {
    return function (window) {
      return function () {
        window.resizeBy(xDelta, yDelta);
        return {};
      };
    };
  };
};

exports.resizeTo = function (width) {
  return function (height) {
    return function (window) {
      return function () {
        window.resizeTo(width, height);
        return {};
      };
    };
  };
};

exports.screenX = function (window) {
  return function () {
    return window.screenX;
  };
};

exports.screenY = function (window) {
  return function () {
    return window.screenY;
  };
};

exports.scroll = function (xCoord) {
  return function (yCoord) {
    return function (window) {
      return function () {
        window.scroll(xCoord, yCoord);
        return {};
      };
    };
  };
};

exports.scrollBy = function (xCoord) {
  return function (yCoord) {
    return function (window) {
      return function () {
        window.scrollBy(xCoord, yCoord);
        return {};
      };
    };
  };
};

exports.scrollX = function (window) {
  return function () {
    return window.scrollX;
  };
};

exports.scrollY = function (window) {
  return function () {
    return window.scrollY;
  };
};

exports.url = function (window) {
  return function () {
    return window.URL;
  };
};

exports.localStorage = function (window) {
  return function () {
    return window.localStorage;
  };
};

exports.sessionStorage = function (window) {
  return function () {
    return window.sessionStorage;
  };
};

exports._requestAnimationFrame = function(fn) {
  return function(window) {
    return function() {
      return window.requestAnimationFrame(fn);
    };
  };
};

exports._cancelAnimationFrame = function(id) {
  return function(window) {
    return function() {
      return window.cancelAnimationFrame(id);
    };
  };
};

exports._requestIdleCallback = function(opts) {
  return function(fn) {
    return function(window) {
      return function() {
        return window.requestIdleCallback(fn, opts);
      };
    };
  };
};

exports._cancelIdleCallback = function(id) {
  return function(window) {
    return function() {
      return window.cancelIdleCallback(id);
    };
  };
};

},{}],105:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM = require("../DOM");
var DOM_HTML_Types = require("../DOM.HTML.Types");
var DOM_WebStorage_Types = require("../DOM.WebStorage.Types");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Nullable = require("../Data.Nullable");
var Data_Ord = require("../Data.Ord");
var Prelude = require("../Prelude");
var RequestIdleCallbackId = function (x) {
    return x;
};
var RequestAnimationFrameId = function (x) {
    return x;
};
var requestIdleCallback = function (opts) {
    return function (fn) {
        return function ($30) {
            return Data_Functor.map(Control_Monad_Eff.functorEff)(RequestIdleCallbackId)($foreign._requestIdleCallback(opts)(fn)($30));
        };
    };
};
var requestAnimationFrame = function (fn) {
    return function ($31) {
        return Data_Functor.map(Control_Monad_Eff.functorEff)(RequestAnimationFrameId)($foreign._requestAnimationFrame(fn)($31));
    };
};
var promptDefault = function (msg) {
    return function (defaultText) {
        return function (window) {
            return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._prompt(msg)(defaultText)(window));
        };
    };
};
var prompt = function (msg) {
    return function (window) {
        return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._prompt(msg)("")(window));
    };
};
var open = function (url$prime) {
    return function (name) {
        return function (features) {
            return function (window) {
                return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._open(url$prime)(name)(features)(window));
            };
        };
    };
};
var newtypeRequestIdleCallbackId = new Data_Newtype.Newtype(function (n) {
    return n;
}, RequestIdleCallbackId);
var newtypeRequestAnimationFrameId = new Data_Newtype.Newtype(function (n) {
    return n;
}, RequestAnimationFrameId);
var eqRequestIdleCallbackId = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordRequestIdleCallbackId = new Data_Ord.Ord(function () {
    return eqRequestIdleCallbackId;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
});
var eqRequestAnimationFrameId = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordRequestAnimationFrameId = new Data_Ord.Ord(function () {
    return eqRequestAnimationFrameId;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
});
var cancelIdleCallback = function (idAF) {
    return $foreign._cancelIdleCallback(Data_Newtype.unwrap(newtypeRequestIdleCallbackId)(idAF));
};
var cancelAnimationFrame = function (idAF) {
    return $foreign._cancelAnimationFrame(Data_Newtype.unwrap(newtypeRequestAnimationFrameId)(idAF));
};
module.exports = {
    open: open,
    prompt: prompt,
    promptDefault: promptDefault,
    requestAnimationFrame: requestAnimationFrame,
    cancelAnimationFrame: cancelAnimationFrame,
    requestIdleCallback: requestIdleCallback,
    cancelIdleCallback: cancelIdleCallback,
    newtypeRequestAnimationFrameId: newtypeRequestAnimationFrameId,
    eqRequestAnimationFrameId: eqRequestAnimationFrameId,
    ordRequestAnimationFrameId: ordRequestAnimationFrameId,
    newtypeRequestIdleCallbackId: newtypeRequestIdleCallbackId,
    eqRequestIdleCallbackId: eqRequestIdleCallbackId,
    ordRequestIdleCallbackId: ordRequestIdleCallbackId,
    document: $foreign.document,
    navigator: $foreign.navigator,
    location: $foreign.location,
    history: $foreign.history,
    innerWidth: $foreign.innerWidth,
    innerHeight: $foreign.innerHeight,
    alert: $foreign.alert,
    confirm: $foreign.confirm,
    moveBy: $foreign.moveBy,
    moveTo: $foreign.moveTo,
    outerHeight: $foreign.outerHeight,
    outerWidth: $foreign.outerWidth,
    print: $foreign.print,
    resizeBy: $foreign.resizeBy,
    resizeTo: $foreign.resizeTo,
    screenX: $foreign.screenX,
    screenY: $foreign.screenY,
    scroll: $foreign.scroll,
    scrollBy: $foreign.scrollBy,
    scrollX: $foreign.scrollX,
    scrollY: $foreign.scrollY,
    url: $foreign.url,
    localStorage: $foreign.localStorage,
    sessionStorage: $foreign.sessionStorage
};

},{"../Control.Monad.Eff":39,"../Control.Semigroupoid":66,"../DOM":117,"../DOM.HTML.Types":103,"../DOM.WebStorage.Types":116,"../Data.Eq":157,"../Data.Functor":180,"../Data.Maybe":234,"../Data.Newtype":244,"../Data.Nullable":247,"../Data.Ord":251,"../Prelude":358,"./foreign":104}],106:[function(require,module,exports){
/* global window */
"use strict";

exports.window = function () {
  return window;
};

},{}],107:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var DOM = require("../DOM");
var DOM_HTML_Types = require("../DOM.HTML.Types");
module.exports = {
    window: $foreign.window
};

},{"../Control.Monad.Eff":39,"../DOM":117,"../DOM.HTML.Types":103,"./foreign":106}],108:[function(require,module,exports){
"use strict";

var getEffProp = function (name) {
  return function (node) {
    return function () {
      return node[name];
    };
  };
};

exports.nodeTypeIndex = function (node) {
  return node.nodeType;
};

exports.nodeName = function (node) {
  return node.nodeName;
};

exports.baseURI = getEffProp("baseURI");

exports._ownerDocument = getEffProp("ownerDocument");

exports._parentNode = getEffProp("parentNode");

exports._parentElement = getEffProp("parentElement");

exports.hasChildNodes = function (node) {
  return function () {
    return node.hasChildNodes();
  };
};

exports.childNodes = getEffProp("childNodes");

exports._firstChild = getEffProp("firstChild");

exports._lastChild = getEffProp("lastChild");

exports._previousSibling = getEffProp("previousSibling");

exports._nextSibling = getEffProp("nextSibling");

exports.nodeValue = getEffProp("nodeValue");

exports.setNodeValue = function (value) {
  return function (node) {
    return function () {
      node.nodeValue = value;
      return {};
    };
  };
};

exports.textContent = getEffProp("textContent");

exports.setTextContent = function (value) {
  return function (node) {
    return function () {
      node.textContent = value;
      return {};
    };
  };
};

exports.normalize = function (node) {
  return function () {
    node.normalize();
    return {};
  };
};

exports.clone = function (node) {
  return function () {
    return node.cloneNode(false);
  };
};

exports.deepClone = function (node) {
  return function () {
    return node.cloneNode(true);
  };
};

exports.isEqualNode = function (node1) {
  return function (node2) {
    return function () {
      return node1.isEqualNode(node2);
    };
  };
};

exports.compareDocumentPositionBits = function (node1) {
  return function (node2) {
    return function () {
      return node1.compareDocumentPosition(node2);
    };
  };
};

exports.contains = function (node1) {
  return function (node2) {
    return function () {
      return node1.contains(node2);
    };
  };
};

exports._lookupPrefix = function (prefix) {
  return function (node) {
    return function () {
      return node.lookupPrefix(prefix);
    };
  };
};

exports._lookupNamespaceURI = function (ns) {
  return function (node) {
    return function () {
      return node.lookupNamespaceURI(ns);
    };
  };
};

exports.isDefaultNamespace = function (ns) {
  return function (node) {
    return function () {
      return node.isDefaultNamespace(ns);
    };
  };
};

exports.insertBefore = function (node1) {
  return function (node2) {
    return function (parent) {
      return function () {
        return parent.insertBefore(node1, node2);
      };
    };
  };
};

exports.appendChild = function (node) {
  return function (parent) {
    return function () {
      return parent.appendChild(node);
    };
  };
};

exports.replaceChild = function (newChild) {
  return function (oldChild) {
    return function (parent) {
      return function () {
        return parent.replaceChild(newChild, oldChild);
      };
    };
  };
};

exports.removeChild = function (node) {
  return function (parent) {
    return function () {
      return parent.removeChild(node);
    };
  };
};

},{}],109:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM = require("../DOM");
var DOM_Node_NodeType = require("../DOM.Node.NodeType");
var DOM_Node_Types = require("../DOM.Node.Types");
var Data_Enum = require("../Data.Enum");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Prelude = require("../Prelude");
var previousSibling = function ($1) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._previousSibling($1));
};
var parentNode = function ($2) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._parentNode($2));
};
var parentElement = function ($3) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._parentElement($3));
};
var ownerDocument = function ($4) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._ownerDocument($4));
};
var nodeType = function (dictPartial) {
    return function ($5) {
        return Data_Maybe.fromJust(dictPartial)(Data_Enum.toEnum(DOM_Node_NodeType.boundedEnumNodeType)($foreign.nodeTypeIndex($5)));
    };
};
var nextSibling = function ($6) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._nextSibling($6));
};
var lookupPrefix = function (p) {
    return function ($7) {
        return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._lookupPrefix(p)($7));
    };
};
var lookupNamespaceURI = function (ns) {
    return function ($8) {
        return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._lookupNamespaceURI(ns)($8));
    };
};
var lastChild = function ($9) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._lastChild($9));
};
var firstChild = function ($10) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._firstChild($10));
};
module.exports = {
    nodeType: nodeType,
    ownerDocument: ownerDocument,
    parentNode: parentNode,
    parentElement: parentElement,
    firstChild: firstChild,
    lastChild: lastChild,
    previousSibling: previousSibling,
    nextSibling: nextSibling,
    lookupPrefix: lookupPrefix,
    lookupNamespaceURI: lookupNamespaceURI,
    nodeTypeIndex: $foreign.nodeTypeIndex,
    nodeName: $foreign.nodeName,
    baseURI: $foreign.baseURI,
    hasChildNodes: $foreign.hasChildNodes,
    childNodes: $foreign.childNodes,
    nodeValue: $foreign.nodeValue,
    setNodeValue: $foreign.setNodeValue,
    textContent: $foreign.textContent,
    setTextContent: $foreign.setTextContent,
    normalize: $foreign.normalize,
    clone: $foreign.clone,
    deepClone: $foreign.deepClone,
    isEqualNode: $foreign.isEqualNode,
    compareDocumentPositionBits: $foreign.compareDocumentPositionBits,
    contains: $foreign.contains,
    isDefaultNamespace: $foreign.isDefaultNamespace,
    insertBefore: $foreign.insertBefore,
    appendChild: $foreign.appendChild,
    replaceChild: $foreign.replaceChild,
    removeChild: $foreign.removeChild
};

},{"../Control.Monad.Eff":39,"../Control.Semigroupoid":66,"../DOM":117,"../DOM.Node.NodeType":110,"../DOM.Node.Types":113,"../Data.Enum":155,"../Data.Functor":180,"../Data.Maybe":234,"../Data.Nullable":247,"../Prelude":358,"./foreign":108}],110:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Bounded = require("../Data.Bounded");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Prelude = require("../Prelude");
var ElementNode = (function () {
    function ElementNode() {

    };
    ElementNode.value = new ElementNode();
    return ElementNode;
})();
var AttributeNode = (function () {
    function AttributeNode() {

    };
    AttributeNode.value = new AttributeNode();
    return AttributeNode;
})();
var TextNode = (function () {
    function TextNode() {

    };
    TextNode.value = new TextNode();
    return TextNode;
})();
var CDATASectionNode = (function () {
    function CDATASectionNode() {

    };
    CDATASectionNode.value = new CDATASectionNode();
    return CDATASectionNode;
})();
var EntityReferenceNode = (function () {
    function EntityReferenceNode() {

    };
    EntityReferenceNode.value = new EntityReferenceNode();
    return EntityReferenceNode;
})();
var EntityNode = (function () {
    function EntityNode() {

    };
    EntityNode.value = new EntityNode();
    return EntityNode;
})();
var ProcessingInstructionNode = (function () {
    function ProcessingInstructionNode() {

    };
    ProcessingInstructionNode.value = new ProcessingInstructionNode();
    return ProcessingInstructionNode;
})();
var CommentNode = (function () {
    function CommentNode() {

    };
    CommentNode.value = new CommentNode();
    return CommentNode;
})();
var DocumentNode = (function () {
    function DocumentNode() {

    };
    DocumentNode.value = new DocumentNode();
    return DocumentNode;
})();
var DocumentTypeNode = (function () {
    function DocumentTypeNode() {

    };
    DocumentTypeNode.value = new DocumentTypeNode();
    return DocumentTypeNode;
})();
var DocumentFragmentNode = (function () {
    function DocumentFragmentNode() {

    };
    DocumentFragmentNode.value = new DocumentFragmentNode();
    return DocumentFragmentNode;
})();
var NotationNode = (function () {
    function NotationNode() {

    };
    NotationNode.value = new NotationNode();
    return NotationNode;
})();
var toEnumNodeType = function (v) {
    if (v === 1) {
        return new Data_Maybe.Just(ElementNode.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(AttributeNode.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(TextNode.value);
    };
    if (v === 4) {
        return new Data_Maybe.Just(CDATASectionNode.value);
    };
    if (v === 5) {
        return new Data_Maybe.Just(EntityReferenceNode.value);
    };
    if (v === 6) {
        return new Data_Maybe.Just(EntityNode.value);
    };
    if (v === 7) {
        return new Data_Maybe.Just(ProcessingInstructionNode.value);
    };
    if (v === 8) {
        return new Data_Maybe.Just(CommentNode.value);
    };
    if (v === 9) {
        return new Data_Maybe.Just(DocumentNode.value);
    };
    if (v === 10) {
        return new Data_Maybe.Just(DocumentTypeNode.value);
    };
    if (v === 11) {
        return new Data_Maybe.Just(DocumentFragmentNode.value);
    };
    if (v === 12) {
        return new Data_Maybe.Just(NotationNode.value);
    };
    return Data_Maybe.Nothing.value;
};
var fromEnumNodeType = function (v) {
    if (v instanceof ElementNode) {
        return 1;
    };
    if (v instanceof AttributeNode) {
        return 2;
    };
    if (v instanceof TextNode) {
        return 3;
    };
    if (v instanceof CDATASectionNode) {
        return 4;
    };
    if (v instanceof EntityReferenceNode) {
        return 5;
    };
    if (v instanceof EntityNode) {
        return 6;
    };
    if (v instanceof ProcessingInstructionNode) {
        return 7;
    };
    if (v instanceof CommentNode) {
        return 8;
    };
    if (v instanceof DocumentNode) {
        return 9;
    };
    if (v instanceof DocumentTypeNode) {
        return 10;
    };
    if (v instanceof DocumentFragmentNode) {
        return 11;
    };
    if (v instanceof NotationNode) {
        return 12;
    };
    throw new Error("Failed pattern match at DOM.Node.NodeType line 54, column 1 - line 54, column 36: " + [ v.constructor.name ]);
};
var eqNodeType = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof ElementNode && y instanceof ElementNode) {
            return true;
        };
        if (x instanceof AttributeNode && y instanceof AttributeNode) {
            return true;
        };
        if (x instanceof TextNode && y instanceof TextNode) {
            return true;
        };
        if (x instanceof CDATASectionNode && y instanceof CDATASectionNode) {
            return true;
        };
        if (x instanceof EntityReferenceNode && y instanceof EntityReferenceNode) {
            return true;
        };
        if (x instanceof EntityNode && y instanceof EntityNode) {
            return true;
        };
        if (x instanceof ProcessingInstructionNode && y instanceof ProcessingInstructionNode) {
            return true;
        };
        if (x instanceof CommentNode && y instanceof CommentNode) {
            return true;
        };
        if (x instanceof DocumentNode && y instanceof DocumentNode) {
            return true;
        };
        if (x instanceof DocumentTypeNode && y instanceof DocumentTypeNode) {
            return true;
        };
        if (x instanceof DocumentFragmentNode && y instanceof DocumentFragmentNode) {
            return true;
        };
        if (x instanceof NotationNode && y instanceof NotationNode) {
            return true;
        };
        return false;
    };
});
var ordNodeType = new Data_Ord.Ord(function () {
    return eqNodeType;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordInt)(fromEnumNodeType(x))(fromEnumNodeType(y));
    };
});
var enumNodeType = new Data_Enum.Enum(function () {
    return ordNodeType;
}, Data_Enum.defaultPred(toEnumNodeType)(fromEnumNodeType), Data_Enum.defaultSucc(toEnumNodeType)(fromEnumNodeType));
var boundedNodeType = new Data_Bounded.Bounded(function () {
    return ordNodeType;
}, ElementNode.value, NotationNode.value);
var boundedEnumNodeType = new Data_Enum.BoundedEnum(function () {
    return boundedNodeType;
}, function () {
    return enumNodeType;
}, 12, fromEnumNodeType, toEnumNodeType);
module.exports = {
    ElementNode: ElementNode,
    AttributeNode: AttributeNode,
    TextNode: TextNode,
    CDATASectionNode: CDATASectionNode,
    EntityReferenceNode: EntityReferenceNode,
    EntityNode: EntityNode,
    ProcessingInstructionNode: ProcessingInstructionNode,
    CommentNode: CommentNode,
    DocumentNode: DocumentNode,
    DocumentTypeNode: DocumentTypeNode,
    DocumentFragmentNode: DocumentFragmentNode,
    NotationNode: NotationNode,
    eqNodeType: eqNodeType,
    ordNodeType: ordNodeType,
    boundedNodeType: boundedNodeType,
    enumNodeType: enumNodeType,
    boundedEnumNodeType: boundedEnumNodeType
};

},{"../Data.Bounded":134,"../Data.Enum":155,"../Data.Eq":157,"../Data.Maybe":234,"../Data.Ord":251,"../Prelude":358}],111:[function(require,module,exports){
"use strict";

var getEffProp = function (name) {
  return function (node) {
    return function () {
      return node[name];
    };
  };
};

exports.children = getEffProp("children");

exports._firstElementChild = getEffProp("firstElementChild");

exports._lastElementChild = getEffProp("lastElementChild");

exports.childElementCount = getEffProp("childElementCount");

exports._querySelector = function (selector) {
  return function (node) {
    return function () {
      return node.querySelector(selector);
    };
  };
};

exports.querySelectorAll = function (selector) {
  return function (node) {
    return function () {
      return node.querySelectorAll(selector);
    };
  };
};

},{}],112:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM = require("../DOM");
var DOM_Node_Types = require("../DOM.Node.Types");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Nullable = require("../Data.Nullable");
var Data_Ord = require("../Data.Ord");
var Prelude = require("../Prelude");
var QuerySelector = function (x) {
    return x;
};
var querySelector = function (qs) {
    return function ($3) {
        return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._querySelector(qs)($3));
    };
};
var ordQuerySelector = Data_Ord.ordString;
var newtypeQuerySelector = new Data_Newtype.Newtype(function (n) {
    return n;
}, QuerySelector);
var lastElementChild = function ($4) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._lastElementChild($4));
};
var firstElementChild = function ($5) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._firstElementChild($5));
};
var eqQuerySelector = Data_Eq.eqString;
module.exports = {
    firstElementChild: firstElementChild,
    lastElementChild: lastElementChild,
    QuerySelector: QuerySelector,
    querySelector: querySelector,
    eqQuerySelector: eqQuerySelector,
    ordQuerySelector: ordQuerySelector,
    newtypeQuerySelector: newtypeQuerySelector,
    children: $foreign.children,
    childElementCount: $foreign.childElementCount,
    querySelectorAll: $foreign.querySelectorAll
};

},{"../Control.Monad.Eff":39,"../Control.Semigroupoid":66,"../DOM":117,"../DOM.Node.Types":113,"../Data.Eq":157,"../Data.Functor":180,"../Data.Maybe":234,"../Data.Newtype":244,"../Data.Nullable":247,"../Data.Ord":251,"../Prelude":358,"./foreign":111}],113:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var DOM_Event_Types = require("../DOM.Event.Types");
var DOM_Util_FFI = require("../DOM.Util.FFI");
var Data_Eq = require("../Data.Eq");
var Data_Foreign = require("../Data.Foreign");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var ElementId = function (x) {
    return x;
};
var textToNode = Unsafe_Coerce.unsafeCoerce;
var readNode = DOM_Util_FFI.unsafeReadProtoTagged("Node");
var readElement = DOM_Util_FFI.unsafeReadProtoTagged("Element");
var readDocument = DOM_Util_FFI.unsafeReadProtoTagged("Document");
var processingInstructionToNode = Unsafe_Coerce.unsafeCoerce;
var oOrdElementId = Data_Ord.ordString;
var newtypeElementId = new Data_Newtype.Newtype(function (n) {
    return n;
}, ElementId);
var eqElementId = Data_Eq.eqString;
var elementToParentNode = Unsafe_Coerce.unsafeCoerce;
var elementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var elementToNode = Unsafe_Coerce.unsafeCoerce;
var elementToEventTarget = Unsafe_Coerce.unsafeCoerce;
var documentTypeToNode = Unsafe_Coerce.unsafeCoerce;
var documentToParentNode = Unsafe_Coerce.unsafeCoerce;
var documentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var documentToNode = Unsafe_Coerce.unsafeCoerce;
var documentToEventTarget = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToParentNode = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToNode = Unsafe_Coerce.unsafeCoerce;
var commentToNode = Unsafe_Coerce.unsafeCoerce;
var characterDataToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    readNode: readNode,
    readDocument: readDocument,
    documentToNonElementParentNode: documentToNonElementParentNode,
    documentToParentNode: documentToParentNode,
    documentToNode: documentToNode,
    documentToEventTarget: documentToEventTarget,
    ElementId: ElementId,
    readElement: readElement,
    elementToParentNode: elementToParentNode,
    elementToNonDocumentTypeChildNode: elementToNonDocumentTypeChildNode,
    elementToNode: elementToNode,
    elementToEventTarget: elementToEventTarget,
    characterDataToNonDocumentTypeChildNode: characterDataToNonDocumentTypeChildNode,
    textToNode: textToNode,
    commentToNode: commentToNode,
    processingInstructionToNode: processingInstructionToNode,
    documentFragmentToNonElementParentNode: documentFragmentToNonElementParentNode,
    documentFragmentToParentNode: documentFragmentToParentNode,
    documentFragmentToNode: documentFragmentToNode,
    documentTypeToNode: documentTypeToNode,
    newtypeElementId: newtypeElementId,
    eqElementId: eqElementId,
    oOrdElementId: oOrdElementId
};

},{"../DOM.Event.Types":75,"../DOM.Util.FFI":115,"../Data.Eq":157,"../Data.Foreign":169,"../Data.Newtype":244,"../Data.Ord":251,"../Prelude":358,"../Unsafe.Coerce":366}],114:[function(require,module,exports){
"use strict";

exports._unsafeReadProtoTagged = function (name) {
  return function (failure) {
    return function (success) {
      return function (value) {
        var obj = value;
        while (obj != null) {
          var proto = Object.getPrototypeOf(obj);
          var ctor = proto.constructor.name;
          if (ctor === name) {
            return success(value);
          } else if (ctor === "Object") {
            return failure(Object.getPrototypeOf(value).constructor.name);
          }
          obj = proto;
        }
        return failure(Object.getPrototypeOf(value).constructor.name);
      };
    };
  };
};

},{}],115:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Foreign = require("../Data.Foreign");
var Data_Identity = require("../Data.Identity");
var Data_List_Types = require("../Data.List.Types");
var Prelude = require("../Prelude");
var unsafeReadProtoTagged = function (name) {
    return $foreign._unsafeReadProtoTagged(name)(function ($0) {
        return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Left.create(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Data_Foreign.TypeMismatch.create(name)($0))));
    })(function ($1) {
        return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Right.create($1));
    });
};
module.exports = {
    unsafeReadProtoTagged: unsafeReadProtoTagged
};

},{"../Control.Applicative":5,"../Control.Monad.Except":42,"../Control.Monad.Except.Trans":41,"../Control.Semigroupoid":66,"../Data.Either":154,"../Data.Foreign":169,"../Data.Identity":189,"../Data.List.Types":229,"../Prelude":358,"./foreign":114}],116:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Foreign = require("../Data.Foreign");
var readStorage = Data_Foreign.unsafeReadTagged("Storage");
module.exports = {
    readStorage: readStorage
};

},{"../Data.Foreign":169}],117:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Monad_Eff = require("../Control.Monad.Eff");
module.exports = {};

},{"../Control.Monad.Eff":39}],118:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array_ST = require("../Data.Array.ST");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Semiring = require("../Data.Semiring");
var Prelude = require("../Prelude");
var Iterator = (function () {
    function Iterator(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Iterator.create = function (value0) {
        return function (value1) {
            return new Iterator(value0, value1);
        };
    };
    return Iterator;
})();
var peek = function (v) {
    return function __do() {
        var v1 = Control_Monad_ST.readSTRef(v.value1)();
        return v.value0(v1);
    };
};
var next = function (v) {
    return function __do() {
        var v1 = Control_Monad_ST.readSTRef(v.value1)();
        var v2 = Control_Monad_ST.modifySTRef(v.value1)(function (v2) {
            return v2 + 1 | 0;
        })();
        return v.value0(v1);
    };
};
var pushWhile = function (p) {
    return function (iter) {
        return function (array) {
            return function __do() {
                var v = Control_Monad_ST.newSTRef(false)();
                while (Data_Functor.map(Control_Monad_Eff.functorEff)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST.readSTRef(v))()) {
                    (function __do() {
                        var v1 = peek(iter)();
                        if (v1 instanceof Data_Maybe.Just && p(v1.value0)) {
                            var v2 = Data_Array_ST.pushSTArray(array)(v1.value0)();
                            return Data_Functor["void"](Control_Monad_Eff.functorEff)(next(iter))();
                        };
                        return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_ST.writeSTRef(v)(true))();
                    })();
                };
                return {};
            };
        };
    };
};
var pushAll = pushWhile(Data_Function["const"](true));
var iterator = function (f) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Iterator.create(f))(Control_Monad_ST.newSTRef(0));
};
var iterate = function (iter) {
    return function (f) {
        return function __do() {
            var v = Control_Monad_ST.newSTRef(false)();
            while (Data_Functor.map(Control_Monad_Eff.functorEff)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST.readSTRef(v))()) {
                (function __do() {
                    var v1 = next(iter)();
                    if (v1 instanceof Data_Maybe.Just) {
                        return f(v1.value0)();
                    };
                    if (v1 instanceof Data_Maybe.Nothing) {
                        return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_ST.writeSTRef(v)(true))();
                    };
                    throw new Error("Failed pattern match at Data.Array.ST.Iterator line 39, column 5 - line 41, column 46: " + [ v1.constructor.name ]);
                })();
            };
            return {};
        };
    };
};
var exhausted = function ($27) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Maybe.isNothing)(peek($27));
};
module.exports = {
    iterator: iterator,
    iterate: iterate,
    next: next,
    peek: peek,
    exhausted: exhausted,
    pushWhile: pushWhile,
    pushAll: pushAll
};

},{"../Control.Applicative":5,"../Control.Bind":11,"../Control.Monad.Eff":39,"../Control.Monad.ST":53,"../Control.Semigroupoid":66,"../Data.Array.ST":120,"../Data.Function":172,"../Data.Functor":180,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.Semiring":273,"../Prelude":358}],119:[function(require,module,exports){
"use strict";

exports.runSTArray = function (f) {
  return f;
};

exports.emptySTArray = function () {
  return [];
};

exports.peekSTArrayImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return function () {
          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
        };
      };
    };
  };
};

exports.pokeSTArray = function (xs) {
  return function (i) {
    return function (a) {
      return function () {
        var ret = i >= 0 && i < xs.length;
        if (ret) xs[i] = a;
        return ret;
      };
    };
  };
};

exports.pushAllSTArray = function (xs) {
  return function (as) {
    return function () {
      return xs.push.apply(xs, as);
    };
  };
};

exports.spliceSTArray = function (xs) {
  return function (i) {
    return function (howMany) {
      return function (bs) {
        return function () {
          return xs.splice.apply(xs, [i, howMany].concat(bs));
        };
      };
    };
  };
};

exports.copyImpl = function (xs) {
  return function () {
    return xs.slice();
  };
};

exports.toAssocArray = function (xs) {
  return function () {
    var n = xs.length;
    var as = new Array(n);
    for (var i = 0; i < n; i++) as[i] = { value: xs[i], index: i };
    return as;
  };
};

},{}],120:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Maybe = require("../Data.Maybe");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var unsafeFreeze = function ($7) {
    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)($7);
};
var thaw = $foreign.copyImpl;
var withArray = function (f) {
    return function (xs) {
        return function __do() {
            var v = thaw(xs)();
            var v1 = f(v)();
            return unsafeFreeze(v)();
        };
    };
};
var pushSTArray = function (arr) {
    return function (a) {
        return $foreign.pushAllSTArray(arr)([ a ]);
    };
};
var peekSTArray = $foreign.peekSTArrayImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var modifySTArray = function (xs) {
    return function (i) {
        return function (f) {
            return function __do() {
                var v = peekSTArray(xs)(i)();
                if (v instanceof Data_Maybe.Just) {
                    return $foreign.pokeSTArray(xs)(i)(f(v.value0))();
                };
                if (v instanceof Data_Maybe.Nothing) {
                    return false;
                };
                throw new Error("Failed pattern match at Data.Array.ST line 120, column 3 - line 122, column 26: " + [ v.constructor.name ]);
            };
        };
    };
};
var freeze = $foreign.copyImpl;
module.exports = {
    withArray: withArray,
    peekSTArray: peekSTArray,
    pushSTArray: pushSTArray,
    modifySTArray: modifySTArray,
    freeze: freeze,
    thaw: thaw,
    unsafeFreeze: unsafeFreeze,
    runSTArray: $foreign.runSTArray,
    emptySTArray: $foreign.emptySTArray,
    pokeSTArray: $foreign.pokeSTArray,
    pushAllSTArray: $foreign.pushAllSTArray,
    spliceSTArray: $foreign.spliceSTArray,
    toAssocArray: $foreign.toAssocArray
};

},{"../Control.Applicative":5,"../Control.Bind":11,"../Control.Monad.Eff":39,"../Control.Monad.ST":53,"../Control.Semigroupoid":66,"../Data.Maybe":234,"../Prelude":358,"../Unsafe.Coerce":366,"./foreign":119}],121:[function(require,module,exports){
"use strict";

//------------------------------------------------------------------------------
// Array creation --------------------------------------------------------------
//------------------------------------------------------------------------------

exports.range = function (start) {
  return function (end) {
    var step = start > end ? -1 : 1;
    var result = new Array(step * (end - start) + 1);
    var i = start, n = 0;
    while (i !== end) {
      result[n++] = i;
      i += step;
    }
    result[n] = i;
    return result;
  };
};

var replicate = function (count) {
  return function (value) {
    if (count < 1) {
      return [];
    }
    var result = new Array(count);
    return result.fill(value);
  };
};

var replicatePolyfill = function (count) {
  return function (value) {
    var result = [];
    var n = 0;
    for (var i = 0; i < count; i++) {
      result[n++] = value;
    }
    return result;
  };
};

// In browsers that have Array.prototype.fill we use it, as it's faster.
exports.replicate = typeof Array.prototype.fill === "function" ?
    replicate :
    replicatePolyfill;

exports.fromFoldableImpl = (function () {
  // jshint maxparams: 2
  function Cons(head, tail) {
    this.head = head;
    this.tail = tail;
  }
  var emptyList = {};

  function curryCons(head) {
    return function (tail) {
      return new Cons(head, tail);
    };
  }

  function listToArray(list) {
    var result = [];
    var count = 0;
    var xs = list;
    while (xs !== emptyList) {
      result[count++] = xs.head;
      xs = xs.tail;
    }
    return result;
  }

  return function (foldr) {
    return function (xs) {
      return listToArray(foldr(curryCons)(emptyList)(xs));
    };
  };
})();

//------------------------------------------------------------------------------
// Array size ------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.length = function (xs) {
  return xs.length;
};

//------------------------------------------------------------------------------
// Extending arrays ------------------------------------------------------------
//------------------------------------------------------------------------------

exports.cons = function (e) {
  return function (l) {
    return [e].concat(l);
  };
};

exports.snoc = function (l) {
  return function (e) {
    var l1 = l.slice();
    l1.push(e);
    return l1;
  };
};

//------------------------------------------------------------------------------
// Non-indexed reads -----------------------------------------------------------
//------------------------------------------------------------------------------

exports["uncons'"] = function (empty) {
  return function (next) {
    return function (xs) {
      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
    };
  };
};

//------------------------------------------------------------------------------
// Indexed operations ----------------------------------------------------------
//------------------------------------------------------------------------------

exports.indexImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
      };
    };
  };
};

exports.findIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = 0, l = xs.length; i < l; i++) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports.findLastIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = xs.length - 1; i >= 0; i--) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports._insertAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i > l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 0, a);
          return just(l1);
        };
      };
    };
  };
};

exports._deleteAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (l) {
        if (i < 0 || i >= l.length) return nothing;
        var l1 = l.slice();
        l1.splice(i, 1);
        return just(l1);
      };
    };
  };
};

exports._updateAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1[i] = a;
          return just(l1);
        };
      };
    };
  };
};

//------------------------------------------------------------------------------
// Transformations -------------------------------------------------------------
//------------------------------------------------------------------------------

exports.reverse = function (l) {
  return l.slice().reverse();
};

exports.concat = function (xss) {
  if (xss.length <= 10000) {
    // This method is faster, but it crashes on big arrays.
    // So we use it when can and fallback to simple variant otherwise.
    return Array.prototype.concat.apply([], xss);
  }

  var result = [];
  for (var i = 0, l = xss.length; i < l; i++) {
    var xs = xss[i];
    for (var j = 0, m = xs.length; j < m; j++) {
      result.push(xs[j]);
    }
  }
  return result;
};

exports.filter = function (f) {
  return function (xs) {
    return xs.filter(f);
  };
};

exports.partition = function (f) {
  return function (xs) {
    var yes = [];
    var no  = [];
    for (var i = 0; i < xs.length; i++) {
      var x = xs[i];
      if (f(x))
        yes.push(x);
      else
        no.push(x);
    }
    return { yes: yes, no: no };
  };
};

//------------------------------------------------------------------------------
// Sorting ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.sortImpl = function (f) {
  return function (l) {
    // jshint maxparams: 2
    return l.slice().sort(function (x, y) {
      return f(x)(y);
    });
  };
};

//------------------------------------------------------------------------------
// Subarrays -------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.slice = function (s) {
  return function (e) {
    return function (l) {
      return l.slice(s, e);
    };
  };
};

exports.take = function (n) {
  return function (l) {
    return n < 1 ? [] : l.slice(0, n);
  };
};

exports.drop = function (n) {
  return function (l) {
    return n < 1 ? l : l.slice(n);
  };
};

//------------------------------------------------------------------------------
// Zipping ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.zipWith = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(xs[i])(ys[i]);
      }
      return result;
    };
  };
};

//------------------------------------------------------------------------------
// Partial ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.unsafeIndexImpl = function (xs) {
  return function (n) {
    return xs[n];
  };
};

},{}],122:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array_ST = require("../Data.Array.ST");
var Data_Array_ST_Iterator = require("../Data.Array.ST.Iterator");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
var updateAtIndices = function (dictFoldable) {
    return function (us) {
        return function (xs) {
            return Control_Monad_ST.pureST(Data_Array_ST.withArray(function (res) {
                return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(dictFoldable)(Data_Tuple.uncurry(Data_Array_ST.pokeSTArray(res)))(us);
            })(xs));
        };
    };
};
var updateAt = $foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeIndex = function (dictPartial) {
    return $foreign.unsafeIndexImpl;
};
var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (xs) {
        return new Data_Maybe.Just({
            head: x,
            tail: xs
        });
    };
});
var toUnfoldable = function (dictUnfoldable) {
    return function (xs) {
        var len = $foreign.length(xs);
        var f = function (i) {
            if (i < len) {
                return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
            };
            if (Data_Boolean.otherwise) {
                return Data_Maybe.Nothing.value;
            };
            throw new Error("Failed pattern match at Data.Array line 139, column 3 - line 141, column 26: " + [ i.constructor.name ]);
        };
        return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
    };
};
var takeEnd = function (n) {
    return function (xs) {
        return $foreign.drop($foreign.length(xs) - n | 0)(xs);
    };
};
var tail = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
    return function (xs) {
        return new Data_Maybe.Just(xs);
    };
});
var sortBy = function (comp) {
    return function (xs) {
        var comp$prime = function (x) {
            return function (y) {
                var v = comp(x)(y);
                if (v instanceof Data_Ordering.GT) {
                    return 1;
                };
                if (v instanceof Data_Ordering.EQ) {
                    return 0;
                };
                if (v instanceof Data_Ordering.LT) {
                    return -1 | 0;
                };
                throw new Error("Failed pattern match at Data.Array line 698, column 15 - line 703, column 1: " + [ v.constructor.name ]);
            };
        };
        return $foreign.sortImpl(comp$prime)(xs);
    };
};
var sortWith = function (dictOrd) {
    return function (f) {
        return sortBy(Data_Ord.comparing(dictOrd)(f));
    };
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var singleton = function (a) {
    return [ a ];
};
var $$null = function (xs) {
    return $foreign.length(xs) === 0;
};
var nubBy = function (eq) {
    return function (xs) {
        var v = uncons(xs);
        if (v instanceof Data_Maybe.Just) {
            return $foreign.cons(v.value0.head)(nubBy(eq)($foreign.filter(function (y) {
                return !eq(v.value0.head)(y);
            })(v.value0.tail)));
        };
        if (v instanceof Data_Maybe.Nothing) {
            return [  ];
        };
        throw new Error("Failed pattern match at Data.Array line 888, column 3 - line 890, column 18: " + [ v.constructor.name ]);
    };
};
var nub = function (dictEq) {
    return nubBy(Data_Eq.eq(dictEq));
};
var modifyAtIndices = function (dictFoldable) {
    return function (is) {
        return function (f) {
            return function (xs) {
                return Control_Monad_ST.pureST(Data_Array_ST.withArray(function (res) {
                    return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(dictFoldable)(function (i) {
                        return Data_Array_ST.modifySTArray(res)(i)(f);
                    })(is);
                })(xs));
            };
        };
    };
};
var mapWithIndex = function (f) {
    return function (xs) {
        return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
    };
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())($foreign.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())([  ]));
        };
    };
};
var insertAt = $foreign._insertAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var init = function (xs) {
    if ($$null(xs)) {
        return Data_Maybe.Nothing.value;
    };
    if (Data_Boolean.otherwise) {
        return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
    };
    throw new Error("Failed pattern match at Data.Array line 319, column 1 - line 319, column 45: " + [ xs.constructor.name ]);
};
var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var last = function (xs) {
    return index(xs)($foreign.length(xs) - 1 | 0);
};
var unsnoc = function (xs) {
    return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
        return function (v1) {
            return {
                init: v,
                last: v1
            };
        };
    })(init(xs)))(last(xs));
};
var modifyAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                return updateAt(i)(f(x))(xs);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
        };
    };
};
var span = function (p) {
    return function (arr) {
        var go = function ($copy_i) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(i) {
                var v = index(arr)(i);
                if (v instanceof Data_Maybe.Just) {
                    var $64 = p(v.value0);
                    if ($64) {
                        $copy_i = i + 1 | 0;
                        return;
                    };
                    $tco_done = true;
                    return new Data_Maybe.Just(i);
                };
                if (v instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.Array line 830, column 5 - line 832, column 25: " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($copy_i);
            };
            return $tco_result;
        };
        var breakIndex = go(0);
        if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) {
            return {
                init: [  ],
                rest: arr
            };
        };
        if (breakIndex instanceof Data_Maybe.Just) {
            return {
                init: $foreign.slice(0)(breakIndex.value0)(arr),
                rest: $foreign.slice(breakIndex.value0)($foreign.length(arr))(arr)
            };
        };
        if (breakIndex instanceof Data_Maybe.Nothing) {
            return {
                init: arr,
                rest: [  ]
            };
        };
        throw new Error("Failed pattern match at Data.Array line 817, column 3 - line 823, column 30: " + [ breakIndex.constructor.name ]);
    };
};
var takeWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).init;
    };
};
var unzip = function (xs) {
    return Control_Monad_ST.pureST(function __do() {
        var v = Data_Array_ST.emptySTArray();
        var v1 = Data_Array_ST.emptySTArray();
        var v2 = Data_Array_ST_Iterator.iterator(function (v2) {
            return index(xs)(v2);
        })();
        Data_Array_ST_Iterator.iterate(v2)(function (v3) {
            return function __do() {
                Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_Array_ST.pushSTArray(v)(v3.value0))();
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_Array_ST.pushSTArray(v1)(v3.value1))();
            };
        })();
        var v3 = Data_Array_ST.unsafeFreeze(v)();
        var v4 = Data_Array_ST.unsafeFreeze(v1)();
        return new Data_Tuple.Tuple(v3, v4);
    });
};
var head = function (xs) {
    return index(xs)(0);
};
var groupBy = function (op) {
    return function (xs) {
        return Control_Monad_ST.pureST(function __do() {
            var v = Data_Array_ST.emptySTArray();
            var v1 = Data_Array_ST_Iterator.iterator(function (v1) {
                return index(xs)(v1);
            })();
            Data_Array_ST_Iterator.iterate(v1)(function (x) {
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                    var v2 = Data_Array_ST.emptySTArray();
                    Data_Array_ST_Iterator.pushWhile(op(x))(v1)(v2)();
                    var v3 = Data_Array_ST.unsafeFreeze(v2)();
                    return Data_Array_ST.pushSTArray(v)(new Data_NonEmpty.NonEmpty(x, v3))();
                });
            })();
            return Data_Array_ST.unsafeFreeze(v)();
        });
    };
};
var group = function (dictEq) {
    return function (xs) {
        return groupBy(Data_Eq.eq(dictEq))(xs);
    };
};
var group$prime = function (dictOrd) {
    return function ($93) {
        return group(dictOrd.Eq0())(sort(dictOrd)($93));
    };
};
var fromFoldable = function (dictFoldable) {
    return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
};
var foldRecM = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (array) {
                var go = function (res) {
                    return function (i) {
                        if (i >= $foreign.length(array)) {
                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(res));
                        };
                        if (Data_Boolean.otherwise) {
                            return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(f(res)(unsafeIndex()(array)(i)))(function (v) {
                                return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop({
                                    a: v,
                                    b: i + 1 | 0
                                }));
                            });
                        };
                        throw new Error("Failed pattern match at Data.Array line 1057, column 3 - line 1061, column 42: " + [ res.constructor.name, i.constructor.name ]);
                    };
                };
                return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(go)(a)(0);
            };
        };
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (a) {
            return $foreign["uncons'"](function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(a);
            })(function (b) {
                return function (bs) {
                    return Control_Bind.bind(dictMonad.Bind1())(f(a)(b))(function (a$prime) {
                        return foldM(dictMonad)(f)(a$prime)(bs);
                    });
                };
            });
        };
    };
};
var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var insertBy = function (cmp) {
    return function (x) {
        return function (ys) {
            var i = Data_Maybe.maybe(0)(function (v) {
                return v + 1 | 0;
            })(findLastIndex(function (y) {
                return Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.GT.value);
            })(ys));
            return Data_Maybe.fromJust()(insertAt(i)(x)(ys));
        };
    };
};
var insert = function (dictOrd) {
    return insertBy(Data_Ord.compare(dictOrd));
};
var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var intersectBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return $foreign.filter(function (x) {
                return Data_Maybe.isJust(findIndex(eq(x))(ys));
            })(xs);
        };
    };
};
var intersect = function (dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).rest;
    };
};
var dropEnd = function (n) {
    return function (xs) {
        return $foreign.take($foreign.length(xs) - n | 0)(xs);
    };
};
var deleteAt = $foreign._deleteAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var deleteBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2.length === 0) {
                return [  ];
            };
            return Data_Maybe.maybe(v2)(function (i) {
                return Data_Maybe.fromJust()(deleteAt(i)(v2));
            })(findIndex(v(v1))(v2));
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var $$delete = function (dictEq) {
    return deleteBy(Data_Eq.eq(dictEq));
};
var difference = function (dictEq) {
    return Data_Foldable.foldr(Data_Foldable.foldableArray)($$delete(dictEq));
};
var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
var mapMaybe = function (f) {
    return concatMap(function ($94) {
        return Data_Maybe.maybe([  ])(singleton)(f($94));
    });
};
var filterA = function (dictApplicative) {
    return function (p) {
        return function ($95) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(mapMaybe(function (v) {
                if (v.value1) {
                    return new Data_Maybe.Just(v.value0);
                };
                return Data_Maybe.Nothing.value;
            }))(Data_Traversable.traverse(Data_Traversable.traversableArray)(dictApplicative)(function (x) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Tuple.Tuple.create(x))(p(x));
            })($95));
        };
    };
};
var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
var alterAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                var v = f(x);
                if (v instanceof Data_Maybe.Nothing) {
                    return deleteAt(i)(xs);
                };
                if (v instanceof Data_Maybe.Just) {
                    return updateAt(i)(v.value0)(xs);
                };
                throw new Error("Failed pattern match at Data.Array line 540, column 10 - line 542, column 32: " + [ v.constructor.name ]);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
        };
    };
};
module.exports = {
    fromFoldable: fromFoldable,
    toUnfoldable: toUnfoldable,
    singleton: singleton,
    some: some,
    many: many,
    "null": $$null,
    insert: insert,
    insertBy: insertBy,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    unsnoc: unsnoc,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    deleteAt: deleteAt,
    updateAt: updateAt,
    updateAtIndices: updateAtIndices,
    modifyAt: modifyAt,
    modifyAtIndices: modifyAtIndices,
    alterAt: alterAt,
    concatMap: concatMap,
    filterA: filterA,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    mapWithIndex: mapWithIndex,
    sort: sort,
    sortBy: sortBy,
    sortWith: sortWith,
    takeEnd: takeEnd,
    takeWhile: takeWhile,
    dropEnd: dropEnd,
    dropWhile: dropWhile,
    span: span,
    group: group,
    "group'": group$prime,
    groupBy: groupBy,
    nub: nub,
    nubBy: nubBy,
    union: union,
    unionBy: unionBy,
    "delete": $$delete,
    deleteBy: deleteBy,
    difference: difference,
    intersect: intersect,
    intersectBy: intersectBy,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    foldM: foldM,
    foldRecM: foldRecM,
    unsafeIndex: unsafeIndex,
    range: $foreign.range,
    replicate: $foreign.replicate,
    length: $foreign.length,
    cons: $foreign.cons,
    snoc: $foreign.snoc,
    reverse: $foreign.reverse,
    concat: $foreign.concat,
    filter: $foreign.filter,
    partition: $foreign.partition,
    slice: $foreign.slice,
    take: $foreign.take,
    drop: $foreign.drop,
    zipWith: $foreign.zipWith
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Lazy":17,"../Control.Monad.Eff":39,"../Control.Monad.Rec.Class":51,"../Control.Monad.ST":53,"../Control.Semigroupoid":66,"../Data.Array.ST":120,"../Data.Array.ST.Iterator":118,"../Data.Boolean":131,"../Data.Eq":157,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.NonEmpty":245,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Traversable":296,"../Data.Tuple":298,"../Data.Unfoldable":300,"../Partial.Unsafe":355,"../Prelude":358,"./foreign":121}],123:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor_Clown = require("../Data.Bifunctor.Clown");
var Data_Bifunctor_Flip = require("../Data.Bifunctor.Flip");
var Data_Bifunctor_Joker = require("../Data.Bifunctor.Joker");
var Data_Bifunctor_Product = require("../Data.Bifunctor.Product");
var Data_Bifunctor_Wrap = require("../Data.Bifunctor.Wrap");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Monoid = require("../Data.Monoid");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Endo = require("../Data.Monoid.Endo");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Bifoldable = function (bifoldMap, bifoldl, bifoldr) {
    this.bifoldMap = bifoldMap;
    this.bifoldl = bifoldl;
    this.bifoldr = bifoldr;
};
var bifoldr = function (dict) {
    return dict.bifoldr;
};
var bitraverse_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return function (f) {
            return function (g) {
                return bifoldr(dictBifoldable)(function ($97) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(f($97));
                })(function ($98) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(g($98));
                })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
            };
        };
    };
};
var bifor_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse_(dictBifoldable)(dictApplicative)(f)(g)(t);
                };
            };
        };
    };
};
var bisequence_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return bitraverse_(dictBifoldable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
    };
};
var bifoldl = function (dict) {
    return dict.bifoldl;
};
var bifoldableJoker = function (dictFoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (v) {
            return function (r) {
                return function (v1) {
                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(r)(v1);
                };
            };
        };
    }, function (v) {
        return function (r) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldl(dictFoldable)(r)(u)(v1);
                };
            };
        };
    }, function (v) {
        return function (r) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldr(dictFoldable)(r)(u)(v1);
                };
            };
        };
    });
};
var bifoldableClown = function (dictFoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (l) {
            return function (v) {
                return function (v1) {
                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(l)(v1);
                };
            };
        };
    }, function (l) {
        return function (v) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldl(dictFoldable)(l)(u)(v1);
                };
            };
        };
    }, function (l) {
        return function (v) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldr(dictFoldable)(l)(u)(v1);
                };
            };
        };
    });
};
var bifoldMapDefaultR = function (dictBifoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (g) {
                return bifoldr(dictBifoldable)(function ($99) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(f($99));
                })(function ($100) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(g($100));
                })(Data_Monoid.mempty(dictMonoid));
            };
        };
    };
};
var bifoldMapDefaultL = function (dictBifoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (g) {
                return bifoldl(dictBifoldable)(function (m) {
                    return function (a) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(m)(f(a));
                    };
                })(function (m) {
                    return function (b) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(m)(g(b));
                    };
                })(Data_Monoid.mempty(dictMonoid));
            };
        };
    };
};
var bifoldMap = function (dict) {
    return dict.bifoldMap;
};
var bifoldableFlip = function (dictBifoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (r) {
            return function (l) {
                return function (v) {
                    return bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v);
                };
            };
        };
    }, function (r) {
        return function (l) {
            return function (u) {
                return function (v) {
                    return bifoldl(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    }, function (r) {
        return function (l) {
            return function (u) {
                return function (v) {
                    return bifoldr(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    });
};
var bifoldableWrap = function (dictBifoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (l) {
            return function (r) {
                return function (v) {
                    return bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v);
                };
            };
        };
    }, function (l) {
        return function (r) {
            return function (u) {
                return function (v) {
                    return bifoldl(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    }, function (l) {
        return function (r) {
            return function (u) {
                return function (v) {
                    return bifoldr(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    });
};
var bifoldlDefault = function (dictBifoldable) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(bifoldMap(dictBifoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($101) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f)($101)));
                    })(function ($102) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(g)($102)));
                    })(p)))(z);
                };
            };
        };
    };
};
var bifoldrDefault = function (dictBifoldable) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(bifoldMap(dictBifoldable)(Data_Monoid_Endo.monoidEndo)(function ($103) {
                        return Data_Monoid_Endo.Endo(f($103));
                    })(function ($104) {
                        return Data_Monoid_Endo.Endo(g($104));
                    })(p))(z);
                };
            };
        };
    };
};
var bifoldableProduct = function (dictBifoldable) {
    return function (dictBifoldable1) {
        return new Bifoldable(function (dictMonoid) {
            return function (l) {
                return function (r) {
                    return function (v) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v.value0))(bifoldMap(dictBifoldable1)(dictMonoid)(l)(r)(v.value1));
                    };
                };
            };
        }, function (l) {
            return function (r) {
                return function (u) {
                    return function (m) {
                        return bifoldlDefault(bifoldableProduct(dictBifoldable)(dictBifoldable1))(l)(r)(u)(m);
                    };
                };
            };
        }, function (l) {
            return function (r) {
                return function (u) {
                    return function (m) {
                        return bifoldrDefault(bifoldableProduct(dictBifoldable)(dictBifoldable1))(l)(r)(u)(m);
                    };
                };
            };
        });
    };
};
var bifold = function (dictBifoldable) {
    return function (dictMonoid) {
        return bifoldMap(dictBifoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
    };
};
var biany = function (dictBifoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function (q) {
                return function ($105) {
                    return Data_Newtype.unwrap(Data_Monoid_Disj.newtypeDisj)(bifoldMap(dictBifoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra.HeytingAlgebra0()))(function ($106) {
                        return Data_Monoid_Disj.Disj(p($106));
                    })(function ($107) {
                        return Data_Monoid_Disj.Disj(q($107));
                    })($105));
                };
            };
        };
    };
};
var biall = function (dictBifoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function (q) {
                return function ($108) {
                    return Data_Newtype.unwrap(Data_Monoid_Conj.newtypeConj)(bifoldMap(dictBifoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra.HeytingAlgebra0()))(function ($109) {
                        return Data_Monoid_Conj.Conj(p($109));
                    })(function ($110) {
                        return Data_Monoid_Conj.Conj(q($110));
                    })($108));
                };
            };
        };
    };
};
module.exports = {
    bifoldMap: bifoldMap,
    bifoldl: bifoldl,
    bifoldr: bifoldr,
    Bifoldable: Bifoldable,
    bifoldrDefault: bifoldrDefault,
    bifoldlDefault: bifoldlDefault,
    bifoldMapDefaultR: bifoldMapDefaultR,
    bifoldMapDefaultL: bifoldMapDefaultL,
    bifold: bifold,
    bitraverse_: bitraverse_,
    bifor_: bifor_,
    bisequence_: bisequence_,
    biany: biany,
    biall: biall,
    bifoldableClown: bifoldableClown,
    bifoldableJoker: bifoldableJoker,
    bifoldableFlip: bifoldableFlip,
    bifoldableProduct: bifoldableProduct,
    bifoldableWrap: bifoldableWrap
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Bifunctor.Clown":124,"../Data.Bifunctor.Flip":125,"../Data.Bifunctor.Joker":126,"../Data.Bifunctor.Product":127,"../Data.Bifunctor.Wrap":128,"../Data.Foldable":164,"../Data.Function":172,"../Data.Monoid":242,"../Data.Monoid.Conj":237,"../Data.Monoid.Disj":238,"../Data.Monoid.Dual":239,"../Data.Monoid.Endo":240,"../Data.Newtype":244,"../Data.Semigroup":271,"../Data.Unit":302,"../Prelude":358}],124:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Clown = function (x) {
    return x;
};
var showClown = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Clown " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordClown = function (dictOrd) {
    return dictOrd;
};
var newtypeClown = new Data_Newtype.Newtype(function (n) {
    return n;
}, Clown);
var functorClown = new Data_Functor.Functor(function (v) {
    return function (v1) {
        return v1;
    };
});
var eqClown = function (dictEq) {
    return dictEq;
};
var bifunctorClown = function (dictFunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (v) {
            return function (v1) {
                return Data_Functor.map(dictFunctor)(f)(v1);
            };
        };
    });
};
var biapplyClown = function (dictApply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorClown(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return Control_Apply.apply(dictApply)(v)(v1);
        };
    });
};
var biapplicativeClown = function (dictApplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyClown(dictApplicative.Apply0());
    }, function (a) {
        return function (v) {
            return Control_Applicative.pure(dictApplicative)(a);
        };
    });
};
module.exports = {
    Clown: Clown,
    newtypeClown: newtypeClown,
    eqClown: eqClown,
    ordClown: ordClown,
    showClown: showClown,
    functorClown: functorClown,
    bifunctorClown: bifunctorClown,
    biapplyClown: biapplyClown,
    biapplicativeClown: biapplicativeClown
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Biapplicative":8,"../Control.Biapply":9,"../Data.Bifunctor":129,"../Data.Eq":157,"../Data.Functor":180,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Semigroup":271,"../Data.Show":276,"../Prelude":358}],125:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Flip = function (x) {
    return x;
};
var showFlip = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Flip " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordFlip = function (dictOrd) {
    return dictOrd;
};
var newtypeFlip = new Data_Newtype.Newtype(function (n) {
    return n;
}, Flip);
var functorFlip = function (dictBifunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return Data_Bifunctor.lmap(dictBifunctor)(f)(v);
        };
    });
};
var eqFlip = function (dictEq) {
    return dictEq;
};
var bifunctorFlip = function (dictBifunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (g) {
            return function (v) {
                return Data_Bifunctor.bimap(dictBifunctor)(g)(f)(v);
            };
        };
    });
};
var biapplyFlip = function (dictBiapply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorFlip(dictBiapply.Bifunctor0());
    }, function (v) {
        return function (v1) {
            return Control_Biapply.biapply(dictBiapply)(v)(v1);
        };
    });
};
var biapplicativeFlip = function (dictBiapplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyFlip(dictBiapplicative.Biapply0());
    }, function (a) {
        return function (b) {
            return Control_Biapplicative.bipure(dictBiapplicative)(b)(a);
        };
    });
};
module.exports = {
    Flip: Flip,
    newtypeFlip: newtypeFlip,
    eqFlip: eqFlip,
    ordFlip: ordFlip,
    showFlip: showFlip,
    functorFlip: functorFlip,
    bifunctorFlip: bifunctorFlip,
    biapplyFlip: biapplyFlip,
    biapplicativeFlip: biapplicativeFlip
};

},{"../Control.Biapplicative":8,"../Control.Biapply":9,"../Data.Bifunctor":129,"../Data.Eq":157,"../Data.Functor":180,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Semigroup":271,"../Data.Show":276,"../Prelude":358}],126:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Joker = function (x) {
    return x;
};
var showJoker = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Joker " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordJoker = function (dictOrd) {
    return dictOrd;
};
var newtypeJoker = new Data_Newtype.Newtype(function (n) {
    return n;
}, Joker);
var functorJoker = function (dictFunctor) {
    return new Data_Functor.Functor(function (g) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(g)(v);
        };
    });
};
var eqJoker = function (dictEq) {
    return dictEq;
};
var bifunctorJoker = function (dictFunctor) {
    return new Data_Bifunctor.Bifunctor(function (v) {
        return function (g) {
            return function (v1) {
                return Data_Functor.map(dictFunctor)(g)(v1);
            };
        };
    });
};
var biapplyJoker = function (dictApply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorJoker(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return Control_Apply.apply(dictApply)(v)(v1);
        };
    });
};
var biapplicativeJoker = function (dictApplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyJoker(dictApplicative.Apply0());
    }, function (v) {
        return function (b) {
            return Control_Applicative.pure(dictApplicative)(b);
        };
    });
};
module.exports = {
    Joker: Joker,
    newtypeJoker: newtypeJoker,
    eqJoker: eqJoker,
    ordJoker: ordJoker,
    showJoker: showJoker,
    functorJoker: functorJoker,
    bifunctorJoker: bifunctorJoker,
    biapplyJoker: biapplyJoker,
    biapplicativeJoker: biapplicativeJoker
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Biapplicative":8,"../Control.Biapply":9,"../Data.Bifunctor":129,"../Data.Eq":157,"../Data.Functor":180,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Semigroup":271,"../Data.Show":276,"../Prelude":358}],127:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Product = (function () {
    function Product(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Product.create = function (value0) {
        return function (value1) {
            return new Product(value0, value1);
        };
    };
    return Product;
})();
var showProduct = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            return "(Product " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var eqProduct = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
            };
        });
    };
};
var ordProduct = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqProduct(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function (x) {
            return function (y) {
                var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                if (v instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
            };
        });
    };
};
var bifunctorProduct = function (dictBifunctor) {
    return function (dictBifunctor1) {
        return new Data_Bifunctor.Bifunctor(function (f) {
            return function (g) {
                return function (v) {
                    return new Product(Data_Bifunctor.bimap(dictBifunctor)(f)(g)(v.value0), Data_Bifunctor.bimap(dictBifunctor1)(f)(g)(v.value1));
                };
            };
        });
    };
};
var biapplyProduct = function (dictBiapply) {
    return function (dictBiapply1) {
        return new Control_Biapply.Biapply(function () {
            return bifunctorProduct(dictBiapply.Bifunctor0())(dictBiapply1.Bifunctor0());
        }, function (v) {
            return function (v1) {
                return new Product(Control_Biapply.biapply(dictBiapply)(v.value0)(v1.value0), Control_Biapply.biapply(dictBiapply1)(v.value1)(v1.value1));
            };
        });
    };
};
var biapplicativeProduct = function (dictBiapplicative) {
    return function (dictBiapplicative1) {
        return new Control_Biapplicative.Biapplicative(function () {
            return biapplyProduct(dictBiapplicative.Biapply0())(dictBiapplicative1.Biapply0());
        }, function (a) {
            return function (b) {
                return new Product(Control_Biapplicative.bipure(dictBiapplicative)(a)(b), Control_Biapplicative.bipure(dictBiapplicative1)(a)(b));
            };
        });
    };
};
module.exports = {
    Product: Product,
    eqProduct: eqProduct,
    ordProduct: ordProduct,
    showProduct: showProduct,
    bifunctorProduct: bifunctorProduct,
    biapplyProduct: biapplyProduct,
    biapplicativeProduct: biapplicativeProduct
};

},{"../Control.Biapplicative":8,"../Control.Biapply":9,"../Data.Bifunctor":129,"../Data.Eq":157,"../Data.HeytingAlgebra":188,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Semigroup":271,"../Data.Show":276,"../Prelude":358}],128:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Wrap = function (x) {
    return x;
};
var showWrap = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Wrap " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordWrap = function (dictOrd) {
    return dictOrd;
};
var newtypeWrap = new Data_Newtype.Newtype(function (n) {
    return n;
}, Wrap);
var functorWrap = function (dictBifunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return Data_Bifunctor.rmap(dictBifunctor)(f)(v);
        };
    });
};
var eqWrap = function (dictEq) {
    return dictEq;
};
var bifunctorWrap = function (dictBifunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (g) {
            return function (v) {
                return Data_Bifunctor.bimap(dictBifunctor)(f)(g)(v);
            };
        };
    });
};
var biapplyWrap = function (dictBiapply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorWrap(dictBiapply.Bifunctor0());
    }, function (v) {
        return function (v1) {
            return Control_Biapply.biapply(dictBiapply)(v)(v1);
        };
    });
};
var biapplicativeWrap = function (dictBiapplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyWrap(dictBiapplicative.Biapply0());
    }, function (a) {
        return function (b) {
            return Control_Biapplicative.bipure(dictBiapplicative)(a)(b);
        };
    });
};
module.exports = {
    Wrap: Wrap,
    newtypeWrap: newtypeWrap,
    eqWrap: eqWrap,
    ordWrap: ordWrap,
    showWrap: showWrap,
    functorWrap: functorWrap,
    bifunctorWrap: bifunctorWrap,
    biapplyWrap: biapplyWrap,
    biapplicativeWrap: biapplicativeWrap
};

},{"../Control.Biapplicative":8,"../Control.Biapply":9,"../Data.Bifunctor":129,"../Data.Eq":157,"../Data.Functor":180,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Semigroup":271,"../Data.Show":276,"../Prelude":358}],129:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Bifunctor = function (bimap) {
    this.bimap = bimap;
};
var bimap = function (dict) {
    return dict.bimap;
};
var lmap = function (dictBifunctor) {
    return function (f) {
        return bimap(dictBifunctor)(f)(Control_Category.id(Control_Category.categoryFn));
    };
};
var rmap = function (dictBifunctor) {
    return bimap(dictBifunctor)(Control_Category.id(Control_Category.categoryFn));
};
module.exports = {
    bimap: bimap,
    Bifunctor: Bifunctor,
    lmap: lmap,
    rmap: rmap
};

},{"../Control.Category":12}],130:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Bifunctor_Clown = require("../Data.Bifunctor.Clown");
var Data_Bifunctor_Flip = require("../Data.Bifunctor.Flip");
var Data_Bifunctor_Joker = require("../Data.Bifunctor.Joker");
var Data_Bifunctor_Product = require("../Data.Bifunctor.Product");
var Data_Bifunctor_Wrap = require("../Data.Bifunctor.Wrap");
var Data_Functor = require("../Data.Functor");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Bitraversable = function (Bifoldable1, Bifunctor0, bisequence, bitraverse) {
    this.Bifoldable1 = Bifoldable1;
    this.Bifunctor0 = Bifunctor0;
    this.bisequence = bisequence;
    this.bitraverse = bitraverse;
};
var bitraverse = function (dict) {
    return dict.bitraverse;
};
var lfor = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return bitraverse(dictBitraversable)(dictApplicative)(f)(Control_Applicative.pure(dictApplicative))(t);
            };
        };
    };
};
var ltraverse = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (f) {
            return bitraverse(dictBitraversable)(dictApplicative)(f)(Control_Applicative.pure(dictApplicative));
        };
    };
};
var rfor = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return bitraverse(dictBitraversable)(dictApplicative)(Control_Applicative.pure(dictApplicative))(f)(t);
            };
        };
    };
};
var rtraverse = function (dictBitraversable) {
    return function (dictApplicative) {
        return bitraverse(dictBitraversable)(dictApplicative)(Control_Applicative.pure(dictApplicative));
    };
};
var bitraversableJoker = function (dictTraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableJoker(dictTraversable.Foldable1());
    }, function () {
        return Data_Bifunctor_Joker.bifunctorJoker(dictTraversable.Functor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Joker.Joker)(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (v) {
            return function (r) {
                return function (v1) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Joker.Joker)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(r)(v1));
                };
            };
        };
    });
};
var bitraversableClown = function (dictTraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableClown(dictTraversable.Foldable1());
    }, function () {
        return Data_Bifunctor_Clown.bifunctorClown(dictTraversable.Functor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Clown.Clown)(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (l) {
            return function (v) {
                return function (v1) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Clown.Clown)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(l)(v1));
                };
            };
        };
    });
};
var bisequenceDefault = function (dictBitraversable) {
    return function (dictApplicative) {
        return bitraverse(dictBitraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
    };
};
var bisequence = function (dict) {
    return dict.bisequence;
};
var bitraversableFlip = function (dictBitraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableFlip(dictBitraversable.Bifoldable1());
    }, function () {
        return Data_Bifunctor_Flip.bifunctorFlip(dictBitraversable.Bifunctor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Flip.Flip)(bisequence(dictBitraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (r) {
            return function (l) {
                return function (v) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Flip.Flip)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v));
                };
            };
        };
    });
};
var bitraversableProduct = function (dictBitraversable) {
    return function (dictBitraversable1) {
        return new Bitraversable(function () {
            return Data_Bifoldable.bifoldableProduct(dictBitraversable.Bifoldable1())(dictBitraversable1.Bifoldable1());
        }, function () {
            return Data_Bifunctor_Product.bifunctorProduct(dictBitraversable.Bifunctor0())(dictBitraversable1.Bifunctor0());
        }, function (dictApplicative) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Product.Product.create)(bisequence(dictBitraversable)(dictApplicative)(v.value0)))(bisequence(dictBitraversable1)(dictApplicative)(v.value1));
            };
        }, function (dictApplicative) {
            return function (l) {
                return function (r) {
                    return function (v) {
                        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Product.Product.create)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v.value0)))(bitraverse(dictBitraversable1)(dictApplicative)(l)(r)(v.value1));
                    };
                };
            };
        });
    };
};
var bitraversableWrap = function (dictBitraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableWrap(dictBitraversable.Bifoldable1());
    }, function () {
        return Data_Bifunctor_Wrap.bifunctorWrap(dictBitraversable.Bifunctor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Wrap.Wrap)(bisequence(dictBitraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (l) {
            return function (r) {
                return function (v) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Wrap.Wrap)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v));
                };
            };
        };
    });
};
var bitraverseDefault = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (f) {
            return function (g) {
                return function (t) {
                    return bisequence(dictBitraversable)(dictApplicative)(Data_Bifunctor.bimap(dictBitraversable.Bifunctor0())(f)(g)(t));
                };
            };
        };
    };
};
var bifor = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse(dictBitraversable)(dictApplicative)(f)(g)(t);
                };
            };
        };
    };
};
module.exports = {
    Bitraversable: Bitraversable,
    bitraverse: bitraverse,
    bisequence: bisequence,
    bitraverseDefault: bitraverseDefault,
    bisequenceDefault: bisequenceDefault,
    ltraverse: ltraverse,
    rtraverse: rtraverse,
    bifor: bifor,
    lfor: lfor,
    rfor: rfor,
    bitraversableClown: bitraversableClown,
    bitraversableJoker: bitraversableJoker,
    bitraversableFlip: bitraversableFlip,
    bitraversableProduct: bitraversableProduct,
    bitraversableWrap: bitraversableWrap
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Category":12,"../Data.Bifoldable":123,"../Data.Bifunctor":129,"../Data.Bifunctor.Clown":124,"../Data.Bifunctor.Flip":125,"../Data.Bifunctor.Joker":126,"../Data.Bifunctor.Product":127,"../Data.Bifunctor.Wrap":128,"../Data.Functor":180,"../Data.Traversable":296,"../Prelude":358}],131:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var otherwise = true;
module.exports = {
    otherwise: otherwise
};

},{}],132:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Unit = require("../Data.Unit");
var BooleanAlgebra = function (HeytingAlgebra0) {
    this.HeytingAlgebra0 = HeytingAlgebra0;
};
var booleanAlgebraUnit = new BooleanAlgebra(function () {
    return Data_HeytingAlgebra.heytingAlgebraUnit;
});
var booleanAlgebraFn = function (dictBooleanAlgebra) {
    return new BooleanAlgebra(function () {
        return Data_HeytingAlgebra.heytingAlgebraFunction(dictBooleanAlgebra.HeytingAlgebra0());
    });
};
var booleanAlgebraBoolean = new BooleanAlgebra(function () {
    return Data_HeytingAlgebra.heytingAlgebraBoolean;
});
module.exports = {
    BooleanAlgebra: BooleanAlgebra,
    booleanAlgebraBoolean: booleanAlgebraBoolean,
    booleanAlgebraUnit: booleanAlgebraUnit,
    booleanAlgebraFn: booleanAlgebraFn
};

},{"../Data.HeytingAlgebra":188,"../Data.Unit":302}],133:[function(require,module,exports){
"use strict";

exports.topInt = 2147483647;
exports.bottomInt = -2147483648;

exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);

},{}],134:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Unit = require("../Data.Unit");
var Bounded = function (Ord0, bottom, top) {
    this.Ord0 = Ord0;
    this.bottom = bottom;
    this.top = top;
};
var top = function (dict) {
    return dict.top;
};
var boundedUnit = new Bounded(function () {
    return Data_Ord.ordUnit;
}, Data_Unit.unit, Data_Unit.unit);
var boundedOrdering = new Bounded(function () {
    return Data_Ord.ordOrdering;
}, Data_Ordering.LT.value, Data_Ordering.GT.value);
var boundedInt = new Bounded(function () {
    return Data_Ord.ordInt;
}, $foreign.bottomInt, $foreign.topInt);
var boundedChar = new Bounded(function () {
    return Data_Ord.ordChar;
}, $foreign.bottomChar, $foreign.topChar);
var boundedBoolean = new Bounded(function () {
    return Data_Ord.ordBoolean;
}, false, true);
var bottom = function (dict) {
    return dict.bottom;
};
module.exports = {
    Bounded: Bounded,
    bottom: bottom,
    top: top,
    boundedBoolean: boundedBoolean,
    boundedInt: boundedInt,
    boundedChar: boundedChar,
    boundedOrdering: boundedOrdering,
    boundedUnit: boundedUnit
};

},{"../Data.Ord":251,"../Data.Ordering":252,"../Data.Unit":302,"./foreign":133}],135:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_CatQueue = require("../Data.CatQueue");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_NaturalTransformation = require("../Data.NaturalTransformation");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var CatNil = (function () {
    function CatNil() {

    };
    CatNil.value = new CatNil();
    return CatNil;
})();
var CatCons = (function () {
    function CatCons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CatCons.create = function (value0) {
        return function (value1) {
            return new CatCons(value0, value1);
        };
    };
    return CatCons;
})();
var showCatList = function (dictShow) {
    return new Data_Show.Show(function (v) {
        if (v instanceof CatNil) {
            return "CatNil";
        };
        if (v instanceof CatCons) {
            return "(CatList " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(Data_CatQueue.showCatQueue(showCatList(dictShow)))(v.value1) + ")")));
        };
        throw new Error("Failed pattern match at Data.CatList line 153, column 1 - line 153, column 51: " + [ v.constructor.name ]);
    });
};
var $$null = function (v) {
    if (v instanceof CatNil) {
        return true;
    };
    return false;
};
var link = function (v) {
    return function (cat) {
        if (v instanceof CatNil) {
            return cat;
        };
        if (v instanceof CatCons) {
            return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(cat));
        };
        throw new Error("Failed pattern match at Data.CatList line 110, column 1 - line 110, column 54: " + [ v.constructor.name, cat.constructor.name ]);
    };
};
var foldr = function (k) {
    return function (b) {
        return function (q) {
            var foldl = function ($copy_v) {
                return function ($copy_c) {
                    return function ($copy_v1) {
                        var $tco_var_v = $copy_v;
                        var $tco_var_c = $copy_c;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, c, v1) {
                            if (v1 instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return c;
                            };
                            if (v1 instanceof Data_List_Types.Cons) {
                                $tco_var_v = v;
                                $tco_var_c = v(c)(v1.value0);
                                $copy_v1 = v1.value1;
                                return;
                            };
                            throw new Error("Failed pattern match at Data.CatList line 125, column 3 - line 125, column 59: " + [ v.constructor.name, c.constructor.name, v1.constructor.name ]);
                        };
                        while (!$tco_done) {
                            $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
                        };
                        return $tco_result;
                    };
                };
            };
            var go = function ($copy_xs) {
                return function ($copy_ys) {
                    var $tco_var_xs = $copy_xs;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(xs, ys) {
                        var v = Data_CatQueue.uncons(xs);
                        if (v instanceof Data_Maybe.Nothing) {
                            $tco_done = true;
                            return foldl(function (x) {
                                return function (i) {
                                    return i(x);
                                };
                            })(b)(ys);
                        };
                        if (v instanceof Data_Maybe.Just) {
                            $tco_var_xs = v.value0.value1;
                            $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
                            return;
                        };
                        throw new Error("Failed pattern match at Data.CatList line 121, column 14 - line 123, column 67: " + [ v.constructor.name ]);
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_xs, $copy_ys);
                    };
                    return $tco_result;
                };
            };
            return go(q)(Data_List_Types.Nil.value);
        };
    };
};
var uncons = function (v) {
    if (v instanceof CatNil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof CatCons) {
        return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {
            var $41 = Data_CatQueue["null"](v.value1);
            if ($41) {
                return CatNil.value;
            };
            return foldr(link)(CatNil.value)(v.value1);
        })()));
    };
    throw new Error("Failed pattern match at Data.CatList line 101, column 1 - line 101, column 61: " + [ v.constructor.name ]);
};
var foldMap = function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof CatNil) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof CatCons) {
                var d = (function () {
                    var $46 = Data_CatQueue["null"](v.value1);
                    if ($46) {
                        return CatNil.value;
                    };
                    return foldr(link)(CatNil.value)(v.value1);
                })();
                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(foldMap(dictMonoid)(f)(d));
            };
            throw new Error("Failed pattern match at Data.CatList line 141, column 1 - line 141, column 62: " + [ f.constructor.name, v.constructor.name ]);
        };
    };
};
var foldableCatList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (l) {
            return foldMap(dictMonoid)(f)(l);
        };
    };
}, function (f) {
    return function (s) {
        return function (l) {
            return Data_Foldable.foldlDefault(foldableCatList)(f)(s)(l);
        };
    };
}, function (f) {
    return function (s) {
        return function (l) {
            return Data_Foldable.foldrDefault(foldableCatList)(f)(s)(l);
        };
    };
});
var empty = CatNil.value;
var append = function (v) {
    return function (v1) {
        if (v1 instanceof CatNil) {
            return v;
        };
        if (v instanceof CatNil) {
            return v1;
        };
        return link(v)(v1);
    };
};
var cons = function (a) {
    return function (cat) {
        return append(new CatCons(a, Data_CatQueue.empty))(cat);
    };
};
var map = function (v) {
    return function (v1) {
        if (v1 instanceof CatNil) {
            return CatNil.value;
        };
        if (v1 instanceof CatCons) {
            var d = (function () {
                var $53 = Data_CatQueue["null"](v1.value1);
                if ($53) {
                    return CatNil.value;
                };
                return foldr(link)(CatNil.value)(v1.value1);
            })();
            return cons(v(v1.value0))(map(v)(d));
        };
        throw new Error("Failed pattern match at Data.CatList line 135, column 1 - line 135, column 54: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var functorCatList = new Data_Functor.Functor(map);
var singleton = function (a) {
    return cons(a)(CatNil.value);
};
var traversableCatList = new Data_Traversable.Traversable(function () {
    return foldableCatList;
}, function () {
    return functorCatList;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof CatNil) {
            return Control_Applicative.pure(dictApplicative)(CatNil.value);
        };
        if (v instanceof CatCons) {
            var d = (function () {
                var $57 = Data_CatQueue["null"](v.value1);
                if ($57) {
                    return CatNil.value;
                };
                return foldr(link)(CatNil.value)(v.value1);
            })();
            return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(cons)(v.value0))(Data_Traversable.sequence(traversableCatList)(dictApplicative)(d));
        };
        throw new Error("Failed pattern match at Data.CatList line 169, column 1 - line 169, column 51: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof CatNil) {
                return Control_Applicative.pure(dictApplicative)(CatNil.value);
            };
            if (v1 instanceof CatCons) {
                var d = (function () {
                    var $62 = Data_CatQueue["null"](v1.value1);
                    if ($62) {
                        return CatNil.value;
                    };
                    return foldr(link)(CatNil.value)(v1.value1);
                })();
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(cons)(v(v1.value0)))(Data_Traversable.traverse(traversableCatList)(dictApplicative)(v)(d));
            };
            throw new Error("Failed pattern match at Data.CatList line 169, column 1 - line 169, column 51: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var semigroupCatList = new Data_Semigroup.Semigroup(append);
var monoidCatList = new Data_Monoid.Monoid(function () {
    return semigroupCatList;
}, CatNil.value);
var monadCatList = new Control_Monad.Monad(function () {
    return applicativeCatList;
}, function () {
    return bindCatList;
});
var bindCatList = new Control_Bind.Bind(function () {
    return applyCatList;
}, Data_Function.flip(foldMap(monoidCatList)));
var applyCatList = new Control_Apply.Apply(function () {
    return functorCatList;
}, Control_Monad.ap(monadCatList));
var applicativeCatList = new Control_Applicative.Applicative(function () {
    return applyCatList;
}, singleton);
var fromFoldable = function (dictFoldable) {
    return function (f) {
        return Data_Foldable.foldMap(dictFoldable)(monoidCatList)(singleton)(f);
    };
};
var snoc = function (cat) {
    return function (a) {
        return append(cat)(new CatCons(a, Data_CatQueue.empty));
    };
};
var unfoldableCatList = new Data_Unfoldable.Unfoldable(function (f) {
    return function (b) {
        var go = function ($copy_source) {
            return function ($copy_memo) {
                var $tco_var_source = $copy_source;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(source, memo) {
                    var v = f(source);
                    if (v instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return memo;
                    };
                    if (v instanceof Data_Maybe.Just) {
                        $tco_var_source = v.value0.value1;
                        $copy_memo = snoc(memo)(v.value0.value0);
                        return;
                    };
                    throw new Error("Failed pattern match at Data.CatList line 165, column 24 - line 167, column 57: " + [ v.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_source, $copy_memo);
                };
                return $tco_result;
            };
        };
        return go(b)(CatNil.value);
    };
});
var altCatList = new Control_Alt.Alt(function () {
    return functorCatList;
}, append);
var plusCatList = new Control_Plus.Plus(function () {
    return altCatList;
}, empty);
var alternativeCatList = new Control_Alternative.Alternative(function () {
    return applicativeCatList;
}, function () {
    return plusCatList;
});
var monadZeroCatList = new Control_MonadZero.MonadZero(function () {
    return alternativeCatList;
}, function () {
    return monadCatList;
});
var monadPlusCatList = new Control_MonadPlus.MonadPlus(function () {
    return monadZeroCatList;
});
module.exports = {
    CatNil: CatNil,
    CatCons: CatCons,
    empty: empty,
    "null": $$null,
    append: append,
    cons: cons,
    snoc: snoc,
    uncons: uncons,
    fromFoldable: fromFoldable,
    semigroupCatList: semigroupCatList,
    monoidCatList: monoidCatList,
    showCatList: showCatList,
    foldableCatList: foldableCatList,
    unfoldableCatList: unfoldableCatList,
    traversableCatList: traversableCatList,
    functorCatList: functorCatList,
    applyCatList: applyCatList,
    applicativeCatList: applicativeCatList,
    bindCatList: bindCatList,
    monadCatList: monadCatList,
    altCatList: altCatList,
    plusCatList: plusCatList,
    alternativeCatList: alternativeCatList,
    monadZeroCatList: monadZeroCatList,
    monadPlusCatList: monadPlusCatList
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Monad":60,"../Control.MonadPlus":61,"../Control.MonadZero":62,"../Control.Plus":65,"../Data.CatQueue":136,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.List":230,"../Data.List.Types":229,"../Data.Maybe":234,"../Data.Monoid":242,"../Data.NaturalTransformation":243,"../Data.Semigroup":271,"../Data.Show":276,"../Data.Traversable":296,"../Data.Tuple":298,"../Data.Unfoldable":300}],136:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Tuple = require("../Data.Tuple");
var CatQueue = (function () {
    function CatQueue(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CatQueue.create = function (value0) {
        return function (value1) {
            return new CatQueue(value0, value1);
        };
    };
    return CatQueue;
})();
var uncons = function ($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
        if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return Data_Maybe.Nothing.value;
        };
        if (v.value0 instanceof Data_List_Types.Nil) {
            $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
            return;
        };
        if (v.value0 instanceof Data_List_Types.Cons) {
            $tco_done = true;
            return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
        };
        throw new Error("Failed pattern match at Data.CatQueue line 50, column 1 - line 50, column 63: " + [ v.constructor.name ]);
    };
    while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
    };
    return $tco_result;
};
var snoc = function (v) {
    return function (a) {
        return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
    };
};
var showCatQueue = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(CatQueue " + (Data_Show.show(Data_List_Types.showList(dictShow))(v.value0) + (" " + (Data_Show.show(Data_List_Types.showList(dictShow))(v.value1) + ")")));
    });
};
var $$null = function (v) {
    if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
        return true;
    };
    return false;
};
var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
module.exports = {
    CatQueue: CatQueue,
    empty: empty,
    "null": $$null,
    snoc: snoc,
    uncons: uncons,
    showCatQueue: showCatQueue
};

},{"../Data.List":230,"../Data.List.Types":229,"../Data.Maybe":234,"../Data.Semigroup":271,"../Data.Show":276,"../Data.Tuple":298}],137:[function(require,module,exports){
"use strict";

exports.toCharCode = function (c) {
  return c.charCodeAt(0);
};

exports.fromCharCode = function (c) {
  return String.fromCharCode(c);
};

exports.toLower = function (c) {
  return c.toLowerCase();
};

exports.toUpper = function (c) {
  return c.toUpperCase();
};

},{}],138:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    fromCharCode: $foreign.fromCharCode,
    toCharCode: $foreign.toCharCode,
    toLower: $foreign.toLower,
    toUpper: $foreign.toUpper
};

},{"./foreign":137}],139:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Int = require("../Data.Int");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var NUMCAT_LU = (function () {
    function NUMCAT_LU() {

    };
    NUMCAT_LU.value = new NUMCAT_LU();
    return NUMCAT_LU;
})();
var NUMCAT_LL = (function () {
    function NUMCAT_LL() {

    };
    NUMCAT_LL.value = new NUMCAT_LL();
    return NUMCAT_LL;
})();
var NUMCAT_LT = (function () {
    function NUMCAT_LT() {

    };
    NUMCAT_LT.value = new NUMCAT_LT();
    return NUMCAT_LT;
})();
var NUMCAT_LM = (function () {
    function NUMCAT_LM() {

    };
    NUMCAT_LM.value = new NUMCAT_LM();
    return NUMCAT_LM;
})();
var NUMCAT_LO = (function () {
    function NUMCAT_LO() {

    };
    NUMCAT_LO.value = new NUMCAT_LO();
    return NUMCAT_LO;
})();
var NUMCAT_MN = (function () {
    function NUMCAT_MN() {

    };
    NUMCAT_MN.value = new NUMCAT_MN();
    return NUMCAT_MN;
})();
var NUMCAT_MC = (function () {
    function NUMCAT_MC() {

    };
    NUMCAT_MC.value = new NUMCAT_MC();
    return NUMCAT_MC;
})();
var NUMCAT_ME = (function () {
    function NUMCAT_ME() {

    };
    NUMCAT_ME.value = new NUMCAT_ME();
    return NUMCAT_ME;
})();
var NUMCAT_ND = (function () {
    function NUMCAT_ND() {

    };
    NUMCAT_ND.value = new NUMCAT_ND();
    return NUMCAT_ND;
})();
var NUMCAT_NL = (function () {
    function NUMCAT_NL() {

    };
    NUMCAT_NL.value = new NUMCAT_NL();
    return NUMCAT_NL;
})();
var NUMCAT_NO = (function () {
    function NUMCAT_NO() {

    };
    NUMCAT_NO.value = new NUMCAT_NO();
    return NUMCAT_NO;
})();
var NUMCAT_PC = (function () {
    function NUMCAT_PC() {

    };
    NUMCAT_PC.value = new NUMCAT_PC();
    return NUMCAT_PC;
})();
var NUMCAT_PD = (function () {
    function NUMCAT_PD() {

    };
    NUMCAT_PD.value = new NUMCAT_PD();
    return NUMCAT_PD;
})();
var NUMCAT_PS = (function () {
    function NUMCAT_PS() {

    };
    NUMCAT_PS.value = new NUMCAT_PS();
    return NUMCAT_PS;
})();
var NUMCAT_PE = (function () {
    function NUMCAT_PE() {

    };
    NUMCAT_PE.value = new NUMCAT_PE();
    return NUMCAT_PE;
})();
var NUMCAT_PI = (function () {
    function NUMCAT_PI() {

    };
    NUMCAT_PI.value = new NUMCAT_PI();
    return NUMCAT_PI;
})();
var NUMCAT_PF = (function () {
    function NUMCAT_PF() {

    };
    NUMCAT_PF.value = new NUMCAT_PF();
    return NUMCAT_PF;
})();
var NUMCAT_PO = (function () {
    function NUMCAT_PO() {

    };
    NUMCAT_PO.value = new NUMCAT_PO();
    return NUMCAT_PO;
})();
var NUMCAT_SM = (function () {
    function NUMCAT_SM() {

    };
    NUMCAT_SM.value = new NUMCAT_SM();
    return NUMCAT_SM;
})();
var NUMCAT_SC = (function () {
    function NUMCAT_SC() {

    };
    NUMCAT_SC.value = new NUMCAT_SC();
    return NUMCAT_SC;
})();
var NUMCAT_SK = (function () {
    function NUMCAT_SK() {

    };
    NUMCAT_SK.value = new NUMCAT_SK();
    return NUMCAT_SK;
})();
var NUMCAT_SO = (function () {
    function NUMCAT_SO() {

    };
    NUMCAT_SO.value = new NUMCAT_SO();
    return NUMCAT_SO;
})();
var NUMCAT_ZS = (function () {
    function NUMCAT_ZS() {

    };
    NUMCAT_ZS.value = new NUMCAT_ZS();
    return NUMCAT_ZS;
})();
var NUMCAT_ZL = (function () {
    function NUMCAT_ZL() {

    };
    NUMCAT_ZL.value = new NUMCAT_ZL();
    return NUMCAT_ZL;
})();
var NUMCAT_ZP = (function () {
    function NUMCAT_ZP() {

    };
    NUMCAT_ZP.value = new NUMCAT_ZP();
    return NUMCAT_ZP;
})();
var NUMCAT_CC = (function () {
    function NUMCAT_CC() {

    };
    NUMCAT_CC.value = new NUMCAT_CC();
    return NUMCAT_CC;
})();
var NUMCAT_CF = (function () {
    function NUMCAT_CF() {

    };
    NUMCAT_CF.value = new NUMCAT_CF();
    return NUMCAT_CF;
})();
var NUMCAT_CS = (function () {
    function NUMCAT_CS() {

    };
    NUMCAT_CS.value = new NUMCAT_CS();
    return NUMCAT_CS;
})();
var NUMCAT_CO = (function () {
    function NUMCAT_CO() {

    };
    NUMCAT_CO.value = new NUMCAT_CO();
    return NUMCAT_CO;
})();
var NUMCAT_CN = (function () {
    function NUMCAT_CN() {

    };
    NUMCAT_CN.value = new NUMCAT_CN();
    return NUMCAT_CN;
})();
var ConversionRule = function (x) {
    return x;
};
var CharBlock = function (x) {
    return x;
};
var showUnicodeCategory = new Data_Show.Show(function (v) {
    if (v instanceof NUMCAT_LU) {
        return "NUMCAT_LU";
    };
    if (v instanceof NUMCAT_LL) {
        return "NUMCAT_LL";
    };
    if (v instanceof NUMCAT_LT) {
        return "NUMCAT_LT";
    };
    if (v instanceof NUMCAT_LM) {
        return "NUMCAT_LM";
    };
    if (v instanceof NUMCAT_LO) {
        return "NUMCAT_LO";
    };
    if (v instanceof NUMCAT_MN) {
        return "NUMCAT_MN";
    };
    if (v instanceof NUMCAT_MC) {
        return "NUMCAT_MC";
    };
    if (v instanceof NUMCAT_ME) {
        return "NUMCAT_ME";
    };
    if (v instanceof NUMCAT_ND) {
        return "NUMCAT_ND";
    };
    if (v instanceof NUMCAT_NL) {
        return "NUMCAT_NL";
    };
    if (v instanceof NUMCAT_NO) {
        return "NUMCAT_NO";
    };
    if (v instanceof NUMCAT_PC) {
        return "NUMCAT_PC";
    };
    if (v instanceof NUMCAT_PD) {
        return "NUMCAT_PD";
    };
    if (v instanceof NUMCAT_PS) {
        return "NUMCAT_PS";
    };
    if (v instanceof NUMCAT_PE) {
        return "NUMCAT_PE";
    };
    if (v instanceof NUMCAT_PI) {
        return "NUMCAT_PI";
    };
    if (v instanceof NUMCAT_PF) {
        return "NUMCAT_PF";
    };
    if (v instanceof NUMCAT_PO) {
        return "NUMCAT_PO";
    };
    if (v instanceof NUMCAT_SM) {
        return "NUMCAT_SM";
    };
    if (v instanceof NUMCAT_SC) {
        return "NUMCAT_SC";
    };
    if (v instanceof NUMCAT_SK) {
        return "NUMCAT_SK";
    };
    if (v instanceof NUMCAT_SO) {
        return "NUMCAT_SO";
    };
    if (v instanceof NUMCAT_ZS) {
        return "NUMCAT_ZS";
    };
    if (v instanceof NUMCAT_ZL) {
        return "NUMCAT_ZL";
    };
    if (v instanceof NUMCAT_ZP) {
        return "NUMCAT_ZP";
    };
    if (v instanceof NUMCAT_CC) {
        return "NUMCAT_CC";
    };
    if (v instanceof NUMCAT_CF) {
        return "NUMCAT_CF";
    };
    if (v instanceof NUMCAT_CS) {
        return "NUMCAT_CS";
    };
    if (v instanceof NUMCAT_CO) {
        return "NUMCAT_CO";
    };
    if (v instanceof NUMCAT_CN) {
        return "NUMCAT_CN";
    };
    throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal line 49, column 1 - line 49, column 53: " + [ v.constructor.name ]);
});
var showConversionRule = new Data_Show.Show(function (v) {
    return "ConversionRule { category: " + (Data_Show.show(Data_Show.showInt)(v.category) + (", unicodeCat: " + (Data_Show.show(showUnicodeCategory)(v.unicodeCat) + (", combiningClass: " + (Data_Show.show(Data_Show.showInt)(v.combiningClass) + (", possible: " + (Data_Show.show(Data_Show.showInt)(v.possible) + (", updist: " + (Data_Show.show(Data_Show.showInt)(v.updist) + (", lowdist: " + (Data_Show.show(Data_Show.showInt)(v.lowdist) + (", titledist: " + (Data_Show.show(Data_Show.showInt)(v.titledist) + " }")))))))))))));
});
var showCharBlock = new Data_Show.Show(function (v) {
    return "CharBlock { start: " + (Data_Show.show(Data_Show.showInt)(v.start) + (", length: " + (Data_Show.show(Data_Show.showInt)(v.length) + (", convRule: " + (Data_Show.show(showConversionRule)(v.convRule) + " }")))));
});
var numSpaceBlocks = 8;
var numRules = 222;
var numLat1Blocks = 63;
var numConvBlocks = 1230;
var numBlocks = 2957;
var maxUniChar = 1114109;
var gencatZS = 2;
var rule1 = {
    category: gencatZS,
    unicodeCat: NUMCAT_ZS.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var spacechars = [ {
    start: 32,
    length: 1,
    convRule: rule1
}, {
    start: 160,
    length: 1,
    convRule: rule1
}, {
    start: 5760,
    length: 1,
    convRule: rule1
}, {
    start: 6158,
    length: 1,
    convRule: rule1
}, {
    start: 8192,
    length: 11,
    convRule: rule1
}, {
    start: 8239,
    length: 1,
    convRule: rule1
}, {
    start: 8287,
    length: 1,
    convRule: rule1
}, {
    start: 12288,
    length: 1,
    convRule: rule1
} ];
var gencatZP = 67108864;
var rule189 = {
    category: gencatZP,
    unicodeCat: NUMCAT_ZP.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatZL = 33554432;
var rule188 = {
    category: gencatZL,
    unicodeCat: NUMCAT_ZL.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatSO = 8192;
var rule13 = {
    category: gencatSO,
    unicodeCat: NUMCAT_SO.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule197 = {
    category: gencatSO,
    unicodeCat: NUMCAT_SO.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 26,
    titledist: 0
};
var rule198 = {
    category: gencatSO,
    unicodeCat: NUMCAT_SO.value,
    combiningClass: 0,
    possible: 1,
    updist: -26 | 0,
    lowdist: 0,
    titledist: -26 | 0
};
var gencatSM = 64;
var rule6 = {
    category: gencatSM,
    unicodeCat: NUMCAT_SM.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatSK = 1024;
var rule10 = {
    category: gencatSK,
    unicodeCat: NUMCAT_SK.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatSC = 8;
var rule3 = {
    category: gencatSC,
    unicodeCat: NUMCAT_SC.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatPS = 16;
var rule4 = {
    category: gencatPS,
    unicodeCat: NUMCAT_PS.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatPO = 4;
var rule2 = {
    category: gencatPO,
    unicodeCat: NUMCAT_PO.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatPI = 16384;
var rule15 = {
    category: gencatPI,
    unicodeCat: NUMCAT_PI.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatPF = 131072;
var rule19 = {
    category: gencatPF,
    unicodeCat: NUMCAT_PF.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatPE = 32;
var rule5 = {
    category: gencatPE,
    unicodeCat: NUMCAT_PE.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatPD = 128;
var rule7 = {
    category: gencatPD,
    unicodeCat: NUMCAT_PD.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatPC = 2048;
var rule11 = {
    category: gencatPC,
    unicodeCat: NUMCAT_PC.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatNO = 65536;
var rule17 = {
    category: gencatNO,
    unicodeCat: NUMCAT_NO.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatNL = 16777216;
var rule163 = {
    category: gencatNL,
    unicodeCat: NUMCAT_NL.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule195 = {
    category: gencatNL,
    unicodeCat: NUMCAT_NL.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 16,
    titledist: 0
};
var rule196 = {
    category: gencatNL,
    unicodeCat: NUMCAT_NL.value,
    combiningClass: 0,
    possible: 1,
    updist: -16 | 0,
    lowdist: 0,
    titledist: -16 | 0
};
var gencatND = 256;
var rule8 = {
    category: gencatND,
    unicodeCat: NUMCAT_ND.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatMN = 2097152;
var rule122 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 546,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule123 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 552,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule124 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 16,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule125 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 17,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule126 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 18,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule127 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 19,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule128 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 20,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule129 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 21,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule130 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 22,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule131 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 23,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule132 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 24,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule133 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 25,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule134 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 32,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule135 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 33,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule136 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 34,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule137 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 35,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule138 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 36,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule139 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 37,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule140 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 48,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule141 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 49,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule142 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 50,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule143 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 39,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule144 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 40,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule145 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 41,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule146 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 51,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule147 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 52,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule148 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 53,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule149 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 54,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule151 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 7,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule152 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 9,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule153 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 132,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule154 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 145,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule155 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 259,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule156 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 263,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule157 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 280,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule158 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 290,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule159 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 297,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule160 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 304,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule161 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 306,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule167 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 532,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule210 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 536,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule211 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 548,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule212 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 8,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule217 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 38,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule84 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 560,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule85 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 562,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule86 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 544,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule87 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 534,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule88 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 514,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule89 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 1,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule90 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 576,
    possible: 1,
    updist: 84,
    lowdist: 0,
    titledist: 84
};
var rule91 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule92 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 563,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule93 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    combiningClass: 564,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatME = 4194304;
var rule117 = {
    category: gencatME,
    unicodeCat: NUMCAT_ME.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatMC = 8388608;
var rule150 = {
    category: gencatMC,
    unicodeCat: NUMCAT_MC.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule164 = {
    category: gencatMC,
    unicodeCat: NUMCAT_MC.value,
    combiningClass: 9,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule220 = {
    category: gencatMC,
    unicodeCat: NUMCAT_MC.value,
    combiningClass: 534,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule221 = {
    category: gencatMC,
    unicodeCat: NUMCAT_MC.value,
    combiningClass: 550,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatLU = 512;
var nullrule = {
    category: gencatLU,
    unicodeCat: NUMCAT_CN.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule103 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 8,
    titledist: 0
};
var rule106 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule113 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -60 | 0,
    titledist: 0
};
var rule115 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -7 | 0,
    titledist: 0
};
var rule116 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 80,
    titledist: 0
};
var rule118 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 15,
    titledist: 0
};
var rule120 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 48,
    titledist: 0
};
var rule162 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 7264,
    titledist: 0
};
var rule169 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -7615 | 0,
    titledist: 0
};
var rule171 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -8 | 0,
    titledist: 0
};
var rule180 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -74 | 0,
    titledist: 0
};
var rule183 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -86 | 0,
    titledist: 0
};
var rule184 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -100 | 0,
    titledist: 0
};
var rule185 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -112 | 0,
    titledist: 0
};
var rule186 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -128 | 0,
    titledist: 0
};
var rule187 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -126 | 0,
    titledist: 0
};
var rule190 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -7517 | 0,
    titledist: 0
};
var rule191 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -8383 | 0,
    titledist: 0
};
var rule192 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -8262 | 0,
    titledist: 0
};
var rule193 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 28,
    titledist: 0
};
var rule199 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -10743 | 0,
    titledist: 0
};
var rule200 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -3814 | 0,
    titledist: 0
};
var rule201 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -10727 | 0,
    titledist: 0
};
var rule204 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -10780 | 0,
    titledist: 0
};
var rule205 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -10749 | 0,
    titledist: 0
};
var rule206 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -10783 | 0,
    titledist: 0
};
var rule207 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -10782 | 0,
    titledist: 0
};
var rule208 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -10815 | 0,
    titledist: 0
};
var rule21 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 1,
    titledist: 0
};
var rule213 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -35332 | 0,
    titledist: 0
};
var rule214 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -42280 | 0,
    titledist: 0
};
var rule218 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 40,
    titledist: 0
};
var rule23 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -199 | 0,
    titledist: 0
};
var rule25 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -121 | 0,
    titledist: 0
};
var rule28 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 210,
    titledist: 0
};
var rule29 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 206,
    titledist: 0
};
var rule30 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 205,
    titledist: 0
};
var rule31 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 79,
    titledist: 0
};
var rule32 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 202,
    titledist: 0
};
var rule33 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 203,
    titledist: 0
};
var rule34 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 207,
    titledist: 0
};
var rule36 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 211,
    titledist: 0
};
var rule37 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 209,
    titledist: 0
};
var rule39 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 213,
    titledist: 0
};
var rule41 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 214,
    titledist: 0
};
var rule42 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 218,
    titledist: 0
};
var rule43 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 217,
    titledist: 0
};
var rule44 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 219,
    titledist: 0
};
var rule47 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 2,
    titledist: 1
};
var rule51 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -97 | 0,
    titledist: 0
};
var rule52 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -56 | 0,
    titledist: 0
};
var rule53 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -130 | 0,
    titledist: 0
};
var rule54 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 10795,
    titledist: 0
};
var rule55 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -163 | 0,
    titledist: 0
};
var rule56 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 10792,
    titledist: 0
};
var rule58 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -195 | 0,
    titledist: 0
};
var rule59 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 69,
    titledist: 0
};
var rule60 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 71,
    titledist: 0
};
var rule9 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 32,
    titledist: 0
};
var rule94 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 38,
    titledist: 0
};
var rule95 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 37,
    titledist: 0
};
var rule96 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 64,
    titledist: 0
};
var rule97 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: 63,
    titledist: 0
};
var gencatLT = 524288;
var rule178 = {
    category: gencatLT,
    unicodeCat: NUMCAT_LT.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -8 | 0,
    titledist: 0
};
var rule181 = {
    category: gencatLT,
    unicodeCat: NUMCAT_LT.value,
    combiningClass: 0,
    possible: 1,
    updist: 0,
    lowdist: -9 | 0,
    titledist: 0
};
var rule48 = {
    category: gencatLT,
    unicodeCat: NUMCAT_LT.value,
    combiningClass: 0,
    possible: 1,
    updist: -1 | 0,
    lowdist: 1,
    titledist: 0
};
var gencatLO = 262144;
var rule45 = {
    category: gencatLO,
    unicodeCat: NUMCAT_LO.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatLM = 1048576;
var rule83 = {
    category: gencatLM,
    unicodeCat: NUMCAT_LM.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatLL = 4096;
var rule100 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -31 | 0,
    lowdist: 0,
    titledist: -31 | 0
};
var rule101 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -64 | 0,
    lowdist: 0,
    titledist: -64 | 0
};
var rule102 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -63 | 0,
    lowdist: 0,
    titledist: -63 | 0
};
var rule104 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -62 | 0,
    lowdist: 0,
    titledist: -62 | 0
};
var rule105 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -57 | 0,
    lowdist: 0,
    titledist: -57 | 0
};
var rule107 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -47 | 0,
    lowdist: 0,
    titledist: -47 | 0
};
var rule108 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -54 | 0,
    lowdist: 0,
    titledist: -54 | 0
};
var rule109 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -8 | 0,
    lowdist: 0,
    titledist: -8 | 0
};
var rule110 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -86 | 0,
    lowdist: 0,
    titledist: -86 | 0
};
var rule111 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -80 | 0,
    lowdist: 0,
    titledist: -80 | 0
};
var rule112 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 7,
    lowdist: 0,
    titledist: 7
};
var rule114 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -96 | 0,
    lowdist: 0,
    titledist: -96 | 0
};
var rule119 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -15 | 0,
    lowdist: 0,
    titledist: -15 | 0
};
var rule12 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -32 | 0,
    lowdist: 0,
    titledist: -32 | 0
};
var rule121 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -48 | 0,
    lowdist: 0,
    titledist: -48 | 0
};
var rule14 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var rule165 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 35332,
    lowdist: 0,
    titledist: 35332
};
var rule166 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 3814,
    lowdist: 0,
    titledist: 3814
};
var rule168 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -59 | 0,
    lowdist: 0,
    titledist: -59 | 0
};
var rule170 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 8,
    lowdist: 0,
    titledist: 8
};
var rule172 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 74,
    lowdist: 0,
    titledist: 74
};
var rule173 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 86,
    lowdist: 0,
    titledist: 86
};
var rule174 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 100,
    lowdist: 0,
    titledist: 100
};
var rule175 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 128,
    lowdist: 0,
    titledist: 128
};
var rule176 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 112,
    lowdist: 0,
    titledist: 112
};
var rule177 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 126,
    lowdist: 0,
    titledist: 126
};
var rule179 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 9,
    lowdist: 0,
    titledist: 9
};
var rule18 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 743,
    lowdist: 0,
    titledist: 743
};
var rule182 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -7205 | 0,
    lowdist: 0,
    titledist: -7205 | 0
};
var rule194 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -28 | 0,
    lowdist: 0,
    titledist: -28 | 0
};
var rule20 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 121,
    lowdist: 0,
    titledist: 121
};
var rule202 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -10795 | 0,
    lowdist: 0,
    titledist: -10795 | 0
};
var rule203 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -10792 | 0,
    lowdist: 0,
    titledist: -10792 | 0
};
var rule209 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -7264 | 0,
    lowdist: 0,
    titledist: -7264 | 0
};
var rule219 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -40 | 0,
    lowdist: 0,
    titledist: -40 | 0
};
var rule22 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -1 | 0,
    lowdist: 0,
    titledist: -1 | 0
};
var rule24 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -232 | 0,
    lowdist: 0,
    titledist: -232 | 0
};
var rule26 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -300 | 0,
    lowdist: 0,
    titledist: -300 | 0
};
var rule27 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 195,
    lowdist: 0,
    titledist: 195
};
var rule35 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 97,
    lowdist: 0,
    titledist: 97
};
var rule38 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 163,
    lowdist: 0,
    titledist: 163
};
var rule40 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 130,
    lowdist: 0,
    titledist: 130
};
var rule46 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 56,
    lowdist: 0,
    titledist: 56
};
var rule49 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -2 | 0,
    lowdist: 0,
    titledist: -1 | 0
};
var rule50 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -79 | 0,
    lowdist: 0,
    titledist: -79 | 0
};
var rule57 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 10815,
    lowdist: 0,
    titledist: 10815
};
var rule61 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 10783,
    lowdist: 0,
    titledist: 10783
};
var rule62 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 10780,
    lowdist: 0,
    titledist: 10780
};
var rule63 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 10782,
    lowdist: 0,
    titledist: 10782
};
var rule64 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -210 | 0,
    lowdist: 0,
    titledist: -210 | 0
};
var rule65 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -206 | 0,
    lowdist: 0,
    titledist: -206 | 0
};
var rule66 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -205 | 0,
    lowdist: 0,
    titledist: -205 | 0
};
var rule67 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -202 | 0,
    lowdist: 0,
    titledist: -202 | 0
};
var rule68 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -203 | 0,
    lowdist: 0,
    titledist: -203 | 0
};
var rule69 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -207 | 0,
    lowdist: 0,
    titledist: -207 | 0
};
var rule70 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 42280,
    lowdist: 0,
    titledist: 42280
};
var rule71 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -209 | 0,
    lowdist: 0,
    titledist: -209 | 0
};
var rule72 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -211 | 0,
    lowdist: 0,
    titledist: -211 | 0
};
var rule73 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 10743,
    lowdist: 0,
    titledist: 10743
};
var rule74 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 10749,
    lowdist: 0,
    titledist: 10749
};
var rule75 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -213 | 0,
    lowdist: 0,
    titledist: -213 | 0
};
var rule76 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -214 | 0,
    lowdist: 0,
    titledist: -214 | 0
};
var rule77 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: 10727,
    lowdist: 0,
    titledist: 10727
};
var rule78 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -218 | 0,
    lowdist: 0,
    titledist: -218 | 0
};
var rule79 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -69 | 0,
    lowdist: 0,
    titledist: -69 | 0
};
var rule80 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -217 | 0,
    lowdist: 0,
    titledist: -217 | 0
};
var rule81 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -71 | 0,
    lowdist: 0,
    titledist: -71 | 0
};
var rule82 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -219 | 0,
    lowdist: 0,
    titledist: -219 | 0
};
var rule98 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -38 | 0,
    lowdist: 0,
    titledist: -38 | 0
};
var rule99 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    combiningClass: 0,
    possible: 1,
    updist: -37 | 0,
    lowdist: 0,
    titledist: -37 | 0
};
var gencatCS = 134217728;
var rule215 = {
    category: gencatCS,
    unicodeCat: NUMCAT_CS.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatCO = 268435456;
var rule216 = {
    category: gencatCO,
    unicodeCat: NUMCAT_CO.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatCF = 32768;
var rule16 = {
    category: gencatCF,
    unicodeCat: NUMCAT_CF.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var gencatCC = 1;
var rule0 = {
    category: gencatCC,
    unicodeCat: NUMCAT_CC.value,
    combiningClass: 0,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
};
var convchars = [ {
    start: 65,
    length: 26,
    convRule: rule9
}, {
    start: 97,
    length: 26,
    convRule: rule12
}, {
    start: 181,
    length: 1,
    convRule: rule18
}, {
    start: 192,
    length: 23,
    convRule: rule9
}, {
    start: 216,
    length: 7,
    convRule: rule9
}, {
    start: 224,
    length: 23,
    convRule: rule12
}, {
    start: 248,
    length: 7,
    convRule: rule12
}, {
    start: 255,
    length: 1,
    convRule: rule20
}, {
    start: 256,
    length: 1,
    convRule: rule21
}, {
    start: 257,
    length: 1,
    convRule: rule22
}, {
    start: 258,
    length: 1,
    convRule: rule21
}, {
    start: 259,
    length: 1,
    convRule: rule22
}, {
    start: 260,
    length: 1,
    convRule: rule21
}, {
    start: 261,
    length: 1,
    convRule: rule22
}, {
    start: 262,
    length: 1,
    convRule: rule21
}, {
    start: 263,
    length: 1,
    convRule: rule22
}, {
    start: 264,
    length: 1,
    convRule: rule21
}, {
    start: 265,
    length: 1,
    convRule: rule22
}, {
    start: 266,
    length: 1,
    convRule: rule21
}, {
    start: 267,
    length: 1,
    convRule: rule22
}, {
    start: 268,
    length: 1,
    convRule: rule21
}, {
    start: 269,
    length: 1,
    convRule: rule22
}, {
    start: 270,
    length: 1,
    convRule: rule21
}, {
    start: 271,
    length: 1,
    convRule: rule22
}, {
    start: 272,
    length: 1,
    convRule: rule21
}, {
    start: 273,
    length: 1,
    convRule: rule22
}, {
    start: 274,
    length: 1,
    convRule: rule21
}, {
    start: 275,
    length: 1,
    convRule: rule22
}, {
    start: 276,
    length: 1,
    convRule: rule21
}, {
    start: 277,
    length: 1,
    convRule: rule22
}, {
    start: 278,
    length: 1,
    convRule: rule21
}, {
    start: 279,
    length: 1,
    convRule: rule22
}, {
    start: 280,
    length: 1,
    convRule: rule21
}, {
    start: 281,
    length: 1,
    convRule: rule22
}, {
    start: 282,
    length: 1,
    convRule: rule21
}, {
    start: 283,
    length: 1,
    convRule: rule22
}, {
    start: 284,
    length: 1,
    convRule: rule21
}, {
    start: 285,
    length: 1,
    convRule: rule22
}, {
    start: 286,
    length: 1,
    convRule: rule21
}, {
    start: 287,
    length: 1,
    convRule: rule22
}, {
    start: 288,
    length: 1,
    convRule: rule21
}, {
    start: 289,
    length: 1,
    convRule: rule22
}, {
    start: 290,
    length: 1,
    convRule: rule21
}, {
    start: 291,
    length: 1,
    convRule: rule22
}, {
    start: 292,
    length: 1,
    convRule: rule21
}, {
    start: 293,
    length: 1,
    convRule: rule22
}, {
    start: 294,
    length: 1,
    convRule: rule21
}, {
    start: 295,
    length: 1,
    convRule: rule22
}, {
    start: 296,
    length: 1,
    convRule: rule21
}, {
    start: 297,
    length: 1,
    convRule: rule22
}, {
    start: 298,
    length: 1,
    convRule: rule21
}, {
    start: 299,
    length: 1,
    convRule: rule22
}, {
    start: 300,
    length: 1,
    convRule: rule21
}, {
    start: 301,
    length: 1,
    convRule: rule22
}, {
    start: 302,
    length: 1,
    convRule: rule21
}, {
    start: 303,
    length: 1,
    convRule: rule22
}, {
    start: 304,
    length: 1,
    convRule: rule23
}, {
    start: 305,
    length: 1,
    convRule: rule24
}, {
    start: 306,
    length: 1,
    convRule: rule21
}, {
    start: 307,
    length: 1,
    convRule: rule22
}, {
    start: 308,
    length: 1,
    convRule: rule21
}, {
    start: 309,
    length: 1,
    convRule: rule22
}, {
    start: 310,
    length: 1,
    convRule: rule21
}, {
    start: 311,
    length: 1,
    convRule: rule22
}, {
    start: 313,
    length: 1,
    convRule: rule21
}, {
    start: 314,
    length: 1,
    convRule: rule22
}, {
    start: 315,
    length: 1,
    convRule: rule21
}, {
    start: 316,
    length: 1,
    convRule: rule22
}, {
    start: 317,
    length: 1,
    convRule: rule21
}, {
    start: 318,
    length: 1,
    convRule: rule22
}, {
    start: 319,
    length: 1,
    convRule: rule21
}, {
    start: 320,
    length: 1,
    convRule: rule22
}, {
    start: 321,
    length: 1,
    convRule: rule21
}, {
    start: 322,
    length: 1,
    convRule: rule22
}, {
    start: 323,
    length: 1,
    convRule: rule21
}, {
    start: 324,
    length: 1,
    convRule: rule22
}, {
    start: 325,
    length: 1,
    convRule: rule21
}, {
    start: 326,
    length: 1,
    convRule: rule22
}, {
    start: 327,
    length: 1,
    convRule: rule21
}, {
    start: 328,
    length: 1,
    convRule: rule22
}, {
    start: 330,
    length: 1,
    convRule: rule21
}, {
    start: 331,
    length: 1,
    convRule: rule22
}, {
    start: 332,
    length: 1,
    convRule: rule21
}, {
    start: 333,
    length: 1,
    convRule: rule22
}, {
    start: 334,
    length: 1,
    convRule: rule21
}, {
    start: 335,
    length: 1,
    convRule: rule22
}, {
    start: 336,
    length: 1,
    convRule: rule21
}, {
    start: 337,
    length: 1,
    convRule: rule22
}, {
    start: 338,
    length: 1,
    convRule: rule21
}, {
    start: 339,
    length: 1,
    convRule: rule22
}, {
    start: 340,
    length: 1,
    convRule: rule21
}, {
    start: 341,
    length: 1,
    convRule: rule22
}, {
    start: 342,
    length: 1,
    convRule: rule21
}, {
    start: 343,
    length: 1,
    convRule: rule22
}, {
    start: 344,
    length: 1,
    convRule: rule21
}, {
    start: 345,
    length: 1,
    convRule: rule22
}, {
    start: 346,
    length: 1,
    convRule: rule21
}, {
    start: 347,
    length: 1,
    convRule: rule22
}, {
    start: 348,
    length: 1,
    convRule: rule21
}, {
    start: 349,
    length: 1,
    convRule: rule22
}, {
    start: 350,
    length: 1,
    convRule: rule21
}, {
    start: 351,
    length: 1,
    convRule: rule22
}, {
    start: 352,
    length: 1,
    convRule: rule21
}, {
    start: 353,
    length: 1,
    convRule: rule22
}, {
    start: 354,
    length: 1,
    convRule: rule21
}, {
    start: 355,
    length: 1,
    convRule: rule22
}, {
    start: 356,
    length: 1,
    convRule: rule21
}, {
    start: 357,
    length: 1,
    convRule: rule22
}, {
    start: 358,
    length: 1,
    convRule: rule21
}, {
    start: 359,
    length: 1,
    convRule: rule22
}, {
    start: 360,
    length: 1,
    convRule: rule21
}, {
    start: 361,
    length: 1,
    convRule: rule22
}, {
    start: 362,
    length: 1,
    convRule: rule21
}, {
    start: 363,
    length: 1,
    convRule: rule22
}, {
    start: 364,
    length: 1,
    convRule: rule21
}, {
    start: 365,
    length: 1,
    convRule: rule22
}, {
    start: 366,
    length: 1,
    convRule: rule21
}, {
    start: 367,
    length: 1,
    convRule: rule22
}, {
    start: 368,
    length: 1,
    convRule: rule21
}, {
    start: 369,
    length: 1,
    convRule: rule22
}, {
    start: 370,
    length: 1,
    convRule: rule21
}, {
    start: 371,
    length: 1,
    convRule: rule22
}, {
    start: 372,
    length: 1,
    convRule: rule21
}, {
    start: 373,
    length: 1,
    convRule: rule22
}, {
    start: 374,
    length: 1,
    convRule: rule21
}, {
    start: 375,
    length: 1,
    convRule: rule22
}, {
    start: 376,
    length: 1,
    convRule: rule25
}, {
    start: 377,
    length: 1,
    convRule: rule21
}, {
    start: 378,
    length: 1,
    convRule: rule22
}, {
    start: 379,
    length: 1,
    convRule: rule21
}, {
    start: 380,
    length: 1,
    convRule: rule22
}, {
    start: 381,
    length: 1,
    convRule: rule21
}, {
    start: 382,
    length: 1,
    convRule: rule22
}, {
    start: 383,
    length: 1,
    convRule: rule26
}, {
    start: 384,
    length: 1,
    convRule: rule27
}, {
    start: 385,
    length: 1,
    convRule: rule28
}, {
    start: 386,
    length: 1,
    convRule: rule21
}, {
    start: 387,
    length: 1,
    convRule: rule22
}, {
    start: 388,
    length: 1,
    convRule: rule21
}, {
    start: 389,
    length: 1,
    convRule: rule22
}, {
    start: 390,
    length: 1,
    convRule: rule29
}, {
    start: 391,
    length: 1,
    convRule: rule21
}, {
    start: 392,
    length: 1,
    convRule: rule22
}, {
    start: 393,
    length: 2,
    convRule: rule30
}, {
    start: 395,
    length: 1,
    convRule: rule21
}, {
    start: 396,
    length: 1,
    convRule: rule22
}, {
    start: 398,
    length: 1,
    convRule: rule31
}, {
    start: 399,
    length: 1,
    convRule: rule32
}, {
    start: 400,
    length: 1,
    convRule: rule33
}, {
    start: 401,
    length: 1,
    convRule: rule21
}, {
    start: 402,
    length: 1,
    convRule: rule22
}, {
    start: 403,
    length: 1,
    convRule: rule30
}, {
    start: 404,
    length: 1,
    convRule: rule34
}, {
    start: 405,
    length: 1,
    convRule: rule35
}, {
    start: 406,
    length: 1,
    convRule: rule36
}, {
    start: 407,
    length: 1,
    convRule: rule37
}, {
    start: 408,
    length: 1,
    convRule: rule21
}, {
    start: 409,
    length: 1,
    convRule: rule22
}, {
    start: 410,
    length: 1,
    convRule: rule38
}, {
    start: 412,
    length: 1,
    convRule: rule36
}, {
    start: 413,
    length: 1,
    convRule: rule39
}, {
    start: 414,
    length: 1,
    convRule: rule40
}, {
    start: 415,
    length: 1,
    convRule: rule41
}, {
    start: 416,
    length: 1,
    convRule: rule21
}, {
    start: 417,
    length: 1,
    convRule: rule22
}, {
    start: 418,
    length: 1,
    convRule: rule21
}, {
    start: 419,
    length: 1,
    convRule: rule22
}, {
    start: 420,
    length: 1,
    convRule: rule21
}, {
    start: 421,
    length: 1,
    convRule: rule22
}, {
    start: 422,
    length: 1,
    convRule: rule42
}, {
    start: 423,
    length: 1,
    convRule: rule21
}, {
    start: 424,
    length: 1,
    convRule: rule22
}, {
    start: 425,
    length: 1,
    convRule: rule42
}, {
    start: 428,
    length: 1,
    convRule: rule21
}, {
    start: 429,
    length: 1,
    convRule: rule22
}, {
    start: 430,
    length: 1,
    convRule: rule42
}, {
    start: 431,
    length: 1,
    convRule: rule21
}, {
    start: 432,
    length: 1,
    convRule: rule22
}, {
    start: 433,
    length: 2,
    convRule: rule43
}, {
    start: 435,
    length: 1,
    convRule: rule21
}, {
    start: 436,
    length: 1,
    convRule: rule22
}, {
    start: 437,
    length: 1,
    convRule: rule21
}, {
    start: 438,
    length: 1,
    convRule: rule22
}, {
    start: 439,
    length: 1,
    convRule: rule44
}, {
    start: 440,
    length: 1,
    convRule: rule21
}, {
    start: 441,
    length: 1,
    convRule: rule22
}, {
    start: 444,
    length: 1,
    convRule: rule21
}, {
    start: 445,
    length: 1,
    convRule: rule22
}, {
    start: 447,
    length: 1,
    convRule: rule46
}, {
    start: 452,
    length: 1,
    convRule: rule47
}, {
    start: 453,
    length: 1,
    convRule: rule48
}, {
    start: 454,
    length: 1,
    convRule: rule49
}, {
    start: 455,
    length: 1,
    convRule: rule47
}, {
    start: 456,
    length: 1,
    convRule: rule48
}, {
    start: 457,
    length: 1,
    convRule: rule49
}, {
    start: 458,
    length: 1,
    convRule: rule47
}, {
    start: 459,
    length: 1,
    convRule: rule48
}, {
    start: 460,
    length: 1,
    convRule: rule49
}, {
    start: 461,
    length: 1,
    convRule: rule21
}, {
    start: 462,
    length: 1,
    convRule: rule22
}, {
    start: 463,
    length: 1,
    convRule: rule21
}, {
    start: 464,
    length: 1,
    convRule: rule22
}, {
    start: 465,
    length: 1,
    convRule: rule21
}, {
    start: 466,
    length: 1,
    convRule: rule22
}, {
    start: 467,
    length: 1,
    convRule: rule21
}, {
    start: 468,
    length: 1,
    convRule: rule22
}, {
    start: 469,
    length: 1,
    convRule: rule21
}, {
    start: 470,
    length: 1,
    convRule: rule22
}, {
    start: 471,
    length: 1,
    convRule: rule21
}, {
    start: 472,
    length: 1,
    convRule: rule22
}, {
    start: 473,
    length: 1,
    convRule: rule21
}, {
    start: 474,
    length: 1,
    convRule: rule22
}, {
    start: 475,
    length: 1,
    convRule: rule21
}, {
    start: 476,
    length: 1,
    convRule: rule22
}, {
    start: 477,
    length: 1,
    convRule: rule50
}, {
    start: 478,
    length: 1,
    convRule: rule21
}, {
    start: 479,
    length: 1,
    convRule: rule22
}, {
    start: 480,
    length: 1,
    convRule: rule21
}, {
    start: 481,
    length: 1,
    convRule: rule22
}, {
    start: 482,
    length: 1,
    convRule: rule21
}, {
    start: 483,
    length: 1,
    convRule: rule22
}, {
    start: 484,
    length: 1,
    convRule: rule21
}, {
    start: 485,
    length: 1,
    convRule: rule22
}, {
    start: 486,
    length: 1,
    convRule: rule21
}, {
    start: 487,
    length: 1,
    convRule: rule22
}, {
    start: 488,
    length: 1,
    convRule: rule21
}, {
    start: 489,
    length: 1,
    convRule: rule22
}, {
    start: 490,
    length: 1,
    convRule: rule21
}, {
    start: 491,
    length: 1,
    convRule: rule22
}, {
    start: 492,
    length: 1,
    convRule: rule21
}, {
    start: 493,
    length: 1,
    convRule: rule22
}, {
    start: 494,
    length: 1,
    convRule: rule21
}, {
    start: 495,
    length: 1,
    convRule: rule22
}, {
    start: 497,
    length: 1,
    convRule: rule47
}, {
    start: 498,
    length: 1,
    convRule: rule48
}, {
    start: 499,
    length: 1,
    convRule: rule49
}, {
    start: 500,
    length: 1,
    convRule: rule21
}, {
    start: 501,
    length: 1,
    convRule: rule22
}, {
    start: 502,
    length: 1,
    convRule: rule51
}, {
    start: 503,
    length: 1,
    convRule: rule52
}, {
    start: 504,
    length: 1,
    convRule: rule21
}, {
    start: 505,
    length: 1,
    convRule: rule22
}, {
    start: 506,
    length: 1,
    convRule: rule21
}, {
    start: 507,
    length: 1,
    convRule: rule22
}, {
    start: 508,
    length: 1,
    convRule: rule21
}, {
    start: 509,
    length: 1,
    convRule: rule22
}, {
    start: 510,
    length: 1,
    convRule: rule21
}, {
    start: 511,
    length: 1,
    convRule: rule22
}, {
    start: 512,
    length: 1,
    convRule: rule21
}, {
    start: 513,
    length: 1,
    convRule: rule22
}, {
    start: 514,
    length: 1,
    convRule: rule21
}, {
    start: 515,
    length: 1,
    convRule: rule22
}, {
    start: 516,
    length: 1,
    convRule: rule21
}, {
    start: 517,
    length: 1,
    convRule: rule22
}, {
    start: 518,
    length: 1,
    convRule: rule21
}, {
    start: 519,
    length: 1,
    convRule: rule22
}, {
    start: 520,
    length: 1,
    convRule: rule21
}, {
    start: 521,
    length: 1,
    convRule: rule22
}, {
    start: 522,
    length: 1,
    convRule: rule21
}, {
    start: 523,
    length: 1,
    convRule: rule22
}, {
    start: 524,
    length: 1,
    convRule: rule21
}, {
    start: 525,
    length: 1,
    convRule: rule22
}, {
    start: 526,
    length: 1,
    convRule: rule21
}, {
    start: 527,
    length: 1,
    convRule: rule22
}, {
    start: 528,
    length: 1,
    convRule: rule21
}, {
    start: 529,
    length: 1,
    convRule: rule22
}, {
    start: 530,
    length: 1,
    convRule: rule21
}, {
    start: 531,
    length: 1,
    convRule: rule22
}, {
    start: 532,
    length: 1,
    convRule: rule21
}, {
    start: 533,
    length: 1,
    convRule: rule22
}, {
    start: 534,
    length: 1,
    convRule: rule21
}, {
    start: 535,
    length: 1,
    convRule: rule22
}, {
    start: 536,
    length: 1,
    convRule: rule21
}, {
    start: 537,
    length: 1,
    convRule: rule22
}, {
    start: 538,
    length: 1,
    convRule: rule21
}, {
    start: 539,
    length: 1,
    convRule: rule22
}, {
    start: 540,
    length: 1,
    convRule: rule21
}, {
    start: 541,
    length: 1,
    convRule: rule22
}, {
    start: 542,
    length: 1,
    convRule: rule21
}, {
    start: 543,
    length: 1,
    convRule: rule22
}, {
    start: 544,
    length: 1,
    convRule: rule53
}, {
    start: 546,
    length: 1,
    convRule: rule21
}, {
    start: 547,
    length: 1,
    convRule: rule22
}, {
    start: 548,
    length: 1,
    convRule: rule21
}, {
    start: 549,
    length: 1,
    convRule: rule22
}, {
    start: 550,
    length: 1,
    convRule: rule21
}, {
    start: 551,
    length: 1,
    convRule: rule22
}, {
    start: 552,
    length: 1,
    convRule: rule21
}, {
    start: 553,
    length: 1,
    convRule: rule22
}, {
    start: 554,
    length: 1,
    convRule: rule21
}, {
    start: 555,
    length: 1,
    convRule: rule22
}, {
    start: 556,
    length: 1,
    convRule: rule21
}, {
    start: 557,
    length: 1,
    convRule: rule22
}, {
    start: 558,
    length: 1,
    convRule: rule21
}, {
    start: 559,
    length: 1,
    convRule: rule22
}, {
    start: 560,
    length: 1,
    convRule: rule21
}, {
    start: 561,
    length: 1,
    convRule: rule22
}, {
    start: 562,
    length: 1,
    convRule: rule21
}, {
    start: 563,
    length: 1,
    convRule: rule22
}, {
    start: 570,
    length: 1,
    convRule: rule54
}, {
    start: 571,
    length: 1,
    convRule: rule21
}, {
    start: 572,
    length: 1,
    convRule: rule22
}, {
    start: 573,
    length: 1,
    convRule: rule55
}, {
    start: 574,
    length: 1,
    convRule: rule56
}, {
    start: 575,
    length: 2,
    convRule: rule57
}, {
    start: 577,
    length: 1,
    convRule: rule21
}, {
    start: 578,
    length: 1,
    convRule: rule22
}, {
    start: 579,
    length: 1,
    convRule: rule58
}, {
    start: 580,
    length: 1,
    convRule: rule59
}, {
    start: 581,
    length: 1,
    convRule: rule60
}, {
    start: 582,
    length: 1,
    convRule: rule21
}, {
    start: 583,
    length: 1,
    convRule: rule22
}, {
    start: 584,
    length: 1,
    convRule: rule21
}, {
    start: 585,
    length: 1,
    convRule: rule22
}, {
    start: 586,
    length: 1,
    convRule: rule21
}, {
    start: 587,
    length: 1,
    convRule: rule22
}, {
    start: 588,
    length: 1,
    convRule: rule21
}, {
    start: 589,
    length: 1,
    convRule: rule22
}, {
    start: 590,
    length: 1,
    convRule: rule21
}, {
    start: 591,
    length: 1,
    convRule: rule22
}, {
    start: 592,
    length: 1,
    convRule: rule61
}, {
    start: 593,
    length: 1,
    convRule: rule62
}, {
    start: 594,
    length: 1,
    convRule: rule63
}, {
    start: 595,
    length: 1,
    convRule: rule64
}, {
    start: 596,
    length: 1,
    convRule: rule65
}, {
    start: 598,
    length: 2,
    convRule: rule66
}, {
    start: 601,
    length: 1,
    convRule: rule67
}, {
    start: 603,
    length: 1,
    convRule: rule68
}, {
    start: 608,
    length: 1,
    convRule: rule66
}, {
    start: 611,
    length: 1,
    convRule: rule69
}, {
    start: 613,
    length: 1,
    convRule: rule70
}, {
    start: 616,
    length: 1,
    convRule: rule71
}, {
    start: 617,
    length: 1,
    convRule: rule72
}, {
    start: 619,
    length: 1,
    convRule: rule73
}, {
    start: 623,
    length: 1,
    convRule: rule72
}, {
    start: 625,
    length: 1,
    convRule: rule74
}, {
    start: 626,
    length: 1,
    convRule: rule75
}, {
    start: 629,
    length: 1,
    convRule: rule76
}, {
    start: 637,
    length: 1,
    convRule: rule77
}, {
    start: 640,
    length: 1,
    convRule: rule78
}, {
    start: 643,
    length: 1,
    convRule: rule78
}, {
    start: 648,
    length: 1,
    convRule: rule78
}, {
    start: 649,
    length: 1,
    convRule: rule79
}, {
    start: 650,
    length: 2,
    convRule: rule80
}, {
    start: 652,
    length: 1,
    convRule: rule81
}, {
    start: 658,
    length: 1,
    convRule: rule82
}, {
    start: 837,
    length: 1,
    convRule: rule90
}, {
    start: 880,
    length: 1,
    convRule: rule21
}, {
    start: 881,
    length: 1,
    convRule: rule22
}, {
    start: 882,
    length: 1,
    convRule: rule21
}, {
    start: 883,
    length: 1,
    convRule: rule22
}, {
    start: 886,
    length: 1,
    convRule: rule21
}, {
    start: 887,
    length: 1,
    convRule: rule22
}, {
    start: 891,
    length: 3,
    convRule: rule40
}, {
    start: 902,
    length: 1,
    convRule: rule94
}, {
    start: 904,
    length: 3,
    convRule: rule95
}, {
    start: 908,
    length: 1,
    convRule: rule96
}, {
    start: 910,
    length: 2,
    convRule: rule97
}, {
    start: 913,
    length: 17,
    convRule: rule9
}, {
    start: 931,
    length: 9,
    convRule: rule9
}, {
    start: 940,
    length: 1,
    convRule: rule98
}, {
    start: 941,
    length: 3,
    convRule: rule99
}, {
    start: 945,
    length: 17,
    convRule: rule12
}, {
    start: 962,
    length: 1,
    convRule: rule100
}, {
    start: 963,
    length: 9,
    convRule: rule12
}, {
    start: 972,
    length: 1,
    convRule: rule101
}, {
    start: 973,
    length: 2,
    convRule: rule102
}, {
    start: 975,
    length: 1,
    convRule: rule103
}, {
    start: 976,
    length: 1,
    convRule: rule104
}, {
    start: 977,
    length: 1,
    convRule: rule105
}, {
    start: 981,
    length: 1,
    convRule: rule107
}, {
    start: 982,
    length: 1,
    convRule: rule108
}, {
    start: 983,
    length: 1,
    convRule: rule109
}, {
    start: 984,
    length: 1,
    convRule: rule21
}, {
    start: 985,
    length: 1,
    convRule: rule22
}, {
    start: 986,
    length: 1,
    convRule: rule21
}, {
    start: 987,
    length: 1,
    convRule: rule22
}, {
    start: 988,
    length: 1,
    convRule: rule21
}, {
    start: 989,
    length: 1,
    convRule: rule22
}, {
    start: 990,
    length: 1,
    convRule: rule21
}, {
    start: 991,
    length: 1,
    convRule: rule22
}, {
    start: 992,
    length: 1,
    convRule: rule21
}, {
    start: 993,
    length: 1,
    convRule: rule22
}, {
    start: 994,
    length: 1,
    convRule: rule21
}, {
    start: 995,
    length: 1,
    convRule: rule22
}, {
    start: 996,
    length: 1,
    convRule: rule21
}, {
    start: 997,
    length: 1,
    convRule: rule22
}, {
    start: 998,
    length: 1,
    convRule: rule21
}, {
    start: 999,
    length: 1,
    convRule: rule22
}, {
    start: 1000,
    length: 1,
    convRule: rule21
}, {
    start: 1001,
    length: 1,
    convRule: rule22
}, {
    start: 1002,
    length: 1,
    convRule: rule21
}, {
    start: 1003,
    length: 1,
    convRule: rule22
}, {
    start: 1004,
    length: 1,
    convRule: rule21
}, {
    start: 1005,
    length: 1,
    convRule: rule22
}, {
    start: 1006,
    length: 1,
    convRule: rule21
}, {
    start: 1007,
    length: 1,
    convRule: rule22
}, {
    start: 1008,
    length: 1,
    convRule: rule110
}, {
    start: 1009,
    length: 1,
    convRule: rule111
}, {
    start: 1010,
    length: 1,
    convRule: rule112
}, {
    start: 1012,
    length: 1,
    convRule: rule113
}, {
    start: 1013,
    length: 1,
    convRule: rule114
}, {
    start: 1015,
    length: 1,
    convRule: rule21
}, {
    start: 1016,
    length: 1,
    convRule: rule22
}, {
    start: 1017,
    length: 1,
    convRule: rule115
}, {
    start: 1018,
    length: 1,
    convRule: rule21
}, {
    start: 1019,
    length: 1,
    convRule: rule22
}, {
    start: 1021,
    length: 3,
    convRule: rule53
}, {
    start: 1024,
    length: 16,
    convRule: rule116
}, {
    start: 1040,
    length: 32,
    convRule: rule9
}, {
    start: 1072,
    length: 32,
    convRule: rule12
}, {
    start: 1104,
    length: 16,
    convRule: rule111
}, {
    start: 1120,
    length: 1,
    convRule: rule21
}, {
    start: 1121,
    length: 1,
    convRule: rule22
}, {
    start: 1122,
    length: 1,
    convRule: rule21
}, {
    start: 1123,
    length: 1,
    convRule: rule22
}, {
    start: 1124,
    length: 1,
    convRule: rule21
}, {
    start: 1125,
    length: 1,
    convRule: rule22
}, {
    start: 1126,
    length: 1,
    convRule: rule21
}, {
    start: 1127,
    length: 1,
    convRule: rule22
}, {
    start: 1128,
    length: 1,
    convRule: rule21
}, {
    start: 1129,
    length: 1,
    convRule: rule22
}, {
    start: 1130,
    length: 1,
    convRule: rule21
}, {
    start: 1131,
    length: 1,
    convRule: rule22
}, {
    start: 1132,
    length: 1,
    convRule: rule21
}, {
    start: 1133,
    length: 1,
    convRule: rule22
}, {
    start: 1134,
    length: 1,
    convRule: rule21
}, {
    start: 1135,
    length: 1,
    convRule: rule22
}, {
    start: 1136,
    length: 1,
    convRule: rule21
}, {
    start: 1137,
    length: 1,
    convRule: rule22
}, {
    start: 1138,
    length: 1,
    convRule: rule21
}, {
    start: 1139,
    length: 1,
    convRule: rule22
}, {
    start: 1140,
    length: 1,
    convRule: rule21
}, {
    start: 1141,
    length: 1,
    convRule: rule22
}, {
    start: 1142,
    length: 1,
    convRule: rule21
}, {
    start: 1143,
    length: 1,
    convRule: rule22
}, {
    start: 1144,
    length: 1,
    convRule: rule21
}, {
    start: 1145,
    length: 1,
    convRule: rule22
}, {
    start: 1146,
    length: 1,
    convRule: rule21
}, {
    start: 1147,
    length: 1,
    convRule: rule22
}, {
    start: 1148,
    length: 1,
    convRule: rule21
}, {
    start: 1149,
    length: 1,
    convRule: rule22
}, {
    start: 1150,
    length: 1,
    convRule: rule21
}, {
    start: 1151,
    length: 1,
    convRule: rule22
}, {
    start: 1152,
    length: 1,
    convRule: rule21
}, {
    start: 1153,
    length: 1,
    convRule: rule22
}, {
    start: 1162,
    length: 1,
    convRule: rule21
}, {
    start: 1163,
    length: 1,
    convRule: rule22
}, {
    start: 1164,
    length: 1,
    convRule: rule21
}, {
    start: 1165,
    length: 1,
    convRule: rule22
}, {
    start: 1166,
    length: 1,
    convRule: rule21
}, {
    start: 1167,
    length: 1,
    convRule: rule22
}, {
    start: 1168,
    length: 1,
    convRule: rule21
}, {
    start: 1169,
    length: 1,
    convRule: rule22
}, {
    start: 1170,
    length: 1,
    convRule: rule21
}, {
    start: 1171,
    length: 1,
    convRule: rule22
}, {
    start: 1172,
    length: 1,
    convRule: rule21
}, {
    start: 1173,
    length: 1,
    convRule: rule22
}, {
    start: 1174,
    length: 1,
    convRule: rule21
}, {
    start: 1175,
    length: 1,
    convRule: rule22
}, {
    start: 1176,
    length: 1,
    convRule: rule21
}, {
    start: 1177,
    length: 1,
    convRule: rule22
}, {
    start: 1178,
    length: 1,
    convRule: rule21
}, {
    start: 1179,
    length: 1,
    convRule: rule22
}, {
    start: 1180,
    length: 1,
    convRule: rule21
}, {
    start: 1181,
    length: 1,
    convRule: rule22
}, {
    start: 1182,
    length: 1,
    convRule: rule21
}, {
    start: 1183,
    length: 1,
    convRule: rule22
}, {
    start: 1184,
    length: 1,
    convRule: rule21
}, {
    start: 1185,
    length: 1,
    convRule: rule22
}, {
    start: 1186,
    length: 1,
    convRule: rule21
}, {
    start: 1187,
    length: 1,
    convRule: rule22
}, {
    start: 1188,
    length: 1,
    convRule: rule21
}, {
    start: 1189,
    length: 1,
    convRule: rule22
}, {
    start: 1190,
    length: 1,
    convRule: rule21
}, {
    start: 1191,
    length: 1,
    convRule: rule22
}, {
    start: 1192,
    length: 1,
    convRule: rule21
}, {
    start: 1193,
    length: 1,
    convRule: rule22
}, {
    start: 1194,
    length: 1,
    convRule: rule21
}, {
    start: 1195,
    length: 1,
    convRule: rule22
}, {
    start: 1196,
    length: 1,
    convRule: rule21
}, {
    start: 1197,
    length: 1,
    convRule: rule22
}, {
    start: 1198,
    length: 1,
    convRule: rule21
}, {
    start: 1199,
    length: 1,
    convRule: rule22
}, {
    start: 1200,
    length: 1,
    convRule: rule21
}, {
    start: 1201,
    length: 1,
    convRule: rule22
}, {
    start: 1202,
    length: 1,
    convRule: rule21
}, {
    start: 1203,
    length: 1,
    convRule: rule22
}, {
    start: 1204,
    length: 1,
    convRule: rule21
}, {
    start: 1205,
    length: 1,
    convRule: rule22
}, {
    start: 1206,
    length: 1,
    convRule: rule21
}, {
    start: 1207,
    length: 1,
    convRule: rule22
}, {
    start: 1208,
    length: 1,
    convRule: rule21
}, {
    start: 1209,
    length: 1,
    convRule: rule22
}, {
    start: 1210,
    length: 1,
    convRule: rule21
}, {
    start: 1211,
    length: 1,
    convRule: rule22
}, {
    start: 1212,
    length: 1,
    convRule: rule21
}, {
    start: 1213,
    length: 1,
    convRule: rule22
}, {
    start: 1214,
    length: 1,
    convRule: rule21
}, {
    start: 1215,
    length: 1,
    convRule: rule22
}, {
    start: 1216,
    length: 1,
    convRule: rule118
}, {
    start: 1217,
    length: 1,
    convRule: rule21
}, {
    start: 1218,
    length: 1,
    convRule: rule22
}, {
    start: 1219,
    length: 1,
    convRule: rule21
}, {
    start: 1220,
    length: 1,
    convRule: rule22
}, {
    start: 1221,
    length: 1,
    convRule: rule21
}, {
    start: 1222,
    length: 1,
    convRule: rule22
}, {
    start: 1223,
    length: 1,
    convRule: rule21
}, {
    start: 1224,
    length: 1,
    convRule: rule22
}, {
    start: 1225,
    length: 1,
    convRule: rule21
}, {
    start: 1226,
    length: 1,
    convRule: rule22
}, {
    start: 1227,
    length: 1,
    convRule: rule21
}, {
    start: 1228,
    length: 1,
    convRule: rule22
}, {
    start: 1229,
    length: 1,
    convRule: rule21
}, {
    start: 1230,
    length: 1,
    convRule: rule22
}, {
    start: 1231,
    length: 1,
    convRule: rule119
}, {
    start: 1232,
    length: 1,
    convRule: rule21
}, {
    start: 1233,
    length: 1,
    convRule: rule22
}, {
    start: 1234,
    length: 1,
    convRule: rule21
}, {
    start: 1235,
    length: 1,
    convRule: rule22
}, {
    start: 1236,
    length: 1,
    convRule: rule21
}, {
    start: 1237,
    length: 1,
    convRule: rule22
}, {
    start: 1238,
    length: 1,
    convRule: rule21
}, {
    start: 1239,
    length: 1,
    convRule: rule22
}, {
    start: 1240,
    length: 1,
    convRule: rule21
}, {
    start: 1241,
    length: 1,
    convRule: rule22
}, {
    start: 1242,
    length: 1,
    convRule: rule21
}, {
    start: 1243,
    length: 1,
    convRule: rule22
}, {
    start: 1244,
    length: 1,
    convRule: rule21
}, {
    start: 1245,
    length: 1,
    convRule: rule22
}, {
    start: 1246,
    length: 1,
    convRule: rule21
}, {
    start: 1247,
    length: 1,
    convRule: rule22
}, {
    start: 1248,
    length: 1,
    convRule: rule21
}, {
    start: 1249,
    length: 1,
    convRule: rule22
}, {
    start: 1250,
    length: 1,
    convRule: rule21
}, {
    start: 1251,
    length: 1,
    convRule: rule22
}, {
    start: 1252,
    length: 1,
    convRule: rule21
}, {
    start: 1253,
    length: 1,
    convRule: rule22
}, {
    start: 1254,
    length: 1,
    convRule: rule21
}, {
    start: 1255,
    length: 1,
    convRule: rule22
}, {
    start: 1256,
    length: 1,
    convRule: rule21
}, {
    start: 1257,
    length: 1,
    convRule: rule22
}, {
    start: 1258,
    length: 1,
    convRule: rule21
}, {
    start: 1259,
    length: 1,
    convRule: rule22
}, {
    start: 1260,
    length: 1,
    convRule: rule21
}, {
    start: 1261,
    length: 1,
    convRule: rule22
}, {
    start: 1262,
    length: 1,
    convRule: rule21
}, {
    start: 1263,
    length: 1,
    convRule: rule22
}, {
    start: 1264,
    length: 1,
    convRule: rule21
}, {
    start: 1265,
    length: 1,
    convRule: rule22
}, {
    start: 1266,
    length: 1,
    convRule: rule21
}, {
    start: 1267,
    length: 1,
    convRule: rule22
}, {
    start: 1268,
    length: 1,
    convRule: rule21
}, {
    start: 1269,
    length: 1,
    convRule: rule22
}, {
    start: 1270,
    length: 1,
    convRule: rule21
}, {
    start: 1271,
    length: 1,
    convRule: rule22
}, {
    start: 1272,
    length: 1,
    convRule: rule21
}, {
    start: 1273,
    length: 1,
    convRule: rule22
}, {
    start: 1274,
    length: 1,
    convRule: rule21
}, {
    start: 1275,
    length: 1,
    convRule: rule22
}, {
    start: 1276,
    length: 1,
    convRule: rule21
}, {
    start: 1277,
    length: 1,
    convRule: rule22
}, {
    start: 1278,
    length: 1,
    convRule: rule21
}, {
    start: 1279,
    length: 1,
    convRule: rule22
}, {
    start: 1280,
    length: 1,
    convRule: rule21
}, {
    start: 1281,
    length: 1,
    convRule: rule22
}, {
    start: 1282,
    length: 1,
    convRule: rule21
}, {
    start: 1283,
    length: 1,
    convRule: rule22
}, {
    start: 1284,
    length: 1,
    convRule: rule21
}, {
    start: 1285,
    length: 1,
    convRule: rule22
}, {
    start: 1286,
    length: 1,
    convRule: rule21
}, {
    start: 1287,
    length: 1,
    convRule: rule22
}, {
    start: 1288,
    length: 1,
    convRule: rule21
}, {
    start: 1289,
    length: 1,
    convRule: rule22
}, {
    start: 1290,
    length: 1,
    convRule: rule21
}, {
    start: 1291,
    length: 1,
    convRule: rule22
}, {
    start: 1292,
    length: 1,
    convRule: rule21
}, {
    start: 1293,
    length: 1,
    convRule: rule22
}, {
    start: 1294,
    length: 1,
    convRule: rule21
}, {
    start: 1295,
    length: 1,
    convRule: rule22
}, {
    start: 1296,
    length: 1,
    convRule: rule21
}, {
    start: 1297,
    length: 1,
    convRule: rule22
}, {
    start: 1298,
    length: 1,
    convRule: rule21
}, {
    start: 1299,
    length: 1,
    convRule: rule22
}, {
    start: 1300,
    length: 1,
    convRule: rule21
}, {
    start: 1301,
    length: 1,
    convRule: rule22
}, {
    start: 1302,
    length: 1,
    convRule: rule21
}, {
    start: 1303,
    length: 1,
    convRule: rule22
}, {
    start: 1304,
    length: 1,
    convRule: rule21
}, {
    start: 1305,
    length: 1,
    convRule: rule22
}, {
    start: 1306,
    length: 1,
    convRule: rule21
}, {
    start: 1307,
    length: 1,
    convRule: rule22
}, {
    start: 1308,
    length: 1,
    convRule: rule21
}, {
    start: 1309,
    length: 1,
    convRule: rule22
}, {
    start: 1310,
    length: 1,
    convRule: rule21
}, {
    start: 1311,
    length: 1,
    convRule: rule22
}, {
    start: 1312,
    length: 1,
    convRule: rule21
}, {
    start: 1313,
    length: 1,
    convRule: rule22
}, {
    start: 1314,
    length: 1,
    convRule: rule21
}, {
    start: 1315,
    length: 1,
    convRule: rule22
}, {
    start: 1316,
    length: 1,
    convRule: rule21
}, {
    start: 1317,
    length: 1,
    convRule: rule22
}, {
    start: 1318,
    length: 1,
    convRule: rule21
}, {
    start: 1319,
    length: 1,
    convRule: rule22
}, {
    start: 1329,
    length: 38,
    convRule: rule120
}, {
    start: 1377,
    length: 38,
    convRule: rule121
}, {
    start: 4256,
    length: 38,
    convRule: rule162
}, {
    start: 7545,
    length: 1,
    convRule: rule165
}, {
    start: 7549,
    length: 1,
    convRule: rule166
}, {
    start: 7680,
    length: 1,
    convRule: rule21
}, {
    start: 7681,
    length: 1,
    convRule: rule22
}, {
    start: 7682,
    length: 1,
    convRule: rule21
}, {
    start: 7683,
    length: 1,
    convRule: rule22
}, {
    start: 7684,
    length: 1,
    convRule: rule21
}, {
    start: 7685,
    length: 1,
    convRule: rule22
}, {
    start: 7686,
    length: 1,
    convRule: rule21
}, {
    start: 7687,
    length: 1,
    convRule: rule22
}, {
    start: 7688,
    length: 1,
    convRule: rule21
}, {
    start: 7689,
    length: 1,
    convRule: rule22
}, {
    start: 7690,
    length: 1,
    convRule: rule21
}, {
    start: 7691,
    length: 1,
    convRule: rule22
}, {
    start: 7692,
    length: 1,
    convRule: rule21
}, {
    start: 7693,
    length: 1,
    convRule: rule22
}, {
    start: 7694,
    length: 1,
    convRule: rule21
}, {
    start: 7695,
    length: 1,
    convRule: rule22
}, {
    start: 7696,
    length: 1,
    convRule: rule21
}, {
    start: 7697,
    length: 1,
    convRule: rule22
}, {
    start: 7698,
    length: 1,
    convRule: rule21
}, {
    start: 7699,
    length: 1,
    convRule: rule22
}, {
    start: 7700,
    length: 1,
    convRule: rule21
}, {
    start: 7701,
    length: 1,
    convRule: rule22
}, {
    start: 7702,
    length: 1,
    convRule: rule21
}, {
    start: 7703,
    length: 1,
    convRule: rule22
}, {
    start: 7704,
    length: 1,
    convRule: rule21
}, {
    start: 7705,
    length: 1,
    convRule: rule22
}, {
    start: 7706,
    length: 1,
    convRule: rule21
}, {
    start: 7707,
    length: 1,
    convRule: rule22
}, {
    start: 7708,
    length: 1,
    convRule: rule21
}, {
    start: 7709,
    length: 1,
    convRule: rule22
}, {
    start: 7710,
    length: 1,
    convRule: rule21
}, {
    start: 7711,
    length: 1,
    convRule: rule22
}, {
    start: 7712,
    length: 1,
    convRule: rule21
}, {
    start: 7713,
    length: 1,
    convRule: rule22
}, {
    start: 7714,
    length: 1,
    convRule: rule21
}, {
    start: 7715,
    length: 1,
    convRule: rule22
}, {
    start: 7716,
    length: 1,
    convRule: rule21
}, {
    start: 7717,
    length: 1,
    convRule: rule22
}, {
    start: 7718,
    length: 1,
    convRule: rule21
}, {
    start: 7719,
    length: 1,
    convRule: rule22
}, {
    start: 7720,
    length: 1,
    convRule: rule21
}, {
    start: 7721,
    length: 1,
    convRule: rule22
}, {
    start: 7722,
    length: 1,
    convRule: rule21
}, {
    start: 7723,
    length: 1,
    convRule: rule22
}, {
    start: 7724,
    length: 1,
    convRule: rule21
}, {
    start: 7725,
    length: 1,
    convRule: rule22
}, {
    start: 7726,
    length: 1,
    convRule: rule21
}, {
    start: 7727,
    length: 1,
    convRule: rule22
}, {
    start: 7728,
    length: 1,
    convRule: rule21
}, {
    start: 7729,
    length: 1,
    convRule: rule22
}, {
    start: 7730,
    length: 1,
    convRule: rule21
}, {
    start: 7731,
    length: 1,
    convRule: rule22
}, {
    start: 7732,
    length: 1,
    convRule: rule21
}, {
    start: 7733,
    length: 1,
    convRule: rule22
}, {
    start: 7734,
    length: 1,
    convRule: rule21
}, {
    start: 7735,
    length: 1,
    convRule: rule22
}, {
    start: 7736,
    length: 1,
    convRule: rule21
}, {
    start: 7737,
    length: 1,
    convRule: rule22
}, {
    start: 7738,
    length: 1,
    convRule: rule21
}, {
    start: 7739,
    length: 1,
    convRule: rule22
}, {
    start: 7740,
    length: 1,
    convRule: rule21
}, {
    start: 7741,
    length: 1,
    convRule: rule22
}, {
    start: 7742,
    length: 1,
    convRule: rule21
}, {
    start: 7743,
    length: 1,
    convRule: rule22
}, {
    start: 7744,
    length: 1,
    convRule: rule21
}, {
    start: 7745,
    length: 1,
    convRule: rule22
}, {
    start: 7746,
    length: 1,
    convRule: rule21
}, {
    start: 7747,
    length: 1,
    convRule: rule22
}, {
    start: 7748,
    length: 1,
    convRule: rule21
}, {
    start: 7749,
    length: 1,
    convRule: rule22
}, {
    start: 7750,
    length: 1,
    convRule: rule21
}, {
    start: 7751,
    length: 1,
    convRule: rule22
}, {
    start: 7752,
    length: 1,
    convRule: rule21
}, {
    start: 7753,
    length: 1,
    convRule: rule22
}, {
    start: 7754,
    length: 1,
    convRule: rule21
}, {
    start: 7755,
    length: 1,
    convRule: rule22
}, {
    start: 7756,
    length: 1,
    convRule: rule21
}, {
    start: 7757,
    length: 1,
    convRule: rule22
}, {
    start: 7758,
    length: 1,
    convRule: rule21
}, {
    start: 7759,
    length: 1,
    convRule: rule22
}, {
    start: 7760,
    length: 1,
    convRule: rule21
}, {
    start: 7761,
    length: 1,
    convRule: rule22
}, {
    start: 7762,
    length: 1,
    convRule: rule21
}, {
    start: 7763,
    length: 1,
    convRule: rule22
}, {
    start: 7764,
    length: 1,
    convRule: rule21
}, {
    start: 7765,
    length: 1,
    convRule: rule22
}, {
    start: 7766,
    length: 1,
    convRule: rule21
}, {
    start: 7767,
    length: 1,
    convRule: rule22
}, {
    start: 7768,
    length: 1,
    convRule: rule21
}, {
    start: 7769,
    length: 1,
    convRule: rule22
}, {
    start: 7770,
    length: 1,
    convRule: rule21
}, {
    start: 7771,
    length: 1,
    convRule: rule22
}, {
    start: 7772,
    length: 1,
    convRule: rule21
}, {
    start: 7773,
    length: 1,
    convRule: rule22
}, {
    start: 7774,
    length: 1,
    convRule: rule21
}, {
    start: 7775,
    length: 1,
    convRule: rule22
}, {
    start: 7776,
    length: 1,
    convRule: rule21
}, {
    start: 7777,
    length: 1,
    convRule: rule22
}, {
    start: 7778,
    length: 1,
    convRule: rule21
}, {
    start: 7779,
    length: 1,
    convRule: rule22
}, {
    start: 7780,
    length: 1,
    convRule: rule21
}, {
    start: 7781,
    length: 1,
    convRule: rule22
}, {
    start: 7782,
    length: 1,
    convRule: rule21
}, {
    start: 7783,
    length: 1,
    convRule: rule22
}, {
    start: 7784,
    length: 1,
    convRule: rule21
}, {
    start: 7785,
    length: 1,
    convRule: rule22
}, {
    start: 7786,
    length: 1,
    convRule: rule21
}, {
    start: 7787,
    length: 1,
    convRule: rule22
}, {
    start: 7788,
    length: 1,
    convRule: rule21
}, {
    start: 7789,
    length: 1,
    convRule: rule22
}, {
    start: 7790,
    length: 1,
    convRule: rule21
}, {
    start: 7791,
    length: 1,
    convRule: rule22
}, {
    start: 7792,
    length: 1,
    convRule: rule21
}, {
    start: 7793,
    length: 1,
    convRule: rule22
}, {
    start: 7794,
    length: 1,
    convRule: rule21
}, {
    start: 7795,
    length: 1,
    convRule: rule22
}, {
    start: 7796,
    length: 1,
    convRule: rule21
}, {
    start: 7797,
    length: 1,
    convRule: rule22
}, {
    start: 7798,
    length: 1,
    convRule: rule21
}, {
    start: 7799,
    length: 1,
    convRule: rule22
}, {
    start: 7800,
    length: 1,
    convRule: rule21
}, {
    start: 7801,
    length: 1,
    convRule: rule22
}, {
    start: 7802,
    length: 1,
    convRule: rule21
}, {
    start: 7803,
    length: 1,
    convRule: rule22
}, {
    start: 7804,
    length: 1,
    convRule: rule21
}, {
    start: 7805,
    length: 1,
    convRule: rule22
}, {
    start: 7806,
    length: 1,
    convRule: rule21
}, {
    start: 7807,
    length: 1,
    convRule: rule22
}, {
    start: 7808,
    length: 1,
    convRule: rule21
}, {
    start: 7809,
    length: 1,
    convRule: rule22
}, {
    start: 7810,
    length: 1,
    convRule: rule21
}, {
    start: 7811,
    length: 1,
    convRule: rule22
}, {
    start: 7812,
    length: 1,
    convRule: rule21
}, {
    start: 7813,
    length: 1,
    convRule: rule22
}, {
    start: 7814,
    length: 1,
    convRule: rule21
}, {
    start: 7815,
    length: 1,
    convRule: rule22
}, {
    start: 7816,
    length: 1,
    convRule: rule21
}, {
    start: 7817,
    length: 1,
    convRule: rule22
}, {
    start: 7818,
    length: 1,
    convRule: rule21
}, {
    start: 7819,
    length: 1,
    convRule: rule22
}, {
    start: 7820,
    length: 1,
    convRule: rule21
}, {
    start: 7821,
    length: 1,
    convRule: rule22
}, {
    start: 7822,
    length: 1,
    convRule: rule21
}, {
    start: 7823,
    length: 1,
    convRule: rule22
}, {
    start: 7824,
    length: 1,
    convRule: rule21
}, {
    start: 7825,
    length: 1,
    convRule: rule22
}, {
    start: 7826,
    length: 1,
    convRule: rule21
}, {
    start: 7827,
    length: 1,
    convRule: rule22
}, {
    start: 7828,
    length: 1,
    convRule: rule21
}, {
    start: 7829,
    length: 1,
    convRule: rule22
}, {
    start: 7835,
    length: 1,
    convRule: rule168
}, {
    start: 7838,
    length: 1,
    convRule: rule169
}, {
    start: 7840,
    length: 1,
    convRule: rule21
}, {
    start: 7841,
    length: 1,
    convRule: rule22
}, {
    start: 7842,
    length: 1,
    convRule: rule21
}, {
    start: 7843,
    length: 1,
    convRule: rule22
}, {
    start: 7844,
    length: 1,
    convRule: rule21
}, {
    start: 7845,
    length: 1,
    convRule: rule22
}, {
    start: 7846,
    length: 1,
    convRule: rule21
}, {
    start: 7847,
    length: 1,
    convRule: rule22
}, {
    start: 7848,
    length: 1,
    convRule: rule21
}, {
    start: 7849,
    length: 1,
    convRule: rule22
}, {
    start: 7850,
    length: 1,
    convRule: rule21
}, {
    start: 7851,
    length: 1,
    convRule: rule22
}, {
    start: 7852,
    length: 1,
    convRule: rule21
}, {
    start: 7853,
    length: 1,
    convRule: rule22
}, {
    start: 7854,
    length: 1,
    convRule: rule21
}, {
    start: 7855,
    length: 1,
    convRule: rule22
}, {
    start: 7856,
    length: 1,
    convRule: rule21
}, {
    start: 7857,
    length: 1,
    convRule: rule22
}, {
    start: 7858,
    length: 1,
    convRule: rule21
}, {
    start: 7859,
    length: 1,
    convRule: rule22
}, {
    start: 7860,
    length: 1,
    convRule: rule21
}, {
    start: 7861,
    length: 1,
    convRule: rule22
}, {
    start: 7862,
    length: 1,
    convRule: rule21
}, {
    start: 7863,
    length: 1,
    convRule: rule22
}, {
    start: 7864,
    length: 1,
    convRule: rule21
}, {
    start: 7865,
    length: 1,
    convRule: rule22
}, {
    start: 7866,
    length: 1,
    convRule: rule21
}, {
    start: 7867,
    length: 1,
    convRule: rule22
}, {
    start: 7868,
    length: 1,
    convRule: rule21
}, {
    start: 7869,
    length: 1,
    convRule: rule22
}, {
    start: 7870,
    length: 1,
    convRule: rule21
}, {
    start: 7871,
    length: 1,
    convRule: rule22
}, {
    start: 7872,
    length: 1,
    convRule: rule21
}, {
    start: 7873,
    length: 1,
    convRule: rule22
}, {
    start: 7874,
    length: 1,
    convRule: rule21
}, {
    start: 7875,
    length: 1,
    convRule: rule22
}, {
    start: 7876,
    length: 1,
    convRule: rule21
}, {
    start: 7877,
    length: 1,
    convRule: rule22
}, {
    start: 7878,
    length: 1,
    convRule: rule21
}, {
    start: 7879,
    length: 1,
    convRule: rule22
}, {
    start: 7880,
    length: 1,
    convRule: rule21
}, {
    start: 7881,
    length: 1,
    convRule: rule22
}, {
    start: 7882,
    length: 1,
    convRule: rule21
}, {
    start: 7883,
    length: 1,
    convRule: rule22
}, {
    start: 7884,
    length: 1,
    convRule: rule21
}, {
    start: 7885,
    length: 1,
    convRule: rule22
}, {
    start: 7886,
    length: 1,
    convRule: rule21
}, {
    start: 7887,
    length: 1,
    convRule: rule22
}, {
    start: 7888,
    length: 1,
    convRule: rule21
}, {
    start: 7889,
    length: 1,
    convRule: rule22
}, {
    start: 7890,
    length: 1,
    convRule: rule21
}, {
    start: 7891,
    length: 1,
    convRule: rule22
}, {
    start: 7892,
    length: 1,
    convRule: rule21
}, {
    start: 7893,
    length: 1,
    convRule: rule22
}, {
    start: 7894,
    length: 1,
    convRule: rule21
}, {
    start: 7895,
    length: 1,
    convRule: rule22
}, {
    start: 7896,
    length: 1,
    convRule: rule21
}, {
    start: 7897,
    length: 1,
    convRule: rule22
}, {
    start: 7898,
    length: 1,
    convRule: rule21
}, {
    start: 7899,
    length: 1,
    convRule: rule22
}, {
    start: 7900,
    length: 1,
    convRule: rule21
}, {
    start: 7901,
    length: 1,
    convRule: rule22
}, {
    start: 7902,
    length: 1,
    convRule: rule21
}, {
    start: 7903,
    length: 1,
    convRule: rule22
}, {
    start: 7904,
    length: 1,
    convRule: rule21
}, {
    start: 7905,
    length: 1,
    convRule: rule22
}, {
    start: 7906,
    length: 1,
    convRule: rule21
}, {
    start: 7907,
    length: 1,
    convRule: rule22
}, {
    start: 7908,
    length: 1,
    convRule: rule21
}, {
    start: 7909,
    length: 1,
    convRule: rule22
}, {
    start: 7910,
    length: 1,
    convRule: rule21
}, {
    start: 7911,
    length: 1,
    convRule: rule22
}, {
    start: 7912,
    length: 1,
    convRule: rule21
}, {
    start: 7913,
    length: 1,
    convRule: rule22
}, {
    start: 7914,
    length: 1,
    convRule: rule21
}, {
    start: 7915,
    length: 1,
    convRule: rule22
}, {
    start: 7916,
    length: 1,
    convRule: rule21
}, {
    start: 7917,
    length: 1,
    convRule: rule22
}, {
    start: 7918,
    length: 1,
    convRule: rule21
}, {
    start: 7919,
    length: 1,
    convRule: rule22
}, {
    start: 7920,
    length: 1,
    convRule: rule21
}, {
    start: 7921,
    length: 1,
    convRule: rule22
}, {
    start: 7922,
    length: 1,
    convRule: rule21
}, {
    start: 7923,
    length: 1,
    convRule: rule22
}, {
    start: 7924,
    length: 1,
    convRule: rule21
}, {
    start: 7925,
    length: 1,
    convRule: rule22
}, {
    start: 7926,
    length: 1,
    convRule: rule21
}, {
    start: 7927,
    length: 1,
    convRule: rule22
}, {
    start: 7928,
    length: 1,
    convRule: rule21
}, {
    start: 7929,
    length: 1,
    convRule: rule22
}, {
    start: 7930,
    length: 1,
    convRule: rule21
}, {
    start: 7931,
    length: 1,
    convRule: rule22
}, {
    start: 7932,
    length: 1,
    convRule: rule21
}, {
    start: 7933,
    length: 1,
    convRule: rule22
}, {
    start: 7934,
    length: 1,
    convRule: rule21
}, {
    start: 7935,
    length: 1,
    convRule: rule22
}, {
    start: 7936,
    length: 8,
    convRule: rule170
}, {
    start: 7944,
    length: 8,
    convRule: rule171
}, {
    start: 7952,
    length: 6,
    convRule: rule170
}, {
    start: 7960,
    length: 6,
    convRule: rule171
}, {
    start: 7968,
    length: 8,
    convRule: rule170
}, {
    start: 7976,
    length: 8,
    convRule: rule171
}, {
    start: 7984,
    length: 8,
    convRule: rule170
}, {
    start: 7992,
    length: 8,
    convRule: rule171
}, {
    start: 8000,
    length: 6,
    convRule: rule170
}, {
    start: 8008,
    length: 6,
    convRule: rule171
}, {
    start: 8017,
    length: 1,
    convRule: rule170
}, {
    start: 8019,
    length: 1,
    convRule: rule170
}, {
    start: 8021,
    length: 1,
    convRule: rule170
}, {
    start: 8023,
    length: 1,
    convRule: rule170
}, {
    start: 8025,
    length: 1,
    convRule: rule171
}, {
    start: 8027,
    length: 1,
    convRule: rule171
}, {
    start: 8029,
    length: 1,
    convRule: rule171
}, {
    start: 8031,
    length: 1,
    convRule: rule171
}, {
    start: 8032,
    length: 8,
    convRule: rule170
}, {
    start: 8040,
    length: 8,
    convRule: rule171
}, {
    start: 8048,
    length: 2,
    convRule: rule172
}, {
    start: 8050,
    length: 4,
    convRule: rule173
}, {
    start: 8054,
    length: 2,
    convRule: rule174
}, {
    start: 8056,
    length: 2,
    convRule: rule175
}, {
    start: 8058,
    length: 2,
    convRule: rule176
}, {
    start: 8060,
    length: 2,
    convRule: rule177
}, {
    start: 8064,
    length: 8,
    convRule: rule170
}, {
    start: 8072,
    length: 8,
    convRule: rule178
}, {
    start: 8080,
    length: 8,
    convRule: rule170
}, {
    start: 8088,
    length: 8,
    convRule: rule178
}, {
    start: 8096,
    length: 8,
    convRule: rule170
}, {
    start: 8104,
    length: 8,
    convRule: rule178
}, {
    start: 8112,
    length: 2,
    convRule: rule170
}, {
    start: 8115,
    length: 1,
    convRule: rule179
}, {
    start: 8120,
    length: 2,
    convRule: rule171
}, {
    start: 8122,
    length: 2,
    convRule: rule180
}, {
    start: 8124,
    length: 1,
    convRule: rule181
}, {
    start: 8126,
    length: 1,
    convRule: rule182
}, {
    start: 8131,
    length: 1,
    convRule: rule179
}, {
    start: 8136,
    length: 4,
    convRule: rule183
}, {
    start: 8140,
    length: 1,
    convRule: rule181
}, {
    start: 8144,
    length: 2,
    convRule: rule170
}, {
    start: 8152,
    length: 2,
    convRule: rule171
}, {
    start: 8154,
    length: 2,
    convRule: rule184
}, {
    start: 8160,
    length: 2,
    convRule: rule170
}, {
    start: 8165,
    length: 1,
    convRule: rule112
}, {
    start: 8168,
    length: 2,
    convRule: rule171
}, {
    start: 8170,
    length: 2,
    convRule: rule185
}, {
    start: 8172,
    length: 1,
    convRule: rule115
}, {
    start: 8179,
    length: 1,
    convRule: rule179
}, {
    start: 8184,
    length: 2,
    convRule: rule186
}, {
    start: 8186,
    length: 2,
    convRule: rule187
}, {
    start: 8188,
    length: 1,
    convRule: rule181
}, {
    start: 8486,
    length: 1,
    convRule: rule190
}, {
    start: 8490,
    length: 1,
    convRule: rule191
}, {
    start: 8491,
    length: 1,
    convRule: rule192
}, {
    start: 8498,
    length: 1,
    convRule: rule193
}, {
    start: 8526,
    length: 1,
    convRule: rule194
}, {
    start: 8544,
    length: 16,
    convRule: rule195
}, {
    start: 8560,
    length: 16,
    convRule: rule196
}, {
    start: 8579,
    length: 1,
    convRule: rule21
}, {
    start: 8580,
    length: 1,
    convRule: rule22
}, {
    start: 9398,
    length: 26,
    convRule: rule197
}, {
    start: 9424,
    length: 26,
    convRule: rule198
}, {
    start: 11264,
    length: 47,
    convRule: rule120
}, {
    start: 11312,
    length: 47,
    convRule: rule121
}, {
    start: 11360,
    length: 1,
    convRule: rule21
}, {
    start: 11361,
    length: 1,
    convRule: rule22
}, {
    start: 11362,
    length: 1,
    convRule: rule199
}, {
    start: 11363,
    length: 1,
    convRule: rule200
}, {
    start: 11364,
    length: 1,
    convRule: rule201
}, {
    start: 11365,
    length: 1,
    convRule: rule202
}, {
    start: 11366,
    length: 1,
    convRule: rule203
}, {
    start: 11367,
    length: 1,
    convRule: rule21
}, {
    start: 11368,
    length: 1,
    convRule: rule22
}, {
    start: 11369,
    length: 1,
    convRule: rule21
}, {
    start: 11370,
    length: 1,
    convRule: rule22
}, {
    start: 11371,
    length: 1,
    convRule: rule21
}, {
    start: 11372,
    length: 1,
    convRule: rule22
}, {
    start: 11373,
    length: 1,
    convRule: rule204
}, {
    start: 11374,
    length: 1,
    convRule: rule205
}, {
    start: 11375,
    length: 1,
    convRule: rule206
}, {
    start: 11376,
    length: 1,
    convRule: rule207
}, {
    start: 11378,
    length: 1,
    convRule: rule21
}, {
    start: 11379,
    length: 1,
    convRule: rule22
}, {
    start: 11381,
    length: 1,
    convRule: rule21
}, {
    start: 11382,
    length: 1,
    convRule: rule22
}, {
    start: 11390,
    length: 2,
    convRule: rule208
}, {
    start: 11392,
    length: 1,
    convRule: rule21
}, {
    start: 11393,
    length: 1,
    convRule: rule22
}, {
    start: 11394,
    length: 1,
    convRule: rule21
}, {
    start: 11395,
    length: 1,
    convRule: rule22
}, {
    start: 11396,
    length: 1,
    convRule: rule21
}, {
    start: 11397,
    length: 1,
    convRule: rule22
}, {
    start: 11398,
    length: 1,
    convRule: rule21
}, {
    start: 11399,
    length: 1,
    convRule: rule22
}, {
    start: 11400,
    length: 1,
    convRule: rule21
}, {
    start: 11401,
    length: 1,
    convRule: rule22
}, {
    start: 11402,
    length: 1,
    convRule: rule21
}, {
    start: 11403,
    length: 1,
    convRule: rule22
}, {
    start: 11404,
    length: 1,
    convRule: rule21
}, {
    start: 11405,
    length: 1,
    convRule: rule22
}, {
    start: 11406,
    length: 1,
    convRule: rule21
}, {
    start: 11407,
    length: 1,
    convRule: rule22
}, {
    start: 11408,
    length: 1,
    convRule: rule21
}, {
    start: 11409,
    length: 1,
    convRule: rule22
}, {
    start: 11410,
    length: 1,
    convRule: rule21
}, {
    start: 11411,
    length: 1,
    convRule: rule22
}, {
    start: 11412,
    length: 1,
    convRule: rule21
}, {
    start: 11413,
    length: 1,
    convRule: rule22
}, {
    start: 11414,
    length: 1,
    convRule: rule21
}, {
    start: 11415,
    length: 1,
    convRule: rule22
}, {
    start: 11416,
    length: 1,
    convRule: rule21
}, {
    start: 11417,
    length: 1,
    convRule: rule22
}, {
    start: 11418,
    length: 1,
    convRule: rule21
}, {
    start: 11419,
    length: 1,
    convRule: rule22
}, {
    start: 11420,
    length: 1,
    convRule: rule21
}, {
    start: 11421,
    length: 1,
    convRule: rule22
}, {
    start: 11422,
    length: 1,
    convRule: rule21
}, {
    start: 11423,
    length: 1,
    convRule: rule22
}, {
    start: 11424,
    length: 1,
    convRule: rule21
}, {
    start: 11425,
    length: 1,
    convRule: rule22
}, {
    start: 11426,
    length: 1,
    convRule: rule21
}, {
    start: 11427,
    length: 1,
    convRule: rule22
}, {
    start: 11428,
    length: 1,
    convRule: rule21
}, {
    start: 11429,
    length: 1,
    convRule: rule22
}, {
    start: 11430,
    length: 1,
    convRule: rule21
}, {
    start: 11431,
    length: 1,
    convRule: rule22
}, {
    start: 11432,
    length: 1,
    convRule: rule21
}, {
    start: 11433,
    length: 1,
    convRule: rule22
}, {
    start: 11434,
    length: 1,
    convRule: rule21
}, {
    start: 11435,
    length: 1,
    convRule: rule22
}, {
    start: 11436,
    length: 1,
    convRule: rule21
}, {
    start: 11437,
    length: 1,
    convRule: rule22
}, {
    start: 11438,
    length: 1,
    convRule: rule21
}, {
    start: 11439,
    length: 1,
    convRule: rule22
}, {
    start: 11440,
    length: 1,
    convRule: rule21
}, {
    start: 11441,
    length: 1,
    convRule: rule22
}, {
    start: 11442,
    length: 1,
    convRule: rule21
}, {
    start: 11443,
    length: 1,
    convRule: rule22
}, {
    start: 11444,
    length: 1,
    convRule: rule21
}, {
    start: 11445,
    length: 1,
    convRule: rule22
}, {
    start: 11446,
    length: 1,
    convRule: rule21
}, {
    start: 11447,
    length: 1,
    convRule: rule22
}, {
    start: 11448,
    length: 1,
    convRule: rule21
}, {
    start: 11449,
    length: 1,
    convRule: rule22
}, {
    start: 11450,
    length: 1,
    convRule: rule21
}, {
    start: 11451,
    length: 1,
    convRule: rule22
}, {
    start: 11452,
    length: 1,
    convRule: rule21
}, {
    start: 11453,
    length: 1,
    convRule: rule22
}, {
    start: 11454,
    length: 1,
    convRule: rule21
}, {
    start: 11455,
    length: 1,
    convRule: rule22
}, {
    start: 11456,
    length: 1,
    convRule: rule21
}, {
    start: 11457,
    length: 1,
    convRule: rule22
}, {
    start: 11458,
    length: 1,
    convRule: rule21
}, {
    start: 11459,
    length: 1,
    convRule: rule22
}, {
    start: 11460,
    length: 1,
    convRule: rule21
}, {
    start: 11461,
    length: 1,
    convRule: rule22
}, {
    start: 11462,
    length: 1,
    convRule: rule21
}, {
    start: 11463,
    length: 1,
    convRule: rule22
}, {
    start: 11464,
    length: 1,
    convRule: rule21
}, {
    start: 11465,
    length: 1,
    convRule: rule22
}, {
    start: 11466,
    length: 1,
    convRule: rule21
}, {
    start: 11467,
    length: 1,
    convRule: rule22
}, {
    start: 11468,
    length: 1,
    convRule: rule21
}, {
    start: 11469,
    length: 1,
    convRule: rule22
}, {
    start: 11470,
    length: 1,
    convRule: rule21
}, {
    start: 11471,
    length: 1,
    convRule: rule22
}, {
    start: 11472,
    length: 1,
    convRule: rule21
}, {
    start: 11473,
    length: 1,
    convRule: rule22
}, {
    start: 11474,
    length: 1,
    convRule: rule21
}, {
    start: 11475,
    length: 1,
    convRule: rule22
}, {
    start: 11476,
    length: 1,
    convRule: rule21
}, {
    start: 11477,
    length: 1,
    convRule: rule22
}, {
    start: 11478,
    length: 1,
    convRule: rule21
}, {
    start: 11479,
    length: 1,
    convRule: rule22
}, {
    start: 11480,
    length: 1,
    convRule: rule21
}, {
    start: 11481,
    length: 1,
    convRule: rule22
}, {
    start: 11482,
    length: 1,
    convRule: rule21
}, {
    start: 11483,
    length: 1,
    convRule: rule22
}, {
    start: 11484,
    length: 1,
    convRule: rule21
}, {
    start: 11485,
    length: 1,
    convRule: rule22
}, {
    start: 11486,
    length: 1,
    convRule: rule21
}, {
    start: 11487,
    length: 1,
    convRule: rule22
}, {
    start: 11488,
    length: 1,
    convRule: rule21
}, {
    start: 11489,
    length: 1,
    convRule: rule22
}, {
    start: 11490,
    length: 1,
    convRule: rule21
}, {
    start: 11491,
    length: 1,
    convRule: rule22
}, {
    start: 11499,
    length: 1,
    convRule: rule21
}, {
    start: 11500,
    length: 1,
    convRule: rule22
}, {
    start: 11501,
    length: 1,
    convRule: rule21
}, {
    start: 11502,
    length: 1,
    convRule: rule22
}, {
    start: 11520,
    length: 38,
    convRule: rule209
}, {
    start: 42560,
    length: 1,
    convRule: rule21
}, {
    start: 42561,
    length: 1,
    convRule: rule22
}, {
    start: 42562,
    length: 1,
    convRule: rule21
}, {
    start: 42563,
    length: 1,
    convRule: rule22
}, {
    start: 42564,
    length: 1,
    convRule: rule21
}, {
    start: 42565,
    length: 1,
    convRule: rule22
}, {
    start: 42566,
    length: 1,
    convRule: rule21
}, {
    start: 42567,
    length: 1,
    convRule: rule22
}, {
    start: 42568,
    length: 1,
    convRule: rule21
}, {
    start: 42569,
    length: 1,
    convRule: rule22
}, {
    start: 42570,
    length: 1,
    convRule: rule21
}, {
    start: 42571,
    length: 1,
    convRule: rule22
}, {
    start: 42572,
    length: 1,
    convRule: rule21
}, {
    start: 42573,
    length: 1,
    convRule: rule22
}, {
    start: 42574,
    length: 1,
    convRule: rule21
}, {
    start: 42575,
    length: 1,
    convRule: rule22
}, {
    start: 42576,
    length: 1,
    convRule: rule21
}, {
    start: 42577,
    length: 1,
    convRule: rule22
}, {
    start: 42578,
    length: 1,
    convRule: rule21
}, {
    start: 42579,
    length: 1,
    convRule: rule22
}, {
    start: 42580,
    length: 1,
    convRule: rule21
}, {
    start: 42581,
    length: 1,
    convRule: rule22
}, {
    start: 42582,
    length: 1,
    convRule: rule21
}, {
    start: 42583,
    length: 1,
    convRule: rule22
}, {
    start: 42584,
    length: 1,
    convRule: rule21
}, {
    start: 42585,
    length: 1,
    convRule: rule22
}, {
    start: 42586,
    length: 1,
    convRule: rule21
}, {
    start: 42587,
    length: 1,
    convRule: rule22
}, {
    start: 42588,
    length: 1,
    convRule: rule21
}, {
    start: 42589,
    length: 1,
    convRule: rule22
}, {
    start: 42590,
    length: 1,
    convRule: rule21
}, {
    start: 42591,
    length: 1,
    convRule: rule22
}, {
    start: 42592,
    length: 1,
    convRule: rule21
}, {
    start: 42593,
    length: 1,
    convRule: rule22
}, {
    start: 42594,
    length: 1,
    convRule: rule21
}, {
    start: 42595,
    length: 1,
    convRule: rule22
}, {
    start: 42596,
    length: 1,
    convRule: rule21
}, {
    start: 42597,
    length: 1,
    convRule: rule22
}, {
    start: 42598,
    length: 1,
    convRule: rule21
}, {
    start: 42599,
    length: 1,
    convRule: rule22
}, {
    start: 42600,
    length: 1,
    convRule: rule21
}, {
    start: 42601,
    length: 1,
    convRule: rule22
}, {
    start: 42602,
    length: 1,
    convRule: rule21
}, {
    start: 42603,
    length: 1,
    convRule: rule22
}, {
    start: 42604,
    length: 1,
    convRule: rule21
}, {
    start: 42605,
    length: 1,
    convRule: rule22
}, {
    start: 42624,
    length: 1,
    convRule: rule21
}, {
    start: 42625,
    length: 1,
    convRule: rule22
}, {
    start: 42626,
    length: 1,
    convRule: rule21
}, {
    start: 42627,
    length: 1,
    convRule: rule22
}, {
    start: 42628,
    length: 1,
    convRule: rule21
}, {
    start: 42629,
    length: 1,
    convRule: rule22
}, {
    start: 42630,
    length: 1,
    convRule: rule21
}, {
    start: 42631,
    length: 1,
    convRule: rule22
}, {
    start: 42632,
    length: 1,
    convRule: rule21
}, {
    start: 42633,
    length: 1,
    convRule: rule22
}, {
    start: 42634,
    length: 1,
    convRule: rule21
}, {
    start: 42635,
    length: 1,
    convRule: rule22
}, {
    start: 42636,
    length: 1,
    convRule: rule21
}, {
    start: 42637,
    length: 1,
    convRule: rule22
}, {
    start: 42638,
    length: 1,
    convRule: rule21
}, {
    start: 42639,
    length: 1,
    convRule: rule22
}, {
    start: 42640,
    length: 1,
    convRule: rule21
}, {
    start: 42641,
    length: 1,
    convRule: rule22
}, {
    start: 42642,
    length: 1,
    convRule: rule21
}, {
    start: 42643,
    length: 1,
    convRule: rule22
}, {
    start: 42644,
    length: 1,
    convRule: rule21
}, {
    start: 42645,
    length: 1,
    convRule: rule22
}, {
    start: 42646,
    length: 1,
    convRule: rule21
}, {
    start: 42647,
    length: 1,
    convRule: rule22
}, {
    start: 42786,
    length: 1,
    convRule: rule21
}, {
    start: 42787,
    length: 1,
    convRule: rule22
}, {
    start: 42788,
    length: 1,
    convRule: rule21
}, {
    start: 42789,
    length: 1,
    convRule: rule22
}, {
    start: 42790,
    length: 1,
    convRule: rule21
}, {
    start: 42791,
    length: 1,
    convRule: rule22
}, {
    start: 42792,
    length: 1,
    convRule: rule21
}, {
    start: 42793,
    length: 1,
    convRule: rule22
}, {
    start: 42794,
    length: 1,
    convRule: rule21
}, {
    start: 42795,
    length: 1,
    convRule: rule22
}, {
    start: 42796,
    length: 1,
    convRule: rule21
}, {
    start: 42797,
    length: 1,
    convRule: rule22
}, {
    start: 42798,
    length: 1,
    convRule: rule21
}, {
    start: 42799,
    length: 1,
    convRule: rule22
}, {
    start: 42802,
    length: 1,
    convRule: rule21
}, {
    start: 42803,
    length: 1,
    convRule: rule22
}, {
    start: 42804,
    length: 1,
    convRule: rule21
}, {
    start: 42805,
    length: 1,
    convRule: rule22
}, {
    start: 42806,
    length: 1,
    convRule: rule21
}, {
    start: 42807,
    length: 1,
    convRule: rule22
}, {
    start: 42808,
    length: 1,
    convRule: rule21
}, {
    start: 42809,
    length: 1,
    convRule: rule22
}, {
    start: 42810,
    length: 1,
    convRule: rule21
}, {
    start: 42811,
    length: 1,
    convRule: rule22
}, {
    start: 42812,
    length: 1,
    convRule: rule21
}, {
    start: 42813,
    length: 1,
    convRule: rule22
}, {
    start: 42814,
    length: 1,
    convRule: rule21
}, {
    start: 42815,
    length: 1,
    convRule: rule22
}, {
    start: 42816,
    length: 1,
    convRule: rule21
}, {
    start: 42817,
    length: 1,
    convRule: rule22
}, {
    start: 42818,
    length: 1,
    convRule: rule21
}, {
    start: 42819,
    length: 1,
    convRule: rule22
}, {
    start: 42820,
    length: 1,
    convRule: rule21
}, {
    start: 42821,
    length: 1,
    convRule: rule22
}, {
    start: 42822,
    length: 1,
    convRule: rule21
}, {
    start: 42823,
    length: 1,
    convRule: rule22
}, {
    start: 42824,
    length: 1,
    convRule: rule21
}, {
    start: 42825,
    length: 1,
    convRule: rule22
}, {
    start: 42826,
    length: 1,
    convRule: rule21
}, {
    start: 42827,
    length: 1,
    convRule: rule22
}, {
    start: 42828,
    length: 1,
    convRule: rule21
}, {
    start: 42829,
    length: 1,
    convRule: rule22
}, {
    start: 42830,
    length: 1,
    convRule: rule21
}, {
    start: 42831,
    length: 1,
    convRule: rule22
}, {
    start: 42832,
    length: 1,
    convRule: rule21
}, {
    start: 42833,
    length: 1,
    convRule: rule22
}, {
    start: 42834,
    length: 1,
    convRule: rule21
}, {
    start: 42835,
    length: 1,
    convRule: rule22
}, {
    start: 42836,
    length: 1,
    convRule: rule21
}, {
    start: 42837,
    length: 1,
    convRule: rule22
}, {
    start: 42838,
    length: 1,
    convRule: rule21
}, {
    start: 42839,
    length: 1,
    convRule: rule22
}, {
    start: 42840,
    length: 1,
    convRule: rule21
}, {
    start: 42841,
    length: 1,
    convRule: rule22
}, {
    start: 42842,
    length: 1,
    convRule: rule21
}, {
    start: 42843,
    length: 1,
    convRule: rule22
}, {
    start: 42844,
    length: 1,
    convRule: rule21
}, {
    start: 42845,
    length: 1,
    convRule: rule22
}, {
    start: 42846,
    length: 1,
    convRule: rule21
}, {
    start: 42847,
    length: 1,
    convRule: rule22
}, {
    start: 42848,
    length: 1,
    convRule: rule21
}, {
    start: 42849,
    length: 1,
    convRule: rule22
}, {
    start: 42850,
    length: 1,
    convRule: rule21
}, {
    start: 42851,
    length: 1,
    convRule: rule22
}, {
    start: 42852,
    length: 1,
    convRule: rule21
}, {
    start: 42853,
    length: 1,
    convRule: rule22
}, {
    start: 42854,
    length: 1,
    convRule: rule21
}, {
    start: 42855,
    length: 1,
    convRule: rule22
}, {
    start: 42856,
    length: 1,
    convRule: rule21
}, {
    start: 42857,
    length: 1,
    convRule: rule22
}, {
    start: 42858,
    length: 1,
    convRule: rule21
}, {
    start: 42859,
    length: 1,
    convRule: rule22
}, {
    start: 42860,
    length: 1,
    convRule: rule21
}, {
    start: 42861,
    length: 1,
    convRule: rule22
}, {
    start: 42862,
    length: 1,
    convRule: rule21
}, {
    start: 42863,
    length: 1,
    convRule: rule22
}, {
    start: 42873,
    length: 1,
    convRule: rule21
}, {
    start: 42874,
    length: 1,
    convRule: rule22
}, {
    start: 42875,
    length: 1,
    convRule: rule21
}, {
    start: 42876,
    length: 1,
    convRule: rule22
}, {
    start: 42877,
    length: 1,
    convRule: rule213
}, {
    start: 42878,
    length: 1,
    convRule: rule21
}, {
    start: 42879,
    length: 1,
    convRule: rule22
}, {
    start: 42880,
    length: 1,
    convRule: rule21
}, {
    start: 42881,
    length: 1,
    convRule: rule22
}, {
    start: 42882,
    length: 1,
    convRule: rule21
}, {
    start: 42883,
    length: 1,
    convRule: rule22
}, {
    start: 42884,
    length: 1,
    convRule: rule21
}, {
    start: 42885,
    length: 1,
    convRule: rule22
}, {
    start: 42886,
    length: 1,
    convRule: rule21
}, {
    start: 42887,
    length: 1,
    convRule: rule22
}, {
    start: 42891,
    length: 1,
    convRule: rule21
}, {
    start: 42892,
    length: 1,
    convRule: rule22
}, {
    start: 42893,
    length: 1,
    convRule: rule214
}, {
    start: 42896,
    length: 1,
    convRule: rule21
}, {
    start: 42897,
    length: 1,
    convRule: rule22
}, {
    start: 42912,
    length: 1,
    convRule: rule21
}, {
    start: 42913,
    length: 1,
    convRule: rule22
}, {
    start: 42914,
    length: 1,
    convRule: rule21
}, {
    start: 42915,
    length: 1,
    convRule: rule22
}, {
    start: 42916,
    length: 1,
    convRule: rule21
}, {
    start: 42917,
    length: 1,
    convRule: rule22
}, {
    start: 42918,
    length: 1,
    convRule: rule21
}, {
    start: 42919,
    length: 1,
    convRule: rule22
}, {
    start: 42920,
    length: 1,
    convRule: rule21
}, {
    start: 42921,
    length: 1,
    convRule: rule22
}, {
    start: 65313,
    length: 26,
    convRule: rule9
}, {
    start: 65345,
    length: 26,
    convRule: rule12
}, {
    start: 66560,
    length: 40,
    convRule: rule218
}, {
    start: 66600,
    length: 40,
    convRule: rule219
} ];
var bsearch = function (a) {
    return function (array) {
        return function (size) {
            return function (compare) {
                var go = function ($copy_i) {
                    return function ($copy_k) {
                        var $tco_var_i = $copy_i;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(i, k) {
                            if (i > k) {
                                $tco_done = true;
                                return Data_Maybe.Nothing.value;
                            };
                            if (Data_Boolean.otherwise) {
                                var j = Data_Int.floor(Data_Int.toNumber(i + k | 0) / 2.0);
                                var v = compare(a)(array[j]);
                                if (v instanceof Data_Ordering.EQ) {
                                    $tco_done = true;
                                    return new Data_Maybe.Just(array[j]);
                                };
                                if (v instanceof Data_Ordering.GT) {
                                    $tco_var_i = j + 1 | 0;
                                    $copy_k = k;
                                    return;
                                };
                                $tco_var_i = i;
                                $copy_k = j - 1 | 0;
                                return;
                            };
                            throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal line 5124, column 5 - line 5130, column 49: " + [ i.constructor.name, k.constructor.name ]);
                        };
                        while (!$tco_done) {
                            $tco_result = $tco_loop($tco_var_i, $copy_k);
                        };
                        return $tco_result;
                    };
                };
                return go(0)(size);
            };
        };
    };
};
var blkCmp = function (v) {
    return function (v1) {
        if (v.start >= v1.start && v.start < (v1.start + v1.length | 0)) {
            return Data_Ordering.EQ.value;
        };
        if (v.start > v1.start) {
            return Data_Ordering.GT.value;
        };
        if (Data_Boolean.otherwise) {
            return Data_Ordering.LT.value;
        };
        throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal line 5101, column 1 - line 5101, column 45: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var getRule = function (blocks) {
    return function (unichar) {
        return function (size) {
            var key = {
                start: unichar,
                length: 1,
                convRule: nullrule
            };
            var maybeCharBlock = bsearch(key)(blocks)(size)(blkCmp);
            if (maybeCharBlock instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Nothing.value;
            };
            if (maybeCharBlock instanceof Data_Maybe.Just) {
                return new Data_Maybe.Just(maybeCharBlock.value0.convRule);
            };
            throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal line 5114, column 8 - line 5116, column 62: " + [ maybeCharBlock.constructor.name ]);
        };
    };
};
var caseConv = function (f) {
    return function ($$char) {
        var maybeConversionRule = getRule(convchars)($$char)(numConvBlocks);
        if (maybeConversionRule instanceof Data_Maybe.Nothing) {
            return $$char;
        };
        if (maybeConversionRule instanceof Data_Maybe.Just) {
            return $$char + f(maybeConversionRule.value0) | 0;
        };
        throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal line 5191, column 8 - line 5193, column 55: " + [ maybeConversionRule.constructor.name ]);
    };
};
var uTowlower = caseConv(function (v) {
    return v.lowdist;
});
var uTowtitle = caseConv(function (v) {
    return v.titledist;
});
var uTowupper = caseConv(function (v) {
    return v.updist;
});
var checkAttrS = function (categories) {
    return function ($$char) {
        var maybeConversionRule = getRule(spacechars)($$char)(numSpaceBlocks);
        if (maybeConversionRule instanceof Data_Maybe.Nothing) {
            return false;
        };
        if (maybeConversionRule instanceof Data_Maybe.Just) {
            return Data_Maybe.isJust(Data_Array.elemIndex(Data_Eq.eqInt)(maybeConversionRule.value0.category)(categories));
        };
        throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal line 5148, column 8 - line 5150, column 92: " + [ maybeConversionRule.constructor.name ]);
    };
};
var uIswspace = checkAttrS([ gencatZS ]);
var allchars = [ {
    start: 0,
    length: 32,
    convRule: rule0
}, {
    start: 32,
    length: 1,
    convRule: rule1
}, {
    start: 33,
    length: 3,
    convRule: rule2
}, {
    start: 36,
    length: 1,
    convRule: rule3
}, {
    start: 37,
    length: 3,
    convRule: rule2
}, {
    start: 40,
    length: 1,
    convRule: rule4
}, {
    start: 41,
    length: 1,
    convRule: rule5
}, {
    start: 42,
    length: 1,
    convRule: rule2
}, {
    start: 43,
    length: 1,
    convRule: rule6
}, {
    start: 44,
    length: 1,
    convRule: rule2
}, {
    start: 45,
    length: 1,
    convRule: rule7
}, {
    start: 46,
    length: 2,
    convRule: rule2
}, {
    start: 48,
    length: 10,
    convRule: rule8
}, {
    start: 58,
    length: 2,
    convRule: rule2
}, {
    start: 60,
    length: 3,
    convRule: rule6
}, {
    start: 63,
    length: 2,
    convRule: rule2
}, {
    start: 65,
    length: 26,
    convRule: rule9
}, {
    start: 91,
    length: 1,
    convRule: rule4
}, {
    start: 92,
    length: 1,
    convRule: rule2
}, {
    start: 93,
    length: 1,
    convRule: rule5
}, {
    start: 94,
    length: 1,
    convRule: rule10
}, {
    start: 95,
    length: 1,
    convRule: rule11
}, {
    start: 96,
    length: 1,
    convRule: rule10
}, {
    start: 97,
    length: 26,
    convRule: rule12
}, {
    start: 123,
    length: 1,
    convRule: rule4
}, {
    start: 124,
    length: 1,
    convRule: rule6
}, {
    start: 125,
    length: 1,
    convRule: rule5
}, {
    start: 126,
    length: 1,
    convRule: rule6
}, {
    start: 127,
    length: 33,
    convRule: rule0
}, {
    start: 160,
    length: 1,
    convRule: rule1
}, {
    start: 161,
    length: 1,
    convRule: rule2
}, {
    start: 162,
    length: 4,
    convRule: rule3
}, {
    start: 166,
    length: 2,
    convRule: rule13
}, {
    start: 168,
    length: 1,
    convRule: rule10
}, {
    start: 169,
    length: 1,
    convRule: rule13
}, {
    start: 170,
    length: 1,
    convRule: rule14
}, {
    start: 171,
    length: 1,
    convRule: rule15
}, {
    start: 172,
    length: 1,
    convRule: rule6
}, {
    start: 173,
    length: 1,
    convRule: rule16
}, {
    start: 174,
    length: 1,
    convRule: rule13
}, {
    start: 175,
    length: 1,
    convRule: rule10
}, {
    start: 176,
    length: 1,
    convRule: rule13
}, {
    start: 177,
    length: 1,
    convRule: rule6
}, {
    start: 178,
    length: 2,
    convRule: rule17
}, {
    start: 180,
    length: 1,
    convRule: rule10
}, {
    start: 181,
    length: 1,
    convRule: rule18
}, {
    start: 182,
    length: 1,
    convRule: rule13
}, {
    start: 183,
    length: 1,
    convRule: rule2
}, {
    start: 184,
    length: 1,
    convRule: rule10
}, {
    start: 185,
    length: 1,
    convRule: rule17
}, {
    start: 186,
    length: 1,
    convRule: rule14
}, {
    start: 187,
    length: 1,
    convRule: rule19
}, {
    start: 188,
    length: 3,
    convRule: rule17
}, {
    start: 191,
    length: 1,
    convRule: rule2
}, {
    start: 192,
    length: 23,
    convRule: rule9
}, {
    start: 215,
    length: 1,
    convRule: rule6
}, {
    start: 216,
    length: 7,
    convRule: rule9
}, {
    start: 223,
    length: 1,
    convRule: rule14
}, {
    start: 224,
    length: 23,
    convRule: rule12
}, {
    start: 247,
    length: 1,
    convRule: rule6
}, {
    start: 248,
    length: 7,
    convRule: rule12
}, {
    start: 255,
    length: 1,
    convRule: rule20
}, {
    start: 256,
    length: 1,
    convRule: rule21
}, {
    start: 257,
    length: 1,
    convRule: rule22
}, {
    start: 258,
    length: 1,
    convRule: rule21
}, {
    start: 259,
    length: 1,
    convRule: rule22
}, {
    start: 260,
    length: 1,
    convRule: rule21
}, {
    start: 261,
    length: 1,
    convRule: rule22
}, {
    start: 262,
    length: 1,
    convRule: rule21
}, {
    start: 263,
    length: 1,
    convRule: rule22
}, {
    start: 264,
    length: 1,
    convRule: rule21
}, {
    start: 265,
    length: 1,
    convRule: rule22
}, {
    start: 266,
    length: 1,
    convRule: rule21
}, {
    start: 267,
    length: 1,
    convRule: rule22
}, {
    start: 268,
    length: 1,
    convRule: rule21
}, {
    start: 269,
    length: 1,
    convRule: rule22
}, {
    start: 270,
    length: 1,
    convRule: rule21
}, {
    start: 271,
    length: 1,
    convRule: rule22
}, {
    start: 272,
    length: 1,
    convRule: rule21
}, {
    start: 273,
    length: 1,
    convRule: rule22
}, {
    start: 274,
    length: 1,
    convRule: rule21
}, {
    start: 275,
    length: 1,
    convRule: rule22
}, {
    start: 276,
    length: 1,
    convRule: rule21
}, {
    start: 277,
    length: 1,
    convRule: rule22
}, {
    start: 278,
    length: 1,
    convRule: rule21
}, {
    start: 279,
    length: 1,
    convRule: rule22
}, {
    start: 280,
    length: 1,
    convRule: rule21
}, {
    start: 281,
    length: 1,
    convRule: rule22
}, {
    start: 282,
    length: 1,
    convRule: rule21
}, {
    start: 283,
    length: 1,
    convRule: rule22
}, {
    start: 284,
    length: 1,
    convRule: rule21
}, {
    start: 285,
    length: 1,
    convRule: rule22
}, {
    start: 286,
    length: 1,
    convRule: rule21
}, {
    start: 287,
    length: 1,
    convRule: rule22
}, {
    start: 288,
    length: 1,
    convRule: rule21
}, {
    start: 289,
    length: 1,
    convRule: rule22
}, {
    start: 290,
    length: 1,
    convRule: rule21
}, {
    start: 291,
    length: 1,
    convRule: rule22
}, {
    start: 292,
    length: 1,
    convRule: rule21
}, {
    start: 293,
    length: 1,
    convRule: rule22
}, {
    start: 294,
    length: 1,
    convRule: rule21
}, {
    start: 295,
    length: 1,
    convRule: rule22
}, {
    start: 296,
    length: 1,
    convRule: rule21
}, {
    start: 297,
    length: 1,
    convRule: rule22
}, {
    start: 298,
    length: 1,
    convRule: rule21
}, {
    start: 299,
    length: 1,
    convRule: rule22
}, {
    start: 300,
    length: 1,
    convRule: rule21
}, {
    start: 301,
    length: 1,
    convRule: rule22
}, {
    start: 302,
    length: 1,
    convRule: rule21
}, {
    start: 303,
    length: 1,
    convRule: rule22
}, {
    start: 304,
    length: 1,
    convRule: rule23
}, {
    start: 305,
    length: 1,
    convRule: rule24
}, {
    start: 306,
    length: 1,
    convRule: rule21
}, {
    start: 307,
    length: 1,
    convRule: rule22
}, {
    start: 308,
    length: 1,
    convRule: rule21
}, {
    start: 309,
    length: 1,
    convRule: rule22
}, {
    start: 310,
    length: 1,
    convRule: rule21
}, {
    start: 311,
    length: 1,
    convRule: rule22
}, {
    start: 312,
    length: 1,
    convRule: rule14
}, {
    start: 313,
    length: 1,
    convRule: rule21
}, {
    start: 314,
    length: 1,
    convRule: rule22
}, {
    start: 315,
    length: 1,
    convRule: rule21
}, {
    start: 316,
    length: 1,
    convRule: rule22
}, {
    start: 317,
    length: 1,
    convRule: rule21
}, {
    start: 318,
    length: 1,
    convRule: rule22
}, {
    start: 319,
    length: 1,
    convRule: rule21
}, {
    start: 320,
    length: 1,
    convRule: rule22
}, {
    start: 321,
    length: 1,
    convRule: rule21
}, {
    start: 322,
    length: 1,
    convRule: rule22
}, {
    start: 323,
    length: 1,
    convRule: rule21
}, {
    start: 324,
    length: 1,
    convRule: rule22
}, {
    start: 325,
    length: 1,
    convRule: rule21
}, {
    start: 326,
    length: 1,
    convRule: rule22
}, {
    start: 327,
    length: 1,
    convRule: rule21
}, {
    start: 328,
    length: 1,
    convRule: rule22
}, {
    start: 329,
    length: 1,
    convRule: rule14
}, {
    start: 330,
    length: 1,
    convRule: rule21
}, {
    start: 331,
    length: 1,
    convRule: rule22
}, {
    start: 332,
    length: 1,
    convRule: rule21
}, {
    start: 333,
    length: 1,
    convRule: rule22
}, {
    start: 334,
    length: 1,
    convRule: rule21
}, {
    start: 335,
    length: 1,
    convRule: rule22
}, {
    start: 336,
    length: 1,
    convRule: rule21
}, {
    start: 337,
    length: 1,
    convRule: rule22
}, {
    start: 338,
    length: 1,
    convRule: rule21
}, {
    start: 339,
    length: 1,
    convRule: rule22
}, {
    start: 340,
    length: 1,
    convRule: rule21
}, {
    start: 341,
    length: 1,
    convRule: rule22
}, {
    start: 342,
    length: 1,
    convRule: rule21
}, {
    start: 343,
    length: 1,
    convRule: rule22
}, {
    start: 344,
    length: 1,
    convRule: rule21
}, {
    start: 345,
    length: 1,
    convRule: rule22
}, {
    start: 346,
    length: 1,
    convRule: rule21
}, {
    start: 347,
    length: 1,
    convRule: rule22
}, {
    start: 348,
    length: 1,
    convRule: rule21
}, {
    start: 349,
    length: 1,
    convRule: rule22
}, {
    start: 350,
    length: 1,
    convRule: rule21
}, {
    start: 351,
    length: 1,
    convRule: rule22
}, {
    start: 352,
    length: 1,
    convRule: rule21
}, {
    start: 353,
    length: 1,
    convRule: rule22
}, {
    start: 354,
    length: 1,
    convRule: rule21
}, {
    start: 355,
    length: 1,
    convRule: rule22
}, {
    start: 356,
    length: 1,
    convRule: rule21
}, {
    start: 357,
    length: 1,
    convRule: rule22
}, {
    start: 358,
    length: 1,
    convRule: rule21
}, {
    start: 359,
    length: 1,
    convRule: rule22
}, {
    start: 360,
    length: 1,
    convRule: rule21
}, {
    start: 361,
    length: 1,
    convRule: rule22
}, {
    start: 362,
    length: 1,
    convRule: rule21
}, {
    start: 363,
    length: 1,
    convRule: rule22
}, {
    start: 364,
    length: 1,
    convRule: rule21
}, {
    start: 365,
    length: 1,
    convRule: rule22
}, {
    start: 366,
    length: 1,
    convRule: rule21
}, {
    start: 367,
    length: 1,
    convRule: rule22
}, {
    start: 368,
    length: 1,
    convRule: rule21
}, {
    start: 369,
    length: 1,
    convRule: rule22
}, {
    start: 370,
    length: 1,
    convRule: rule21
}, {
    start: 371,
    length: 1,
    convRule: rule22
}, {
    start: 372,
    length: 1,
    convRule: rule21
}, {
    start: 373,
    length: 1,
    convRule: rule22
}, {
    start: 374,
    length: 1,
    convRule: rule21
}, {
    start: 375,
    length: 1,
    convRule: rule22
}, {
    start: 376,
    length: 1,
    convRule: rule25
}, {
    start: 377,
    length: 1,
    convRule: rule21
}, {
    start: 378,
    length: 1,
    convRule: rule22
}, {
    start: 379,
    length: 1,
    convRule: rule21
}, {
    start: 380,
    length: 1,
    convRule: rule22
}, {
    start: 381,
    length: 1,
    convRule: rule21
}, {
    start: 382,
    length: 1,
    convRule: rule22
}, {
    start: 383,
    length: 1,
    convRule: rule26
}, {
    start: 384,
    length: 1,
    convRule: rule27
}, {
    start: 385,
    length: 1,
    convRule: rule28
}, {
    start: 386,
    length: 1,
    convRule: rule21
}, {
    start: 387,
    length: 1,
    convRule: rule22
}, {
    start: 388,
    length: 1,
    convRule: rule21
}, {
    start: 389,
    length: 1,
    convRule: rule22
}, {
    start: 390,
    length: 1,
    convRule: rule29
}, {
    start: 391,
    length: 1,
    convRule: rule21
}, {
    start: 392,
    length: 1,
    convRule: rule22
}, {
    start: 393,
    length: 2,
    convRule: rule30
}, {
    start: 395,
    length: 1,
    convRule: rule21
}, {
    start: 396,
    length: 1,
    convRule: rule22
}, {
    start: 397,
    length: 1,
    convRule: rule14
}, {
    start: 398,
    length: 1,
    convRule: rule31
}, {
    start: 399,
    length: 1,
    convRule: rule32
}, {
    start: 400,
    length: 1,
    convRule: rule33
}, {
    start: 401,
    length: 1,
    convRule: rule21
}, {
    start: 402,
    length: 1,
    convRule: rule22
}, {
    start: 403,
    length: 1,
    convRule: rule30
}, {
    start: 404,
    length: 1,
    convRule: rule34
}, {
    start: 405,
    length: 1,
    convRule: rule35
}, {
    start: 406,
    length: 1,
    convRule: rule36
}, {
    start: 407,
    length: 1,
    convRule: rule37
}, {
    start: 408,
    length: 1,
    convRule: rule21
}, {
    start: 409,
    length: 1,
    convRule: rule22
}, {
    start: 410,
    length: 1,
    convRule: rule38
}, {
    start: 411,
    length: 1,
    convRule: rule14
}, {
    start: 412,
    length: 1,
    convRule: rule36
}, {
    start: 413,
    length: 1,
    convRule: rule39
}, {
    start: 414,
    length: 1,
    convRule: rule40
}, {
    start: 415,
    length: 1,
    convRule: rule41
}, {
    start: 416,
    length: 1,
    convRule: rule21
}, {
    start: 417,
    length: 1,
    convRule: rule22
}, {
    start: 418,
    length: 1,
    convRule: rule21
}, {
    start: 419,
    length: 1,
    convRule: rule22
}, {
    start: 420,
    length: 1,
    convRule: rule21
}, {
    start: 421,
    length: 1,
    convRule: rule22
}, {
    start: 422,
    length: 1,
    convRule: rule42
}, {
    start: 423,
    length: 1,
    convRule: rule21
}, {
    start: 424,
    length: 1,
    convRule: rule22
}, {
    start: 425,
    length: 1,
    convRule: rule42
}, {
    start: 426,
    length: 2,
    convRule: rule14
}, {
    start: 428,
    length: 1,
    convRule: rule21
}, {
    start: 429,
    length: 1,
    convRule: rule22
}, {
    start: 430,
    length: 1,
    convRule: rule42
}, {
    start: 431,
    length: 1,
    convRule: rule21
}, {
    start: 432,
    length: 1,
    convRule: rule22
}, {
    start: 433,
    length: 2,
    convRule: rule43
}, {
    start: 435,
    length: 1,
    convRule: rule21
}, {
    start: 436,
    length: 1,
    convRule: rule22
}, {
    start: 437,
    length: 1,
    convRule: rule21
}, {
    start: 438,
    length: 1,
    convRule: rule22
}, {
    start: 439,
    length: 1,
    convRule: rule44
}, {
    start: 440,
    length: 1,
    convRule: rule21
}, {
    start: 441,
    length: 1,
    convRule: rule22
}, {
    start: 442,
    length: 1,
    convRule: rule14
}, {
    start: 443,
    length: 1,
    convRule: rule45
}, {
    start: 444,
    length: 1,
    convRule: rule21
}, {
    start: 445,
    length: 1,
    convRule: rule22
}, {
    start: 446,
    length: 1,
    convRule: rule14
}, {
    start: 447,
    length: 1,
    convRule: rule46
}, {
    start: 448,
    length: 4,
    convRule: rule45
}, {
    start: 452,
    length: 1,
    convRule: rule47
}, {
    start: 453,
    length: 1,
    convRule: rule48
}, {
    start: 454,
    length: 1,
    convRule: rule49
}, {
    start: 455,
    length: 1,
    convRule: rule47
}, {
    start: 456,
    length: 1,
    convRule: rule48
}, {
    start: 457,
    length: 1,
    convRule: rule49
}, {
    start: 458,
    length: 1,
    convRule: rule47
}, {
    start: 459,
    length: 1,
    convRule: rule48
}, {
    start: 460,
    length: 1,
    convRule: rule49
}, {
    start: 461,
    length: 1,
    convRule: rule21
}, {
    start: 462,
    length: 1,
    convRule: rule22
}, {
    start: 463,
    length: 1,
    convRule: rule21
}, {
    start: 464,
    length: 1,
    convRule: rule22
}, {
    start: 465,
    length: 1,
    convRule: rule21
}, {
    start: 466,
    length: 1,
    convRule: rule22
}, {
    start: 467,
    length: 1,
    convRule: rule21
}, {
    start: 468,
    length: 1,
    convRule: rule22
}, {
    start: 469,
    length: 1,
    convRule: rule21
}, {
    start: 470,
    length: 1,
    convRule: rule22
}, {
    start: 471,
    length: 1,
    convRule: rule21
}, {
    start: 472,
    length: 1,
    convRule: rule22
}, {
    start: 473,
    length: 1,
    convRule: rule21
}, {
    start: 474,
    length: 1,
    convRule: rule22
}, {
    start: 475,
    length: 1,
    convRule: rule21
}, {
    start: 476,
    length: 1,
    convRule: rule22
}, {
    start: 477,
    length: 1,
    convRule: rule50
}, {
    start: 478,
    length: 1,
    convRule: rule21
}, {
    start: 479,
    length: 1,
    convRule: rule22
}, {
    start: 480,
    length: 1,
    convRule: rule21
}, {
    start: 481,
    length: 1,
    convRule: rule22
}, {
    start: 482,
    length: 1,
    convRule: rule21
}, {
    start: 483,
    length: 1,
    convRule: rule22
}, {
    start: 484,
    length: 1,
    convRule: rule21
}, {
    start: 485,
    length: 1,
    convRule: rule22
}, {
    start: 486,
    length: 1,
    convRule: rule21
}, {
    start: 487,
    length: 1,
    convRule: rule22
}, {
    start: 488,
    length: 1,
    convRule: rule21
}, {
    start: 489,
    length: 1,
    convRule: rule22
}, {
    start: 490,
    length: 1,
    convRule: rule21
}, {
    start: 491,
    length: 1,
    convRule: rule22
}, {
    start: 492,
    length: 1,
    convRule: rule21
}, {
    start: 493,
    length: 1,
    convRule: rule22
}, {
    start: 494,
    length: 1,
    convRule: rule21
}, {
    start: 495,
    length: 1,
    convRule: rule22
}, {
    start: 496,
    length: 1,
    convRule: rule14
}, {
    start: 497,
    length: 1,
    convRule: rule47
}, {
    start: 498,
    length: 1,
    convRule: rule48
}, {
    start: 499,
    length: 1,
    convRule: rule49
}, {
    start: 500,
    length: 1,
    convRule: rule21
}, {
    start: 501,
    length: 1,
    convRule: rule22
}, {
    start: 502,
    length: 1,
    convRule: rule51
}, {
    start: 503,
    length: 1,
    convRule: rule52
}, {
    start: 504,
    length: 1,
    convRule: rule21
}, {
    start: 505,
    length: 1,
    convRule: rule22
}, {
    start: 506,
    length: 1,
    convRule: rule21
}, {
    start: 507,
    length: 1,
    convRule: rule22
}, {
    start: 508,
    length: 1,
    convRule: rule21
}, {
    start: 509,
    length: 1,
    convRule: rule22
}, {
    start: 510,
    length: 1,
    convRule: rule21
}, {
    start: 511,
    length: 1,
    convRule: rule22
}, {
    start: 512,
    length: 1,
    convRule: rule21
}, {
    start: 513,
    length: 1,
    convRule: rule22
}, {
    start: 514,
    length: 1,
    convRule: rule21
}, {
    start: 515,
    length: 1,
    convRule: rule22
}, {
    start: 516,
    length: 1,
    convRule: rule21
}, {
    start: 517,
    length: 1,
    convRule: rule22
}, {
    start: 518,
    length: 1,
    convRule: rule21
}, {
    start: 519,
    length: 1,
    convRule: rule22
}, {
    start: 520,
    length: 1,
    convRule: rule21
}, {
    start: 521,
    length: 1,
    convRule: rule22
}, {
    start: 522,
    length: 1,
    convRule: rule21
}, {
    start: 523,
    length: 1,
    convRule: rule22
}, {
    start: 524,
    length: 1,
    convRule: rule21
}, {
    start: 525,
    length: 1,
    convRule: rule22
}, {
    start: 526,
    length: 1,
    convRule: rule21
}, {
    start: 527,
    length: 1,
    convRule: rule22
}, {
    start: 528,
    length: 1,
    convRule: rule21
}, {
    start: 529,
    length: 1,
    convRule: rule22
}, {
    start: 530,
    length: 1,
    convRule: rule21
}, {
    start: 531,
    length: 1,
    convRule: rule22
}, {
    start: 532,
    length: 1,
    convRule: rule21
}, {
    start: 533,
    length: 1,
    convRule: rule22
}, {
    start: 534,
    length: 1,
    convRule: rule21
}, {
    start: 535,
    length: 1,
    convRule: rule22
}, {
    start: 536,
    length: 1,
    convRule: rule21
}, {
    start: 537,
    length: 1,
    convRule: rule22
}, {
    start: 538,
    length: 1,
    convRule: rule21
}, {
    start: 539,
    length: 1,
    convRule: rule22
}, {
    start: 540,
    length: 1,
    convRule: rule21
}, {
    start: 541,
    length: 1,
    convRule: rule22
}, {
    start: 542,
    length: 1,
    convRule: rule21
}, {
    start: 543,
    length: 1,
    convRule: rule22
}, {
    start: 544,
    length: 1,
    convRule: rule53
}, {
    start: 545,
    length: 1,
    convRule: rule14
}, {
    start: 546,
    length: 1,
    convRule: rule21
}, {
    start: 547,
    length: 1,
    convRule: rule22
}, {
    start: 548,
    length: 1,
    convRule: rule21
}, {
    start: 549,
    length: 1,
    convRule: rule22
}, {
    start: 550,
    length: 1,
    convRule: rule21
}, {
    start: 551,
    length: 1,
    convRule: rule22
}, {
    start: 552,
    length: 1,
    convRule: rule21
}, {
    start: 553,
    length: 1,
    convRule: rule22
}, {
    start: 554,
    length: 1,
    convRule: rule21
}, {
    start: 555,
    length: 1,
    convRule: rule22
}, {
    start: 556,
    length: 1,
    convRule: rule21
}, {
    start: 557,
    length: 1,
    convRule: rule22
}, {
    start: 558,
    length: 1,
    convRule: rule21
}, {
    start: 559,
    length: 1,
    convRule: rule22
}, {
    start: 560,
    length: 1,
    convRule: rule21
}, {
    start: 561,
    length: 1,
    convRule: rule22
}, {
    start: 562,
    length: 1,
    convRule: rule21
}, {
    start: 563,
    length: 1,
    convRule: rule22
}, {
    start: 564,
    length: 6,
    convRule: rule14
}, {
    start: 570,
    length: 1,
    convRule: rule54
}, {
    start: 571,
    length: 1,
    convRule: rule21
}, {
    start: 572,
    length: 1,
    convRule: rule22
}, {
    start: 573,
    length: 1,
    convRule: rule55
}, {
    start: 574,
    length: 1,
    convRule: rule56
}, {
    start: 575,
    length: 2,
    convRule: rule57
}, {
    start: 577,
    length: 1,
    convRule: rule21
}, {
    start: 578,
    length: 1,
    convRule: rule22
}, {
    start: 579,
    length: 1,
    convRule: rule58
}, {
    start: 580,
    length: 1,
    convRule: rule59
}, {
    start: 581,
    length: 1,
    convRule: rule60
}, {
    start: 582,
    length: 1,
    convRule: rule21
}, {
    start: 583,
    length: 1,
    convRule: rule22
}, {
    start: 584,
    length: 1,
    convRule: rule21
}, {
    start: 585,
    length: 1,
    convRule: rule22
}, {
    start: 586,
    length: 1,
    convRule: rule21
}, {
    start: 587,
    length: 1,
    convRule: rule22
}, {
    start: 588,
    length: 1,
    convRule: rule21
}, {
    start: 589,
    length: 1,
    convRule: rule22
}, {
    start: 590,
    length: 1,
    convRule: rule21
}, {
    start: 591,
    length: 1,
    convRule: rule22
}, {
    start: 592,
    length: 1,
    convRule: rule61
}, {
    start: 593,
    length: 1,
    convRule: rule62
}, {
    start: 594,
    length: 1,
    convRule: rule63
}, {
    start: 595,
    length: 1,
    convRule: rule64
}, {
    start: 596,
    length: 1,
    convRule: rule65
}, {
    start: 597,
    length: 1,
    convRule: rule14
}, {
    start: 598,
    length: 2,
    convRule: rule66
}, {
    start: 600,
    length: 1,
    convRule: rule14
}, {
    start: 601,
    length: 1,
    convRule: rule67
}, {
    start: 602,
    length: 1,
    convRule: rule14
}, {
    start: 603,
    length: 1,
    convRule: rule68
}, {
    start: 604,
    length: 4,
    convRule: rule14
}, {
    start: 608,
    length: 1,
    convRule: rule66
}, {
    start: 609,
    length: 2,
    convRule: rule14
}, {
    start: 611,
    length: 1,
    convRule: rule69
}, {
    start: 612,
    length: 1,
    convRule: rule14
}, {
    start: 613,
    length: 1,
    convRule: rule70
}, {
    start: 614,
    length: 2,
    convRule: rule14
}, {
    start: 616,
    length: 1,
    convRule: rule71
}, {
    start: 617,
    length: 1,
    convRule: rule72
}, {
    start: 618,
    length: 1,
    convRule: rule14
}, {
    start: 619,
    length: 1,
    convRule: rule73
}, {
    start: 620,
    length: 3,
    convRule: rule14
}, {
    start: 623,
    length: 1,
    convRule: rule72
}, {
    start: 624,
    length: 1,
    convRule: rule14
}, {
    start: 625,
    length: 1,
    convRule: rule74
}, {
    start: 626,
    length: 1,
    convRule: rule75
}, {
    start: 627,
    length: 2,
    convRule: rule14
}, {
    start: 629,
    length: 1,
    convRule: rule76
}, {
    start: 630,
    length: 7,
    convRule: rule14
}, {
    start: 637,
    length: 1,
    convRule: rule77
}, {
    start: 638,
    length: 2,
    convRule: rule14
}, {
    start: 640,
    length: 1,
    convRule: rule78
}, {
    start: 641,
    length: 2,
    convRule: rule14
}, {
    start: 643,
    length: 1,
    convRule: rule78
}, {
    start: 644,
    length: 4,
    convRule: rule14
}, {
    start: 648,
    length: 1,
    convRule: rule78
}, {
    start: 649,
    length: 1,
    convRule: rule79
}, {
    start: 650,
    length: 2,
    convRule: rule80
}, {
    start: 652,
    length: 1,
    convRule: rule81
}, {
    start: 653,
    length: 5,
    convRule: rule14
}, {
    start: 658,
    length: 1,
    convRule: rule82
}, {
    start: 659,
    length: 1,
    convRule: rule14
}, {
    start: 660,
    length: 1,
    convRule: rule45
}, {
    start: 661,
    length: 27,
    convRule: rule14
}, {
    start: 688,
    length: 18,
    convRule: rule83
}, {
    start: 706,
    length: 4,
    convRule: rule10
}, {
    start: 710,
    length: 12,
    convRule: rule83
}, {
    start: 722,
    length: 14,
    convRule: rule10
}, {
    start: 736,
    length: 5,
    convRule: rule83
}, {
    start: 741,
    length: 7,
    convRule: rule10
}, {
    start: 748,
    length: 1,
    convRule: rule83
}, {
    start: 749,
    length: 1,
    convRule: rule10
}, {
    start: 750,
    length: 1,
    convRule: rule83
}, {
    start: 751,
    length: 17,
    convRule: rule10
}, {
    start: 768,
    length: 21,
    convRule: rule84
}, {
    start: 789,
    length: 1,
    convRule: rule85
}, {
    start: 790,
    length: 4,
    convRule: rule86
}, {
    start: 794,
    length: 1,
    convRule: rule85
}, {
    start: 795,
    length: 1,
    convRule: rule87
}, {
    start: 796,
    length: 5,
    convRule: rule86
}, {
    start: 801,
    length: 2,
    convRule: rule88
}, {
    start: 803,
    length: 4,
    convRule: rule86
}, {
    start: 807,
    length: 2,
    convRule: rule88
}, {
    start: 809,
    length: 11,
    convRule: rule86
}, {
    start: 820,
    length: 5,
    convRule: rule89
}, {
    start: 825,
    length: 4,
    convRule: rule86
}, {
    start: 829,
    length: 8,
    convRule: rule84
}, {
    start: 837,
    length: 1,
    convRule: rule90
}, {
    start: 838,
    length: 1,
    convRule: rule84
}, {
    start: 839,
    length: 3,
    convRule: rule86
}, {
    start: 842,
    length: 3,
    convRule: rule84
}, {
    start: 845,
    length: 2,
    convRule: rule86
}, {
    start: 847,
    length: 1,
    convRule: rule91
}, {
    start: 848,
    length: 3,
    convRule: rule84
}, {
    start: 851,
    length: 4,
    convRule: rule86
}, {
    start: 855,
    length: 1,
    convRule: rule84
}, {
    start: 856,
    length: 1,
    convRule: rule85
}, {
    start: 857,
    length: 2,
    convRule: rule86
}, {
    start: 859,
    length: 1,
    convRule: rule84
}, {
    start: 860,
    length: 1,
    convRule: rule92
}, {
    start: 861,
    length: 2,
    convRule: rule93
}, {
    start: 863,
    length: 1,
    convRule: rule92
}, {
    start: 864,
    length: 2,
    convRule: rule93
}, {
    start: 866,
    length: 1,
    convRule: rule92
}, {
    start: 867,
    length: 13,
    convRule: rule84
}, {
    start: 880,
    length: 1,
    convRule: rule21
}, {
    start: 881,
    length: 1,
    convRule: rule22
}, {
    start: 882,
    length: 1,
    convRule: rule21
}, {
    start: 883,
    length: 1,
    convRule: rule22
}, {
    start: 884,
    length: 1,
    convRule: rule83
}, {
    start: 885,
    length: 1,
    convRule: rule10
}, {
    start: 886,
    length: 1,
    convRule: rule21
}, {
    start: 887,
    length: 1,
    convRule: rule22
}, {
    start: 890,
    length: 1,
    convRule: rule83
}, {
    start: 891,
    length: 3,
    convRule: rule40
}, {
    start: 894,
    length: 1,
    convRule: rule2
}, {
    start: 900,
    length: 2,
    convRule: rule10
}, {
    start: 902,
    length: 1,
    convRule: rule94
}, {
    start: 903,
    length: 1,
    convRule: rule2
}, {
    start: 904,
    length: 3,
    convRule: rule95
}, {
    start: 908,
    length: 1,
    convRule: rule96
}, {
    start: 910,
    length: 2,
    convRule: rule97
}, {
    start: 912,
    length: 1,
    convRule: rule14
}, {
    start: 913,
    length: 17,
    convRule: rule9
}, {
    start: 931,
    length: 9,
    convRule: rule9
}, {
    start: 940,
    length: 1,
    convRule: rule98
}, {
    start: 941,
    length: 3,
    convRule: rule99
}, {
    start: 944,
    length: 1,
    convRule: rule14
}, {
    start: 945,
    length: 17,
    convRule: rule12
}, {
    start: 962,
    length: 1,
    convRule: rule100
}, {
    start: 963,
    length: 9,
    convRule: rule12
}, {
    start: 972,
    length: 1,
    convRule: rule101
}, {
    start: 973,
    length: 2,
    convRule: rule102
}, {
    start: 975,
    length: 1,
    convRule: rule103
}, {
    start: 976,
    length: 1,
    convRule: rule104
}, {
    start: 977,
    length: 1,
    convRule: rule105
}, {
    start: 978,
    length: 3,
    convRule: rule106
}, {
    start: 981,
    length: 1,
    convRule: rule107
}, {
    start: 982,
    length: 1,
    convRule: rule108
}, {
    start: 983,
    length: 1,
    convRule: rule109
}, {
    start: 984,
    length: 1,
    convRule: rule21
}, {
    start: 985,
    length: 1,
    convRule: rule22
}, {
    start: 986,
    length: 1,
    convRule: rule21
}, {
    start: 987,
    length: 1,
    convRule: rule22
}, {
    start: 988,
    length: 1,
    convRule: rule21
}, {
    start: 989,
    length: 1,
    convRule: rule22
}, {
    start: 990,
    length: 1,
    convRule: rule21
}, {
    start: 991,
    length: 1,
    convRule: rule22
}, {
    start: 992,
    length: 1,
    convRule: rule21
}, {
    start: 993,
    length: 1,
    convRule: rule22
}, {
    start: 994,
    length: 1,
    convRule: rule21
}, {
    start: 995,
    length: 1,
    convRule: rule22
}, {
    start: 996,
    length: 1,
    convRule: rule21
}, {
    start: 997,
    length: 1,
    convRule: rule22
}, {
    start: 998,
    length: 1,
    convRule: rule21
}, {
    start: 999,
    length: 1,
    convRule: rule22
}, {
    start: 1000,
    length: 1,
    convRule: rule21
}, {
    start: 1001,
    length: 1,
    convRule: rule22
}, {
    start: 1002,
    length: 1,
    convRule: rule21
}, {
    start: 1003,
    length: 1,
    convRule: rule22
}, {
    start: 1004,
    length: 1,
    convRule: rule21
}, {
    start: 1005,
    length: 1,
    convRule: rule22
}, {
    start: 1006,
    length: 1,
    convRule: rule21
}, {
    start: 1007,
    length: 1,
    convRule: rule22
}, {
    start: 1008,
    length: 1,
    convRule: rule110
}, {
    start: 1009,
    length: 1,
    convRule: rule111
}, {
    start: 1010,
    length: 1,
    convRule: rule112
}, {
    start: 1011,
    length: 1,
    convRule: rule14
}, {
    start: 1012,
    length: 1,
    convRule: rule113
}, {
    start: 1013,
    length: 1,
    convRule: rule114
}, {
    start: 1014,
    length: 1,
    convRule: rule6
}, {
    start: 1015,
    length: 1,
    convRule: rule21
}, {
    start: 1016,
    length: 1,
    convRule: rule22
}, {
    start: 1017,
    length: 1,
    convRule: rule115
}, {
    start: 1018,
    length: 1,
    convRule: rule21
}, {
    start: 1019,
    length: 1,
    convRule: rule22
}, {
    start: 1020,
    length: 1,
    convRule: rule14
}, {
    start: 1021,
    length: 3,
    convRule: rule53
}, {
    start: 1024,
    length: 16,
    convRule: rule116
}, {
    start: 1040,
    length: 32,
    convRule: rule9
}, {
    start: 1072,
    length: 32,
    convRule: rule12
}, {
    start: 1104,
    length: 16,
    convRule: rule111
}, {
    start: 1120,
    length: 1,
    convRule: rule21
}, {
    start: 1121,
    length: 1,
    convRule: rule22
}, {
    start: 1122,
    length: 1,
    convRule: rule21
}, {
    start: 1123,
    length: 1,
    convRule: rule22
}, {
    start: 1124,
    length: 1,
    convRule: rule21
}, {
    start: 1125,
    length: 1,
    convRule: rule22
}, {
    start: 1126,
    length: 1,
    convRule: rule21
}, {
    start: 1127,
    length: 1,
    convRule: rule22
}, {
    start: 1128,
    length: 1,
    convRule: rule21
}, {
    start: 1129,
    length: 1,
    convRule: rule22
}, {
    start: 1130,
    length: 1,
    convRule: rule21
}, {
    start: 1131,
    length: 1,
    convRule: rule22
}, {
    start: 1132,
    length: 1,
    convRule: rule21
}, {
    start: 1133,
    length: 1,
    convRule: rule22
}, {
    start: 1134,
    length: 1,
    convRule: rule21
}, {
    start: 1135,
    length: 1,
    convRule: rule22
}, {
    start: 1136,
    length: 1,
    convRule: rule21
}, {
    start: 1137,
    length: 1,
    convRule: rule22
}, {
    start: 1138,
    length: 1,
    convRule: rule21
}, {
    start: 1139,
    length: 1,
    convRule: rule22
}, {
    start: 1140,
    length: 1,
    convRule: rule21
}, {
    start: 1141,
    length: 1,
    convRule: rule22
}, {
    start: 1142,
    length: 1,
    convRule: rule21
}, {
    start: 1143,
    length: 1,
    convRule: rule22
}, {
    start: 1144,
    length: 1,
    convRule: rule21
}, {
    start: 1145,
    length: 1,
    convRule: rule22
}, {
    start: 1146,
    length: 1,
    convRule: rule21
}, {
    start: 1147,
    length: 1,
    convRule: rule22
}, {
    start: 1148,
    length: 1,
    convRule: rule21
}, {
    start: 1149,
    length: 1,
    convRule: rule22
}, {
    start: 1150,
    length: 1,
    convRule: rule21
}, {
    start: 1151,
    length: 1,
    convRule: rule22
}, {
    start: 1152,
    length: 1,
    convRule: rule21
}, {
    start: 1153,
    length: 1,
    convRule: rule22
}, {
    start: 1154,
    length: 1,
    convRule: rule13
}, {
    start: 1155,
    length: 5,
    convRule: rule84
}, {
    start: 1160,
    length: 2,
    convRule: rule117
}, {
    start: 1162,
    length: 1,
    convRule: rule21
}, {
    start: 1163,
    length: 1,
    convRule: rule22
}, {
    start: 1164,
    length: 1,
    convRule: rule21
}, {
    start: 1165,
    length: 1,
    convRule: rule22
}, {
    start: 1166,
    length: 1,
    convRule: rule21
}, {
    start: 1167,
    length: 1,
    convRule: rule22
}, {
    start: 1168,
    length: 1,
    convRule: rule21
}, {
    start: 1169,
    length: 1,
    convRule: rule22
}, {
    start: 1170,
    length: 1,
    convRule: rule21
}, {
    start: 1171,
    length: 1,
    convRule: rule22
}, {
    start: 1172,
    length: 1,
    convRule: rule21
}, {
    start: 1173,
    length: 1,
    convRule: rule22
}, {
    start: 1174,
    length: 1,
    convRule: rule21
}, {
    start: 1175,
    length: 1,
    convRule: rule22
}, {
    start: 1176,
    length: 1,
    convRule: rule21
}, {
    start: 1177,
    length: 1,
    convRule: rule22
}, {
    start: 1178,
    length: 1,
    convRule: rule21
}, {
    start: 1179,
    length: 1,
    convRule: rule22
}, {
    start: 1180,
    length: 1,
    convRule: rule21
}, {
    start: 1181,
    length: 1,
    convRule: rule22
}, {
    start: 1182,
    length: 1,
    convRule: rule21
}, {
    start: 1183,
    length: 1,
    convRule: rule22
}, {
    start: 1184,
    length: 1,
    convRule: rule21
}, {
    start: 1185,
    length: 1,
    convRule: rule22
}, {
    start: 1186,
    length: 1,
    convRule: rule21
}, {
    start: 1187,
    length: 1,
    convRule: rule22
}, {
    start: 1188,
    length: 1,
    convRule: rule21
}, {
    start: 1189,
    length: 1,
    convRule: rule22
}, {
    start: 1190,
    length: 1,
    convRule: rule21
}, {
    start: 1191,
    length: 1,
    convRule: rule22
}, {
    start: 1192,
    length: 1,
    convRule: rule21
}, {
    start: 1193,
    length: 1,
    convRule: rule22
}, {
    start: 1194,
    length: 1,
    convRule: rule21
}, {
    start: 1195,
    length: 1,
    convRule: rule22
}, {
    start: 1196,
    length: 1,
    convRule: rule21
}, {
    start: 1197,
    length: 1,
    convRule: rule22
}, {
    start: 1198,
    length: 1,
    convRule: rule21
}, {
    start: 1199,
    length: 1,
    convRule: rule22
}, {
    start: 1200,
    length: 1,
    convRule: rule21
}, {
    start: 1201,
    length: 1,
    convRule: rule22
}, {
    start: 1202,
    length: 1,
    convRule: rule21
}, {
    start: 1203,
    length: 1,
    convRule: rule22
}, {
    start: 1204,
    length: 1,
    convRule: rule21
}, {
    start: 1205,
    length: 1,
    convRule: rule22
}, {
    start: 1206,
    length: 1,
    convRule: rule21
}, {
    start: 1207,
    length: 1,
    convRule: rule22
}, {
    start: 1208,
    length: 1,
    convRule: rule21
}, {
    start: 1209,
    length: 1,
    convRule: rule22
}, {
    start: 1210,
    length: 1,
    convRule: rule21
}, {
    start: 1211,
    length: 1,
    convRule: rule22
}, {
    start: 1212,
    length: 1,
    convRule: rule21
}, {
    start: 1213,
    length: 1,
    convRule: rule22
}, {
    start: 1214,
    length: 1,
    convRule: rule21
}, {
    start: 1215,
    length: 1,
    convRule: rule22
}, {
    start: 1216,
    length: 1,
    convRule: rule118
}, {
    start: 1217,
    length: 1,
    convRule: rule21
}, {
    start: 1218,
    length: 1,
    convRule: rule22
}, {
    start: 1219,
    length: 1,
    convRule: rule21
}, {
    start: 1220,
    length: 1,
    convRule: rule22
}, {
    start: 1221,
    length: 1,
    convRule: rule21
}, {
    start: 1222,
    length: 1,
    convRule: rule22
}, {
    start: 1223,
    length: 1,
    convRule: rule21
}, {
    start: 1224,
    length: 1,
    convRule: rule22
}, {
    start: 1225,
    length: 1,
    convRule: rule21
}, {
    start: 1226,
    length: 1,
    convRule: rule22
}, {
    start: 1227,
    length: 1,
    convRule: rule21
}, {
    start: 1228,
    length: 1,
    convRule: rule22
}, {
    start: 1229,
    length: 1,
    convRule: rule21
}, {
    start: 1230,
    length: 1,
    convRule: rule22
}, {
    start: 1231,
    length: 1,
    convRule: rule119
}, {
    start: 1232,
    length: 1,
    convRule: rule21
}, {
    start: 1233,
    length: 1,
    convRule: rule22
}, {
    start: 1234,
    length: 1,
    convRule: rule21
}, {
    start: 1235,
    length: 1,
    convRule: rule22
}, {
    start: 1236,
    length: 1,
    convRule: rule21
}, {
    start: 1237,
    length: 1,
    convRule: rule22
}, {
    start: 1238,
    length: 1,
    convRule: rule21
}, {
    start: 1239,
    length: 1,
    convRule: rule22
}, {
    start: 1240,
    length: 1,
    convRule: rule21
}, {
    start: 1241,
    length: 1,
    convRule: rule22
}, {
    start: 1242,
    length: 1,
    convRule: rule21
}, {
    start: 1243,
    length: 1,
    convRule: rule22
}, {
    start: 1244,
    length: 1,
    convRule: rule21
}, {
    start: 1245,
    length: 1,
    convRule: rule22
}, {
    start: 1246,
    length: 1,
    convRule: rule21
}, {
    start: 1247,
    length: 1,
    convRule: rule22
}, {
    start: 1248,
    length: 1,
    convRule: rule21
}, {
    start: 1249,
    length: 1,
    convRule: rule22
}, {
    start: 1250,
    length: 1,
    convRule: rule21
}, {
    start: 1251,
    length: 1,
    convRule: rule22
}, {
    start: 1252,
    length: 1,
    convRule: rule21
}, {
    start: 1253,
    length: 1,
    convRule: rule22
}, {
    start: 1254,
    length: 1,
    convRule: rule21
}, {
    start: 1255,
    length: 1,
    convRule: rule22
}, {
    start: 1256,
    length: 1,
    convRule: rule21
}, {
    start: 1257,
    length: 1,
    convRule: rule22
}, {
    start: 1258,
    length: 1,
    convRule: rule21
}, {
    start: 1259,
    length: 1,
    convRule: rule22
}, {
    start: 1260,
    length: 1,
    convRule: rule21
}, {
    start: 1261,
    length: 1,
    convRule: rule22
}, {
    start: 1262,
    length: 1,
    convRule: rule21
}, {
    start: 1263,
    length: 1,
    convRule: rule22
}, {
    start: 1264,
    length: 1,
    convRule: rule21
}, {
    start: 1265,
    length: 1,
    convRule: rule22
}, {
    start: 1266,
    length: 1,
    convRule: rule21
}, {
    start: 1267,
    length: 1,
    convRule: rule22
}, {
    start: 1268,
    length: 1,
    convRule: rule21
}, {
    start: 1269,
    length: 1,
    convRule: rule22
}, {
    start: 1270,
    length: 1,
    convRule: rule21
}, {
    start: 1271,
    length: 1,
    convRule: rule22
}, {
    start: 1272,
    length: 1,
    convRule: rule21
}, {
    start: 1273,
    length: 1,
    convRule: rule22
}, {
    start: 1274,
    length: 1,
    convRule: rule21
}, {
    start: 1275,
    length: 1,
    convRule: rule22
}, {
    start: 1276,
    length: 1,
    convRule: rule21
}, {
    start: 1277,
    length: 1,
    convRule: rule22
}, {
    start: 1278,
    length: 1,
    convRule: rule21
}, {
    start: 1279,
    length: 1,
    convRule: rule22
}, {
    start: 1280,
    length: 1,
    convRule: rule21
}, {
    start: 1281,
    length: 1,
    convRule: rule22
}, {
    start: 1282,
    length: 1,
    convRule: rule21
}, {
    start: 1283,
    length: 1,
    convRule: rule22
}, {
    start: 1284,
    length: 1,
    convRule: rule21
}, {
    start: 1285,
    length: 1,
    convRule: rule22
}, {
    start: 1286,
    length: 1,
    convRule: rule21
}, {
    start: 1287,
    length: 1,
    convRule: rule22
}, {
    start: 1288,
    length: 1,
    convRule: rule21
}, {
    start: 1289,
    length: 1,
    convRule: rule22
}, {
    start: 1290,
    length: 1,
    convRule: rule21
}, {
    start: 1291,
    length: 1,
    convRule: rule22
}, {
    start: 1292,
    length: 1,
    convRule: rule21
}, {
    start: 1293,
    length: 1,
    convRule: rule22
}, {
    start: 1294,
    length: 1,
    convRule: rule21
}, {
    start: 1295,
    length: 1,
    convRule: rule22
}, {
    start: 1296,
    length: 1,
    convRule: rule21
}, {
    start: 1297,
    length: 1,
    convRule: rule22
}, {
    start: 1298,
    length: 1,
    convRule: rule21
}, {
    start: 1299,
    length: 1,
    convRule: rule22
}, {
    start: 1300,
    length: 1,
    convRule: rule21
}, {
    start: 1301,
    length: 1,
    convRule: rule22
}, {
    start: 1302,
    length: 1,
    convRule: rule21
}, {
    start: 1303,
    length: 1,
    convRule: rule22
}, {
    start: 1304,
    length: 1,
    convRule: rule21
}, {
    start: 1305,
    length: 1,
    convRule: rule22
}, {
    start: 1306,
    length: 1,
    convRule: rule21
}, {
    start: 1307,
    length: 1,
    convRule: rule22
}, {
    start: 1308,
    length: 1,
    convRule: rule21
}, {
    start: 1309,
    length: 1,
    convRule: rule22
}, {
    start: 1310,
    length: 1,
    convRule: rule21
}, {
    start: 1311,
    length: 1,
    convRule: rule22
}, {
    start: 1312,
    length: 1,
    convRule: rule21
}, {
    start: 1313,
    length: 1,
    convRule: rule22
}, {
    start: 1314,
    length: 1,
    convRule: rule21
}, {
    start: 1315,
    length: 1,
    convRule: rule22
}, {
    start: 1316,
    length: 1,
    convRule: rule21
}, {
    start: 1317,
    length: 1,
    convRule: rule22
}, {
    start: 1318,
    length: 1,
    convRule: rule21
}, {
    start: 1319,
    length: 1,
    convRule: rule22
}, {
    start: 1329,
    length: 38,
    convRule: rule120
}, {
    start: 1369,
    length: 1,
    convRule: rule83
}, {
    start: 1370,
    length: 6,
    convRule: rule2
}, {
    start: 1377,
    length: 38,
    convRule: rule121
}, {
    start: 1415,
    length: 1,
    convRule: rule14
}, {
    start: 1417,
    length: 1,
    convRule: rule2
}, {
    start: 1418,
    length: 1,
    convRule: rule7
}, {
    start: 1425,
    length: 1,
    convRule: rule86
}, {
    start: 1426,
    length: 4,
    convRule: rule84
}, {
    start: 1430,
    length: 1,
    convRule: rule86
}, {
    start: 1431,
    length: 3,
    convRule: rule84
}, {
    start: 1434,
    length: 1,
    convRule: rule122
}, {
    start: 1435,
    length: 1,
    convRule: rule86
}, {
    start: 1436,
    length: 6,
    convRule: rule84
}, {
    start: 1442,
    length: 6,
    convRule: rule86
}, {
    start: 1448,
    length: 2,
    convRule: rule84
}, {
    start: 1450,
    length: 1,
    convRule: rule86
}, {
    start: 1451,
    length: 2,
    convRule: rule84
}, {
    start: 1453,
    length: 1,
    convRule: rule122
}, {
    start: 1454,
    length: 1,
    convRule: rule123
}, {
    start: 1455,
    length: 1,
    convRule: rule84
}, {
    start: 1456,
    length: 1,
    convRule: rule124
}, {
    start: 1457,
    length: 1,
    convRule: rule125
}, {
    start: 1458,
    length: 1,
    convRule: rule126
}, {
    start: 1459,
    length: 1,
    convRule: rule127
}, {
    start: 1460,
    length: 1,
    convRule: rule128
}, {
    start: 1461,
    length: 1,
    convRule: rule129
}, {
    start: 1462,
    length: 1,
    convRule: rule130
}, {
    start: 1463,
    length: 1,
    convRule: rule131
}, {
    start: 1464,
    length: 1,
    convRule: rule132
}, {
    start: 1465,
    length: 2,
    convRule: rule133
}, {
    start: 1467,
    length: 1,
    convRule: rule134
}, {
    start: 1468,
    length: 1,
    convRule: rule135
}, {
    start: 1469,
    length: 1,
    convRule: rule136
}, {
    start: 1470,
    length: 1,
    convRule: rule7
}, {
    start: 1471,
    length: 1,
    convRule: rule137
}, {
    start: 1472,
    length: 1,
    convRule: rule2
}, {
    start: 1473,
    length: 1,
    convRule: rule138
}, {
    start: 1474,
    length: 1,
    convRule: rule139
}, {
    start: 1475,
    length: 1,
    convRule: rule2
}, {
    start: 1476,
    length: 1,
    convRule: rule84
}, {
    start: 1477,
    length: 1,
    convRule: rule86
}, {
    start: 1478,
    length: 1,
    convRule: rule2
}, {
    start: 1479,
    length: 1,
    convRule: rule132
}, {
    start: 1488,
    length: 27,
    convRule: rule45
}, {
    start: 1520,
    length: 3,
    convRule: rule45
}, {
    start: 1523,
    length: 2,
    convRule: rule2
}, {
    start: 1536,
    length: 4,
    convRule: rule16
}, {
    start: 1542,
    length: 3,
    convRule: rule6
}, {
    start: 1545,
    length: 2,
    convRule: rule2
}, {
    start: 1547,
    length: 1,
    convRule: rule3
}, {
    start: 1548,
    length: 2,
    convRule: rule2
}, {
    start: 1550,
    length: 2,
    convRule: rule13
}, {
    start: 1552,
    length: 8,
    convRule: rule84
}, {
    start: 1560,
    length: 1,
    convRule: rule140
}, {
    start: 1561,
    length: 1,
    convRule: rule141
}, {
    start: 1562,
    length: 1,
    convRule: rule142
}, {
    start: 1563,
    length: 1,
    convRule: rule2
}, {
    start: 1566,
    length: 2,
    convRule: rule2
}, {
    start: 1568,
    length: 32,
    convRule: rule45
}, {
    start: 1600,
    length: 1,
    convRule: rule83
}, {
    start: 1601,
    length: 10,
    convRule: rule45
}, {
    start: 1611,
    length: 1,
    convRule: rule143
}, {
    start: 1612,
    length: 1,
    convRule: rule144
}, {
    start: 1613,
    length: 1,
    convRule: rule145
}, {
    start: 1614,
    length: 1,
    convRule: rule140
}, {
    start: 1615,
    length: 1,
    convRule: rule141
}, {
    start: 1616,
    length: 1,
    convRule: rule142
}, {
    start: 1617,
    length: 1,
    convRule: rule146
}, {
    start: 1618,
    length: 1,
    convRule: rule147
}, {
    start: 1619,
    length: 2,
    convRule: rule84
}, {
    start: 1621,
    length: 2,
    convRule: rule86
}, {
    start: 1623,
    length: 5,
    convRule: rule84
}, {
    start: 1628,
    length: 1,
    convRule: rule86
}, {
    start: 1629,
    length: 2,
    convRule: rule84
}, {
    start: 1631,
    length: 1,
    convRule: rule86
}, {
    start: 1632,
    length: 10,
    convRule: rule8
}, {
    start: 1642,
    length: 4,
    convRule: rule2
}, {
    start: 1646,
    length: 2,
    convRule: rule45
}, {
    start: 1648,
    length: 1,
    convRule: rule148
}, {
    start: 1649,
    length: 99,
    convRule: rule45
}, {
    start: 1748,
    length: 1,
    convRule: rule2
}, {
    start: 1749,
    length: 1,
    convRule: rule45
}, {
    start: 1750,
    length: 7,
    convRule: rule84
}, {
    start: 1757,
    length: 1,
    convRule: rule16
}, {
    start: 1758,
    length: 1,
    convRule: rule13
}, {
    start: 1759,
    length: 4,
    convRule: rule84
}, {
    start: 1763,
    length: 1,
    convRule: rule86
}, {
    start: 1764,
    length: 1,
    convRule: rule84
}, {
    start: 1765,
    length: 2,
    convRule: rule83
}, {
    start: 1767,
    length: 2,
    convRule: rule84
}, {
    start: 1769,
    length: 1,
    convRule: rule13
}, {
    start: 1770,
    length: 1,
    convRule: rule86
}, {
    start: 1771,
    length: 2,
    convRule: rule84
}, {
    start: 1773,
    length: 1,
    convRule: rule86
}, {
    start: 1774,
    length: 2,
    convRule: rule45
}, {
    start: 1776,
    length: 10,
    convRule: rule8
}, {
    start: 1786,
    length: 3,
    convRule: rule45
}, {
    start: 1789,
    length: 2,
    convRule: rule13
}, {
    start: 1791,
    length: 1,
    convRule: rule45
}, {
    start: 1792,
    length: 14,
    convRule: rule2
}, {
    start: 1807,
    length: 1,
    convRule: rule16
}, {
    start: 1808,
    length: 1,
    convRule: rule45
}, {
    start: 1809,
    length: 1,
    convRule: rule149
}, {
    start: 1810,
    length: 30,
    convRule: rule45
}, {
    start: 1840,
    length: 1,
    convRule: rule84
}, {
    start: 1841,
    length: 1,
    convRule: rule86
}, {
    start: 1842,
    length: 2,
    convRule: rule84
}, {
    start: 1844,
    length: 1,
    convRule: rule86
}, {
    start: 1845,
    length: 2,
    convRule: rule84
}, {
    start: 1847,
    length: 3,
    convRule: rule86
}, {
    start: 1850,
    length: 1,
    convRule: rule84
}, {
    start: 1851,
    length: 2,
    convRule: rule86
}, {
    start: 1853,
    length: 1,
    convRule: rule84
}, {
    start: 1854,
    length: 1,
    convRule: rule86
}, {
    start: 1855,
    length: 3,
    convRule: rule84
}, {
    start: 1858,
    length: 1,
    convRule: rule86
}, {
    start: 1859,
    length: 1,
    convRule: rule84
}, {
    start: 1860,
    length: 1,
    convRule: rule86
}, {
    start: 1861,
    length: 1,
    convRule: rule84
}, {
    start: 1862,
    length: 1,
    convRule: rule86
}, {
    start: 1863,
    length: 1,
    convRule: rule84
}, {
    start: 1864,
    length: 1,
    convRule: rule86
}, {
    start: 1865,
    length: 2,
    convRule: rule84
}, {
    start: 1869,
    length: 89,
    convRule: rule45
}, {
    start: 1958,
    length: 11,
    convRule: rule91
}, {
    start: 1969,
    length: 1,
    convRule: rule45
}, {
    start: 1984,
    length: 10,
    convRule: rule8
}, {
    start: 1994,
    length: 33,
    convRule: rule45
}, {
    start: 2027,
    length: 7,
    convRule: rule84
}, {
    start: 2034,
    length: 1,
    convRule: rule86
}, {
    start: 2035,
    length: 1,
    convRule: rule84
}, {
    start: 2036,
    length: 2,
    convRule: rule83
}, {
    start: 2038,
    length: 1,
    convRule: rule13
}, {
    start: 2039,
    length: 3,
    convRule: rule2
}, {
    start: 2042,
    length: 1,
    convRule: rule83
}, {
    start: 2048,
    length: 22,
    convRule: rule45
}, {
    start: 2070,
    length: 4,
    convRule: rule84
}, {
    start: 2074,
    length: 1,
    convRule: rule83
}, {
    start: 2075,
    length: 9,
    convRule: rule84
}, {
    start: 2084,
    length: 1,
    convRule: rule83
}, {
    start: 2085,
    length: 3,
    convRule: rule84
}, {
    start: 2088,
    length: 1,
    convRule: rule83
}, {
    start: 2089,
    length: 5,
    convRule: rule84
}, {
    start: 2096,
    length: 15,
    convRule: rule2
}, {
    start: 2112,
    length: 25,
    convRule: rule45
}, {
    start: 2137,
    length: 3,
    convRule: rule86
}, {
    start: 2142,
    length: 1,
    convRule: rule2
}, {
    start: 2304,
    length: 3,
    convRule: rule91
}, {
    start: 2307,
    length: 1,
    convRule: rule150
}, {
    start: 2308,
    length: 54,
    convRule: rule45
}, {
    start: 2362,
    length: 1,
    convRule: rule91
}, {
    start: 2363,
    length: 1,
    convRule: rule150
}, {
    start: 2364,
    length: 1,
    convRule: rule151
}, {
    start: 2365,
    length: 1,
    convRule: rule45
}, {
    start: 2366,
    length: 3,
    convRule: rule150
}, {
    start: 2369,
    length: 8,
    convRule: rule91
}, {
    start: 2377,
    length: 4,
    convRule: rule150
}, {
    start: 2381,
    length: 1,
    convRule: rule152
}, {
    start: 2382,
    length: 2,
    convRule: rule150
}, {
    start: 2384,
    length: 1,
    convRule: rule45
}, {
    start: 2385,
    length: 1,
    convRule: rule84
}, {
    start: 2386,
    length: 1,
    convRule: rule86
}, {
    start: 2387,
    length: 2,
    convRule: rule84
}, {
    start: 2389,
    length: 3,
    convRule: rule91
}, {
    start: 2392,
    length: 10,
    convRule: rule45
}, {
    start: 2402,
    length: 2,
    convRule: rule91
}, {
    start: 2404,
    length: 2,
    convRule: rule2
}, {
    start: 2406,
    length: 10,
    convRule: rule8
}, {
    start: 2416,
    length: 1,
    convRule: rule2
}, {
    start: 2417,
    length: 1,
    convRule: rule83
}, {
    start: 2418,
    length: 6,
    convRule: rule45
}, {
    start: 2425,
    length: 7,
    convRule: rule45
}, {
    start: 2433,
    length: 1,
    convRule: rule91
}, {
    start: 2434,
    length: 2,
    convRule: rule150
}, {
    start: 2437,
    length: 8,
    convRule: rule45
}, {
    start: 2447,
    length: 2,
    convRule: rule45
}, {
    start: 2451,
    length: 22,
    convRule: rule45
}, {
    start: 2474,
    length: 7,
    convRule: rule45
}, {
    start: 2482,
    length: 1,
    convRule: rule45
}, {
    start: 2486,
    length: 4,
    convRule: rule45
}, {
    start: 2492,
    length: 1,
    convRule: rule151
}, {
    start: 2493,
    length: 1,
    convRule: rule45
}, {
    start: 2494,
    length: 3,
    convRule: rule150
}, {
    start: 2497,
    length: 4,
    convRule: rule91
}, {
    start: 2503,
    length: 2,
    convRule: rule150
}, {
    start: 2507,
    length: 2,
    convRule: rule150
}, {
    start: 2509,
    length: 1,
    convRule: rule152
}, {
    start: 2510,
    length: 1,
    convRule: rule45
}, {
    start: 2519,
    length: 1,
    convRule: rule150
}, {
    start: 2524,
    length: 2,
    convRule: rule45
}, {
    start: 2527,
    length: 3,
    convRule: rule45
}, {
    start: 2530,
    length: 2,
    convRule: rule91
}, {
    start: 2534,
    length: 10,
    convRule: rule8
}, {
    start: 2544,
    length: 2,
    convRule: rule45
}, {
    start: 2546,
    length: 2,
    convRule: rule3
}, {
    start: 2548,
    length: 6,
    convRule: rule17
}, {
    start: 2554,
    length: 1,
    convRule: rule13
}, {
    start: 2555,
    length: 1,
    convRule: rule3
}, {
    start: 2561,
    length: 2,
    convRule: rule91
}, {
    start: 2563,
    length: 1,
    convRule: rule150
}, {
    start: 2565,
    length: 6,
    convRule: rule45
}, {
    start: 2575,
    length: 2,
    convRule: rule45
}, {
    start: 2579,
    length: 22,
    convRule: rule45
}, {
    start: 2602,
    length: 7,
    convRule: rule45
}, {
    start: 2610,
    length: 2,
    convRule: rule45
}, {
    start: 2613,
    length: 2,
    convRule: rule45
}, {
    start: 2616,
    length: 2,
    convRule: rule45
}, {
    start: 2620,
    length: 1,
    convRule: rule151
}, {
    start: 2622,
    length: 3,
    convRule: rule150
}, {
    start: 2625,
    length: 2,
    convRule: rule91
}, {
    start: 2631,
    length: 2,
    convRule: rule91
}, {
    start: 2635,
    length: 2,
    convRule: rule91
}, {
    start: 2637,
    length: 1,
    convRule: rule152
}, {
    start: 2641,
    length: 1,
    convRule: rule91
}, {
    start: 2649,
    length: 4,
    convRule: rule45
}, {
    start: 2654,
    length: 1,
    convRule: rule45
}, {
    start: 2662,
    length: 10,
    convRule: rule8
}, {
    start: 2672,
    length: 2,
    convRule: rule91
}, {
    start: 2674,
    length: 3,
    convRule: rule45
}, {
    start: 2677,
    length: 1,
    convRule: rule91
}, {
    start: 2689,
    length: 2,
    convRule: rule91
}, {
    start: 2691,
    length: 1,
    convRule: rule150
}, {
    start: 2693,
    length: 9,
    convRule: rule45
}, {
    start: 2703,
    length: 3,
    convRule: rule45
}, {
    start: 2707,
    length: 22,
    convRule: rule45
}, {
    start: 2730,
    length: 7,
    convRule: rule45
}, {
    start: 2738,
    length: 2,
    convRule: rule45
}, {
    start: 2741,
    length: 5,
    convRule: rule45
}, {
    start: 2748,
    length: 1,
    convRule: rule151
}, {
    start: 2749,
    length: 1,
    convRule: rule45
}, {
    start: 2750,
    length: 3,
    convRule: rule150
}, {
    start: 2753,
    length: 5,
    convRule: rule91
}, {
    start: 2759,
    length: 2,
    convRule: rule91
}, {
    start: 2761,
    length: 1,
    convRule: rule150
}, {
    start: 2763,
    length: 2,
    convRule: rule150
}, {
    start: 2765,
    length: 1,
    convRule: rule152
}, {
    start: 2768,
    length: 1,
    convRule: rule45
}, {
    start: 2784,
    length: 2,
    convRule: rule45
}, {
    start: 2786,
    length: 2,
    convRule: rule91
}, {
    start: 2790,
    length: 10,
    convRule: rule8
}, {
    start: 2801,
    length: 1,
    convRule: rule3
}, {
    start: 2817,
    length: 1,
    convRule: rule91
}, {
    start: 2818,
    length: 2,
    convRule: rule150
}, {
    start: 2821,
    length: 8,
    convRule: rule45
}, {
    start: 2831,
    length: 2,
    convRule: rule45
}, {
    start: 2835,
    length: 22,
    convRule: rule45
}, {
    start: 2858,
    length: 7,
    convRule: rule45
}, {
    start: 2866,
    length: 2,
    convRule: rule45
}, {
    start: 2869,
    length: 5,
    convRule: rule45
}, {
    start: 2876,
    length: 1,
    convRule: rule151
}, {
    start: 2877,
    length: 1,
    convRule: rule45
}, {
    start: 2878,
    length: 1,
    convRule: rule150
}, {
    start: 2879,
    length: 1,
    convRule: rule91
}, {
    start: 2880,
    length: 1,
    convRule: rule150
}, {
    start: 2881,
    length: 4,
    convRule: rule91
}, {
    start: 2887,
    length: 2,
    convRule: rule150
}, {
    start: 2891,
    length: 2,
    convRule: rule150
}, {
    start: 2893,
    length: 1,
    convRule: rule152
}, {
    start: 2902,
    length: 1,
    convRule: rule91
}, {
    start: 2903,
    length: 1,
    convRule: rule150
}, {
    start: 2908,
    length: 2,
    convRule: rule45
}, {
    start: 2911,
    length: 3,
    convRule: rule45
}, {
    start: 2914,
    length: 2,
    convRule: rule91
}, {
    start: 2918,
    length: 10,
    convRule: rule8
}, {
    start: 2928,
    length: 1,
    convRule: rule13
}, {
    start: 2929,
    length: 1,
    convRule: rule45
}, {
    start: 2930,
    length: 6,
    convRule: rule17
}, {
    start: 2946,
    length: 1,
    convRule: rule91
}, {
    start: 2947,
    length: 1,
    convRule: rule45
}, {
    start: 2949,
    length: 6,
    convRule: rule45
}, {
    start: 2958,
    length: 3,
    convRule: rule45
}, {
    start: 2962,
    length: 4,
    convRule: rule45
}, {
    start: 2969,
    length: 2,
    convRule: rule45
}, {
    start: 2972,
    length: 1,
    convRule: rule45
}, {
    start: 2974,
    length: 2,
    convRule: rule45
}, {
    start: 2979,
    length: 2,
    convRule: rule45
}, {
    start: 2984,
    length: 3,
    convRule: rule45
}, {
    start: 2990,
    length: 12,
    convRule: rule45
}, {
    start: 3006,
    length: 2,
    convRule: rule150
}, {
    start: 3008,
    length: 1,
    convRule: rule91
}, {
    start: 3009,
    length: 2,
    convRule: rule150
}, {
    start: 3014,
    length: 3,
    convRule: rule150
}, {
    start: 3018,
    length: 3,
    convRule: rule150
}, {
    start: 3021,
    length: 1,
    convRule: rule152
}, {
    start: 3024,
    length: 1,
    convRule: rule45
}, {
    start: 3031,
    length: 1,
    convRule: rule150
}, {
    start: 3046,
    length: 10,
    convRule: rule8
}, {
    start: 3056,
    length: 3,
    convRule: rule17
}, {
    start: 3059,
    length: 6,
    convRule: rule13
}, {
    start: 3065,
    length: 1,
    convRule: rule3
}, {
    start: 3066,
    length: 1,
    convRule: rule13
}, {
    start: 3073,
    length: 3,
    convRule: rule150
}, {
    start: 3077,
    length: 8,
    convRule: rule45
}, {
    start: 3086,
    length: 3,
    convRule: rule45
}, {
    start: 3090,
    length: 23,
    convRule: rule45
}, {
    start: 3114,
    length: 10,
    convRule: rule45
}, {
    start: 3125,
    length: 5,
    convRule: rule45
}, {
    start: 3133,
    length: 1,
    convRule: rule45
}, {
    start: 3134,
    length: 3,
    convRule: rule91
}, {
    start: 3137,
    length: 4,
    convRule: rule150
}, {
    start: 3142,
    length: 3,
    convRule: rule91
}, {
    start: 3146,
    length: 3,
    convRule: rule91
}, {
    start: 3149,
    length: 1,
    convRule: rule152
}, {
    start: 3157,
    length: 1,
    convRule: rule153
}, {
    start: 3158,
    length: 1,
    convRule: rule154
}, {
    start: 3160,
    length: 2,
    convRule: rule45
}, {
    start: 3168,
    length: 2,
    convRule: rule45
}, {
    start: 3170,
    length: 2,
    convRule: rule91
}, {
    start: 3174,
    length: 10,
    convRule: rule8
}, {
    start: 3192,
    length: 7,
    convRule: rule17
}, {
    start: 3199,
    length: 1,
    convRule: rule13
}, {
    start: 3202,
    length: 2,
    convRule: rule150
}, {
    start: 3205,
    length: 8,
    convRule: rule45
}, {
    start: 3214,
    length: 3,
    convRule: rule45
}, {
    start: 3218,
    length: 23,
    convRule: rule45
}, {
    start: 3242,
    length: 10,
    convRule: rule45
}, {
    start: 3253,
    length: 5,
    convRule: rule45
}, {
    start: 3260,
    length: 1,
    convRule: rule151
}, {
    start: 3261,
    length: 1,
    convRule: rule45
}, {
    start: 3262,
    length: 1,
    convRule: rule150
}, {
    start: 3263,
    length: 1,
    convRule: rule91
}, {
    start: 3264,
    length: 5,
    convRule: rule150
}, {
    start: 3270,
    length: 1,
    convRule: rule91
}, {
    start: 3271,
    length: 2,
    convRule: rule150
}, {
    start: 3274,
    length: 2,
    convRule: rule150
}, {
    start: 3276,
    length: 1,
    convRule: rule91
}, {
    start: 3277,
    length: 1,
    convRule: rule152
}, {
    start: 3285,
    length: 2,
    convRule: rule150
}, {
    start: 3294,
    length: 1,
    convRule: rule45
}, {
    start: 3296,
    length: 2,
    convRule: rule45
}, {
    start: 3298,
    length: 2,
    convRule: rule91
}, {
    start: 3302,
    length: 10,
    convRule: rule8
}, {
    start: 3313,
    length: 2,
    convRule: rule45
}, {
    start: 3330,
    length: 2,
    convRule: rule150
}, {
    start: 3333,
    length: 8,
    convRule: rule45
}, {
    start: 3342,
    length: 3,
    convRule: rule45
}, {
    start: 3346,
    length: 41,
    convRule: rule45
}, {
    start: 3389,
    length: 1,
    convRule: rule45
}, {
    start: 3390,
    length: 3,
    convRule: rule150
}, {
    start: 3393,
    length: 4,
    convRule: rule91
}, {
    start: 3398,
    length: 3,
    convRule: rule150
}, {
    start: 3402,
    length: 3,
    convRule: rule150
}, {
    start: 3405,
    length: 1,
    convRule: rule152
}, {
    start: 3406,
    length: 1,
    convRule: rule45
}, {
    start: 3415,
    length: 1,
    convRule: rule150
}, {
    start: 3424,
    length: 2,
    convRule: rule45
}, {
    start: 3426,
    length: 2,
    convRule: rule91
}, {
    start: 3430,
    length: 10,
    convRule: rule8
}, {
    start: 3440,
    length: 6,
    convRule: rule17
}, {
    start: 3449,
    length: 1,
    convRule: rule13
}, {
    start: 3450,
    length: 6,
    convRule: rule45
}, {
    start: 3458,
    length: 2,
    convRule: rule150
}, {
    start: 3461,
    length: 18,
    convRule: rule45
}, {
    start: 3482,
    length: 24,
    convRule: rule45
}, {
    start: 3507,
    length: 9,
    convRule: rule45
}, {
    start: 3517,
    length: 1,
    convRule: rule45
}, {
    start: 3520,
    length: 7,
    convRule: rule45
}, {
    start: 3530,
    length: 1,
    convRule: rule152
}, {
    start: 3535,
    length: 3,
    convRule: rule150
}, {
    start: 3538,
    length: 3,
    convRule: rule91
}, {
    start: 3542,
    length: 1,
    convRule: rule91
}, {
    start: 3544,
    length: 8,
    convRule: rule150
}, {
    start: 3570,
    length: 2,
    convRule: rule150
}, {
    start: 3572,
    length: 1,
    convRule: rule2
}, {
    start: 3585,
    length: 48,
    convRule: rule45
}, {
    start: 3633,
    length: 1,
    convRule: rule91
}, {
    start: 3634,
    length: 2,
    convRule: rule45
}, {
    start: 3636,
    length: 4,
    convRule: rule91
}, {
    start: 3640,
    length: 2,
    convRule: rule155
}, {
    start: 3642,
    length: 1,
    convRule: rule152
}, {
    start: 3647,
    length: 1,
    convRule: rule3
}, {
    start: 3648,
    length: 6,
    convRule: rule45
}, {
    start: 3654,
    length: 1,
    convRule: rule83
}, {
    start: 3655,
    length: 1,
    convRule: rule91
}, {
    start: 3656,
    length: 4,
    convRule: rule156
}, {
    start: 3660,
    length: 3,
    convRule: rule91
}, {
    start: 3663,
    length: 1,
    convRule: rule2
}, {
    start: 3664,
    length: 10,
    convRule: rule8
}, {
    start: 3674,
    length: 2,
    convRule: rule2
}, {
    start: 3713,
    length: 2,
    convRule: rule45
}, {
    start: 3716,
    length: 1,
    convRule: rule45
}, {
    start: 3719,
    length: 2,
    convRule: rule45
}, {
    start: 3722,
    length: 1,
    convRule: rule45
}, {
    start: 3725,
    length: 1,
    convRule: rule45
}, {
    start: 3732,
    length: 4,
    convRule: rule45
}, {
    start: 3737,
    length: 7,
    convRule: rule45
}, {
    start: 3745,
    length: 3,
    convRule: rule45
}, {
    start: 3749,
    length: 1,
    convRule: rule45
}, {
    start: 3751,
    length: 1,
    convRule: rule45
}, {
    start: 3754,
    length: 2,
    convRule: rule45
}, {
    start: 3757,
    length: 4,
    convRule: rule45
}, {
    start: 3761,
    length: 1,
    convRule: rule91
}, {
    start: 3762,
    length: 2,
    convRule: rule45
}, {
    start: 3764,
    length: 4,
    convRule: rule91
}, {
    start: 3768,
    length: 2,
    convRule: rule157
}, {
    start: 3771,
    length: 2,
    convRule: rule91
}, {
    start: 3773,
    length: 1,
    convRule: rule45
}, {
    start: 3776,
    length: 5,
    convRule: rule45
}, {
    start: 3782,
    length: 1,
    convRule: rule83
}, {
    start: 3784,
    length: 4,
    convRule: rule158
}, {
    start: 3788,
    length: 2,
    convRule: rule91
}, {
    start: 3792,
    length: 10,
    convRule: rule8
}, {
    start: 3804,
    length: 2,
    convRule: rule45
}, {
    start: 3840,
    length: 1,
    convRule: rule45
}, {
    start: 3841,
    length: 3,
    convRule: rule13
}, {
    start: 3844,
    length: 15,
    convRule: rule2
}, {
    start: 3859,
    length: 5,
    convRule: rule13
}, {
    start: 3864,
    length: 2,
    convRule: rule86
}, {
    start: 3866,
    length: 6,
    convRule: rule13
}, {
    start: 3872,
    length: 10,
    convRule: rule8
}, {
    start: 3882,
    length: 10,
    convRule: rule17
}, {
    start: 3892,
    length: 1,
    convRule: rule13
}, {
    start: 3893,
    length: 1,
    convRule: rule86
}, {
    start: 3894,
    length: 1,
    convRule: rule13
}, {
    start: 3895,
    length: 1,
    convRule: rule86
}, {
    start: 3896,
    length: 1,
    convRule: rule13
}, {
    start: 3897,
    length: 1,
    convRule: rule87
}, {
    start: 3898,
    length: 1,
    convRule: rule4
}, {
    start: 3899,
    length: 1,
    convRule: rule5
}, {
    start: 3900,
    length: 1,
    convRule: rule4
}, {
    start: 3901,
    length: 1,
    convRule: rule5
}, {
    start: 3902,
    length: 2,
    convRule: rule150
}, {
    start: 3904,
    length: 8,
    convRule: rule45
}, {
    start: 3913,
    length: 36,
    convRule: rule45
}, {
    start: 3953,
    length: 1,
    convRule: rule159
}, {
    start: 3954,
    length: 1,
    convRule: rule160
}, {
    start: 3955,
    length: 1,
    convRule: rule91
}, {
    start: 3956,
    length: 1,
    convRule: rule161
}, {
    start: 3957,
    length: 5,
    convRule: rule91
}, {
    start: 3962,
    length: 4,
    convRule: rule160
}, {
    start: 3966,
    length: 1,
    convRule: rule91
}, {
    start: 3967,
    length: 1,
    convRule: rule150
}, {
    start: 3968,
    length: 1,
    convRule: rule160
}, {
    start: 3969,
    length: 1,
    convRule: rule91
}, {
    start: 3970,
    length: 2,
    convRule: rule84
}, {
    start: 3972,
    length: 1,
    convRule: rule152
}, {
    start: 3973,
    length: 1,
    convRule: rule2
}, {
    start: 3974,
    length: 2,
    convRule: rule84
}, {
    start: 3976,
    length: 5,
    convRule: rule45
}, {
    start: 3981,
    length: 11,
    convRule: rule91
}, {
    start: 3993,
    length: 36,
    convRule: rule91
}, {
    start: 4030,
    length: 8,
    convRule: rule13
}, {
    start: 4038,
    length: 1,
    convRule: rule86
}, {
    start: 4039,
    length: 6,
    convRule: rule13
}, {
    start: 4046,
    length: 2,
    convRule: rule13
}, {
    start: 4048,
    length: 5,
    convRule: rule2
}, {
    start: 4053,
    length: 4,
    convRule: rule13
}, {
    start: 4057,
    length: 2,
    convRule: rule2
}, {
    start: 4096,
    length: 43,
    convRule: rule45
}, {
    start: 4139,
    length: 2,
    convRule: rule150
}, {
    start: 4141,
    length: 4,
    convRule: rule91
}, {
    start: 4145,
    length: 1,
    convRule: rule150
}, {
    start: 4146,
    length: 5,
    convRule: rule91
}, {
    start: 4151,
    length: 1,
    convRule: rule151
}, {
    start: 4152,
    length: 1,
    convRule: rule150
}, {
    start: 4153,
    length: 2,
    convRule: rule152
}, {
    start: 4155,
    length: 2,
    convRule: rule150
}, {
    start: 4157,
    length: 2,
    convRule: rule91
}, {
    start: 4159,
    length: 1,
    convRule: rule45
}, {
    start: 4160,
    length: 10,
    convRule: rule8
}, {
    start: 4170,
    length: 6,
    convRule: rule2
}, {
    start: 4176,
    length: 6,
    convRule: rule45
}, {
    start: 4182,
    length: 2,
    convRule: rule150
}, {
    start: 4184,
    length: 2,
    convRule: rule91
}, {
    start: 4186,
    length: 4,
    convRule: rule45
}, {
    start: 4190,
    length: 3,
    convRule: rule91
}, {
    start: 4193,
    length: 1,
    convRule: rule45
}, {
    start: 4194,
    length: 3,
    convRule: rule150
}, {
    start: 4197,
    length: 2,
    convRule: rule45
}, {
    start: 4199,
    length: 7,
    convRule: rule150
}, {
    start: 4206,
    length: 3,
    convRule: rule45
}, {
    start: 4209,
    length: 4,
    convRule: rule91
}, {
    start: 4213,
    length: 13,
    convRule: rule45
}, {
    start: 4226,
    length: 1,
    convRule: rule91
}, {
    start: 4227,
    length: 2,
    convRule: rule150
}, {
    start: 4229,
    length: 2,
    convRule: rule91
}, {
    start: 4231,
    length: 6,
    convRule: rule150
}, {
    start: 4237,
    length: 1,
    convRule: rule86
}, {
    start: 4238,
    length: 1,
    convRule: rule45
}, {
    start: 4239,
    length: 1,
    convRule: rule150
}, {
    start: 4240,
    length: 10,
    convRule: rule8
}, {
    start: 4250,
    length: 3,
    convRule: rule150
}, {
    start: 4253,
    length: 1,
    convRule: rule91
}, {
    start: 4254,
    length: 2,
    convRule: rule13
}, {
    start: 4256,
    length: 38,
    convRule: rule162
}, {
    start: 4304,
    length: 43,
    convRule: rule45
}, {
    start: 4347,
    length: 1,
    convRule: rule2
}, {
    start: 4348,
    length: 1,
    convRule: rule83
}, {
    start: 4352,
    length: 329,
    convRule: rule45
}, {
    start: 4682,
    length: 4,
    convRule: rule45
}, {
    start: 4688,
    length: 7,
    convRule: rule45
}, {
    start: 4696,
    length: 1,
    convRule: rule45
}, {
    start: 4698,
    length: 4,
    convRule: rule45
}, {
    start: 4704,
    length: 41,
    convRule: rule45
}, {
    start: 4746,
    length: 4,
    convRule: rule45
}, {
    start: 4752,
    length: 33,
    convRule: rule45
}, {
    start: 4786,
    length: 4,
    convRule: rule45
}, {
    start: 4792,
    length: 7,
    convRule: rule45
}, {
    start: 4800,
    length: 1,
    convRule: rule45
}, {
    start: 4802,
    length: 4,
    convRule: rule45
}, {
    start: 4808,
    length: 15,
    convRule: rule45
}, {
    start: 4824,
    length: 57,
    convRule: rule45
}, {
    start: 4882,
    length: 4,
    convRule: rule45
}, {
    start: 4888,
    length: 67,
    convRule: rule45
}, {
    start: 4957,
    length: 3,
    convRule: rule84
}, {
    start: 4960,
    length: 1,
    convRule: rule13
}, {
    start: 4961,
    length: 8,
    convRule: rule2
}, {
    start: 4969,
    length: 20,
    convRule: rule17
}, {
    start: 4992,
    length: 16,
    convRule: rule45
}, {
    start: 5008,
    length: 10,
    convRule: rule13
}, {
    start: 5024,
    length: 85,
    convRule: rule45
}, {
    start: 5120,
    length: 1,
    convRule: rule7
}, {
    start: 5121,
    length: 620,
    convRule: rule45
}, {
    start: 5741,
    length: 2,
    convRule: rule2
}, {
    start: 5743,
    length: 17,
    convRule: rule45
}, {
    start: 5760,
    length: 1,
    convRule: rule1
}, {
    start: 5761,
    length: 26,
    convRule: rule45
}, {
    start: 5787,
    length: 1,
    convRule: rule4
}, {
    start: 5788,
    length: 1,
    convRule: rule5
}, {
    start: 5792,
    length: 75,
    convRule: rule45
}, {
    start: 5867,
    length: 3,
    convRule: rule2
}, {
    start: 5870,
    length: 3,
    convRule: rule163
}, {
    start: 5888,
    length: 13,
    convRule: rule45
}, {
    start: 5902,
    length: 4,
    convRule: rule45
}, {
    start: 5906,
    length: 2,
    convRule: rule91
}, {
    start: 5908,
    length: 1,
    convRule: rule152
}, {
    start: 5920,
    length: 18,
    convRule: rule45
}, {
    start: 5938,
    length: 2,
    convRule: rule91
}, {
    start: 5940,
    length: 1,
    convRule: rule152
}, {
    start: 5941,
    length: 2,
    convRule: rule2
}, {
    start: 5952,
    length: 18,
    convRule: rule45
}, {
    start: 5970,
    length: 2,
    convRule: rule91
}, {
    start: 5984,
    length: 13,
    convRule: rule45
}, {
    start: 5998,
    length: 3,
    convRule: rule45
}, {
    start: 6002,
    length: 2,
    convRule: rule91
}, {
    start: 6016,
    length: 52,
    convRule: rule45
}, {
    start: 6068,
    length: 2,
    convRule: rule16
}, {
    start: 6070,
    length: 1,
    convRule: rule150
}, {
    start: 6071,
    length: 7,
    convRule: rule91
}, {
    start: 6078,
    length: 8,
    convRule: rule150
}, {
    start: 6086,
    length: 1,
    convRule: rule91
}, {
    start: 6087,
    length: 2,
    convRule: rule150
}, {
    start: 6089,
    length: 9,
    convRule: rule91
}, {
    start: 6098,
    length: 1,
    convRule: rule152
}, {
    start: 6099,
    length: 1,
    convRule: rule91
}, {
    start: 6100,
    length: 3,
    convRule: rule2
}, {
    start: 6103,
    length: 1,
    convRule: rule83
}, {
    start: 6104,
    length: 3,
    convRule: rule2
}, {
    start: 6107,
    length: 1,
    convRule: rule3
}, {
    start: 6108,
    length: 1,
    convRule: rule45
}, {
    start: 6109,
    length: 1,
    convRule: rule84
}, {
    start: 6112,
    length: 10,
    convRule: rule8
}, {
    start: 6128,
    length: 10,
    convRule: rule17
}, {
    start: 6144,
    length: 6,
    convRule: rule2
}, {
    start: 6150,
    length: 1,
    convRule: rule7
}, {
    start: 6151,
    length: 4,
    convRule: rule2
}, {
    start: 6155,
    length: 3,
    convRule: rule91
}, {
    start: 6158,
    length: 1,
    convRule: rule1
}, {
    start: 6160,
    length: 10,
    convRule: rule8
}, {
    start: 6176,
    length: 35,
    convRule: rule45
}, {
    start: 6211,
    length: 1,
    convRule: rule83
}, {
    start: 6212,
    length: 52,
    convRule: rule45
}, {
    start: 6272,
    length: 41,
    convRule: rule45
}, {
    start: 6313,
    length: 1,
    convRule: rule123
}, {
    start: 6314,
    length: 1,
    convRule: rule45
}, {
    start: 6320,
    length: 70,
    convRule: rule45
}, {
    start: 6400,
    length: 29,
    convRule: rule45
}, {
    start: 6432,
    length: 3,
    convRule: rule91
}, {
    start: 6435,
    length: 4,
    convRule: rule150
}, {
    start: 6439,
    length: 2,
    convRule: rule91
}, {
    start: 6441,
    length: 3,
    convRule: rule150
}, {
    start: 6448,
    length: 2,
    convRule: rule150
}, {
    start: 6450,
    length: 1,
    convRule: rule91
}, {
    start: 6451,
    length: 6,
    convRule: rule150
}, {
    start: 6457,
    length: 1,
    convRule: rule122
}, {
    start: 6458,
    length: 1,
    convRule: rule84
}, {
    start: 6459,
    length: 1,
    convRule: rule86
}, {
    start: 6464,
    length: 1,
    convRule: rule13
}, {
    start: 6468,
    length: 2,
    convRule: rule2
}, {
    start: 6470,
    length: 10,
    convRule: rule8
}, {
    start: 6480,
    length: 30,
    convRule: rule45
}, {
    start: 6512,
    length: 5,
    convRule: rule45
}, {
    start: 6528,
    length: 44,
    convRule: rule45
}, {
    start: 6576,
    length: 17,
    convRule: rule150
}, {
    start: 6593,
    length: 7,
    convRule: rule45
}, {
    start: 6600,
    length: 2,
    convRule: rule150
}, {
    start: 6608,
    length: 10,
    convRule: rule8
}, {
    start: 6618,
    length: 1,
    convRule: rule17
}, {
    start: 6622,
    length: 34,
    convRule: rule13
}, {
    start: 6656,
    length: 23,
    convRule: rule45
}, {
    start: 6679,
    length: 1,
    convRule: rule84
}, {
    start: 6680,
    length: 1,
    convRule: rule86
}, {
    start: 6681,
    length: 3,
    convRule: rule150
}, {
    start: 6686,
    length: 2,
    convRule: rule2
}, {
    start: 6688,
    length: 53,
    convRule: rule45
}, {
    start: 6741,
    length: 1,
    convRule: rule150
}, {
    start: 6742,
    length: 1,
    convRule: rule91
}, {
    start: 6743,
    length: 1,
    convRule: rule150
}, {
    start: 6744,
    length: 7,
    convRule: rule91
}, {
    start: 6752,
    length: 1,
    convRule: rule152
}, {
    start: 6753,
    length: 1,
    convRule: rule150
}, {
    start: 6754,
    length: 1,
    convRule: rule91
}, {
    start: 6755,
    length: 2,
    convRule: rule150
}, {
    start: 6757,
    length: 8,
    convRule: rule91
}, {
    start: 6765,
    length: 6,
    convRule: rule150
}, {
    start: 6771,
    length: 2,
    convRule: rule91
}, {
    start: 6773,
    length: 8,
    convRule: rule84
}, {
    start: 6783,
    length: 1,
    convRule: rule86
}, {
    start: 6784,
    length: 10,
    convRule: rule8
}, {
    start: 6800,
    length: 10,
    convRule: rule8
}, {
    start: 6816,
    length: 7,
    convRule: rule2
}, {
    start: 6823,
    length: 1,
    convRule: rule83
}, {
    start: 6824,
    length: 6,
    convRule: rule2
}, {
    start: 6912,
    length: 4,
    convRule: rule91
}, {
    start: 6916,
    length: 1,
    convRule: rule150
}, {
    start: 6917,
    length: 47,
    convRule: rule45
}, {
    start: 6964,
    length: 1,
    convRule: rule151
}, {
    start: 6965,
    length: 1,
    convRule: rule150
}, {
    start: 6966,
    length: 5,
    convRule: rule91
}, {
    start: 6971,
    length: 1,
    convRule: rule150
}, {
    start: 6972,
    length: 1,
    convRule: rule91
}, {
    start: 6973,
    length: 5,
    convRule: rule150
}, {
    start: 6978,
    length: 1,
    convRule: rule91
}, {
    start: 6979,
    length: 1,
    convRule: rule150
}, {
    start: 6980,
    length: 1,
    convRule: rule164
}, {
    start: 6981,
    length: 7,
    convRule: rule45
}, {
    start: 6992,
    length: 10,
    convRule: rule8
}, {
    start: 7002,
    length: 7,
    convRule: rule2
}, {
    start: 7009,
    length: 10,
    convRule: rule13
}, {
    start: 7019,
    length: 1,
    convRule: rule84
}, {
    start: 7020,
    length: 1,
    convRule: rule86
}, {
    start: 7021,
    length: 7,
    convRule: rule84
}, {
    start: 7028,
    length: 9,
    convRule: rule13
}, {
    start: 7040,
    length: 2,
    convRule: rule91
}, {
    start: 7042,
    length: 1,
    convRule: rule150
}, {
    start: 7043,
    length: 30,
    convRule: rule45
}, {
    start: 7073,
    length: 1,
    convRule: rule150
}, {
    start: 7074,
    length: 4,
    convRule: rule91
}, {
    start: 7078,
    length: 2,
    convRule: rule150
}, {
    start: 7080,
    length: 2,
    convRule: rule91
}, {
    start: 7082,
    length: 1,
    convRule: rule164
}, {
    start: 7086,
    length: 2,
    convRule: rule45
}, {
    start: 7088,
    length: 10,
    convRule: rule8
}, {
    start: 7104,
    length: 38,
    convRule: rule45
}, {
    start: 7142,
    length: 1,
    convRule: rule151
}, {
    start: 7143,
    length: 1,
    convRule: rule150
}, {
    start: 7144,
    length: 2,
    convRule: rule91
}, {
    start: 7146,
    length: 3,
    convRule: rule150
}, {
    start: 7149,
    length: 1,
    convRule: rule91
}, {
    start: 7150,
    length: 1,
    convRule: rule150
}, {
    start: 7151,
    length: 3,
    convRule: rule91
}, {
    start: 7154,
    length: 2,
    convRule: rule164
}, {
    start: 7164,
    length: 4,
    convRule: rule2
}, {
    start: 7168,
    length: 36,
    convRule: rule45
}, {
    start: 7204,
    length: 8,
    convRule: rule150
}, {
    start: 7212,
    length: 8,
    convRule: rule91
}, {
    start: 7220,
    length: 2,
    convRule: rule150
}, {
    start: 7222,
    length: 1,
    convRule: rule91
}, {
    start: 7223,
    length: 1,
    convRule: rule151
}, {
    start: 7227,
    length: 5,
    convRule: rule2
}, {
    start: 7232,
    length: 10,
    convRule: rule8
}, {
    start: 7245,
    length: 3,
    convRule: rule45
}, {
    start: 7248,
    length: 10,
    convRule: rule8
}, {
    start: 7258,
    length: 30,
    convRule: rule45
}, {
    start: 7288,
    length: 6,
    convRule: rule83
}, {
    start: 7294,
    length: 2,
    convRule: rule2
}, {
    start: 7376,
    length: 3,
    convRule: rule84
}, {
    start: 7379,
    length: 1,
    convRule: rule2
}, {
    start: 7380,
    length: 1,
    convRule: rule89
}, {
    start: 7381,
    length: 5,
    convRule: rule86
}, {
    start: 7386,
    length: 2,
    convRule: rule84
}, {
    start: 7388,
    length: 4,
    convRule: rule86
}, {
    start: 7392,
    length: 1,
    convRule: rule84
}, {
    start: 7393,
    length: 1,
    convRule: rule150
}, {
    start: 7394,
    length: 7,
    convRule: rule89
}, {
    start: 7401,
    length: 4,
    convRule: rule45
}, {
    start: 7405,
    length: 1,
    convRule: rule86
}, {
    start: 7406,
    length: 4,
    convRule: rule45
}, {
    start: 7410,
    length: 1,
    convRule: rule150
}, {
    start: 7424,
    length: 44,
    convRule: rule14
}, {
    start: 7468,
    length: 54,
    convRule: rule83
}, {
    start: 7522,
    length: 22,
    convRule: rule14
}, {
    start: 7544,
    length: 1,
    convRule: rule83
}, {
    start: 7545,
    length: 1,
    convRule: rule165
}, {
    start: 7546,
    length: 3,
    convRule: rule14
}, {
    start: 7549,
    length: 1,
    convRule: rule166
}, {
    start: 7550,
    length: 29,
    convRule: rule14
}, {
    start: 7579,
    length: 37,
    convRule: rule83
}, {
    start: 7616,
    length: 2,
    convRule: rule84
}, {
    start: 7618,
    length: 1,
    convRule: rule86
}, {
    start: 7619,
    length: 7,
    convRule: rule84
}, {
    start: 7626,
    length: 1,
    convRule: rule86
}, {
    start: 7627,
    length: 2,
    convRule: rule84
}, {
    start: 7629,
    length: 1,
    convRule: rule93
}, {
    start: 7630,
    length: 1,
    convRule: rule167
}, {
    start: 7631,
    length: 1,
    convRule: rule86
}, {
    start: 7632,
    length: 1,
    convRule: rule88
}, {
    start: 7633,
    length: 22,
    convRule: rule84
}, {
    start: 7676,
    length: 1,
    convRule: rule92
}, {
    start: 7677,
    length: 1,
    convRule: rule86
}, {
    start: 7678,
    length: 1,
    convRule: rule84
}, {
    start: 7679,
    length: 1,
    convRule: rule86
}, {
    start: 7680,
    length: 1,
    convRule: rule21
}, {
    start: 7681,
    length: 1,
    convRule: rule22
}, {
    start: 7682,
    length: 1,
    convRule: rule21
}, {
    start: 7683,
    length: 1,
    convRule: rule22
}, {
    start: 7684,
    length: 1,
    convRule: rule21
}, {
    start: 7685,
    length: 1,
    convRule: rule22
}, {
    start: 7686,
    length: 1,
    convRule: rule21
}, {
    start: 7687,
    length: 1,
    convRule: rule22
}, {
    start: 7688,
    length: 1,
    convRule: rule21
}, {
    start: 7689,
    length: 1,
    convRule: rule22
}, {
    start: 7690,
    length: 1,
    convRule: rule21
}, {
    start: 7691,
    length: 1,
    convRule: rule22
}, {
    start: 7692,
    length: 1,
    convRule: rule21
}, {
    start: 7693,
    length: 1,
    convRule: rule22
}, {
    start: 7694,
    length: 1,
    convRule: rule21
}, {
    start: 7695,
    length: 1,
    convRule: rule22
}, {
    start: 7696,
    length: 1,
    convRule: rule21
}, {
    start: 7697,
    length: 1,
    convRule: rule22
}, {
    start: 7698,
    length: 1,
    convRule: rule21
}, {
    start: 7699,
    length: 1,
    convRule: rule22
}, {
    start: 7700,
    length: 1,
    convRule: rule21
}, {
    start: 7701,
    length: 1,
    convRule: rule22
}, {
    start: 7702,
    length: 1,
    convRule: rule21
}, {
    start: 7703,
    length: 1,
    convRule: rule22
}, {
    start: 7704,
    length: 1,
    convRule: rule21
}, {
    start: 7705,
    length: 1,
    convRule: rule22
}, {
    start: 7706,
    length: 1,
    convRule: rule21
}, {
    start: 7707,
    length: 1,
    convRule: rule22
}, {
    start: 7708,
    length: 1,
    convRule: rule21
}, {
    start: 7709,
    length: 1,
    convRule: rule22
}, {
    start: 7710,
    length: 1,
    convRule: rule21
}, {
    start: 7711,
    length: 1,
    convRule: rule22
}, {
    start: 7712,
    length: 1,
    convRule: rule21
}, {
    start: 7713,
    length: 1,
    convRule: rule22
}, {
    start: 7714,
    length: 1,
    convRule: rule21
}, {
    start: 7715,
    length: 1,
    convRule: rule22
}, {
    start: 7716,
    length: 1,
    convRule: rule21
}, {
    start: 7717,
    length: 1,
    convRule: rule22
}, {
    start: 7718,
    length: 1,
    convRule: rule21
}, {
    start: 7719,
    length: 1,
    convRule: rule22
}, {
    start: 7720,
    length: 1,
    convRule: rule21
}, {
    start: 7721,
    length: 1,
    convRule: rule22
}, {
    start: 7722,
    length: 1,
    convRule: rule21
}, {
    start: 7723,
    length: 1,
    convRule: rule22
}, {
    start: 7724,
    length: 1,
    convRule: rule21
}, {
    start: 7725,
    length: 1,
    convRule: rule22
}, {
    start: 7726,
    length: 1,
    convRule: rule21
}, {
    start: 7727,
    length: 1,
    convRule: rule22
}, {
    start: 7728,
    length: 1,
    convRule: rule21
}, {
    start: 7729,
    length: 1,
    convRule: rule22
}, {
    start: 7730,
    length: 1,
    convRule: rule21
}, {
    start: 7731,
    length: 1,
    convRule: rule22
}, {
    start: 7732,
    length: 1,
    convRule: rule21
}, {
    start: 7733,
    length: 1,
    convRule: rule22
}, {
    start: 7734,
    length: 1,
    convRule: rule21
}, {
    start: 7735,
    length: 1,
    convRule: rule22
}, {
    start: 7736,
    length: 1,
    convRule: rule21
}, {
    start: 7737,
    length: 1,
    convRule: rule22
}, {
    start: 7738,
    length: 1,
    convRule: rule21
}, {
    start: 7739,
    length: 1,
    convRule: rule22
}, {
    start: 7740,
    length: 1,
    convRule: rule21
}, {
    start: 7741,
    length: 1,
    convRule: rule22
}, {
    start: 7742,
    length: 1,
    convRule: rule21
}, {
    start: 7743,
    length: 1,
    convRule: rule22
}, {
    start: 7744,
    length: 1,
    convRule: rule21
}, {
    start: 7745,
    length: 1,
    convRule: rule22
}, {
    start: 7746,
    length: 1,
    convRule: rule21
}, {
    start: 7747,
    length: 1,
    convRule: rule22
}, {
    start: 7748,
    length: 1,
    convRule: rule21
}, {
    start: 7749,
    length: 1,
    convRule: rule22
}, {
    start: 7750,
    length: 1,
    convRule: rule21
}, {
    start: 7751,
    length: 1,
    convRule: rule22
}, {
    start: 7752,
    length: 1,
    convRule: rule21
}, {
    start: 7753,
    length: 1,
    convRule: rule22
}, {
    start: 7754,
    length: 1,
    convRule: rule21
}, {
    start: 7755,
    length: 1,
    convRule: rule22
}, {
    start: 7756,
    length: 1,
    convRule: rule21
}, {
    start: 7757,
    length: 1,
    convRule: rule22
}, {
    start: 7758,
    length: 1,
    convRule: rule21
}, {
    start: 7759,
    length: 1,
    convRule: rule22
}, {
    start: 7760,
    length: 1,
    convRule: rule21
}, {
    start: 7761,
    length: 1,
    convRule: rule22
}, {
    start: 7762,
    length: 1,
    convRule: rule21
}, {
    start: 7763,
    length: 1,
    convRule: rule22
}, {
    start: 7764,
    length: 1,
    convRule: rule21
}, {
    start: 7765,
    length: 1,
    convRule: rule22
}, {
    start: 7766,
    length: 1,
    convRule: rule21
}, {
    start: 7767,
    length: 1,
    convRule: rule22
}, {
    start: 7768,
    length: 1,
    convRule: rule21
}, {
    start: 7769,
    length: 1,
    convRule: rule22
}, {
    start: 7770,
    length: 1,
    convRule: rule21
}, {
    start: 7771,
    length: 1,
    convRule: rule22
}, {
    start: 7772,
    length: 1,
    convRule: rule21
}, {
    start: 7773,
    length: 1,
    convRule: rule22
}, {
    start: 7774,
    length: 1,
    convRule: rule21
}, {
    start: 7775,
    length: 1,
    convRule: rule22
}, {
    start: 7776,
    length: 1,
    convRule: rule21
}, {
    start: 7777,
    length: 1,
    convRule: rule22
}, {
    start: 7778,
    length: 1,
    convRule: rule21
}, {
    start: 7779,
    length: 1,
    convRule: rule22
}, {
    start: 7780,
    length: 1,
    convRule: rule21
}, {
    start: 7781,
    length: 1,
    convRule: rule22
}, {
    start: 7782,
    length: 1,
    convRule: rule21
}, {
    start: 7783,
    length: 1,
    convRule: rule22
}, {
    start: 7784,
    length: 1,
    convRule: rule21
}, {
    start: 7785,
    length: 1,
    convRule: rule22
}, {
    start: 7786,
    length: 1,
    convRule: rule21
}, {
    start: 7787,
    length: 1,
    convRule: rule22
}, {
    start: 7788,
    length: 1,
    convRule: rule21
}, {
    start: 7789,
    length: 1,
    convRule: rule22
}, {
    start: 7790,
    length: 1,
    convRule: rule21
}, {
    start: 7791,
    length: 1,
    convRule: rule22
}, {
    start: 7792,
    length: 1,
    convRule: rule21
}, {
    start: 7793,
    length: 1,
    convRule: rule22
}, {
    start: 7794,
    length: 1,
    convRule: rule21
}, {
    start: 7795,
    length: 1,
    convRule: rule22
}, {
    start: 7796,
    length: 1,
    convRule: rule21
}, {
    start: 7797,
    length: 1,
    convRule: rule22
}, {
    start: 7798,
    length: 1,
    convRule: rule21
}, {
    start: 7799,
    length: 1,
    convRule: rule22
}, {
    start: 7800,
    length: 1,
    convRule: rule21
}, {
    start: 7801,
    length: 1,
    convRule: rule22
}, {
    start: 7802,
    length: 1,
    convRule: rule21
}, {
    start: 7803,
    length: 1,
    convRule: rule22
}, {
    start: 7804,
    length: 1,
    convRule: rule21
}, {
    start: 7805,
    length: 1,
    convRule: rule22
}, {
    start: 7806,
    length: 1,
    convRule: rule21
}, {
    start: 7807,
    length: 1,
    convRule: rule22
}, {
    start: 7808,
    length: 1,
    convRule: rule21
}, {
    start: 7809,
    length: 1,
    convRule: rule22
}, {
    start: 7810,
    length: 1,
    convRule: rule21
}, {
    start: 7811,
    length: 1,
    convRule: rule22
}, {
    start: 7812,
    length: 1,
    convRule: rule21
}, {
    start: 7813,
    length: 1,
    convRule: rule22
}, {
    start: 7814,
    length: 1,
    convRule: rule21
}, {
    start: 7815,
    length: 1,
    convRule: rule22
}, {
    start: 7816,
    length: 1,
    convRule: rule21
}, {
    start: 7817,
    length: 1,
    convRule: rule22
}, {
    start: 7818,
    length: 1,
    convRule: rule21
}, {
    start: 7819,
    length: 1,
    convRule: rule22
}, {
    start: 7820,
    length: 1,
    convRule: rule21
}, {
    start: 7821,
    length: 1,
    convRule: rule22
}, {
    start: 7822,
    length: 1,
    convRule: rule21
}, {
    start: 7823,
    length: 1,
    convRule: rule22
}, {
    start: 7824,
    length: 1,
    convRule: rule21
}, {
    start: 7825,
    length: 1,
    convRule: rule22
}, {
    start: 7826,
    length: 1,
    convRule: rule21
}, {
    start: 7827,
    length: 1,
    convRule: rule22
}, {
    start: 7828,
    length: 1,
    convRule: rule21
}, {
    start: 7829,
    length: 1,
    convRule: rule22
}, {
    start: 7830,
    length: 5,
    convRule: rule14
}, {
    start: 7835,
    length: 1,
    convRule: rule168
}, {
    start: 7836,
    length: 2,
    convRule: rule14
}, {
    start: 7838,
    length: 1,
    convRule: rule169
}, {
    start: 7839,
    length: 1,
    convRule: rule14
}, {
    start: 7840,
    length: 1,
    convRule: rule21
}, {
    start: 7841,
    length: 1,
    convRule: rule22
}, {
    start: 7842,
    length: 1,
    convRule: rule21
}, {
    start: 7843,
    length: 1,
    convRule: rule22
}, {
    start: 7844,
    length: 1,
    convRule: rule21
}, {
    start: 7845,
    length: 1,
    convRule: rule22
}, {
    start: 7846,
    length: 1,
    convRule: rule21
}, {
    start: 7847,
    length: 1,
    convRule: rule22
}, {
    start: 7848,
    length: 1,
    convRule: rule21
}, {
    start: 7849,
    length: 1,
    convRule: rule22
}, {
    start: 7850,
    length: 1,
    convRule: rule21
}, {
    start: 7851,
    length: 1,
    convRule: rule22
}, {
    start: 7852,
    length: 1,
    convRule: rule21
}, {
    start: 7853,
    length: 1,
    convRule: rule22
}, {
    start: 7854,
    length: 1,
    convRule: rule21
}, {
    start: 7855,
    length: 1,
    convRule: rule22
}, {
    start: 7856,
    length: 1,
    convRule: rule21
}, {
    start: 7857,
    length: 1,
    convRule: rule22
}, {
    start: 7858,
    length: 1,
    convRule: rule21
}, {
    start: 7859,
    length: 1,
    convRule: rule22
}, {
    start: 7860,
    length: 1,
    convRule: rule21
}, {
    start: 7861,
    length: 1,
    convRule: rule22
}, {
    start: 7862,
    length: 1,
    convRule: rule21
}, {
    start: 7863,
    length: 1,
    convRule: rule22
}, {
    start: 7864,
    length: 1,
    convRule: rule21
}, {
    start: 7865,
    length: 1,
    convRule: rule22
}, {
    start: 7866,
    length: 1,
    convRule: rule21
}, {
    start: 7867,
    length: 1,
    convRule: rule22
}, {
    start: 7868,
    length: 1,
    convRule: rule21
}, {
    start: 7869,
    length: 1,
    convRule: rule22
}, {
    start: 7870,
    length: 1,
    convRule: rule21
}, {
    start: 7871,
    length: 1,
    convRule: rule22
}, {
    start: 7872,
    length: 1,
    convRule: rule21
}, {
    start: 7873,
    length: 1,
    convRule: rule22
}, {
    start: 7874,
    length: 1,
    convRule: rule21
}, {
    start: 7875,
    length: 1,
    convRule: rule22
}, {
    start: 7876,
    length: 1,
    convRule: rule21
}, {
    start: 7877,
    length: 1,
    convRule: rule22
}, {
    start: 7878,
    length: 1,
    convRule: rule21
}, {
    start: 7879,
    length: 1,
    convRule: rule22
}, {
    start: 7880,
    length: 1,
    convRule: rule21
}, {
    start: 7881,
    length: 1,
    convRule: rule22
}, {
    start: 7882,
    length: 1,
    convRule: rule21
}, {
    start: 7883,
    length: 1,
    convRule: rule22
}, {
    start: 7884,
    length: 1,
    convRule: rule21
}, {
    start: 7885,
    length: 1,
    convRule: rule22
}, {
    start: 7886,
    length: 1,
    convRule: rule21
}, {
    start: 7887,
    length: 1,
    convRule: rule22
}, {
    start: 7888,
    length: 1,
    convRule: rule21
}, {
    start: 7889,
    length: 1,
    convRule: rule22
}, {
    start: 7890,
    length: 1,
    convRule: rule21
}, {
    start: 7891,
    length: 1,
    convRule: rule22
}, {
    start: 7892,
    length: 1,
    convRule: rule21
}, {
    start: 7893,
    length: 1,
    convRule: rule22
}, {
    start: 7894,
    length: 1,
    convRule: rule21
}, {
    start: 7895,
    length: 1,
    convRule: rule22
}, {
    start: 7896,
    length: 1,
    convRule: rule21
}, {
    start: 7897,
    length: 1,
    convRule: rule22
}, {
    start: 7898,
    length: 1,
    convRule: rule21
}, {
    start: 7899,
    length: 1,
    convRule: rule22
}, {
    start: 7900,
    length: 1,
    convRule: rule21
}, {
    start: 7901,
    length: 1,
    convRule: rule22
}, {
    start: 7902,
    length: 1,
    convRule: rule21
}, {
    start: 7903,
    length: 1,
    convRule: rule22
}, {
    start: 7904,
    length: 1,
    convRule: rule21
}, {
    start: 7905,
    length: 1,
    convRule: rule22
}, {
    start: 7906,
    length: 1,
    convRule: rule21
}, {
    start: 7907,
    length: 1,
    convRule: rule22
}, {
    start: 7908,
    length: 1,
    convRule: rule21
}, {
    start: 7909,
    length: 1,
    convRule: rule22
}, {
    start: 7910,
    length: 1,
    convRule: rule21
}, {
    start: 7911,
    length: 1,
    convRule: rule22
}, {
    start: 7912,
    length: 1,
    convRule: rule21
}, {
    start: 7913,
    length: 1,
    convRule: rule22
}, {
    start: 7914,
    length: 1,
    convRule: rule21
}, {
    start: 7915,
    length: 1,
    convRule: rule22
}, {
    start: 7916,
    length: 1,
    convRule: rule21
}, {
    start: 7917,
    length: 1,
    convRule: rule22
}, {
    start: 7918,
    length: 1,
    convRule: rule21
}, {
    start: 7919,
    length: 1,
    convRule: rule22
}, {
    start: 7920,
    length: 1,
    convRule: rule21
}, {
    start: 7921,
    length: 1,
    convRule: rule22
}, {
    start: 7922,
    length: 1,
    convRule: rule21
}, {
    start: 7923,
    length: 1,
    convRule: rule22
}, {
    start: 7924,
    length: 1,
    convRule: rule21
}, {
    start: 7925,
    length: 1,
    convRule: rule22
}, {
    start: 7926,
    length: 1,
    convRule: rule21
}, {
    start: 7927,
    length: 1,
    convRule: rule22
}, {
    start: 7928,
    length: 1,
    convRule: rule21
}, {
    start: 7929,
    length: 1,
    convRule: rule22
}, {
    start: 7930,
    length: 1,
    convRule: rule21
}, {
    start: 7931,
    length: 1,
    convRule: rule22
}, {
    start: 7932,
    length: 1,
    convRule: rule21
}, {
    start: 7933,
    length: 1,
    convRule: rule22
}, {
    start: 7934,
    length: 1,
    convRule: rule21
}, {
    start: 7935,
    length: 1,
    convRule: rule22
}, {
    start: 7936,
    length: 8,
    convRule: rule170
}, {
    start: 7944,
    length: 8,
    convRule: rule171
}, {
    start: 7952,
    length: 6,
    convRule: rule170
}, {
    start: 7960,
    length: 6,
    convRule: rule171
}, {
    start: 7968,
    length: 8,
    convRule: rule170
}, {
    start: 7976,
    length: 8,
    convRule: rule171
}, {
    start: 7984,
    length: 8,
    convRule: rule170
}, {
    start: 7992,
    length: 8,
    convRule: rule171
}, {
    start: 8000,
    length: 6,
    convRule: rule170
}, {
    start: 8008,
    length: 6,
    convRule: rule171
}, {
    start: 8016,
    length: 1,
    convRule: rule14
}, {
    start: 8017,
    length: 1,
    convRule: rule170
}, {
    start: 8018,
    length: 1,
    convRule: rule14
}, {
    start: 8019,
    length: 1,
    convRule: rule170
}, {
    start: 8020,
    length: 1,
    convRule: rule14
}, {
    start: 8021,
    length: 1,
    convRule: rule170
}, {
    start: 8022,
    length: 1,
    convRule: rule14
}, {
    start: 8023,
    length: 1,
    convRule: rule170
}, {
    start: 8025,
    length: 1,
    convRule: rule171
}, {
    start: 8027,
    length: 1,
    convRule: rule171
}, {
    start: 8029,
    length: 1,
    convRule: rule171
}, {
    start: 8031,
    length: 1,
    convRule: rule171
}, {
    start: 8032,
    length: 8,
    convRule: rule170
}, {
    start: 8040,
    length: 8,
    convRule: rule171
}, {
    start: 8048,
    length: 2,
    convRule: rule172
}, {
    start: 8050,
    length: 4,
    convRule: rule173
}, {
    start: 8054,
    length: 2,
    convRule: rule174
}, {
    start: 8056,
    length: 2,
    convRule: rule175
}, {
    start: 8058,
    length: 2,
    convRule: rule176
}, {
    start: 8060,
    length: 2,
    convRule: rule177
}, {
    start: 8064,
    length: 8,
    convRule: rule170
}, {
    start: 8072,
    length: 8,
    convRule: rule178
}, {
    start: 8080,
    length: 8,
    convRule: rule170
}, {
    start: 8088,
    length: 8,
    convRule: rule178
}, {
    start: 8096,
    length: 8,
    convRule: rule170
}, {
    start: 8104,
    length: 8,
    convRule: rule178
}, {
    start: 8112,
    length: 2,
    convRule: rule170
}, {
    start: 8114,
    length: 1,
    convRule: rule14
}, {
    start: 8115,
    length: 1,
    convRule: rule179
}, {
    start: 8116,
    length: 1,
    convRule: rule14
}, {
    start: 8118,
    length: 2,
    convRule: rule14
}, {
    start: 8120,
    length: 2,
    convRule: rule171
}, {
    start: 8122,
    length: 2,
    convRule: rule180
}, {
    start: 8124,
    length: 1,
    convRule: rule181
}, {
    start: 8125,
    length: 1,
    convRule: rule10
}, {
    start: 8126,
    length: 1,
    convRule: rule182
}, {
    start: 8127,
    length: 3,
    convRule: rule10
}, {
    start: 8130,
    length: 1,
    convRule: rule14
}, {
    start: 8131,
    length: 1,
    convRule: rule179
}, {
    start: 8132,
    length: 1,
    convRule: rule14
}, {
    start: 8134,
    length: 2,
    convRule: rule14
}, {
    start: 8136,
    length: 4,
    convRule: rule183
}, {
    start: 8140,
    length: 1,
    convRule: rule181
}, {
    start: 8141,
    length: 3,
    convRule: rule10
}, {
    start: 8144,
    length: 2,
    convRule: rule170
}, {
    start: 8146,
    length: 2,
    convRule: rule14
}, {
    start: 8150,
    length: 2,
    convRule: rule14
}, {
    start: 8152,
    length: 2,
    convRule: rule171
}, {
    start: 8154,
    length: 2,
    convRule: rule184
}, {
    start: 8157,
    length: 3,
    convRule: rule10
}, {
    start: 8160,
    length: 2,
    convRule: rule170
}, {
    start: 8162,
    length: 3,
    convRule: rule14
}, {
    start: 8165,
    length: 1,
    convRule: rule112
}, {
    start: 8166,
    length: 2,
    convRule: rule14
}, {
    start: 8168,
    length: 2,
    convRule: rule171
}, {
    start: 8170,
    length: 2,
    convRule: rule185
}, {
    start: 8172,
    length: 1,
    convRule: rule115
}, {
    start: 8173,
    length: 3,
    convRule: rule10
}, {
    start: 8178,
    length: 1,
    convRule: rule14
}, {
    start: 8179,
    length: 1,
    convRule: rule179
}, {
    start: 8180,
    length: 1,
    convRule: rule14
}, {
    start: 8182,
    length: 2,
    convRule: rule14
}, {
    start: 8184,
    length: 2,
    convRule: rule186
}, {
    start: 8186,
    length: 2,
    convRule: rule187
}, {
    start: 8188,
    length: 1,
    convRule: rule181
}, {
    start: 8189,
    length: 2,
    convRule: rule10
}, {
    start: 8192,
    length: 11,
    convRule: rule1
}, {
    start: 8203,
    length: 5,
    convRule: rule16
}, {
    start: 8208,
    length: 6,
    convRule: rule7
}, {
    start: 8214,
    length: 2,
    convRule: rule2
}, {
    start: 8216,
    length: 1,
    convRule: rule15
}, {
    start: 8217,
    length: 1,
    convRule: rule19
}, {
    start: 8218,
    length: 1,
    convRule: rule4
}, {
    start: 8219,
    length: 2,
    convRule: rule15
}, {
    start: 8221,
    length: 1,
    convRule: rule19
}, {
    start: 8222,
    length: 1,
    convRule: rule4
}, {
    start: 8223,
    length: 1,
    convRule: rule15
}, {
    start: 8224,
    length: 8,
    convRule: rule2
}, {
    start: 8232,
    length: 1,
    convRule: rule188
}, {
    start: 8233,
    length: 1,
    convRule: rule189
}, {
    start: 8234,
    length: 5,
    convRule: rule16
}, {
    start: 8239,
    length: 1,
    convRule: rule1
}, {
    start: 8240,
    length: 9,
    convRule: rule2
}, {
    start: 8249,
    length: 1,
    convRule: rule15
}, {
    start: 8250,
    length: 1,
    convRule: rule19
}, {
    start: 8251,
    length: 4,
    convRule: rule2
}, {
    start: 8255,
    length: 2,
    convRule: rule11
}, {
    start: 8257,
    length: 3,
    convRule: rule2
}, {
    start: 8260,
    length: 1,
    convRule: rule6
}, {
    start: 8261,
    length: 1,
    convRule: rule4
}, {
    start: 8262,
    length: 1,
    convRule: rule5
}, {
    start: 8263,
    length: 11,
    convRule: rule2
}, {
    start: 8274,
    length: 1,
    convRule: rule6
}, {
    start: 8275,
    length: 1,
    convRule: rule2
}, {
    start: 8276,
    length: 1,
    convRule: rule11
}, {
    start: 8277,
    length: 10,
    convRule: rule2
}, {
    start: 8287,
    length: 1,
    convRule: rule1
}, {
    start: 8288,
    length: 5,
    convRule: rule16
}, {
    start: 8298,
    length: 6,
    convRule: rule16
}, {
    start: 8304,
    length: 1,
    convRule: rule17
}, {
    start: 8305,
    length: 1,
    convRule: rule83
}, {
    start: 8308,
    length: 6,
    convRule: rule17
}, {
    start: 8314,
    length: 3,
    convRule: rule6
}, {
    start: 8317,
    length: 1,
    convRule: rule4
}, {
    start: 8318,
    length: 1,
    convRule: rule5
}, {
    start: 8319,
    length: 1,
    convRule: rule83
}, {
    start: 8320,
    length: 10,
    convRule: rule17
}, {
    start: 8330,
    length: 3,
    convRule: rule6
}, {
    start: 8333,
    length: 1,
    convRule: rule4
}, {
    start: 8334,
    length: 1,
    convRule: rule5
}, {
    start: 8336,
    length: 13,
    convRule: rule83
}, {
    start: 8352,
    length: 26,
    convRule: rule3
}, {
    start: 8400,
    length: 2,
    convRule: rule84
}, {
    start: 8402,
    length: 2,
    convRule: rule89
}, {
    start: 8404,
    length: 4,
    convRule: rule84
}, {
    start: 8408,
    length: 3,
    convRule: rule89
}, {
    start: 8411,
    length: 2,
    convRule: rule84
}, {
    start: 8413,
    length: 4,
    convRule: rule117
}, {
    start: 8417,
    length: 1,
    convRule: rule84
}, {
    start: 8418,
    length: 3,
    convRule: rule117
}, {
    start: 8421,
    length: 2,
    convRule: rule89
}, {
    start: 8423,
    length: 1,
    convRule: rule84
}, {
    start: 8424,
    length: 1,
    convRule: rule86
}, {
    start: 8425,
    length: 1,
    convRule: rule84
}, {
    start: 8426,
    length: 2,
    convRule: rule89
}, {
    start: 8428,
    length: 4,
    convRule: rule86
}, {
    start: 8432,
    length: 1,
    convRule: rule84
}, {
    start: 8448,
    length: 2,
    convRule: rule13
}, {
    start: 8450,
    length: 1,
    convRule: rule106
}, {
    start: 8451,
    length: 4,
    convRule: rule13
}, {
    start: 8455,
    length: 1,
    convRule: rule106
}, {
    start: 8456,
    length: 2,
    convRule: rule13
}, {
    start: 8458,
    length: 1,
    convRule: rule14
}, {
    start: 8459,
    length: 3,
    convRule: rule106
}, {
    start: 8462,
    length: 2,
    convRule: rule14
}, {
    start: 8464,
    length: 3,
    convRule: rule106
}, {
    start: 8467,
    length: 1,
    convRule: rule14
}, {
    start: 8468,
    length: 1,
    convRule: rule13
}, {
    start: 8469,
    length: 1,
    convRule: rule106
}, {
    start: 8470,
    length: 2,
    convRule: rule13
}, {
    start: 8472,
    length: 1,
    convRule: rule6
}, {
    start: 8473,
    length: 5,
    convRule: rule106
}, {
    start: 8478,
    length: 6,
    convRule: rule13
}, {
    start: 8484,
    length: 1,
    convRule: rule106
}, {
    start: 8485,
    length: 1,
    convRule: rule13
}, {
    start: 8486,
    length: 1,
    convRule: rule190
}, {
    start: 8487,
    length: 1,
    convRule: rule13
}, {
    start: 8488,
    length: 1,
    convRule: rule106
}, {
    start: 8489,
    length: 1,
    convRule: rule13
}, {
    start: 8490,
    length: 1,
    convRule: rule191
}, {
    start: 8491,
    length: 1,
    convRule: rule192
}, {
    start: 8492,
    length: 2,
    convRule: rule106
}, {
    start: 8494,
    length: 1,
    convRule: rule13
}, {
    start: 8495,
    length: 1,
    convRule: rule14
}, {
    start: 8496,
    length: 2,
    convRule: rule106
}, {
    start: 8498,
    length: 1,
    convRule: rule193
}, {
    start: 8499,
    length: 1,
    convRule: rule106
}, {
    start: 8500,
    length: 1,
    convRule: rule14
}, {
    start: 8501,
    length: 4,
    convRule: rule45
}, {
    start: 8505,
    length: 1,
    convRule: rule14
}, {
    start: 8506,
    length: 2,
    convRule: rule13
}, {
    start: 8508,
    length: 2,
    convRule: rule14
}, {
    start: 8510,
    length: 2,
    convRule: rule106
}, {
    start: 8512,
    length: 5,
    convRule: rule6
}, {
    start: 8517,
    length: 1,
    convRule: rule106
}, {
    start: 8518,
    length: 4,
    convRule: rule14
}, {
    start: 8522,
    length: 1,
    convRule: rule13
}, {
    start: 8523,
    length: 1,
    convRule: rule6
}, {
    start: 8524,
    length: 2,
    convRule: rule13
}, {
    start: 8526,
    length: 1,
    convRule: rule194
}, {
    start: 8527,
    length: 1,
    convRule: rule13
}, {
    start: 8528,
    length: 16,
    convRule: rule17
}, {
    start: 8544,
    length: 16,
    convRule: rule195
}, {
    start: 8560,
    length: 16,
    convRule: rule196
}, {
    start: 8576,
    length: 3,
    convRule: rule163
}, {
    start: 8579,
    length: 1,
    convRule: rule21
}, {
    start: 8580,
    length: 1,
    convRule: rule22
}, {
    start: 8581,
    length: 4,
    convRule: rule163
}, {
    start: 8585,
    length: 1,
    convRule: rule17
}, {
    start: 8592,
    length: 5,
    convRule: rule6
}, {
    start: 8597,
    length: 5,
    convRule: rule13
}, {
    start: 8602,
    length: 2,
    convRule: rule6
}, {
    start: 8604,
    length: 4,
    convRule: rule13
}, {
    start: 8608,
    length: 1,
    convRule: rule6
}, {
    start: 8609,
    length: 2,
    convRule: rule13
}, {
    start: 8611,
    length: 1,
    convRule: rule6
}, {
    start: 8612,
    length: 2,
    convRule: rule13
}, {
    start: 8614,
    length: 1,
    convRule: rule6
}, {
    start: 8615,
    length: 7,
    convRule: rule13
}, {
    start: 8622,
    length: 1,
    convRule: rule6
}, {
    start: 8623,
    length: 31,
    convRule: rule13
}, {
    start: 8654,
    length: 2,
    convRule: rule6
}, {
    start: 8656,
    length: 2,
    convRule: rule13
}, {
    start: 8658,
    length: 1,
    convRule: rule6
}, {
    start: 8659,
    length: 1,
    convRule: rule13
}, {
    start: 8660,
    length: 1,
    convRule: rule6
}, {
    start: 8661,
    length: 31,
    convRule: rule13
}, {
    start: 8692,
    length: 268,
    convRule: rule6
}, {
    start: 8960,
    length: 8,
    convRule: rule13
}, {
    start: 8968,
    length: 4,
    convRule: rule6
}, {
    start: 8972,
    length: 20,
    convRule: rule13
}, {
    start: 8992,
    length: 2,
    convRule: rule6
}, {
    start: 8994,
    length: 7,
    convRule: rule13
}, {
    start: 9001,
    length: 1,
    convRule: rule4
}, {
    start: 9002,
    length: 1,
    convRule: rule5
}, {
    start: 9003,
    length: 81,
    convRule: rule13
}, {
    start: 9084,
    length: 1,
    convRule: rule6
}, {
    start: 9085,
    length: 30,
    convRule: rule13
}, {
    start: 9115,
    length: 25,
    convRule: rule6
}, {
    start: 9140,
    length: 40,
    convRule: rule13
}, {
    start: 9180,
    length: 6,
    convRule: rule6
}, {
    start: 9186,
    length: 18,
    convRule: rule13
}, {
    start: 9216,
    length: 39,
    convRule: rule13
}, {
    start: 9280,
    length: 11,
    convRule: rule13
}, {
    start: 9312,
    length: 60,
    convRule: rule17
}, {
    start: 9372,
    length: 26,
    convRule: rule13
}, {
    start: 9398,
    length: 26,
    convRule: rule197
}, {
    start: 9424,
    length: 26,
    convRule: rule198
}, {
    start: 9450,
    length: 22,
    convRule: rule17
}, {
    start: 9472,
    length: 183,
    convRule: rule13
}, {
    start: 9655,
    length: 1,
    convRule: rule6
}, {
    start: 9656,
    length: 9,
    convRule: rule13
}, {
    start: 9665,
    length: 1,
    convRule: rule6
}, {
    start: 9666,
    length: 54,
    convRule: rule13
}, {
    start: 9720,
    length: 8,
    convRule: rule6
}, {
    start: 9728,
    length: 111,
    convRule: rule13
}, {
    start: 9839,
    length: 1,
    convRule: rule6
}, {
    start: 9840,
    length: 144,
    convRule: rule13
}, {
    start: 9985,
    length: 103,
    convRule: rule13
}, {
    start: 10088,
    length: 1,
    convRule: rule4
}, {
    start: 10089,
    length: 1,
    convRule: rule5
}, {
    start: 10090,
    length: 1,
    convRule: rule4
}, {
    start: 10091,
    length: 1,
    convRule: rule5
}, {
    start: 10092,
    length: 1,
    convRule: rule4
}, {
    start: 10093,
    length: 1,
    convRule: rule5
}, {
    start: 10094,
    length: 1,
    convRule: rule4
}, {
    start: 10095,
    length: 1,
    convRule: rule5
}, {
    start: 10096,
    length: 1,
    convRule: rule4
}, {
    start: 10097,
    length: 1,
    convRule: rule5
}, {
    start: 10098,
    length: 1,
    convRule: rule4
}, {
    start: 10099,
    length: 1,
    convRule: rule5
}, {
    start: 10100,
    length: 1,
    convRule: rule4
}, {
    start: 10101,
    length: 1,
    convRule: rule5
}, {
    start: 10102,
    length: 30,
    convRule: rule17
}, {
    start: 10132,
    length: 44,
    convRule: rule13
}, {
    start: 10176,
    length: 5,
    convRule: rule6
}, {
    start: 10181,
    length: 1,
    convRule: rule4
}, {
    start: 10182,
    length: 1,
    convRule: rule5
}, {
    start: 10183,
    length: 4,
    convRule: rule6
}, {
    start: 10188,
    length: 1,
    convRule: rule6
}, {
    start: 10190,
    length: 24,
    convRule: rule6
}, {
    start: 10214,
    length: 1,
    convRule: rule4
}, {
    start: 10215,
    length: 1,
    convRule: rule5
}, {
    start: 10216,
    length: 1,
    convRule: rule4
}, {
    start: 10217,
    length: 1,
    convRule: rule5
}, {
    start: 10218,
    length: 1,
    convRule: rule4
}, {
    start: 10219,
    length: 1,
    convRule: rule5
}, {
    start: 10220,
    length: 1,
    convRule: rule4
}, {
    start: 10221,
    length: 1,
    convRule: rule5
}, {
    start: 10222,
    length: 1,
    convRule: rule4
}, {
    start: 10223,
    length: 1,
    convRule: rule5
}, {
    start: 10224,
    length: 16,
    convRule: rule6
}, {
    start: 10240,
    length: 256,
    convRule: rule13
}, {
    start: 10496,
    length: 131,
    convRule: rule6
}, {
    start: 10627,
    length: 1,
    convRule: rule4
}, {
    start: 10628,
    length: 1,
    convRule: rule5
}, {
    start: 10629,
    length: 1,
    convRule: rule4
}, {
    start: 10630,
    length: 1,
    convRule: rule5
}, {
    start: 10631,
    length: 1,
    convRule: rule4
}, {
    start: 10632,
    length: 1,
    convRule: rule5
}, {
    start: 10633,
    length: 1,
    convRule: rule4
}, {
    start: 10634,
    length: 1,
    convRule: rule5
}, {
    start: 10635,
    length: 1,
    convRule: rule4
}, {
    start: 10636,
    length: 1,
    convRule: rule5
}, {
    start: 10637,
    length: 1,
    convRule: rule4
}, {
    start: 10638,
    length: 1,
    convRule: rule5
}, {
    start: 10639,
    length: 1,
    convRule: rule4
}, {
    start: 10640,
    length: 1,
    convRule: rule5
}, {
    start: 10641,
    length: 1,
    convRule: rule4
}, {
    start: 10642,
    length: 1,
    convRule: rule5
}, {
    start: 10643,
    length: 1,
    convRule: rule4
}, {
    start: 10644,
    length: 1,
    convRule: rule5
}, {
    start: 10645,
    length: 1,
    convRule: rule4
}, {
    start: 10646,
    length: 1,
    convRule: rule5
}, {
    start: 10647,
    length: 1,
    convRule: rule4
}, {
    start: 10648,
    length: 1,
    convRule: rule5
}, {
    start: 10649,
    length: 63,
    convRule: rule6
}, {
    start: 10712,
    length: 1,
    convRule: rule4
}, {
    start: 10713,
    length: 1,
    convRule: rule5
}, {
    start: 10714,
    length: 1,
    convRule: rule4
}, {
    start: 10715,
    length: 1,
    convRule: rule5
}, {
    start: 10716,
    length: 32,
    convRule: rule6
}, {
    start: 10748,
    length: 1,
    convRule: rule4
}, {
    start: 10749,
    length: 1,
    convRule: rule5
}, {
    start: 10750,
    length: 258,
    convRule: rule6
}, {
    start: 11008,
    length: 48,
    convRule: rule13
}, {
    start: 11056,
    length: 21,
    convRule: rule6
}, {
    start: 11077,
    length: 2,
    convRule: rule13
}, {
    start: 11079,
    length: 6,
    convRule: rule6
}, {
    start: 11088,
    length: 10,
    convRule: rule13
}, {
    start: 11264,
    length: 47,
    convRule: rule120
}, {
    start: 11312,
    length: 47,
    convRule: rule121
}, {
    start: 11360,
    length: 1,
    convRule: rule21
}, {
    start: 11361,
    length: 1,
    convRule: rule22
}, {
    start: 11362,
    length: 1,
    convRule: rule199
}, {
    start: 11363,
    length: 1,
    convRule: rule200
}, {
    start: 11364,
    length: 1,
    convRule: rule201
}, {
    start: 11365,
    length: 1,
    convRule: rule202
}, {
    start: 11366,
    length: 1,
    convRule: rule203
}, {
    start: 11367,
    length: 1,
    convRule: rule21
}, {
    start: 11368,
    length: 1,
    convRule: rule22
}, {
    start: 11369,
    length: 1,
    convRule: rule21
}, {
    start: 11370,
    length: 1,
    convRule: rule22
}, {
    start: 11371,
    length: 1,
    convRule: rule21
}, {
    start: 11372,
    length: 1,
    convRule: rule22
}, {
    start: 11373,
    length: 1,
    convRule: rule204
}, {
    start: 11374,
    length: 1,
    convRule: rule205
}, {
    start: 11375,
    length: 1,
    convRule: rule206
}, {
    start: 11376,
    length: 1,
    convRule: rule207
}, {
    start: 11377,
    length: 1,
    convRule: rule14
}, {
    start: 11378,
    length: 1,
    convRule: rule21
}, {
    start: 11379,
    length: 1,
    convRule: rule22
}, {
    start: 11380,
    length: 1,
    convRule: rule14
}, {
    start: 11381,
    length: 1,
    convRule: rule21
}, {
    start: 11382,
    length: 1,
    convRule: rule22
}, {
    start: 11383,
    length: 6,
    convRule: rule14
}, {
    start: 11389,
    length: 1,
    convRule: rule83
}, {
    start: 11390,
    length: 2,
    convRule: rule208
}, {
    start: 11392,
    length: 1,
    convRule: rule21
}, {
    start: 11393,
    length: 1,
    convRule: rule22
}, {
    start: 11394,
    length: 1,
    convRule: rule21
}, {
    start: 11395,
    length: 1,
    convRule: rule22
}, {
    start: 11396,
    length: 1,
    convRule: rule21
}, {
    start: 11397,
    length: 1,
    convRule: rule22
}, {
    start: 11398,
    length: 1,
    convRule: rule21
}, {
    start: 11399,
    length: 1,
    convRule: rule22
}, {
    start: 11400,
    length: 1,
    convRule: rule21
}, {
    start: 11401,
    length: 1,
    convRule: rule22
}, {
    start: 11402,
    length: 1,
    convRule: rule21
}, {
    start: 11403,
    length: 1,
    convRule: rule22
}, {
    start: 11404,
    length: 1,
    convRule: rule21
}, {
    start: 11405,
    length: 1,
    convRule: rule22
}, {
    start: 11406,
    length: 1,
    convRule: rule21
}, {
    start: 11407,
    length: 1,
    convRule: rule22
}, {
    start: 11408,
    length: 1,
    convRule: rule21
}, {
    start: 11409,
    length: 1,
    convRule: rule22
}, {
    start: 11410,
    length: 1,
    convRule: rule21
}, {
    start: 11411,
    length: 1,
    convRule: rule22
}, {
    start: 11412,
    length: 1,
    convRule: rule21
}, {
    start: 11413,
    length: 1,
    convRule: rule22
}, {
    start: 11414,
    length: 1,
    convRule: rule21
}, {
    start: 11415,
    length: 1,
    convRule: rule22
}, {
    start: 11416,
    length: 1,
    convRule: rule21
}, {
    start: 11417,
    length: 1,
    convRule: rule22
}, {
    start: 11418,
    length: 1,
    convRule: rule21
}, {
    start: 11419,
    length: 1,
    convRule: rule22
}, {
    start: 11420,
    length: 1,
    convRule: rule21
}, {
    start: 11421,
    length: 1,
    convRule: rule22
}, {
    start: 11422,
    length: 1,
    convRule: rule21
}, {
    start: 11423,
    length: 1,
    convRule: rule22
}, {
    start: 11424,
    length: 1,
    convRule: rule21
}, {
    start: 11425,
    length: 1,
    convRule: rule22
}, {
    start: 11426,
    length: 1,
    convRule: rule21
}, {
    start: 11427,
    length: 1,
    convRule: rule22
}, {
    start: 11428,
    length: 1,
    convRule: rule21
}, {
    start: 11429,
    length: 1,
    convRule: rule22
}, {
    start: 11430,
    length: 1,
    convRule: rule21
}, {
    start: 11431,
    length: 1,
    convRule: rule22
}, {
    start: 11432,
    length: 1,
    convRule: rule21
}, {
    start: 11433,
    length: 1,
    convRule: rule22
}, {
    start: 11434,
    length: 1,
    convRule: rule21
}, {
    start: 11435,
    length: 1,
    convRule: rule22
}, {
    start: 11436,
    length: 1,
    convRule: rule21
}, {
    start: 11437,
    length: 1,
    convRule: rule22
}, {
    start: 11438,
    length: 1,
    convRule: rule21
}, {
    start: 11439,
    length: 1,
    convRule: rule22
}, {
    start: 11440,
    length: 1,
    convRule: rule21
}, {
    start: 11441,
    length: 1,
    convRule: rule22
}, {
    start: 11442,
    length: 1,
    convRule: rule21
}, {
    start: 11443,
    length: 1,
    convRule: rule22
}, {
    start: 11444,
    length: 1,
    convRule: rule21
}, {
    start: 11445,
    length: 1,
    convRule: rule22
}, {
    start: 11446,
    length: 1,
    convRule: rule21
}, {
    start: 11447,
    length: 1,
    convRule: rule22
}, {
    start: 11448,
    length: 1,
    convRule: rule21
}, {
    start: 11449,
    length: 1,
    convRule: rule22
}, {
    start: 11450,
    length: 1,
    convRule: rule21
}, {
    start: 11451,
    length: 1,
    convRule: rule22
}, {
    start: 11452,
    length: 1,
    convRule: rule21
}, {
    start: 11453,
    length: 1,
    convRule: rule22
}, {
    start: 11454,
    length: 1,
    convRule: rule21
}, {
    start: 11455,
    length: 1,
    convRule: rule22
}, {
    start: 11456,
    length: 1,
    convRule: rule21
}, {
    start: 11457,
    length: 1,
    convRule: rule22
}, {
    start: 11458,
    length: 1,
    convRule: rule21
}, {
    start: 11459,
    length: 1,
    convRule: rule22
}, {
    start: 11460,
    length: 1,
    convRule: rule21
}, {
    start: 11461,
    length: 1,
    convRule: rule22
}, {
    start: 11462,
    length: 1,
    convRule: rule21
}, {
    start: 11463,
    length: 1,
    convRule: rule22
}, {
    start: 11464,
    length: 1,
    convRule: rule21
}, {
    start: 11465,
    length: 1,
    convRule: rule22
}, {
    start: 11466,
    length: 1,
    convRule: rule21
}, {
    start: 11467,
    length: 1,
    convRule: rule22
}, {
    start: 11468,
    length: 1,
    convRule: rule21
}, {
    start: 11469,
    length: 1,
    convRule: rule22
}, {
    start: 11470,
    length: 1,
    convRule: rule21
}, {
    start: 11471,
    length: 1,
    convRule: rule22
}, {
    start: 11472,
    length: 1,
    convRule: rule21
}, {
    start: 11473,
    length: 1,
    convRule: rule22
}, {
    start: 11474,
    length: 1,
    convRule: rule21
}, {
    start: 11475,
    length: 1,
    convRule: rule22
}, {
    start: 11476,
    length: 1,
    convRule: rule21
}, {
    start: 11477,
    length: 1,
    convRule: rule22
}, {
    start: 11478,
    length: 1,
    convRule: rule21
}, {
    start: 11479,
    length: 1,
    convRule: rule22
}, {
    start: 11480,
    length: 1,
    convRule: rule21
}, {
    start: 11481,
    length: 1,
    convRule: rule22
}, {
    start: 11482,
    length: 1,
    convRule: rule21
}, {
    start: 11483,
    length: 1,
    convRule: rule22
}, {
    start: 11484,
    length: 1,
    convRule: rule21
}, {
    start: 11485,
    length: 1,
    convRule: rule22
}, {
    start: 11486,
    length: 1,
    convRule: rule21
}, {
    start: 11487,
    length: 1,
    convRule: rule22
}, {
    start: 11488,
    length: 1,
    convRule: rule21
}, {
    start: 11489,
    length: 1,
    convRule: rule22
}, {
    start: 11490,
    length: 1,
    convRule: rule21
}, {
    start: 11491,
    length: 1,
    convRule: rule22
}, {
    start: 11492,
    length: 1,
    convRule: rule14
}, {
    start: 11493,
    length: 6,
    convRule: rule13
}, {
    start: 11499,
    length: 1,
    convRule: rule21
}, {
    start: 11500,
    length: 1,
    convRule: rule22
}, {
    start: 11501,
    length: 1,
    convRule: rule21
}, {
    start: 11502,
    length: 1,
    convRule: rule22
}, {
    start: 11503,
    length: 3,
    convRule: rule84
}, {
    start: 11513,
    length: 4,
    convRule: rule2
}, {
    start: 11517,
    length: 1,
    convRule: rule17
}, {
    start: 11518,
    length: 2,
    convRule: rule2
}, {
    start: 11520,
    length: 38,
    convRule: rule209
}, {
    start: 11568,
    length: 54,
    convRule: rule45
}, {
    start: 11631,
    length: 1,
    convRule: rule83
}, {
    start: 11632,
    length: 1,
    convRule: rule2
}, {
    start: 11647,
    length: 1,
    convRule: rule152
}, {
    start: 11648,
    length: 23,
    convRule: rule45
}, {
    start: 11680,
    length: 7,
    convRule: rule45
}, {
    start: 11688,
    length: 7,
    convRule: rule45
}, {
    start: 11696,
    length: 7,
    convRule: rule45
}, {
    start: 11704,
    length: 7,
    convRule: rule45
}, {
    start: 11712,
    length: 7,
    convRule: rule45
}, {
    start: 11720,
    length: 7,
    convRule: rule45
}, {
    start: 11728,
    length: 7,
    convRule: rule45
}, {
    start: 11736,
    length: 7,
    convRule: rule45
}, {
    start: 11744,
    length: 32,
    convRule: rule84
}, {
    start: 11776,
    length: 2,
    convRule: rule2
}, {
    start: 11778,
    length: 1,
    convRule: rule15
}, {
    start: 11779,
    length: 1,
    convRule: rule19
}, {
    start: 11780,
    length: 1,
    convRule: rule15
}, {
    start: 11781,
    length: 1,
    convRule: rule19
}, {
    start: 11782,
    length: 3,
    convRule: rule2
}, {
    start: 11785,
    length: 1,
    convRule: rule15
}, {
    start: 11786,
    length: 1,
    convRule: rule19
}, {
    start: 11787,
    length: 1,
    convRule: rule2
}, {
    start: 11788,
    length: 1,
    convRule: rule15
}, {
    start: 11789,
    length: 1,
    convRule: rule19
}, {
    start: 11790,
    length: 9,
    convRule: rule2
}, {
    start: 11799,
    length: 1,
    convRule: rule7
}, {
    start: 11800,
    length: 2,
    convRule: rule2
}, {
    start: 11802,
    length: 1,
    convRule: rule7
}, {
    start: 11803,
    length: 1,
    convRule: rule2
}, {
    start: 11804,
    length: 1,
    convRule: rule15
}, {
    start: 11805,
    length: 1,
    convRule: rule19
}, {
    start: 11806,
    length: 2,
    convRule: rule2
}, {
    start: 11808,
    length: 1,
    convRule: rule15
}, {
    start: 11809,
    length: 1,
    convRule: rule19
}, {
    start: 11810,
    length: 1,
    convRule: rule4
}, {
    start: 11811,
    length: 1,
    convRule: rule5
}, {
    start: 11812,
    length: 1,
    convRule: rule4
}, {
    start: 11813,
    length: 1,
    convRule: rule5
}, {
    start: 11814,
    length: 1,
    convRule: rule4
}, {
    start: 11815,
    length: 1,
    convRule: rule5
}, {
    start: 11816,
    length: 1,
    convRule: rule4
}, {
    start: 11817,
    length: 1,
    convRule: rule5
}, {
    start: 11818,
    length: 5,
    convRule: rule2
}, {
    start: 11823,
    length: 1,
    convRule: rule83
}, {
    start: 11824,
    length: 2,
    convRule: rule2
}, {
    start: 11904,
    length: 26,
    convRule: rule13
}, {
    start: 11931,
    length: 89,
    convRule: rule13
}, {
    start: 12032,
    length: 214,
    convRule: rule13
}, {
    start: 12272,
    length: 12,
    convRule: rule13
}, {
    start: 12288,
    length: 1,
    convRule: rule1
}, {
    start: 12289,
    length: 3,
    convRule: rule2
}, {
    start: 12292,
    length: 1,
    convRule: rule13
}, {
    start: 12293,
    length: 1,
    convRule: rule83
}, {
    start: 12294,
    length: 1,
    convRule: rule45
}, {
    start: 12295,
    length: 1,
    convRule: rule163
}, {
    start: 12296,
    length: 1,
    convRule: rule4
}, {
    start: 12297,
    length: 1,
    convRule: rule5
}, {
    start: 12298,
    length: 1,
    convRule: rule4
}, {
    start: 12299,
    length: 1,
    convRule: rule5
}, {
    start: 12300,
    length: 1,
    convRule: rule4
}, {
    start: 12301,
    length: 1,
    convRule: rule5
}, {
    start: 12302,
    length: 1,
    convRule: rule4
}, {
    start: 12303,
    length: 1,
    convRule: rule5
}, {
    start: 12304,
    length: 1,
    convRule: rule4
}, {
    start: 12305,
    length: 1,
    convRule: rule5
}, {
    start: 12306,
    length: 2,
    convRule: rule13
}, {
    start: 12308,
    length: 1,
    convRule: rule4
}, {
    start: 12309,
    length: 1,
    convRule: rule5
}, {
    start: 12310,
    length: 1,
    convRule: rule4
}, {
    start: 12311,
    length: 1,
    convRule: rule5
}, {
    start: 12312,
    length: 1,
    convRule: rule4
}, {
    start: 12313,
    length: 1,
    convRule: rule5
}, {
    start: 12314,
    length: 1,
    convRule: rule4
}, {
    start: 12315,
    length: 1,
    convRule: rule5
}, {
    start: 12316,
    length: 1,
    convRule: rule7
}, {
    start: 12317,
    length: 1,
    convRule: rule4
}, {
    start: 12318,
    length: 2,
    convRule: rule5
}, {
    start: 12320,
    length: 1,
    convRule: rule13
}, {
    start: 12321,
    length: 9,
    convRule: rule163
}, {
    start: 12330,
    length: 1,
    convRule: rule210
}, {
    start: 12331,
    length: 1,
    convRule: rule123
}, {
    start: 12332,
    length: 1,
    convRule: rule85
}, {
    start: 12333,
    length: 1,
    convRule: rule122
}, {
    start: 12334,
    length: 2,
    convRule: rule211
}, {
    start: 12336,
    length: 1,
    convRule: rule7
}, {
    start: 12337,
    length: 5,
    convRule: rule83
}, {
    start: 12342,
    length: 2,
    convRule: rule13
}, {
    start: 12344,
    length: 3,
    convRule: rule163
}, {
    start: 12347,
    length: 1,
    convRule: rule83
}, {
    start: 12348,
    length: 1,
    convRule: rule45
}, {
    start: 12349,
    length: 1,
    convRule: rule2
}, {
    start: 12350,
    length: 2,
    convRule: rule13
}, {
    start: 12353,
    length: 86,
    convRule: rule45
}, {
    start: 12441,
    length: 2,
    convRule: rule212
}, {
    start: 12443,
    length: 2,
    convRule: rule10
}, {
    start: 12445,
    length: 2,
    convRule: rule83
}, {
    start: 12447,
    length: 1,
    convRule: rule45
}, {
    start: 12448,
    length: 1,
    convRule: rule7
}, {
    start: 12449,
    length: 90,
    convRule: rule45
}, {
    start: 12539,
    length: 1,
    convRule: rule2
}, {
    start: 12540,
    length: 3,
    convRule: rule83
}, {
    start: 12543,
    length: 1,
    convRule: rule45
}, {
    start: 12549,
    length: 41,
    convRule: rule45
}, {
    start: 12593,
    length: 94,
    convRule: rule45
}, {
    start: 12688,
    length: 2,
    convRule: rule13
}, {
    start: 12690,
    length: 4,
    convRule: rule17
}, {
    start: 12694,
    length: 10,
    convRule: rule13
}, {
    start: 12704,
    length: 27,
    convRule: rule45
}, {
    start: 12736,
    length: 36,
    convRule: rule13
}, {
    start: 12784,
    length: 16,
    convRule: rule45
}, {
    start: 12800,
    length: 31,
    convRule: rule13
}, {
    start: 12832,
    length: 10,
    convRule: rule17
}, {
    start: 12842,
    length: 39,
    convRule: rule13
}, {
    start: 12881,
    length: 15,
    convRule: rule17
}, {
    start: 12896,
    length: 32,
    convRule: rule13
}, {
    start: 12928,
    length: 10,
    convRule: rule17
}, {
    start: 12938,
    length: 39,
    convRule: rule13
}, {
    start: 12977,
    length: 15,
    convRule: rule17
}, {
    start: 12992,
    length: 63,
    convRule: rule13
}, {
    start: 13056,
    length: 256,
    convRule: rule13
}, {
    start: 13312,
    length: 6582,
    convRule: rule45
}, {
    start: 19904,
    length: 64,
    convRule: rule13
}, {
    start: 19968,
    length: 20940,
    convRule: rule45
}, {
    start: 40960,
    length: 21,
    convRule: rule45
}, {
    start: 40981,
    length: 1,
    convRule: rule83
}, {
    start: 40982,
    length: 1143,
    convRule: rule45
}, {
    start: 42128,
    length: 55,
    convRule: rule13
}, {
    start: 42192,
    length: 40,
    convRule: rule45
}, {
    start: 42232,
    length: 6,
    convRule: rule83
}, {
    start: 42238,
    length: 2,
    convRule: rule2
}, {
    start: 42240,
    length: 268,
    convRule: rule45
}, {
    start: 42508,
    length: 1,
    convRule: rule83
}, {
    start: 42509,
    length: 3,
    convRule: rule2
}, {
    start: 42512,
    length: 16,
    convRule: rule45
}, {
    start: 42528,
    length: 10,
    convRule: rule8
}, {
    start: 42538,
    length: 2,
    convRule: rule45
}, {
    start: 42560,
    length: 1,
    convRule: rule21
}, {
    start: 42561,
    length: 1,
    convRule: rule22
}, {
    start: 42562,
    length: 1,
    convRule: rule21
}, {
    start: 42563,
    length: 1,
    convRule: rule22
}, {
    start: 42564,
    length: 1,
    convRule: rule21
}, {
    start: 42565,
    length: 1,
    convRule: rule22
}, {
    start: 42566,
    length: 1,
    convRule: rule21
}, {
    start: 42567,
    length: 1,
    convRule: rule22
}, {
    start: 42568,
    length: 1,
    convRule: rule21
}, {
    start: 42569,
    length: 1,
    convRule: rule22
}, {
    start: 42570,
    length: 1,
    convRule: rule21
}, {
    start: 42571,
    length: 1,
    convRule: rule22
}, {
    start: 42572,
    length: 1,
    convRule: rule21
}, {
    start: 42573,
    length: 1,
    convRule: rule22
}, {
    start: 42574,
    length: 1,
    convRule: rule21
}, {
    start: 42575,
    length: 1,
    convRule: rule22
}, {
    start: 42576,
    length: 1,
    convRule: rule21
}, {
    start: 42577,
    length: 1,
    convRule: rule22
}, {
    start: 42578,
    length: 1,
    convRule: rule21
}, {
    start: 42579,
    length: 1,
    convRule: rule22
}, {
    start: 42580,
    length: 1,
    convRule: rule21
}, {
    start: 42581,
    length: 1,
    convRule: rule22
}, {
    start: 42582,
    length: 1,
    convRule: rule21
}, {
    start: 42583,
    length: 1,
    convRule: rule22
}, {
    start: 42584,
    length: 1,
    convRule: rule21
}, {
    start: 42585,
    length: 1,
    convRule: rule22
}, {
    start: 42586,
    length: 1,
    convRule: rule21
}, {
    start: 42587,
    length: 1,
    convRule: rule22
}, {
    start: 42588,
    length: 1,
    convRule: rule21
}, {
    start: 42589,
    length: 1,
    convRule: rule22
}, {
    start: 42590,
    length: 1,
    convRule: rule21
}, {
    start: 42591,
    length: 1,
    convRule: rule22
}, {
    start: 42592,
    length: 1,
    convRule: rule21
}, {
    start: 42593,
    length: 1,
    convRule: rule22
}, {
    start: 42594,
    length: 1,
    convRule: rule21
}, {
    start: 42595,
    length: 1,
    convRule: rule22
}, {
    start: 42596,
    length: 1,
    convRule: rule21
}, {
    start: 42597,
    length: 1,
    convRule: rule22
}, {
    start: 42598,
    length: 1,
    convRule: rule21
}, {
    start: 42599,
    length: 1,
    convRule: rule22
}, {
    start: 42600,
    length: 1,
    convRule: rule21
}, {
    start: 42601,
    length: 1,
    convRule: rule22
}, {
    start: 42602,
    length: 1,
    convRule: rule21
}, {
    start: 42603,
    length: 1,
    convRule: rule22
}, {
    start: 42604,
    length: 1,
    convRule: rule21
}, {
    start: 42605,
    length: 1,
    convRule: rule22
}, {
    start: 42606,
    length: 1,
    convRule: rule45
}, {
    start: 42607,
    length: 1,
    convRule: rule84
}, {
    start: 42608,
    length: 3,
    convRule: rule117
}, {
    start: 42611,
    length: 1,
    convRule: rule2
}, {
    start: 42620,
    length: 2,
    convRule: rule84
}, {
    start: 42622,
    length: 1,
    convRule: rule2
}, {
    start: 42623,
    length: 1,
    convRule: rule83
}, {
    start: 42624,
    length: 1,
    convRule: rule21
}, {
    start: 42625,
    length: 1,
    convRule: rule22
}, {
    start: 42626,
    length: 1,
    convRule: rule21
}, {
    start: 42627,
    length: 1,
    convRule: rule22
}, {
    start: 42628,
    length: 1,
    convRule: rule21
}, {
    start: 42629,
    length: 1,
    convRule: rule22
}, {
    start: 42630,
    length: 1,
    convRule: rule21
}, {
    start: 42631,
    length: 1,
    convRule: rule22
}, {
    start: 42632,
    length: 1,
    convRule: rule21
}, {
    start: 42633,
    length: 1,
    convRule: rule22
}, {
    start: 42634,
    length: 1,
    convRule: rule21
}, {
    start: 42635,
    length: 1,
    convRule: rule22
}, {
    start: 42636,
    length: 1,
    convRule: rule21
}, {
    start: 42637,
    length: 1,
    convRule: rule22
}, {
    start: 42638,
    length: 1,
    convRule: rule21
}, {
    start: 42639,
    length: 1,
    convRule: rule22
}, {
    start: 42640,
    length: 1,
    convRule: rule21
}, {
    start: 42641,
    length: 1,
    convRule: rule22
}, {
    start: 42642,
    length: 1,
    convRule: rule21
}, {
    start: 42643,
    length: 1,
    convRule: rule22
}, {
    start: 42644,
    length: 1,
    convRule: rule21
}, {
    start: 42645,
    length: 1,
    convRule: rule22
}, {
    start: 42646,
    length: 1,
    convRule: rule21
}, {
    start: 42647,
    length: 1,
    convRule: rule22
}, {
    start: 42656,
    length: 70,
    convRule: rule45
}, {
    start: 42726,
    length: 10,
    convRule: rule163
}, {
    start: 42736,
    length: 2,
    convRule: rule84
}, {
    start: 42738,
    length: 6,
    convRule: rule2
}, {
    start: 42752,
    length: 23,
    convRule: rule10
}, {
    start: 42775,
    length: 9,
    convRule: rule83
}, {
    start: 42784,
    length: 2,
    convRule: rule10
}, {
    start: 42786,
    length: 1,
    convRule: rule21
}, {
    start: 42787,
    length: 1,
    convRule: rule22
}, {
    start: 42788,
    length: 1,
    convRule: rule21
}, {
    start: 42789,
    length: 1,
    convRule: rule22
}, {
    start: 42790,
    length: 1,
    convRule: rule21
}, {
    start: 42791,
    length: 1,
    convRule: rule22
}, {
    start: 42792,
    length: 1,
    convRule: rule21
}, {
    start: 42793,
    length: 1,
    convRule: rule22
}, {
    start: 42794,
    length: 1,
    convRule: rule21
}, {
    start: 42795,
    length: 1,
    convRule: rule22
}, {
    start: 42796,
    length: 1,
    convRule: rule21
}, {
    start: 42797,
    length: 1,
    convRule: rule22
}, {
    start: 42798,
    length: 1,
    convRule: rule21
}, {
    start: 42799,
    length: 1,
    convRule: rule22
}, {
    start: 42800,
    length: 2,
    convRule: rule14
}, {
    start: 42802,
    length: 1,
    convRule: rule21
}, {
    start: 42803,
    length: 1,
    convRule: rule22
}, {
    start: 42804,
    length: 1,
    convRule: rule21
}, {
    start: 42805,
    length: 1,
    convRule: rule22
}, {
    start: 42806,
    length: 1,
    convRule: rule21
}, {
    start: 42807,
    length: 1,
    convRule: rule22
}, {
    start: 42808,
    length: 1,
    convRule: rule21
}, {
    start: 42809,
    length: 1,
    convRule: rule22
}, {
    start: 42810,
    length: 1,
    convRule: rule21
}, {
    start: 42811,
    length: 1,
    convRule: rule22
}, {
    start: 42812,
    length: 1,
    convRule: rule21
}, {
    start: 42813,
    length: 1,
    convRule: rule22
}, {
    start: 42814,
    length: 1,
    convRule: rule21
}, {
    start: 42815,
    length: 1,
    convRule: rule22
}, {
    start: 42816,
    length: 1,
    convRule: rule21
}, {
    start: 42817,
    length: 1,
    convRule: rule22
}, {
    start: 42818,
    length: 1,
    convRule: rule21
}, {
    start: 42819,
    length: 1,
    convRule: rule22
}, {
    start: 42820,
    length: 1,
    convRule: rule21
}, {
    start: 42821,
    length: 1,
    convRule: rule22
}, {
    start: 42822,
    length: 1,
    convRule: rule21
}, {
    start: 42823,
    length: 1,
    convRule: rule22
}, {
    start: 42824,
    length: 1,
    convRule: rule21
}, {
    start: 42825,
    length: 1,
    convRule: rule22
}, {
    start: 42826,
    length: 1,
    convRule: rule21
}, {
    start: 42827,
    length: 1,
    convRule: rule22
}, {
    start: 42828,
    length: 1,
    convRule: rule21
}, {
    start: 42829,
    length: 1,
    convRule: rule22
}, {
    start: 42830,
    length: 1,
    convRule: rule21
}, {
    start: 42831,
    length: 1,
    convRule: rule22
}, {
    start: 42832,
    length: 1,
    convRule: rule21
}, {
    start: 42833,
    length: 1,
    convRule: rule22
}, {
    start: 42834,
    length: 1,
    convRule: rule21
}, {
    start: 42835,
    length: 1,
    convRule: rule22
}, {
    start: 42836,
    length: 1,
    convRule: rule21
}, {
    start: 42837,
    length: 1,
    convRule: rule22
}, {
    start: 42838,
    length: 1,
    convRule: rule21
}, {
    start: 42839,
    length: 1,
    convRule: rule22
}, {
    start: 42840,
    length: 1,
    convRule: rule21
}, {
    start: 42841,
    length: 1,
    convRule: rule22
}, {
    start: 42842,
    length: 1,
    convRule: rule21
}, {
    start: 42843,
    length: 1,
    convRule: rule22
}, {
    start: 42844,
    length: 1,
    convRule: rule21
}, {
    start: 42845,
    length: 1,
    convRule: rule22
}, {
    start: 42846,
    length: 1,
    convRule: rule21
}, {
    start: 42847,
    length: 1,
    convRule: rule22
}, {
    start: 42848,
    length: 1,
    convRule: rule21
}, {
    start: 42849,
    length: 1,
    convRule: rule22
}, {
    start: 42850,
    length: 1,
    convRule: rule21
}, {
    start: 42851,
    length: 1,
    convRule: rule22
}, {
    start: 42852,
    length: 1,
    convRule: rule21
}, {
    start: 42853,
    length: 1,
    convRule: rule22
}, {
    start: 42854,
    length: 1,
    convRule: rule21
}, {
    start: 42855,
    length: 1,
    convRule: rule22
}, {
    start: 42856,
    length: 1,
    convRule: rule21
}, {
    start: 42857,
    length: 1,
    convRule: rule22
}, {
    start: 42858,
    length: 1,
    convRule: rule21
}, {
    start: 42859,
    length: 1,
    convRule: rule22
}, {
    start: 42860,
    length: 1,
    convRule: rule21
}, {
    start: 42861,
    length: 1,
    convRule: rule22
}, {
    start: 42862,
    length: 1,
    convRule: rule21
}, {
    start: 42863,
    length: 1,
    convRule: rule22
}, {
    start: 42864,
    length: 1,
    convRule: rule83
}, {
    start: 42865,
    length: 8,
    convRule: rule14
}, {
    start: 42873,
    length: 1,
    convRule: rule21
}, {
    start: 42874,
    length: 1,
    convRule: rule22
}, {
    start: 42875,
    length: 1,
    convRule: rule21
}, {
    start: 42876,
    length: 1,
    convRule: rule22
}, {
    start: 42877,
    length: 1,
    convRule: rule213
}, {
    start: 42878,
    length: 1,
    convRule: rule21
}, {
    start: 42879,
    length: 1,
    convRule: rule22
}, {
    start: 42880,
    length: 1,
    convRule: rule21
}, {
    start: 42881,
    length: 1,
    convRule: rule22
}, {
    start: 42882,
    length: 1,
    convRule: rule21
}, {
    start: 42883,
    length: 1,
    convRule: rule22
}, {
    start: 42884,
    length: 1,
    convRule: rule21
}, {
    start: 42885,
    length: 1,
    convRule: rule22
}, {
    start: 42886,
    length: 1,
    convRule: rule21
}, {
    start: 42887,
    length: 1,
    convRule: rule22
}, {
    start: 42888,
    length: 1,
    convRule: rule83
}, {
    start: 42889,
    length: 2,
    convRule: rule10
}, {
    start: 42891,
    length: 1,
    convRule: rule21
}, {
    start: 42892,
    length: 1,
    convRule: rule22
}, {
    start: 42893,
    length: 1,
    convRule: rule214
}, {
    start: 42894,
    length: 1,
    convRule: rule14
}, {
    start: 42896,
    length: 1,
    convRule: rule21
}, {
    start: 42897,
    length: 1,
    convRule: rule22
}, {
    start: 42912,
    length: 1,
    convRule: rule21
}, {
    start: 42913,
    length: 1,
    convRule: rule22
}, {
    start: 42914,
    length: 1,
    convRule: rule21
}, {
    start: 42915,
    length: 1,
    convRule: rule22
}, {
    start: 42916,
    length: 1,
    convRule: rule21
}, {
    start: 42917,
    length: 1,
    convRule: rule22
}, {
    start: 42918,
    length: 1,
    convRule: rule21
}, {
    start: 42919,
    length: 1,
    convRule: rule22
}, {
    start: 42920,
    length: 1,
    convRule: rule21
}, {
    start: 42921,
    length: 1,
    convRule: rule22
}, {
    start: 43002,
    length: 1,
    convRule: rule14
}, {
    start: 43003,
    length: 7,
    convRule: rule45
}, {
    start: 43010,
    length: 1,
    convRule: rule91
}, {
    start: 43011,
    length: 3,
    convRule: rule45
}, {
    start: 43014,
    length: 1,
    convRule: rule152
}, {
    start: 43015,
    length: 4,
    convRule: rule45
}, {
    start: 43019,
    length: 1,
    convRule: rule91
}, {
    start: 43020,
    length: 23,
    convRule: rule45
}, {
    start: 43043,
    length: 2,
    convRule: rule150
}, {
    start: 43045,
    length: 2,
    convRule: rule91
}, {
    start: 43047,
    length: 1,
    convRule: rule150
}, {
    start: 43048,
    length: 4,
    convRule: rule13
}, {
    start: 43056,
    length: 6,
    convRule: rule17
}, {
    start: 43062,
    length: 2,
    convRule: rule13
}, {
    start: 43064,
    length: 1,
    convRule: rule3
}, {
    start: 43065,
    length: 1,
    convRule: rule13
}, {
    start: 43072,
    length: 52,
    convRule: rule45
}, {
    start: 43124,
    length: 4,
    convRule: rule2
}, {
    start: 43136,
    length: 2,
    convRule: rule150
}, {
    start: 43138,
    length: 50,
    convRule: rule45
}, {
    start: 43188,
    length: 16,
    convRule: rule150
}, {
    start: 43204,
    length: 1,
    convRule: rule152
}, {
    start: 43214,
    length: 2,
    convRule: rule2
}, {
    start: 43216,
    length: 10,
    convRule: rule8
}, {
    start: 43232,
    length: 18,
    convRule: rule84
}, {
    start: 43250,
    length: 6,
    convRule: rule45
}, {
    start: 43256,
    length: 3,
    convRule: rule2
}, {
    start: 43259,
    length: 1,
    convRule: rule45
}, {
    start: 43264,
    length: 10,
    convRule: rule8
}, {
    start: 43274,
    length: 28,
    convRule: rule45
}, {
    start: 43302,
    length: 5,
    convRule: rule91
}, {
    start: 43307,
    length: 3,
    convRule: rule86
}, {
    start: 43310,
    length: 2,
    convRule: rule2
}, {
    start: 43312,
    length: 23,
    convRule: rule45
}, {
    start: 43335,
    length: 11,
    convRule: rule91
}, {
    start: 43346,
    length: 1,
    convRule: rule150
}, {
    start: 43347,
    length: 1,
    convRule: rule164
}, {
    start: 43359,
    length: 1,
    convRule: rule2
}, {
    start: 43360,
    length: 29,
    convRule: rule45
}, {
    start: 43392,
    length: 3,
    convRule: rule91
}, {
    start: 43395,
    length: 1,
    convRule: rule150
}, {
    start: 43396,
    length: 47,
    convRule: rule45
}, {
    start: 43443,
    length: 1,
    convRule: rule151
}, {
    start: 43444,
    length: 2,
    convRule: rule150
}, {
    start: 43446,
    length: 4,
    convRule: rule91
}, {
    start: 43450,
    length: 2,
    convRule: rule150
}, {
    start: 43452,
    length: 1,
    convRule: rule91
}, {
    start: 43453,
    length: 3,
    convRule: rule150
}, {
    start: 43456,
    length: 1,
    convRule: rule164
}, {
    start: 43457,
    length: 13,
    convRule: rule2
}, {
    start: 43471,
    length: 1,
    convRule: rule83
}, {
    start: 43472,
    length: 10,
    convRule: rule8
}, {
    start: 43486,
    length: 2,
    convRule: rule2
}, {
    start: 43520,
    length: 41,
    convRule: rule45
}, {
    start: 43561,
    length: 6,
    convRule: rule91
}, {
    start: 43567,
    length: 2,
    convRule: rule150
}, {
    start: 43569,
    length: 2,
    convRule: rule91
}, {
    start: 43571,
    length: 2,
    convRule: rule150
}, {
    start: 43573,
    length: 2,
    convRule: rule91
}, {
    start: 43584,
    length: 3,
    convRule: rule45
}, {
    start: 43587,
    length: 1,
    convRule: rule91
}, {
    start: 43588,
    length: 8,
    convRule: rule45
}, {
    start: 43596,
    length: 1,
    convRule: rule91
}, {
    start: 43597,
    length: 1,
    convRule: rule150
}, {
    start: 43600,
    length: 10,
    convRule: rule8
}, {
    start: 43612,
    length: 4,
    convRule: rule2
}, {
    start: 43616,
    length: 16,
    convRule: rule45
}, {
    start: 43632,
    length: 1,
    convRule: rule83
}, {
    start: 43633,
    length: 6,
    convRule: rule45
}, {
    start: 43639,
    length: 3,
    convRule: rule13
}, {
    start: 43642,
    length: 1,
    convRule: rule45
}, {
    start: 43643,
    length: 1,
    convRule: rule150
}, {
    start: 43648,
    length: 48,
    convRule: rule45
}, {
    start: 43696,
    length: 1,
    convRule: rule84
}, {
    start: 43697,
    length: 1,
    convRule: rule45
}, {
    start: 43698,
    length: 2,
    convRule: rule84
}, {
    start: 43700,
    length: 1,
    convRule: rule86
}, {
    start: 43701,
    length: 2,
    convRule: rule45
}, {
    start: 43703,
    length: 2,
    convRule: rule84
}, {
    start: 43705,
    length: 5,
    convRule: rule45
}, {
    start: 43710,
    length: 2,
    convRule: rule84
}, {
    start: 43712,
    length: 1,
    convRule: rule45
}, {
    start: 43713,
    length: 1,
    convRule: rule84
}, {
    start: 43714,
    length: 1,
    convRule: rule45
}, {
    start: 43739,
    length: 2,
    convRule: rule45
}, {
    start: 43741,
    length: 1,
    convRule: rule83
}, {
    start: 43742,
    length: 2,
    convRule: rule2
}, {
    start: 43777,
    length: 6,
    convRule: rule45
}, {
    start: 43785,
    length: 6,
    convRule: rule45
}, {
    start: 43793,
    length: 6,
    convRule: rule45
}, {
    start: 43808,
    length: 7,
    convRule: rule45
}, {
    start: 43816,
    length: 7,
    convRule: rule45
}, {
    start: 43968,
    length: 35,
    convRule: rule45
}, {
    start: 44003,
    length: 2,
    convRule: rule150
}, {
    start: 44005,
    length: 1,
    convRule: rule91
}, {
    start: 44006,
    length: 2,
    convRule: rule150
}, {
    start: 44008,
    length: 1,
    convRule: rule91
}, {
    start: 44009,
    length: 2,
    convRule: rule150
}, {
    start: 44011,
    length: 1,
    convRule: rule2
}, {
    start: 44012,
    length: 1,
    convRule: rule150
}, {
    start: 44013,
    length: 1,
    convRule: rule152
}, {
    start: 44016,
    length: 10,
    convRule: rule8
}, {
    start: 44032,
    length: 11172,
    convRule: rule45
}, {
    start: 55216,
    length: 23,
    convRule: rule45
}, {
    start: 55243,
    length: 49,
    convRule: rule45
}, {
    start: 55296,
    length: 896,
    convRule: rule215
}, {
    start: 56192,
    length: 128,
    convRule: rule215
}, {
    start: 56320,
    length: 1024,
    convRule: rule215
}, {
    start: 57344,
    length: 6400,
    convRule: rule216
}, {
    start: 63744,
    length: 302,
    convRule: rule45
}, {
    start: 64048,
    length: 62,
    convRule: rule45
}, {
    start: 64112,
    length: 106,
    convRule: rule45
}, {
    start: 64256,
    length: 7,
    convRule: rule14
}, {
    start: 64275,
    length: 5,
    convRule: rule14
}, {
    start: 64285,
    length: 1,
    convRule: rule45
}, {
    start: 64286,
    length: 1,
    convRule: rule217
}, {
    start: 64287,
    length: 10,
    convRule: rule45
}, {
    start: 64297,
    length: 1,
    convRule: rule6
}, {
    start: 64298,
    length: 13,
    convRule: rule45
}, {
    start: 64312,
    length: 5,
    convRule: rule45
}, {
    start: 64318,
    length: 1,
    convRule: rule45
}, {
    start: 64320,
    length: 2,
    convRule: rule45
}, {
    start: 64323,
    length: 2,
    convRule: rule45
}, {
    start: 64326,
    length: 108,
    convRule: rule45
}, {
    start: 64434,
    length: 16,
    convRule: rule10
}, {
    start: 64467,
    length: 363,
    convRule: rule45
}, {
    start: 64830,
    length: 1,
    convRule: rule4
}, {
    start: 64831,
    length: 1,
    convRule: rule5
}, {
    start: 64848,
    length: 64,
    convRule: rule45
}, {
    start: 64914,
    length: 54,
    convRule: rule45
}, {
    start: 65008,
    length: 12,
    convRule: rule45
}, {
    start: 65020,
    length: 1,
    convRule: rule3
}, {
    start: 65021,
    length: 1,
    convRule: rule13
}, {
    start: 65024,
    length: 16,
    convRule: rule91
}, {
    start: 65040,
    length: 7,
    convRule: rule2
}, {
    start: 65047,
    length: 1,
    convRule: rule4
}, {
    start: 65048,
    length: 1,
    convRule: rule5
}, {
    start: 65049,
    length: 1,
    convRule: rule2
}, {
    start: 65056,
    length: 7,
    convRule: rule84
}, {
    start: 65072,
    length: 1,
    convRule: rule2
}, {
    start: 65073,
    length: 2,
    convRule: rule7
}, {
    start: 65075,
    length: 2,
    convRule: rule11
}, {
    start: 65077,
    length: 1,
    convRule: rule4
}, {
    start: 65078,
    length: 1,
    convRule: rule5
}, {
    start: 65079,
    length: 1,
    convRule: rule4
}, {
    start: 65080,
    length: 1,
    convRule: rule5
}, {
    start: 65081,
    length: 1,
    convRule: rule4
}, {
    start: 65082,
    length: 1,
    convRule: rule5
}, {
    start: 65083,
    length: 1,
    convRule: rule4
}, {
    start: 65084,
    length: 1,
    convRule: rule5
}, {
    start: 65085,
    length: 1,
    convRule: rule4
}, {
    start: 65086,
    length: 1,
    convRule: rule5
}, {
    start: 65087,
    length: 1,
    convRule: rule4
}, {
    start: 65088,
    length: 1,
    convRule: rule5
}, {
    start: 65089,
    length: 1,
    convRule: rule4
}, {
    start: 65090,
    length: 1,
    convRule: rule5
}, {
    start: 65091,
    length: 1,
    convRule: rule4
}, {
    start: 65092,
    length: 1,
    convRule: rule5
}, {
    start: 65093,
    length: 2,
    convRule: rule2
}, {
    start: 65095,
    length: 1,
    convRule: rule4
}, {
    start: 65096,
    length: 1,
    convRule: rule5
}, {
    start: 65097,
    length: 4,
    convRule: rule2
}, {
    start: 65101,
    length: 3,
    convRule: rule11
}, {
    start: 65104,
    length: 3,
    convRule: rule2
}, {
    start: 65108,
    length: 4,
    convRule: rule2
}, {
    start: 65112,
    length: 1,
    convRule: rule7
}, {
    start: 65113,
    length: 1,
    convRule: rule4
}, {
    start: 65114,
    length: 1,
    convRule: rule5
}, {
    start: 65115,
    length: 1,
    convRule: rule4
}, {
    start: 65116,
    length: 1,
    convRule: rule5
}, {
    start: 65117,
    length: 1,
    convRule: rule4
}, {
    start: 65118,
    length: 1,
    convRule: rule5
}, {
    start: 65119,
    length: 3,
    convRule: rule2
}, {
    start: 65122,
    length: 1,
    convRule: rule6
}, {
    start: 65123,
    length: 1,
    convRule: rule7
}, {
    start: 65124,
    length: 3,
    convRule: rule6
}, {
    start: 65128,
    length: 1,
    convRule: rule2
}, {
    start: 65129,
    length: 1,
    convRule: rule3
}, {
    start: 65130,
    length: 2,
    convRule: rule2
}, {
    start: 65136,
    length: 5,
    convRule: rule45
}, {
    start: 65142,
    length: 135,
    convRule: rule45
}, {
    start: 65279,
    length: 1,
    convRule: rule16
}, {
    start: 65281,
    length: 3,
    convRule: rule2
}, {
    start: 65284,
    length: 1,
    convRule: rule3
}, {
    start: 65285,
    length: 3,
    convRule: rule2
}, {
    start: 65288,
    length: 1,
    convRule: rule4
}, {
    start: 65289,
    length: 1,
    convRule: rule5
}, {
    start: 65290,
    length: 1,
    convRule: rule2
}, {
    start: 65291,
    length: 1,
    convRule: rule6
}, {
    start: 65292,
    length: 1,
    convRule: rule2
}, {
    start: 65293,
    length: 1,
    convRule: rule7
}, {
    start: 65294,
    length: 2,
    convRule: rule2
}, {
    start: 65296,
    length: 10,
    convRule: rule8
}, {
    start: 65306,
    length: 2,
    convRule: rule2
}, {
    start: 65308,
    length: 3,
    convRule: rule6
}, {
    start: 65311,
    length: 2,
    convRule: rule2
}, {
    start: 65313,
    length: 26,
    convRule: rule9
}, {
    start: 65339,
    length: 1,
    convRule: rule4
}, {
    start: 65340,
    length: 1,
    convRule: rule2
}, {
    start: 65341,
    length: 1,
    convRule: rule5
}, {
    start: 65342,
    length: 1,
    convRule: rule10
}, {
    start: 65343,
    length: 1,
    convRule: rule11
}, {
    start: 65344,
    length: 1,
    convRule: rule10
}, {
    start: 65345,
    length: 26,
    convRule: rule12
}, {
    start: 65371,
    length: 1,
    convRule: rule4
}, {
    start: 65372,
    length: 1,
    convRule: rule6
}, {
    start: 65373,
    length: 1,
    convRule: rule5
}, {
    start: 65374,
    length: 1,
    convRule: rule6
}, {
    start: 65375,
    length: 1,
    convRule: rule4
}, {
    start: 65376,
    length: 1,
    convRule: rule5
}, {
    start: 65377,
    length: 1,
    convRule: rule2
}, {
    start: 65378,
    length: 1,
    convRule: rule4
}, {
    start: 65379,
    length: 1,
    convRule: rule5
}, {
    start: 65380,
    length: 2,
    convRule: rule2
}, {
    start: 65382,
    length: 10,
    convRule: rule45
}, {
    start: 65392,
    length: 1,
    convRule: rule83
}, {
    start: 65393,
    length: 45,
    convRule: rule45
}, {
    start: 65438,
    length: 2,
    convRule: rule83
}, {
    start: 65440,
    length: 31,
    convRule: rule45
}, {
    start: 65474,
    length: 6,
    convRule: rule45
}, {
    start: 65482,
    length: 6,
    convRule: rule45
}, {
    start: 65490,
    length: 6,
    convRule: rule45
}, {
    start: 65498,
    length: 3,
    convRule: rule45
}, {
    start: 65504,
    length: 2,
    convRule: rule3
}, {
    start: 65506,
    length: 1,
    convRule: rule6
}, {
    start: 65507,
    length: 1,
    convRule: rule10
}, {
    start: 65508,
    length: 1,
    convRule: rule13
}, {
    start: 65509,
    length: 2,
    convRule: rule3
}, {
    start: 65512,
    length: 1,
    convRule: rule13
}, {
    start: 65513,
    length: 4,
    convRule: rule6
}, {
    start: 65517,
    length: 2,
    convRule: rule13
}, {
    start: 65529,
    length: 3,
    convRule: rule16
}, {
    start: 65532,
    length: 2,
    convRule: rule13
}, {
    start: 65536,
    length: 12,
    convRule: rule45
}, {
    start: 65549,
    length: 26,
    convRule: rule45
}, {
    start: 65576,
    length: 19,
    convRule: rule45
}, {
    start: 65596,
    length: 2,
    convRule: rule45
}, {
    start: 65599,
    length: 15,
    convRule: rule45
}, {
    start: 65616,
    length: 14,
    convRule: rule45
}, {
    start: 65664,
    length: 123,
    convRule: rule45
}, {
    start: 65792,
    length: 2,
    convRule: rule2
}, {
    start: 65794,
    length: 1,
    convRule: rule13
}, {
    start: 65799,
    length: 45,
    convRule: rule17
}, {
    start: 65847,
    length: 9,
    convRule: rule13
}, {
    start: 65856,
    length: 53,
    convRule: rule163
}, {
    start: 65909,
    length: 4,
    convRule: rule17
}, {
    start: 65913,
    length: 17,
    convRule: rule13
}, {
    start: 65930,
    length: 1,
    convRule: rule17
}, {
    start: 65936,
    length: 12,
    convRule: rule13
}, {
    start: 66000,
    length: 45,
    convRule: rule13
}, {
    start: 66045,
    length: 1,
    convRule: rule86
}, {
    start: 66176,
    length: 29,
    convRule: rule45
}, {
    start: 66208,
    length: 49,
    convRule: rule45
}, {
    start: 66304,
    length: 31,
    convRule: rule45
}, {
    start: 66336,
    length: 4,
    convRule: rule17
}, {
    start: 66352,
    length: 17,
    convRule: rule45
}, {
    start: 66369,
    length: 1,
    convRule: rule163
}, {
    start: 66370,
    length: 8,
    convRule: rule45
}, {
    start: 66378,
    length: 1,
    convRule: rule163
}, {
    start: 66432,
    length: 30,
    convRule: rule45
}, {
    start: 66463,
    length: 1,
    convRule: rule2
}, {
    start: 66464,
    length: 36,
    convRule: rule45
}, {
    start: 66504,
    length: 8,
    convRule: rule45
}, {
    start: 66512,
    length: 1,
    convRule: rule2
}, {
    start: 66513,
    length: 5,
    convRule: rule163
}, {
    start: 66560,
    length: 40,
    convRule: rule218
}, {
    start: 66600,
    length: 40,
    convRule: rule219
}, {
    start: 66640,
    length: 78,
    convRule: rule45
}, {
    start: 66720,
    length: 10,
    convRule: rule8
}, {
    start: 67584,
    length: 6,
    convRule: rule45
}, {
    start: 67592,
    length: 1,
    convRule: rule45
}, {
    start: 67594,
    length: 44,
    convRule: rule45
}, {
    start: 67639,
    length: 2,
    convRule: rule45
}, {
    start: 67644,
    length: 1,
    convRule: rule45
}, {
    start: 67647,
    length: 23,
    convRule: rule45
}, {
    start: 67671,
    length: 1,
    convRule: rule2
}, {
    start: 67672,
    length: 8,
    convRule: rule17
}, {
    start: 67840,
    length: 22,
    convRule: rule45
}, {
    start: 67862,
    length: 6,
    convRule: rule17
}, {
    start: 67871,
    length: 1,
    convRule: rule2
}, {
    start: 67872,
    length: 26,
    convRule: rule45
}, {
    start: 67903,
    length: 1,
    convRule: rule2
}, {
    start: 68096,
    length: 1,
    convRule: rule45
}, {
    start: 68097,
    length: 3,
    convRule: rule91
}, {
    start: 68101,
    length: 2,
    convRule: rule91
}, {
    start: 68108,
    length: 1,
    convRule: rule91
}, {
    start: 68109,
    length: 1,
    convRule: rule86
}, {
    start: 68110,
    length: 1,
    convRule: rule91
}, {
    start: 68111,
    length: 1,
    convRule: rule84
}, {
    start: 68112,
    length: 4,
    convRule: rule45
}, {
    start: 68117,
    length: 3,
    convRule: rule45
}, {
    start: 68121,
    length: 27,
    convRule: rule45
}, {
    start: 68152,
    length: 1,
    convRule: rule84
}, {
    start: 68153,
    length: 1,
    convRule: rule89
}, {
    start: 68154,
    length: 1,
    convRule: rule86
}, {
    start: 68159,
    length: 1,
    convRule: rule152
}, {
    start: 68160,
    length: 8,
    convRule: rule17
}, {
    start: 68176,
    length: 9,
    convRule: rule2
}, {
    start: 68192,
    length: 29,
    convRule: rule45
}, {
    start: 68221,
    length: 2,
    convRule: rule17
}, {
    start: 68223,
    length: 1,
    convRule: rule2
}, {
    start: 68352,
    length: 54,
    convRule: rule45
}, {
    start: 68409,
    length: 7,
    convRule: rule2
}, {
    start: 68416,
    length: 22,
    convRule: rule45
}, {
    start: 68440,
    length: 8,
    convRule: rule17
}, {
    start: 68448,
    length: 19,
    convRule: rule45
}, {
    start: 68472,
    length: 8,
    convRule: rule17
}, {
    start: 68608,
    length: 73,
    convRule: rule45
}, {
    start: 69216,
    length: 31,
    convRule: rule17
}, {
    start: 69632,
    length: 1,
    convRule: rule150
}, {
    start: 69633,
    length: 1,
    convRule: rule91
}, {
    start: 69634,
    length: 1,
    convRule: rule150
}, {
    start: 69635,
    length: 53,
    convRule: rule45
}, {
    start: 69688,
    length: 14,
    convRule: rule91
}, {
    start: 69702,
    length: 1,
    convRule: rule152
}, {
    start: 69703,
    length: 7,
    convRule: rule2
}, {
    start: 69714,
    length: 20,
    convRule: rule17
}, {
    start: 69734,
    length: 10,
    convRule: rule8
}, {
    start: 69760,
    length: 2,
    convRule: rule91
}, {
    start: 69762,
    length: 1,
    convRule: rule150
}, {
    start: 69763,
    length: 45,
    convRule: rule45
}, {
    start: 69808,
    length: 3,
    convRule: rule150
}, {
    start: 69811,
    length: 4,
    convRule: rule91
}, {
    start: 69815,
    length: 2,
    convRule: rule150
}, {
    start: 69817,
    length: 1,
    convRule: rule152
}, {
    start: 69818,
    length: 1,
    convRule: rule151
}, {
    start: 69819,
    length: 2,
    convRule: rule2
}, {
    start: 69821,
    length: 1,
    convRule: rule16
}, {
    start: 69822,
    length: 4,
    convRule: rule2
}, {
    start: 73728,
    length: 879,
    convRule: rule45
}, {
    start: 74752,
    length: 99,
    convRule: rule163
}, {
    start: 74864,
    length: 4,
    convRule: rule2
}, {
    start: 77824,
    length: 1071,
    convRule: rule45
}, {
    start: 92160,
    length: 569,
    convRule: rule45
}, {
    start: 110592,
    length: 2,
    convRule: rule45
}, {
    start: 118784,
    length: 246,
    convRule: rule13
}, {
    start: 119040,
    length: 39,
    convRule: rule13
}, {
    start: 119081,
    length: 60,
    convRule: rule13
}, {
    start: 119141,
    length: 2,
    convRule: rule220
}, {
    start: 119143,
    length: 3,
    convRule: rule89
}, {
    start: 119146,
    length: 3,
    convRule: rule13
}, {
    start: 119149,
    length: 1,
    convRule: rule221
}, {
    start: 119150,
    length: 5,
    convRule: rule220
}, {
    start: 119155,
    length: 8,
    convRule: rule16
}, {
    start: 119163,
    length: 8,
    convRule: rule86
}, {
    start: 119171,
    length: 2,
    convRule: rule13
}, {
    start: 119173,
    length: 5,
    convRule: rule84
}, {
    start: 119178,
    length: 2,
    convRule: rule86
}, {
    start: 119180,
    length: 30,
    convRule: rule13
}, {
    start: 119210,
    length: 4,
    convRule: rule84
}, {
    start: 119214,
    length: 48,
    convRule: rule13
}, {
    start: 119296,
    length: 66,
    convRule: rule13
}, {
    start: 119362,
    length: 3,
    convRule: rule84
}, {
    start: 119365,
    length: 1,
    convRule: rule13
}, {
    start: 119552,
    length: 87,
    convRule: rule13
}, {
    start: 119648,
    length: 18,
    convRule: rule17
}, {
    start: 119808,
    length: 26,
    convRule: rule106
}, {
    start: 119834,
    length: 26,
    convRule: rule14
}, {
    start: 119860,
    length: 26,
    convRule: rule106
}, {
    start: 119886,
    length: 7,
    convRule: rule14
}, {
    start: 119894,
    length: 18,
    convRule: rule14
}, {
    start: 119912,
    length: 26,
    convRule: rule106
}, {
    start: 119938,
    length: 26,
    convRule: rule14
}, {
    start: 119964,
    length: 1,
    convRule: rule106
}, {
    start: 119966,
    length: 2,
    convRule: rule106
}, {
    start: 119970,
    length: 1,
    convRule: rule106
}, {
    start: 119973,
    length: 2,
    convRule: rule106
}, {
    start: 119977,
    length: 4,
    convRule: rule106
}, {
    start: 119982,
    length: 8,
    convRule: rule106
}, {
    start: 119990,
    length: 4,
    convRule: rule14
}, {
    start: 119995,
    length: 1,
    convRule: rule14
}, {
    start: 119997,
    length: 7,
    convRule: rule14
}, {
    start: 120005,
    length: 11,
    convRule: rule14
}, {
    start: 120016,
    length: 26,
    convRule: rule106
}, {
    start: 120042,
    length: 26,
    convRule: rule14
}, {
    start: 120068,
    length: 2,
    convRule: rule106
}, {
    start: 120071,
    length: 4,
    convRule: rule106
}, {
    start: 120077,
    length: 8,
    convRule: rule106
}, {
    start: 120086,
    length: 7,
    convRule: rule106
}, {
    start: 120094,
    length: 26,
    convRule: rule14
}, {
    start: 120120,
    length: 2,
    convRule: rule106
}, {
    start: 120123,
    length: 4,
    convRule: rule106
}, {
    start: 120128,
    length: 5,
    convRule: rule106
}, {
    start: 120134,
    length: 1,
    convRule: rule106
}, {
    start: 120138,
    length: 7,
    convRule: rule106
}, {
    start: 120146,
    length: 26,
    convRule: rule14
}, {
    start: 120172,
    length: 26,
    convRule: rule106
}, {
    start: 120198,
    length: 26,
    convRule: rule14
}, {
    start: 120224,
    length: 26,
    convRule: rule106
}, {
    start: 120250,
    length: 26,
    convRule: rule14
}, {
    start: 120276,
    length: 26,
    convRule: rule106
}, {
    start: 120302,
    length: 26,
    convRule: rule14
}, {
    start: 120328,
    length: 26,
    convRule: rule106
}, {
    start: 120354,
    length: 26,
    convRule: rule14
}, {
    start: 120380,
    length: 26,
    convRule: rule106
}, {
    start: 120406,
    length: 26,
    convRule: rule14
}, {
    start: 120432,
    length: 26,
    convRule: rule106
}, {
    start: 120458,
    length: 28,
    convRule: rule14
}, {
    start: 120488,
    length: 25,
    convRule: rule106
}, {
    start: 120513,
    length: 1,
    convRule: rule6
}, {
    start: 120514,
    length: 25,
    convRule: rule14
}, {
    start: 120539,
    length: 1,
    convRule: rule6
}, {
    start: 120540,
    length: 6,
    convRule: rule14
}, {
    start: 120546,
    length: 25,
    convRule: rule106
}, {
    start: 120571,
    length: 1,
    convRule: rule6
}, {
    start: 120572,
    length: 25,
    convRule: rule14
}, {
    start: 120597,
    length: 1,
    convRule: rule6
}, {
    start: 120598,
    length: 6,
    convRule: rule14
}, {
    start: 120604,
    length: 25,
    convRule: rule106
}, {
    start: 120629,
    length: 1,
    convRule: rule6
}, {
    start: 120630,
    length: 25,
    convRule: rule14
}, {
    start: 120655,
    length: 1,
    convRule: rule6
}, {
    start: 120656,
    length: 6,
    convRule: rule14
}, {
    start: 120662,
    length: 25,
    convRule: rule106
}, {
    start: 120687,
    length: 1,
    convRule: rule6
}, {
    start: 120688,
    length: 25,
    convRule: rule14
}, {
    start: 120713,
    length: 1,
    convRule: rule6
}, {
    start: 120714,
    length: 6,
    convRule: rule14
}, {
    start: 120720,
    length: 25,
    convRule: rule106
}, {
    start: 120745,
    length: 1,
    convRule: rule6
}, {
    start: 120746,
    length: 25,
    convRule: rule14
}, {
    start: 120771,
    length: 1,
    convRule: rule6
}, {
    start: 120772,
    length: 6,
    convRule: rule14
}, {
    start: 120778,
    length: 1,
    convRule: rule106
}, {
    start: 120779,
    length: 1,
    convRule: rule14
}, {
    start: 120782,
    length: 50,
    convRule: rule8
}, {
    start: 126976,
    length: 44,
    convRule: rule13
}, {
    start: 127024,
    length: 100,
    convRule: rule13
}, {
    start: 127136,
    length: 15,
    convRule: rule13
}, {
    start: 127153,
    length: 14,
    convRule: rule13
}, {
    start: 127169,
    length: 15,
    convRule: rule13
}, {
    start: 127185,
    length: 15,
    convRule: rule13
}, {
    start: 127232,
    length: 11,
    convRule: rule17
}, {
    start: 127248,
    length: 31,
    convRule: rule13
}, {
    start: 127280,
    length: 58,
    convRule: rule13
}, {
    start: 127344,
    length: 43,
    convRule: rule13
}, {
    start: 127462,
    length: 29,
    convRule: rule13
}, {
    start: 127504,
    length: 43,
    convRule: rule13
}, {
    start: 127552,
    length: 9,
    convRule: rule13
}, {
    start: 127568,
    length: 2,
    convRule: rule13
}, {
    start: 127744,
    length: 33,
    convRule: rule13
}, {
    start: 127792,
    length: 6,
    convRule: rule13
}, {
    start: 127799,
    length: 70,
    convRule: rule13
}, {
    start: 127872,
    length: 20,
    convRule: rule13
}, {
    start: 127904,
    length: 37,
    convRule: rule13
}, {
    start: 127942,
    length: 5,
    convRule: rule13
}, {
    start: 127968,
    length: 17,
    convRule: rule13
}, {
    start: 128000,
    length: 63,
    convRule: rule13
}, {
    start: 128064,
    length: 1,
    convRule: rule13
}, {
    start: 128066,
    length: 182,
    convRule: rule13
}, {
    start: 128249,
    length: 4,
    convRule: rule13
}, {
    start: 128256,
    length: 62,
    convRule: rule13
}, {
    start: 128336,
    length: 24,
    convRule: rule13
}, {
    start: 128507,
    length: 5,
    convRule: rule13
}, {
    start: 128513,
    length: 16,
    convRule: rule13
}, {
    start: 128530,
    length: 3,
    convRule: rule13
}, {
    start: 128534,
    length: 1,
    convRule: rule13
}, {
    start: 128536,
    length: 1,
    convRule: rule13
}, {
    start: 128538,
    length: 1,
    convRule: rule13
}, {
    start: 128540,
    length: 3,
    convRule: rule13
}, {
    start: 128544,
    length: 6,
    convRule: rule13
}, {
    start: 128552,
    length: 4,
    convRule: rule13
}, {
    start: 128557,
    length: 1,
    convRule: rule13
}, {
    start: 128560,
    length: 4,
    convRule: rule13
}, {
    start: 128565,
    length: 12,
    convRule: rule13
}, {
    start: 128581,
    length: 11,
    convRule: rule13
}, {
    start: 128640,
    length: 70,
    convRule: rule13
}, {
    start: 128768,
    length: 116,
    convRule: rule13
}, {
    start: 131072,
    length: 42711,
    convRule: rule45
}, {
    start: 173824,
    length: 4149,
    convRule: rule45
}, {
    start: 177984,
    length: 222,
    convRule: rule45
}, {
    start: 194560,
    length: 542,
    convRule: rule45
}, {
    start: 917505,
    length: 1,
    convRule: rule16
}, {
    start: 917536,
    length: 96,
    convRule: rule16
}, {
    start: 917760,
    length: 240,
    convRule: rule91
}, {
    start: 983040,
    length: 65534,
    convRule: rule216
}, {
    start: 1048576,
    length: 65534,
    convRule: rule216
} ];
var checkAttr = function (categories) {
    return function ($$char) {
        var numOfBlocks = (function () {
            var $28 = $$char < 256;
            if ($28) {
                return numLat1Blocks;
            };
            return numBlocks;
        })();
        var maybeConversionRule = getRule(allchars)($$char)(numOfBlocks);
        if (maybeConversionRule instanceof Data_Maybe.Nothing) {
            return false;
        };
        if (maybeConversionRule instanceof Data_Maybe.Just) {
            return Data_Maybe.isJust(Data_Array.elemIndex(Data_Eq.eqInt)(maybeConversionRule.value0.category)(categories));
        };
        throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal line 5141, column 8 - line 5143, column 92: " + [ maybeConversionRule.constructor.name ]);
    };
};
var uIswalnum = checkAttr([ gencatLT, gencatLU, gencatLL, gencatLM, gencatLO, gencatMC, gencatME, gencatMN, gencatNO, gencatND, gencatNL ]);
var uIswalpha = checkAttr([ gencatLL, gencatLU, gencatLT, gencatLM, gencatLO ]);
var uIswcntrl = checkAttr([ gencatCC ]);
var uIswdigit = checkAttr([ gencatND ]);
var uIswlower = checkAttr([ gencatLL ]);
var uIswprint = checkAttr([ gencatMC, gencatNO, gencatSK, gencatME, gencatND, gencatPO, gencatLT, gencatPC, gencatSM, gencatZS, gencatLU, gencatPD, gencatSO, gencatPE, gencatPF, gencatPS, gencatSC, gencatLL, gencatLM, gencatPI, gencatNL, gencatMN, gencatLO ]);
var uIswupper = checkAttr([ gencatLU, gencatLT ]);
var uCombClass = function ($$char) {
    var numOfBlocks = (function () {
        var $31 = $$char < 256;
        if ($31) {
            return numLat1Blocks;
        };
        return numBlocks;
    })();
    var maybeConversionRule = getRule(allchars)($$char)(numOfBlocks);
    if (maybeConversionRule instanceof Data_Maybe.Nothing) {
        return 0;
    };
    if (maybeConversionRule instanceof Data_Maybe.Just) {
        return maybeConversionRule.value0.combiningClass;
    };
    throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal line 5216, column 8 - line 5218, column 48: " + [ maybeConversionRule.constructor.name ]);
};
var uGencat = function ($$char) {
    var conversionRule = getRule(allchars)($$char)(numBlocks);
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
        return v.unicodeCat;
    })(conversionRule);
};
module.exports = {
    NUMCAT_LU: NUMCAT_LU,
    NUMCAT_LL: NUMCAT_LL,
    NUMCAT_LT: NUMCAT_LT,
    NUMCAT_LM: NUMCAT_LM,
    NUMCAT_LO: NUMCAT_LO,
    NUMCAT_MN: NUMCAT_MN,
    NUMCAT_MC: NUMCAT_MC,
    NUMCAT_ME: NUMCAT_ME,
    NUMCAT_ND: NUMCAT_ND,
    NUMCAT_NL: NUMCAT_NL,
    NUMCAT_NO: NUMCAT_NO,
    NUMCAT_PC: NUMCAT_PC,
    NUMCAT_PD: NUMCAT_PD,
    NUMCAT_PS: NUMCAT_PS,
    NUMCAT_PE: NUMCAT_PE,
    NUMCAT_PI: NUMCAT_PI,
    NUMCAT_PF: NUMCAT_PF,
    NUMCAT_PO: NUMCAT_PO,
    NUMCAT_SM: NUMCAT_SM,
    NUMCAT_SC: NUMCAT_SC,
    NUMCAT_SK: NUMCAT_SK,
    NUMCAT_SO: NUMCAT_SO,
    NUMCAT_ZS: NUMCAT_ZS,
    NUMCAT_ZL: NUMCAT_ZL,
    NUMCAT_ZP: NUMCAT_ZP,
    NUMCAT_CC: NUMCAT_CC,
    NUMCAT_CF: NUMCAT_CF,
    NUMCAT_CS: NUMCAT_CS,
    NUMCAT_CO: NUMCAT_CO,
    NUMCAT_CN: NUMCAT_CN,
    ConversionRule: ConversionRule,
    CharBlock: CharBlock,
    gencatPF: gencatPF,
    gencatSM: gencatSM,
    gencatSO: gencatSO,
    gencatPI: gencatPI,
    gencatMC: gencatMC,
    gencatCO: gencatCO,
    gencatME: gencatME,
    gencatPO: gencatPO,
    gencatCS: gencatCS,
    gencatPS: gencatPS,
    gencatMN: gencatMN,
    gencatZL: gencatZL,
    gencatZP: gencatZP,
    gencatZS: gencatZS,
    gencatLL: gencatLL,
    gencatLM: gencatLM,
    gencatLO: gencatLO,
    gencatND: gencatND,
    gencatLT: gencatLT,
    gencatSC: gencatSC,
    gencatLU: gencatLU,
    gencatNL: gencatNL,
    gencatCC: gencatCC,
    gencatNO: gencatNO,
    gencatCF: gencatCF,
    gencatPC: gencatPC,
    gencatSK: gencatSK,
    gencatPD: gencatPD,
    gencatPE: gencatPE,
    maxUniChar: maxUniChar,
    numBlocks: numBlocks,
    numConvBlocks: numConvBlocks,
    numSpaceBlocks: numSpaceBlocks,
    numLat1Blocks: numLat1Blocks,
    numRules: numRules,
    rule209: rule209,
    rule73: rule73,
    rule86: rule86,
    rule156: rule156,
    rule109: rule109,
    rule69: rule69,
    rule82: rule82,
    rule221: rule221,
    rule163: rule163,
    rule91: rule91,
    rule180: rule180,
    rule59: rule59,
    rule93: rule93,
    rule110: rule110,
    rule52: rule52,
    rule76: rule76,
    rule215: rule215,
    rule11: rule11,
    rule198: rule198,
    rule121: rule121,
    rule192: rule192,
    rule37: rule37,
    rule120: rule120,
    rule97: rule97,
    rule194: rule194,
    rule101: rule101,
    rule136: rule136,
    rule29: rule29,
    rule111: rule111,
    rule104: rule104,
    rule33: rule33,
    rule193: rule193,
    rule149: rule149,
    rule131: rule131,
    rule188: rule188,
    rule83: rule83,
    rule213: rule213,
    rule123: rule123,
    rule218: rule218,
    rule63: rule63,
    rule187: rule187,
    rule172: rule172,
    rule170: rule170,
    rule166: rule166,
    rule8: rule8,
    rule148: rule148,
    rule130: rule130,
    rule202: rule202,
    rule71: rule71,
    rule45: rule45,
    rule77: rule77,
    rule183: rule183,
    rule157: rule157,
    rule25: rule25,
    rule176: rule176,
    rule40: rule40,
    rule127: rule127,
    rule4: rule4,
    rule31: rule31,
    rule47: rule47,
    rule197: rule197,
    rule184: rule184,
    rule23: rule23,
    rule143: rule143,
    rule50: rule50,
    rule203: rule203,
    rule58: rule58,
    rule72: rule72,
    rule159: rule159,
    rule150: rule150,
    rule42: rule42,
    rule168: rule168,
    rule44: rule44,
    rule154: rule154,
    rule105: rule105,
    rule61: rule61,
    rule113: rule113,
    rule108: rule108,
    rule62: rule62,
    rule66: rule66,
    rule80: rule80,
    rule3: rule3,
    rule14: rule14,
    rule140: rule140,
    rule181: rule181,
    rule39: rule39,
    rule95: rule95,
    rule207: rule207,
    rule125: rule125,
    rule205: rule205,
    rule160: rule160,
    rule122: rule122,
    rule12: rule12,
    rule216: rule216,
    rule117: rule117,
    rule28: rule28,
    rule142: rule142,
    rule103: rule103,
    rule78: rule78,
    rule190: rule190,
    rule199: rule199,
    rule182: rule182,
    rule124: rule124,
    rule38: rule38,
    rule53: rule53,
    rule138: rule138,
    rule115: rule115,
    rule74: rule74,
    rule171: rule171,
    rule185: rule185,
    rule24: rule24,
    rule26: rule26,
    rule212: rule212,
    rule162: rule162,
    rule153: rule153,
    rule174: rule174,
    rule133: rule133,
    rule79: rule79,
    rule137: rule137,
    rule57: rule57,
    rule96: rule96,
    rule49: rule49,
    rule169: rule169,
    rule151: rule151,
    rule116: rule116,
    rule107: rule107,
    rule67: rule67,
    rule70: rule70,
    rule132: rule132,
    rule2: rule2,
    rule34: rule34,
    rule92: rule92,
    rule102: rule102,
    rule90: rule90,
    rule167: rule167,
    rule214: rule214,
    rule155: rule155,
    rule30: rule30,
    rule165: rule165,
    rule55: rule55,
    rule219: rule219,
    rule27: rule27,
    rule32: rule32,
    rule135: rule135,
    rule68: rule68,
    rule5: rule5,
    rule186: rule186,
    rule85: rule85,
    rule191: rule191,
    rule173: rule173,
    rule64: rule64,
    rule1: rule1,
    rule10: rule10,
    rule164: rule164,
    rule196: rule196,
    rule18: rule18,
    rule54: rule54,
    rule134: rule134,
    rule220: rule220,
    rule16: rule16,
    rule56: rule56,
    rule211: rule211,
    rule161: rule161,
    rule158: rule158,
    rule147: rule147,
    rule129: rule129,
    rule35: rule35,
    rule46: rule46,
    rule84: rule84,
    rule6: rule6,
    rule145: rule145,
    rule141: rule141,
    rule114: rule114,
    rule126: rule126,
    rule43: rule43,
    rule189: rule189,
    rule15: rule15,
    rule60: rule60,
    rule99: rule99,
    rule146: rule146,
    rule217: rule217,
    rule98: rule98,
    rule195: rule195,
    rule128: rule128,
    rule41: rule41,
    rule48: rule48,
    rule94: rule94,
    rule206: rule206,
    rule81: rule81,
    rule208: rule208,
    rule210: rule210,
    rule0: rule0,
    rule7: rule7,
    rule13: rule13,
    rule119: rule119,
    rule36: rule36,
    rule204: rule204,
    rule178: rule178,
    rule144: rule144,
    rule200: rule200,
    rule112: rule112,
    rule100: rule100,
    rule9: rule9,
    rule17: rule17,
    rule139: rule139,
    rule118: rule118,
    rule175: rule175,
    rule201: rule201,
    rule22: rule22,
    rule65: rule65,
    rule19: rule19,
    rule88: rule88,
    rule177: rule177,
    rule152: rule152,
    rule89: rule89,
    rule51: rule51,
    rule87: rule87,
    rule20: rule20,
    rule75: rule75,
    rule106: rule106,
    rule21: rule21,
    rule179: rule179,
    allchars: allchars,
    convchars: convchars,
    spacechars: spacechars,
    nullrule: nullrule,
    blkCmp: blkCmp,
    getRule: getRule,
    bsearch: bsearch,
    checkAttr: checkAttr,
    checkAttrS: checkAttrS,
    uIswcntrl: uIswcntrl,
    uIswprint: uIswprint,
    uIswupper: uIswupper,
    uIswlower: uIswlower,
    uIswalpha: uIswalpha,
    uIswdigit: uIswdigit,
    uIswalnum: uIswalnum,
    uIswspace: uIswspace,
    caseConv: caseConv,
    uTowupper: uTowupper,
    uTowlower: uTowlower,
    uTowtitle: uTowtitle,
    uGencat: uGencat,
    uCombClass: uCombClass,
    showUnicodeCategory: showUnicodeCategory,
    showConversionRule: showConversionRule,
    showCharBlock: showCharBlock
};

},{"../Data.Array":122,"../Data.Boolean":131,"../Data.Eq":157,"../Data.EuclideanRing":159,"../Data.Functor":180,"../Data.HeytingAlgebra":188,"../Data.Int":193,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Partial.Unsafe":355,"../Prelude":358}],140:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_Char = require("../Data.Char");
var Data_CodePoint_Unicode_Internal = require("../Data.CodePoint.Unicode.Internal");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_String_CodePoints = require("../Data.String.CodePoints");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var UppercaseLetter = (function () {
    function UppercaseLetter() {

    };
    UppercaseLetter.value = new UppercaseLetter();
    return UppercaseLetter;
})();
var LowercaseLetter = (function () {
    function LowercaseLetter() {

    };
    LowercaseLetter.value = new LowercaseLetter();
    return LowercaseLetter;
})();
var TitlecaseLetter = (function () {
    function TitlecaseLetter() {

    };
    TitlecaseLetter.value = new TitlecaseLetter();
    return TitlecaseLetter;
})();
var ModifierLetter = (function () {
    function ModifierLetter() {

    };
    ModifierLetter.value = new ModifierLetter();
    return ModifierLetter;
})();
var OtherLetter = (function () {
    function OtherLetter() {

    };
    OtherLetter.value = new OtherLetter();
    return OtherLetter;
})();
var NonSpacingMark = (function () {
    function NonSpacingMark() {

    };
    NonSpacingMark.value = new NonSpacingMark();
    return NonSpacingMark;
})();
var SpacingCombiningMark = (function () {
    function SpacingCombiningMark() {

    };
    SpacingCombiningMark.value = new SpacingCombiningMark();
    return SpacingCombiningMark;
})();
var EnclosingMark = (function () {
    function EnclosingMark() {

    };
    EnclosingMark.value = new EnclosingMark();
    return EnclosingMark;
})();
var DecimalNumber = (function () {
    function DecimalNumber() {

    };
    DecimalNumber.value = new DecimalNumber();
    return DecimalNumber;
})();
var LetterNumber = (function () {
    function LetterNumber() {

    };
    LetterNumber.value = new LetterNumber();
    return LetterNumber;
})();
var OtherNumber = (function () {
    function OtherNumber() {

    };
    OtherNumber.value = new OtherNumber();
    return OtherNumber;
})();
var ConnectorPunctuation = (function () {
    function ConnectorPunctuation() {

    };
    ConnectorPunctuation.value = new ConnectorPunctuation();
    return ConnectorPunctuation;
})();
var DashPunctuation = (function () {
    function DashPunctuation() {

    };
    DashPunctuation.value = new DashPunctuation();
    return DashPunctuation;
})();
var OpenPunctuation = (function () {
    function OpenPunctuation() {

    };
    OpenPunctuation.value = new OpenPunctuation();
    return OpenPunctuation;
})();
var ClosePunctuation = (function () {
    function ClosePunctuation() {

    };
    ClosePunctuation.value = new ClosePunctuation();
    return ClosePunctuation;
})();
var InitialQuote = (function () {
    function InitialQuote() {

    };
    InitialQuote.value = new InitialQuote();
    return InitialQuote;
})();
var FinalQuote = (function () {
    function FinalQuote() {

    };
    FinalQuote.value = new FinalQuote();
    return FinalQuote;
})();
var OtherPunctuation = (function () {
    function OtherPunctuation() {

    };
    OtherPunctuation.value = new OtherPunctuation();
    return OtherPunctuation;
})();
var MathSymbol = (function () {
    function MathSymbol() {

    };
    MathSymbol.value = new MathSymbol();
    return MathSymbol;
})();
var CurrencySymbol = (function () {
    function CurrencySymbol() {

    };
    CurrencySymbol.value = new CurrencySymbol();
    return CurrencySymbol;
})();
var ModifierSymbol = (function () {
    function ModifierSymbol() {

    };
    ModifierSymbol.value = new ModifierSymbol();
    return ModifierSymbol;
})();
var OtherSymbol = (function () {
    function OtherSymbol() {

    };
    OtherSymbol.value = new OtherSymbol();
    return OtherSymbol;
})();
var Space = (function () {
    function Space() {

    };
    Space.value = new Space();
    return Space;
})();
var LineSeparator = (function () {
    function LineSeparator() {

    };
    LineSeparator.value = new LineSeparator();
    return LineSeparator;
})();
var ParagraphSeparator = (function () {
    function ParagraphSeparator() {

    };
    ParagraphSeparator.value = new ParagraphSeparator();
    return ParagraphSeparator;
})();
var Control = (function () {
    function Control() {

    };
    Control.value = new Control();
    return Control;
})();
var Format = (function () {
    function Format() {

    };
    Format.value = new Format();
    return Format;
})();
var Surrogate = (function () {
    function Surrogate() {

    };
    Surrogate.value = new Surrogate();
    return Surrogate;
})();
var PrivateUse = (function () {
    function PrivateUse() {

    };
    PrivateUse.value = new PrivateUse();
    return PrivateUse;
})();
var NotAssigned = (function () {
    function NotAssigned() {

    };
    NotAssigned.value = new NotAssigned();
    return NotAssigned;
})();
var unicodeCatToGeneralCat = function (v) {
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_LU) {
        return UppercaseLetter.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_LL) {
        return LowercaseLetter.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_LT) {
        return TitlecaseLetter.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_LM) {
        return ModifierLetter.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_LO) {
        return OtherLetter.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_MN) {
        return NonSpacingMark.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_MC) {
        return SpacingCombiningMark.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_ME) {
        return EnclosingMark.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_ND) {
        return DecimalNumber.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_NL) {
        return LetterNumber.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_NO) {
        return OtherNumber.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_PC) {
        return ConnectorPunctuation.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_PD) {
        return DashPunctuation.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_PS) {
        return OpenPunctuation.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_PE) {
        return ClosePunctuation.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_PI) {
        return InitialQuote.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_PF) {
        return FinalQuote.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_PO) {
        return OtherPunctuation.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_SM) {
        return MathSymbol.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_SC) {
        return CurrencySymbol.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_SK) {
        return ModifierSymbol.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_SO) {
        return OtherSymbol.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_ZS) {
        return Space.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_ZL) {
        return LineSeparator.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_ZP) {
        return ParagraphSeparator.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_CC) {
        return Control.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_CF) {
        return Format.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_CS) {
        return Surrogate.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_CO) {
        return PrivateUse.value;
    };
    if (v instanceof Data_CodePoint_Unicode_Internal.NUMCAT_CN) {
        return NotAssigned.value;
    };
    throw new Error("Failed pattern match at Data.CodePoint.Unicode line 178, column 1 - line 178, column 61: " + [ v.constructor.name ]);
};
var showGeneralCategory = new Data_Show.Show(function (v) {
    if (v instanceof UppercaseLetter) {
        return "UppercaseLetter";
    };
    if (v instanceof LowercaseLetter) {
        return "LowercaseLetter";
    };
    if (v instanceof TitlecaseLetter) {
        return "TitlecaseLetter";
    };
    if (v instanceof ModifierLetter) {
        return "ModifierLetter";
    };
    if (v instanceof OtherLetter) {
        return "OtherLetter";
    };
    if (v instanceof NonSpacingMark) {
        return "NonSpacingMark";
    };
    if (v instanceof SpacingCombiningMark) {
        return "SpacingCombiningMark";
    };
    if (v instanceof EnclosingMark) {
        return "EnclosingMark";
    };
    if (v instanceof DecimalNumber) {
        return "DecimalNumber";
    };
    if (v instanceof LetterNumber) {
        return "LetterNumber";
    };
    if (v instanceof OtherNumber) {
        return "OtherNumber";
    };
    if (v instanceof ConnectorPunctuation) {
        return "ConnectorPunctuation";
    };
    if (v instanceof DashPunctuation) {
        return "DashPunctuation";
    };
    if (v instanceof OpenPunctuation) {
        return "OpenPunctuation";
    };
    if (v instanceof ClosePunctuation) {
        return "ClosePunctuation";
    };
    if (v instanceof InitialQuote) {
        return "InitialQuote";
    };
    if (v instanceof FinalQuote) {
        return "FinalQuote";
    };
    if (v instanceof OtherPunctuation) {
        return "OtherPunctuation";
    };
    if (v instanceof MathSymbol) {
        return "MathSymbol";
    };
    if (v instanceof CurrencySymbol) {
        return "CurrencySymbol";
    };
    if (v instanceof ModifierSymbol) {
        return "ModifierSymbol";
    };
    if (v instanceof OtherSymbol) {
        return "OtherSymbol";
    };
    if (v instanceof Space) {
        return "Space";
    };
    if (v instanceof LineSeparator) {
        return "LineSeparator";
    };
    if (v instanceof ParagraphSeparator) {
        return "ParagraphSeparator";
    };
    if (v instanceof Control) {
        return "Control";
    };
    if (v instanceof Format) {
        return "Format";
    };
    if (v instanceof Surrogate) {
        return "Surrogate";
    };
    if (v instanceof PrivateUse) {
        return "PrivateUse";
    };
    if (v instanceof NotAssigned) {
        return "NotAssigned";
    };
    throw new Error("Failed pattern match at Data.CodePoint.Unicode line 210, column 1 - line 210, column 53: " + [ v.constructor.name ]);
});
var modify = function (f) {
    return function (c) {
        return Data_Maybe.fromJust()(Data_String_CodePoints.codePointFromInt(f(Data_String_CodePoints.codePointToInt(c))));
    };
};
var toLower = modify(Data_CodePoint_Unicode_Internal.uTowlower);
var toTitle = modify(Data_CodePoint_Unicode_Internal.uTowtitle);
var toUpper = modify(Data_CodePoint_Unicode_Internal.uTowupper);
var isUpper = function ($52) {
    return Data_CodePoint_Unicode_Internal.uIswupper(Data_String_CodePoints.codePointToInt($52));
};
var isSpace = function (c) {
    var uc = Data_String_CodePoints.codePointToInt(c);
    var $16 = uc <= 823;
    if ($16) {
        return uc === 32 || (uc >= 9 && uc <= 13 || uc === 160);
    };
    return Data_CodePoint_Unicode_Internal.uIswspace(uc);
};
var isPrint = function ($53) {
    return Data_CodePoint_Unicode_Internal.uIswprint(Data_String_CodePoints.codePointToInt($53));
};
var isOctDigit = function (c) {
    var diff = Data_String_CodePoints.codePointToInt(c) - Data_Char.toCharCode("0") | 0;
    return diff <= 7 && diff >= 0;
};
var isLower = function ($54) {
    return Data_CodePoint_Unicode_Internal.uIswlower(Data_String_CodePoints.codePointToInt($54));
};
var isDigit = function (c) {
    var diff = Data_String_CodePoints.codePointToInt(c) - Data_Char.toCharCode("0") | 0;
    return diff <= 9 && diff >= 0;
};
var isHexDigit = function (c) {
    return isDigit(c) || ((function () {
        var diff = Data_String_CodePoints.codePointToInt(c) - Data_Char.toCharCode("A") | 0;
        return diff <= 5 && diff >= 0;
    })() || (function () {
        var diff = Data_String_CodePoints.codePointToInt(c) - Data_Char.toCharCode("a") | 0;
        return diff <= 5 && diff >= 0;
    })());
};
var isControl = function ($55) {
    return Data_CodePoint_Unicode_Internal.uIswcntrl(Data_String_CodePoints.codePointToInt($55));
};
var isAlphaNum = function ($56) {
    return Data_CodePoint_Unicode_Internal.uIswalnum(Data_String_CodePoints.codePointToInt($56));
};
var isAlpha = function ($57) {
    return Data_CodePoint_Unicode_Internal.uIswalpha(Data_String_CodePoints.codePointToInt($57));
};
var generalCategory = function ($58) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(unicodeCatToGeneralCat)(Data_CodePoint_Unicode_Internal.uGencat(Data_String_CodePoints.codePointToInt($58)));
};
var isLetter = function (c) {
    var v = generalCategory(c);
    if (v instanceof Data_Maybe.Just && v.value0 instanceof UppercaseLetter) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof LowercaseLetter) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof TitlecaseLetter) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof ModifierLetter) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof OtherLetter) {
        return true;
    };
    return false;
};
var isMark = function (c) {
    var v = generalCategory(c);
    if (v instanceof Data_Maybe.Just && v.value0 instanceof NonSpacingMark) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof SpacingCombiningMark) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof EnclosingMark) {
        return true;
    };
    return false;
};
var isNumber = function (c) {
    var v = generalCategory(c);
    if (v instanceof Data_Maybe.Just && v.value0 instanceof DecimalNumber) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof LetterNumber) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof OtherNumber) {
        return true;
    };
    return false;
};
var isPunctuation = function (c) {
    var v = generalCategory(c);
    if (v instanceof Data_Maybe.Just && v.value0 instanceof ConnectorPunctuation) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof DashPunctuation) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof OpenPunctuation) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof ClosePunctuation) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof InitialQuote) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof FinalQuote) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof OtherPunctuation) {
        return true;
    };
    return false;
};
var isSeparator = function (c) {
    var v = generalCategory(c);
    if (v instanceof Data_Maybe.Just && v.value0 instanceof Space) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof LineSeparator) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof ParagraphSeparator) {
        return true;
    };
    return false;
};
var isSymbol = function (c) {
    var v = generalCategory(c);
    if (v instanceof Data_Maybe.Just && v.value0 instanceof MathSymbol) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof CurrencySymbol) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof ModifierSymbol) {
        return true;
    };
    if (v instanceof Data_Maybe.Just && v.value0 instanceof OtherSymbol) {
        return true;
    };
    return false;
};
var generalCatToUnicodeCat = function (v) {
    if (v instanceof UppercaseLetter) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_LU.value;
    };
    if (v instanceof LowercaseLetter) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_LL.value;
    };
    if (v instanceof TitlecaseLetter) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_LT.value;
    };
    if (v instanceof ModifierLetter) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_LM.value;
    };
    if (v instanceof OtherLetter) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_LO.value;
    };
    if (v instanceof NonSpacingMark) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_MN.value;
    };
    if (v instanceof SpacingCombiningMark) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_MC.value;
    };
    if (v instanceof EnclosingMark) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_ME.value;
    };
    if (v instanceof DecimalNumber) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_ND.value;
    };
    if (v instanceof LetterNumber) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_NL.value;
    };
    if (v instanceof OtherNumber) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_NO.value;
    };
    if (v instanceof ConnectorPunctuation) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_PC.value;
    };
    if (v instanceof DashPunctuation) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_PD.value;
    };
    if (v instanceof OpenPunctuation) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_PS.value;
    };
    if (v instanceof ClosePunctuation) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_PE.value;
    };
    if (v instanceof InitialQuote) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_PI.value;
    };
    if (v instanceof FinalQuote) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_PF.value;
    };
    if (v instanceof OtherPunctuation) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_PO.value;
    };
    if (v instanceof MathSymbol) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_SM.value;
    };
    if (v instanceof CurrencySymbol) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_SC.value;
    };
    if (v instanceof ModifierSymbol) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_SK.value;
    };
    if (v instanceof OtherSymbol) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_SO.value;
    };
    if (v instanceof Space) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_ZS.value;
    };
    if (v instanceof LineSeparator) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_ZL.value;
    };
    if (v instanceof ParagraphSeparator) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_ZP.value;
    };
    if (v instanceof Control) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_CC.value;
    };
    if (v instanceof Format) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_CF.value;
    };
    if (v instanceof Surrogate) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_CS.value;
    };
    if (v instanceof PrivateUse) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_CO.value;
    };
    if (v instanceof NotAssigned) {
        return Data_CodePoint_Unicode_Internal.NUMCAT_CN.value;
    };
    throw new Error("Failed pattern match at Data.CodePoint.Unicode line 146, column 1 - line 146, column 61: " + [ v.constructor.name ]);
};
var generalCatToInt = function (v) {
    if (v instanceof UppercaseLetter) {
        return 1;
    };
    if (v instanceof LowercaseLetter) {
        return 2;
    };
    if (v instanceof TitlecaseLetter) {
        return 3;
    };
    if (v instanceof ModifierLetter) {
        return 4;
    };
    if (v instanceof OtherLetter) {
        return 5;
    };
    if (v instanceof NonSpacingMark) {
        return 6;
    };
    if (v instanceof SpacingCombiningMark) {
        return 7;
    };
    if (v instanceof EnclosingMark) {
        return 8;
    };
    if (v instanceof DecimalNumber) {
        return 9;
    };
    if (v instanceof LetterNumber) {
        return 10;
    };
    if (v instanceof OtherNumber) {
        return 11;
    };
    if (v instanceof ConnectorPunctuation) {
        return 12;
    };
    if (v instanceof DashPunctuation) {
        return 13;
    };
    if (v instanceof OpenPunctuation) {
        return 14;
    };
    if (v instanceof ClosePunctuation) {
        return 15;
    };
    if (v instanceof InitialQuote) {
        return 16;
    };
    if (v instanceof FinalQuote) {
        return 17;
    };
    if (v instanceof OtherPunctuation) {
        return 18;
    };
    if (v instanceof MathSymbol) {
        return 19;
    };
    if (v instanceof CurrencySymbol) {
        return 20;
    };
    if (v instanceof ModifierSymbol) {
        return 21;
    };
    if (v instanceof OtherSymbol) {
        return 22;
    };
    if (v instanceof Space) {
        return 23;
    };
    if (v instanceof LineSeparator) {
        return 24;
    };
    if (v instanceof ParagraphSeparator) {
        return 25;
    };
    if (v instanceof Control) {
        return 26;
    };
    if (v instanceof Format) {
        return 27;
    };
    if (v instanceof Surrogate) {
        return 28;
    };
    if (v instanceof PrivateUse) {
        return 29;
    };
    if (v instanceof NotAssigned) {
        return 30;
    };
    throw new Error("Failed pattern match at Data.CodePoint.Unicode line 114, column 1 - line 114, column 42: " + [ v.constructor.name ]);
};
var eqGeneralCategory = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof UppercaseLetter && v1 instanceof UppercaseLetter) {
            return true;
        };
        if (v instanceof LowercaseLetter && v1 instanceof LowercaseLetter) {
            return true;
        };
        if (v instanceof TitlecaseLetter && v1 instanceof TitlecaseLetter) {
            return true;
        };
        if (v instanceof ModifierLetter && v1 instanceof ModifierLetter) {
            return true;
        };
        if (v instanceof OtherLetter && v1 instanceof OtherLetter) {
            return true;
        };
        if (v instanceof NonSpacingMark && v1 instanceof NonSpacingMark) {
            return true;
        };
        if (v instanceof SpacingCombiningMark && v1 instanceof SpacingCombiningMark) {
            return true;
        };
        if (v instanceof EnclosingMark && v1 instanceof EnclosingMark) {
            return true;
        };
        if (v instanceof DecimalNumber && v1 instanceof DecimalNumber) {
            return true;
        };
        if (v instanceof LetterNumber && v1 instanceof LetterNumber) {
            return true;
        };
        if (v instanceof OtherNumber && v1 instanceof OtherNumber) {
            return true;
        };
        if (v instanceof ConnectorPunctuation && v1 instanceof ConnectorPunctuation) {
            return true;
        };
        if (v instanceof DashPunctuation && v1 instanceof DashPunctuation) {
            return true;
        };
        if (v instanceof OpenPunctuation && v1 instanceof OpenPunctuation) {
            return true;
        };
        if (v instanceof ClosePunctuation && v1 instanceof ClosePunctuation) {
            return true;
        };
        if (v instanceof InitialQuote && v1 instanceof InitialQuote) {
            return true;
        };
        if (v instanceof FinalQuote && v1 instanceof FinalQuote) {
            return true;
        };
        if (v instanceof OtherPunctuation && v1 instanceof OtherPunctuation) {
            return true;
        };
        if (v instanceof MathSymbol && v1 instanceof MathSymbol) {
            return true;
        };
        if (v instanceof CurrencySymbol && v1 instanceof CurrencySymbol) {
            return true;
        };
        if (v instanceof ModifierSymbol && v1 instanceof ModifierSymbol) {
            return true;
        };
        if (v instanceof OtherSymbol && v1 instanceof OtherSymbol) {
            return true;
        };
        if (v instanceof Space && v1 instanceof Space) {
            return true;
        };
        if (v instanceof LineSeparator && v1 instanceof LineSeparator) {
            return true;
        };
        if (v instanceof ParagraphSeparator && v1 instanceof ParagraphSeparator) {
            return true;
        };
        if (v instanceof Control && v1 instanceof Control) {
            return true;
        };
        if (v instanceof Format && v1 instanceof Format) {
            return true;
        };
        if (v instanceof Surrogate && v1 instanceof Surrogate) {
            return true;
        };
        if (v instanceof PrivateUse && v1 instanceof PrivateUse) {
            return true;
        };
        if (v instanceof NotAssigned && v1 instanceof NotAssigned) {
            return true;
        };
        return false;
    };
});
var ordGeneralCategory = new Data_Ord.Ord(function () {
    return eqGeneralCategory;
}, function (catA) {
    return function (catB) {
        return Data_Ord.compare(Data_Ord.ordInt)(generalCatToInt(catA))(generalCatToInt(catB));
    };
});
var digitToInt = function (c) {
    var hexUpper = Data_String_CodePoints.codePointToInt(c) - Data_Char.toCharCode("A") | 0;
    var hexLower = Data_String_CodePoints.codePointToInt(c) - Data_Char.toCharCode("a") | 0;
    var dec = Data_String_CodePoints.codePointToInt(c) - Data_Char.toCharCode("0") | 0;
    var result = (function () {
        if (dec <= 9 && dec >= 0) {
            return new Data_Maybe.Just(dec);
        };
        if (hexLower <= 5 && hexLower >= 0) {
            return Data_Maybe.Just.create(hexLower + 10 | 0);
        };
        if (hexUpper <= 5 && hexUpper >= 0) {
            return Data_Maybe.Just.create(hexUpper + 10 | 0);
        };
        if (Data_Boolean.otherwise) {
            return Data_Maybe.Nothing.value;
        };
        throw new Error("Failed pattern match at Data.CodePoint.Unicode line 538, column 5 - line 538, column 24: " + [  ]);
    })();
    return result;
};
var combiningClass = function ($59) {
    return Data_CodePoint_Unicode_Internal.uCombClass(Data_String_CodePoints.codePointToInt($59));
};
var isCombining = function (c) {
    return combiningClass(c) !== 0;
};
var charPoint = function ($60) {
    return Data_Maybe.fromJust()(Data_String_CodePoints.codePointFromInt(Data_Char.toCharCode($60)));
};
var isAscii = function (c) {
    return Data_Ord.lessThan(Data_String_CodePoints.ordCodePoint)(c)(charPoint("\x80"));
};
var isAsciiLower = function (c) {
    return Data_Ord.greaterThanOrEq(Data_String_CodePoints.ordCodePoint)(c)(charPoint("a")) && Data_Ord.lessThanOrEq(Data_String_CodePoints.ordCodePoint)(c)(charPoint("z"));
};
var isAsciiUpper = function (c) {
    return Data_Ord.greaterThanOrEq(Data_String_CodePoints.ordCodePoint)(c)(charPoint("A")) && Data_Ord.lessThanOrEq(Data_String_CodePoints.ordCodePoint)(c)(charPoint("Z"));
};
var isLatin1 = function (c) {
    return Data_Ord.lessThanOrEq(Data_String_CodePoints.ordCodePoint)(c)(charPoint("\xff"));
};
var boundedGeneralCategory = new Data_Bounded.Bounded(function () {
    return ordGeneralCategory;
}, UppercaseLetter.value, NotAssigned.value);
module.exports = {
    charPoint: charPoint,
    modify: modify,
    UppercaseLetter: UppercaseLetter,
    LowercaseLetter: LowercaseLetter,
    TitlecaseLetter: TitlecaseLetter,
    ModifierLetter: ModifierLetter,
    OtherLetter: OtherLetter,
    NonSpacingMark: NonSpacingMark,
    SpacingCombiningMark: SpacingCombiningMark,
    EnclosingMark: EnclosingMark,
    DecimalNumber: DecimalNumber,
    LetterNumber: LetterNumber,
    OtherNumber: OtherNumber,
    ConnectorPunctuation: ConnectorPunctuation,
    DashPunctuation: DashPunctuation,
    OpenPunctuation: OpenPunctuation,
    ClosePunctuation: ClosePunctuation,
    InitialQuote: InitialQuote,
    FinalQuote: FinalQuote,
    OtherPunctuation: OtherPunctuation,
    MathSymbol: MathSymbol,
    CurrencySymbol: CurrencySymbol,
    ModifierSymbol: ModifierSymbol,
    OtherSymbol: OtherSymbol,
    Space: Space,
    LineSeparator: LineSeparator,
    ParagraphSeparator: ParagraphSeparator,
    Control: Control,
    Format: Format,
    Surrogate: Surrogate,
    PrivateUse: PrivateUse,
    NotAssigned: NotAssigned,
    generalCatToInt: generalCatToInt,
    generalCatToUnicodeCat: generalCatToUnicodeCat,
    unicodeCatToGeneralCat: unicodeCatToGeneralCat,
    generalCategory: generalCategory,
    combiningClass: combiningClass,
    isCombining: isCombining,
    isAscii: isAscii,
    isLatin1: isLatin1,
    isAsciiLower: isAsciiLower,
    isAsciiUpper: isAsciiUpper,
    isControl: isControl,
    isPrint: isPrint,
    isSpace: isSpace,
    isUpper: isUpper,
    isLower: isLower,
    isAlpha: isAlpha,
    isAlphaNum: isAlphaNum,
    isDigit: isDigit,
    isOctDigit: isOctDigit,
    isHexDigit: isHexDigit,
    isPunctuation: isPunctuation,
    isSymbol: isSymbol,
    toUpper: toUpper,
    toLower: toLower,
    toTitle: toTitle,
    digitToInt: digitToInt,
    isLetter: isLetter,
    isMark: isMark,
    isNumber: isNumber,
    isSeparator: isSeparator,
    showGeneralCategory: showGeneralCategory,
    eqGeneralCategory: eqGeneralCategory,
    ordGeneralCategory: ordGeneralCategory,
    boundedGeneralCategory: boundedGeneralCategory
};

},{"../Control.Semigroupoid":66,"../Data.Boolean":131,"../Data.Bounded":134,"../Data.Char":138,"../Data.CodePoint.Unicode.Internal":139,"../Data.Eq":157,"../Data.Function":172,"../Data.Functor":180,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Ring":267,"../Data.Semiring":273,"../Data.Show":276,"../Data.String.CodePoints":282,"../Partial.Unsafe":355,"../Prelude":358}],141:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var CommutativeRing = function (Ring0) {
    this.Ring0 = Ring0;
};
var commutativeRingUnit = new CommutativeRing(function () {
    return Data_Ring.ringUnit;
});
var commutativeRingNumber = new CommutativeRing(function () {
    return Data_Ring.ringNumber;
});
var commutativeRingInt = new CommutativeRing(function () {
    return Data_Ring.ringInt;
});
var commutativeRingFn = function (dictCommutativeRing) {
    return new CommutativeRing(function () {
        return Data_Ring.ringFn(dictCommutativeRing.Ring0());
    });
};
module.exports = {
    CommutativeRing: CommutativeRing,
    commutativeRingInt: commutativeRingInt,
    commutativeRingNumber: commutativeRingNumber,
    commutativeRingUnit: commutativeRingUnit,
    commutativeRingFn: commutativeRingFn
};

},{"../Data.Ring":267,"../Data.Semiring":273,"../Data.Unit":302}],142:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Field = require("../Data.Field");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Contravariant = require("../Data.Functor.Contravariant");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Const = function (x) {
    return x;
};
var showConst = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Const " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringConst = function (dictSemiring) {
    return dictSemiring;
};
var semigroupoidConst = new Control_Semigroupoid.Semigroupoid(function (v) {
    return function (v1) {
        return v1;
    };
});
var semigroupConst = function (dictSemigroup) {
    return dictSemigroup;
};
var ringConst = function (dictRing) {
    return dictRing;
};
var ordConst = function (dictOrd) {
    return dictOrd;
};
var newtypeConst = new Data_Newtype.Newtype(function (n) {
    return n;
}, Const);
var monoidConst = function (dictMonoid) {
    return dictMonoid;
};
var heytingAlgebraConst = function (dictHeytingAlgebra) {
    return dictHeytingAlgebra;
};
var functorConst = new Data_Functor.Functor(function (v) {
    return function (v1) {
        return v1;
    };
});
var invariantConst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorConst));
var foldableConst = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (v) {
        return function (v1) {
            return Data_Monoid.mempty(dictMonoid);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            return z;
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            return z;
        };
    };
});
var traversableConst = new Data_Traversable.Traversable(function () {
    return foldableConst;
}, function () {
    return functorConst;
}, function (dictApplicative) {
    return function (v) {
        return Control_Applicative.pure(dictApplicative)(v);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            return Control_Applicative.pure(dictApplicative)(v1);
        };
    };
});
var fieldConst = function (dictField) {
    return dictField;
};
var euclideanRingConst = function (dictEuclideanRing) {
    return dictEuclideanRing;
};
var eqConst = function (dictEq) {
    return dictEq;
};
var eq1Const = function (dictEq) {
    return new Data_Eq.Eq1(function (dictEq1) {
        return Data_Eq.eq(eqConst(dictEq));
    });
};
var ord1Const = function (dictOrd) {
    return new Data_Ord.Ord1(function () {
        return eq1Const(dictOrd.Eq0());
    }, function (dictOrd1) {
        return Data_Ord.compare(ordConst(dictOrd));
    });
};
var contravariantConst = new Data_Functor_Contravariant.Contravariant(function (v) {
    return function (v1) {
        return v1;
    };
});
var commutativeRingConst = function (dictCommutativeRing) {
    return dictCommutativeRing;
};
var boundedConst = function (dictBounded) {
    return dictBounded;
};
var booleanAlgebraConst = function (dictBooleanAlgebra) {
    return dictBooleanAlgebra;
};
var applyConst = function (dictSemigroup) {
    return new Control_Apply.Apply(function () {
        return functorConst;
    }, function (v) {
        return function (v1) {
            return Data_Semigroup.append(dictSemigroup)(v)(v1);
        };
    });
};
var bindConst = function (dictSemigroup) {
    return new Control_Bind.Bind(function () {
        return applyConst(dictSemigroup);
    }, function (v) {
        return function (v1) {
            return v;
        };
    });
};
var applicativeConst = function (dictMonoid) {
    return new Control_Applicative.Applicative(function () {
        return applyConst(dictMonoid.Semigroup0());
    }, function (v) {
        return Data_Monoid.mempty(dictMonoid);
    });
};
module.exports = {
    Const: Const,
    newtypeConst: newtypeConst,
    eqConst: eqConst,
    eq1Const: eq1Const,
    ordConst: ordConst,
    ord1Const: ord1Const,
    boundedConst: boundedConst,
    showConst: showConst,
    semigroupoidConst: semigroupoidConst,
    semigroupConst: semigroupConst,
    monoidConst: monoidConst,
    semiringConst: semiringConst,
    ringConst: ringConst,
    euclideanRingConst: euclideanRingConst,
    commutativeRingConst: commutativeRingConst,
    fieldConst: fieldConst,
    heytingAlgebraConst: heytingAlgebraConst,
    booleanAlgebraConst: booleanAlgebraConst,
    functorConst: functorConst,
    invariantConst: invariantConst,
    contravariantConst: contravariantConst,
    applyConst: applyConst,
    bindConst: bindConst,
    applicativeConst: applicativeConst,
    foldableConst: foldableConst,
    traversableConst: traversableConst
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Semigroupoid":66,"../Data.BooleanAlgebra":132,"../Data.Bounded":134,"../Data.CommutativeRing":141,"../Data.Eq":157,"../Data.EuclideanRing":159,"../Data.Field":161,"../Data.Foldable":164,"../Data.Functor":180,"../Data.Functor.Contravariant":175,"../Data.Functor.Invariant":178,"../Data.HeytingAlgebra":188,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Data.Traversable":296,"../Prelude":358}],143:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Exists = require("../Data.Exists");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Ord = require("../Data.Ord");
var Prelude = require("../Prelude");
var CoyonedaF = (function () {
    function CoyonedaF(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CoyonedaF.create = function (value0) {
        return function (value1) {
            return new CoyonedaF(value0, value1);
        };
    };
    return CoyonedaF;
})();
var Coyoneda = function (x) {
    return x;
};
var unCoyoneda = function (f) {
    return function (v) {
        return Data_Exists.runExists(function (v1) {
            return f(v1.value0)(v1.value1);
        })(v);
    };
};
var lowerCoyoneda = function (dictFunctor) {
    return unCoyoneda(Data_Functor.map(dictFunctor));
};
var eqCoyoneda = function (dictFunctor) {
    return function (dictEq1) {
        return function (dictEq) {
            return new Data_Eq.Eq(function (x) {
                return function (y) {
                    return Data_Eq.eq1(dictEq1)(dictEq)(lowerCoyoneda(dictFunctor)(x))(lowerCoyoneda(dictFunctor)(y));
                };
            });
        };
    };
};
var ordCoyoneda = function (dictFunctor) {
    return function (dictOrd1) {
        return function (dictOrd) {
            return new Data_Ord.Ord(function () {
                return eqCoyoneda(dictFunctor)(dictOrd1.Eq10())(dictOrd.Eq0());
            }, function (x) {
                return function (y) {
                    return Data_Ord.compare1(dictOrd1)(dictOrd)(lowerCoyoneda(dictFunctor)(x))(lowerCoyoneda(dictFunctor)(y));
                };
            });
        };
    };
};
var eq1Coyoneda = function (dictFunctor) {
    return function (dictEq1) {
        return new Data_Eq.Eq1(function (dictEq) {
            return Data_Eq.eq(eqCoyoneda(dictFunctor)(dictEq1)(dictEq));
        });
    };
};
var ord1Coyoneda = function (dictFunctor) {
    return function (dictOrd1) {
        return new Data_Ord.Ord1(function () {
            return eq1Coyoneda(dictFunctor)(dictOrd1.Eq10());
        }, function (dictOrd) {
            return Data_Ord.compare(ordCoyoneda(dictFunctor)(dictOrd1)(dictOrd));
        });
    };
};
var coyoneda = function (k) {
    return function (fi) {
        return Coyoneda(Data_Exists.mkExists(new CoyonedaF(k, fi)));
    };
};
var functorCoyoneda = new Data_Functor.Functor(function (f) {
    return function (v) {
        return Data_Exists.runExists(function (v1) {
            return coyoneda(function ($61) {
                return f(v1.value0($61));
            })(v1.value1);
        })(v);
    };
});
var hoistCoyoneda = function (nat) {
    return function (v) {
        return Data_Exists.runExists(function (v1) {
            return coyoneda(v1.value0)(nat(v1.value1));
        })(v);
    };
};
var liftCoyoneda = coyoneda(Control_Category.id(Control_Category.categoryFn));
var extendCoyoneda = function (dictExtend) {
    return new Control_Extend.Extend(function () {
        return functorCoyoneda;
    }, function (f) {
        return function (v) {
            return Data_Exists.runExists(function (v1) {
                return liftCoyoneda(Control_Extend.extend(dictExtend)(function ($62) {
                    return f(coyoneda(v1.value0)($62));
                })(v1.value1));
            })(v);
        };
    });
};
var monadTransCoyoneda = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return liftCoyoneda;
});
var comonadCoyoneda = function (dictComonad) {
    return new Control_Comonad.Comonad(function () {
        return extendCoyoneda(dictComonad.Extend0());
    }, function (v) {
        return Data_Exists.runExists(function (v1) {
            return v1.value0(Control_Comonad.extract(dictComonad)(v1.value1));
        })(v);
    });
};
var applyCoyoneda = function (dictApply) {
    return new Control_Apply.Apply(function () {
        return functorCoyoneda;
    }, function (f) {
        return function (g) {
            return liftCoyoneda(Control_Apply.apply(dictApply)(lowerCoyoneda(dictApply.Functor0())(f))(lowerCoyoneda(dictApply.Functor0())(g)));
        };
    });
};
var bindCoyoneda = function (dictBind) {
    return new Control_Bind.Bind(function () {
        return applyCoyoneda(dictBind.Apply0());
    }, function (v) {
        return function (f) {
            return liftCoyoneda(Data_Exists.runExists(function (v1) {
                return Control_Bind.bindFlipped(dictBind)(function ($63) {
                    return lowerCoyoneda((dictBind.Apply0()).Functor0())(f(v1.value0($63)));
                })(v1.value1);
            })(v));
        };
    });
};
var applicativeCoyoneda = function (dictApplicative) {
    return new Control_Applicative.Applicative(function () {
        return applyCoyoneda(dictApplicative.Apply0());
    }, function ($64) {
        return liftCoyoneda(Control_Applicative.pure(dictApplicative)($64));
    });
};
var monadCoyoneda = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeCoyoneda(dictMonad.Applicative0());
    }, function () {
        return bindCoyoneda(dictMonad.Bind1());
    });
};
module.exports = {
    Coyoneda: Coyoneda,
    coyoneda: coyoneda,
    unCoyoneda: unCoyoneda,
    liftCoyoneda: liftCoyoneda,
    lowerCoyoneda: lowerCoyoneda,
    hoistCoyoneda: hoistCoyoneda,
    eqCoyoneda: eqCoyoneda,
    eq1Coyoneda: eq1Coyoneda,
    ordCoyoneda: ordCoyoneda,
    ord1Coyoneda: ord1Coyoneda,
    functorCoyoneda: functorCoyoneda,
    applyCoyoneda: applyCoyoneda,
    applicativeCoyoneda: applicativeCoyoneda,
    bindCoyoneda: bindCoyoneda,
    monadCoyoneda: monadCoyoneda,
    monadTransCoyoneda: monadTransCoyoneda,
    extendCoyoneda: extendCoyoneda,
    comonadCoyoneda: comonadCoyoneda
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Comonad":13,"../Control.Extend":16,"../Control.Monad":60,"../Control.Monad.Trans.Class":57,"../Control.Semigroupoid":66,"../Data.Eq":157,"../Data.Exists":160,"../Data.Function":172,"../Data.Functor":180,"../Data.Ord":251,"../Prelude":358}],144:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Year = function (x) {
    return x;
};
var Monday = (function () {
    function Monday() {

    };
    Monday.value = new Monday();
    return Monday;
})();
var Tuesday = (function () {
    function Tuesday() {

    };
    Tuesday.value = new Tuesday();
    return Tuesday;
})();
var Wednesday = (function () {
    function Wednesday() {

    };
    Wednesday.value = new Wednesday();
    return Wednesday;
})();
var Thursday = (function () {
    function Thursday() {

    };
    Thursday.value = new Thursday();
    return Thursday;
})();
var Friday = (function () {
    function Friday() {

    };
    Friday.value = new Friday();
    return Friday;
})();
var Saturday = (function () {
    function Saturday() {

    };
    Saturday.value = new Saturday();
    return Saturday;
})();
var Sunday = (function () {
    function Sunday() {

    };
    Sunday.value = new Sunday();
    return Sunday;
})();
var January = (function () {
    function January() {

    };
    January.value = new January();
    return January;
})();
var February = (function () {
    function February() {

    };
    February.value = new February();
    return February;
})();
var March = (function () {
    function March() {

    };
    March.value = new March();
    return March;
})();
var April = (function () {
    function April() {

    };
    April.value = new April();
    return April;
})();
var May = (function () {
    function May() {

    };
    May.value = new May();
    return May;
})();
var June = (function () {
    function June() {

    };
    June.value = new June();
    return June;
})();
var July = (function () {
    function July() {

    };
    July.value = new July();
    return July;
})();
var August = (function () {
    function August() {

    };
    August.value = new August();
    return August;
})();
var September = (function () {
    function September() {

    };
    September.value = new September();
    return September;
})();
var October = (function () {
    function October() {

    };
    October.value = new October();
    return October;
})();
var November = (function () {
    function November() {

    };
    November.value = new November();
    return November;
})();
var December = (function () {
    function December() {

    };
    December.value = new December();
    return December;
})();
var Day = function (x) {
    return x;
};
var showYear = new Data_Show.Show(function (v) {
    return "(Year " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showWeekday = new Data_Show.Show(function (v) {
    if (v instanceof Monday) {
        return "Monday";
    };
    if (v instanceof Tuesday) {
        return "Tuesday";
    };
    if (v instanceof Wednesday) {
        return "Wednesday";
    };
    if (v instanceof Thursday) {
        return "Thursday";
    };
    if (v instanceof Friday) {
        return "Friday";
    };
    if (v instanceof Saturday) {
        return "Saturday";
    };
    if (v instanceof Sunday) {
        return "Sunday";
    };
    throw new Error("Failed pattern match at Data.Date.Component line 189, column 1 - line 189, column 37: " + [ v.constructor.name ]);
});
var showMonth = new Data_Show.Show(function (v) {
    if (v instanceof January) {
        return "January";
    };
    if (v instanceof February) {
        return "February";
    };
    if (v instanceof March) {
        return "March";
    };
    if (v instanceof April) {
        return "April";
    };
    if (v instanceof May) {
        return "May";
    };
    if (v instanceof June) {
        return "June";
    };
    if (v instanceof July) {
        return "July";
    };
    if (v instanceof August) {
        return "August";
    };
    if (v instanceof September) {
        return "September";
    };
    if (v instanceof October) {
        return "October";
    };
    if (v instanceof November) {
        return "November";
    };
    if (v instanceof December) {
        return "December";
    };
    throw new Error("Failed pattern match at Data.Date.Component line 104, column 1 - line 104, column 33: " + [ v.constructor.name ]);
});
var showDay = new Data_Show.Show(function (v) {
    return "(Day " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var ordYear = Data_Ord.ordInt;
var ordDay = Data_Ord.ordInt;
var genericYear = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Year" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Year))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Date.Component.Year", [ {
        sigConstructor: "Data.Date.Component.Year",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Date.Component.Year", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var genericWeekday = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Monday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Monday.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Tuesday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Tuesday.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Wednesday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Wednesday.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Thursday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Thursday.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Friday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Friday.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Saturday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Saturday.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Sunday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Sunday.value);
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Date.Component.Weekday", [ {
        sigConstructor: "Data.Date.Component.Monday",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.Tuesday",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.Wednesday",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.Thursday",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.Friday",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.Saturday",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.Sunday",
        sigValues: [  ]
    } ]);
}, function (v) {
    if (v instanceof Monday) {
        return new Data_Generic.SProd("Data.Date.Component.Monday", [  ]);
    };
    if (v instanceof Tuesday) {
        return new Data_Generic.SProd("Data.Date.Component.Tuesday", [  ]);
    };
    if (v instanceof Wednesday) {
        return new Data_Generic.SProd("Data.Date.Component.Wednesday", [  ]);
    };
    if (v instanceof Thursday) {
        return new Data_Generic.SProd("Data.Date.Component.Thursday", [  ]);
    };
    if (v instanceof Friday) {
        return new Data_Generic.SProd("Data.Date.Component.Friday", [  ]);
    };
    if (v instanceof Saturday) {
        return new Data_Generic.SProd("Data.Date.Component.Saturday", [  ]);
    };
    if (v instanceof Sunday) {
        return new Data_Generic.SProd("Data.Date.Component.Sunday", [  ]);
    };
    throw new Error("Failed pattern match at Data.Date.Component line 159, column 8 - line 159, column 50: " + [ v.constructor.name ]);
});
var genericMonth = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.January" && v.value1.length === 0)) {
        return new Data_Maybe.Just(January.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.February" && v.value1.length === 0)) {
        return new Data_Maybe.Just(February.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.March" && v.value1.length === 0)) {
        return new Data_Maybe.Just(March.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.April" && v.value1.length === 0)) {
        return new Data_Maybe.Just(April.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.May" && v.value1.length === 0)) {
        return new Data_Maybe.Just(May.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.June" && v.value1.length === 0)) {
        return new Data_Maybe.Just(June.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.July" && v.value1.length === 0)) {
        return new Data_Maybe.Just(July.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.August" && v.value1.length === 0)) {
        return new Data_Maybe.Just(August.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.September" && v.value1.length === 0)) {
        return new Data_Maybe.Just(September.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.October" && v.value1.length === 0)) {
        return new Data_Maybe.Just(October.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.November" && v.value1.length === 0)) {
        return new Data_Maybe.Just(November.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.December" && v.value1.length === 0)) {
        return new Data_Maybe.Just(December.value);
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Date.Component.Month", [ {
        sigConstructor: "Data.Date.Component.January",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.February",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.March",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.April",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.May",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.June",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.July",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.August",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.September",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.October",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.November",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.December",
        sigValues: [  ]
    } ]);
}, function (v) {
    if (v instanceof January) {
        return new Data_Generic.SProd("Data.Date.Component.January", [  ]);
    };
    if (v instanceof February) {
        return new Data_Generic.SProd("Data.Date.Component.February", [  ]);
    };
    if (v instanceof March) {
        return new Data_Generic.SProd("Data.Date.Component.March", [  ]);
    };
    if (v instanceof April) {
        return new Data_Generic.SProd("Data.Date.Component.April", [  ]);
    };
    if (v instanceof May) {
        return new Data_Generic.SProd("Data.Date.Component.May", [  ]);
    };
    if (v instanceof June) {
        return new Data_Generic.SProd("Data.Date.Component.June", [  ]);
    };
    if (v instanceof July) {
        return new Data_Generic.SProd("Data.Date.Component.July", [  ]);
    };
    if (v instanceof August) {
        return new Data_Generic.SProd("Data.Date.Component.August", [  ]);
    };
    if (v instanceof September) {
        return new Data_Generic.SProd("Data.Date.Component.September", [  ]);
    };
    if (v instanceof October) {
        return new Data_Generic.SProd("Data.Date.Component.October", [  ]);
    };
    if (v instanceof November) {
        return new Data_Generic.SProd("Data.Date.Component.November", [  ]);
    };
    if (v instanceof December) {
        return new Data_Generic.SProd("Data.Date.Component.December", [  ]);
    };
    throw new Error("Failed pattern match at Data.Date.Component line 64, column 8 - line 64, column 46: " + [ v.constructor.name ]);
});
var genericDay = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Day" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Day))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Date.Component.Day", [ {
        sigConstructor: "Data.Date.Component.Day",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Date.Component.Day", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var eqYear = Data_Eq.eqInt;
var eqWeekday = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Monday && y instanceof Monday) {
            return true;
        };
        if (x instanceof Tuesday && y instanceof Tuesday) {
            return true;
        };
        if (x instanceof Wednesday && y instanceof Wednesday) {
            return true;
        };
        if (x instanceof Thursday && y instanceof Thursday) {
            return true;
        };
        if (x instanceof Friday && y instanceof Friday) {
            return true;
        };
        if (x instanceof Saturday && y instanceof Saturday) {
            return true;
        };
        if (x instanceof Sunday && y instanceof Sunday) {
            return true;
        };
        return false;
    };
});
var ordWeekday = new Data_Ord.Ord(function () {
    return eqWeekday;
}, function (x) {
    return function (y) {
        if (x instanceof Monday && y instanceof Monday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Monday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Monday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Tuesday && y instanceof Tuesday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Tuesday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Tuesday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Wednesday && y instanceof Wednesday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Wednesday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Wednesday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Thursday && y instanceof Thursday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Thursday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Thursday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Friday && y instanceof Friday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Friday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Friday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Saturday && y instanceof Saturday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Saturday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Saturday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Sunday && y instanceof Sunday) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.Date.Component line 158, column 8 - line 158, column 42: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var eqMonth = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof January && y instanceof January) {
            return true;
        };
        if (x instanceof February && y instanceof February) {
            return true;
        };
        if (x instanceof March && y instanceof March) {
            return true;
        };
        if (x instanceof April && y instanceof April) {
            return true;
        };
        if (x instanceof May && y instanceof May) {
            return true;
        };
        if (x instanceof June && y instanceof June) {
            return true;
        };
        if (x instanceof July && y instanceof July) {
            return true;
        };
        if (x instanceof August && y instanceof August) {
            return true;
        };
        if (x instanceof September && y instanceof September) {
            return true;
        };
        if (x instanceof October && y instanceof October) {
            return true;
        };
        if (x instanceof November && y instanceof November) {
            return true;
        };
        if (x instanceof December && y instanceof December) {
            return true;
        };
        return false;
    };
});
var ordMonth = new Data_Ord.Ord(function () {
    return eqMonth;
}, function (x) {
    return function (y) {
        if (x instanceof January && y instanceof January) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof January) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof January) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof February && y instanceof February) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof February) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof February) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof March && y instanceof March) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof March) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof March) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof April && y instanceof April) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof April) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof April) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof May && y instanceof May) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof May) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof May) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof June && y instanceof June) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof June) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof June) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof July && y instanceof July) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof July) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof July) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof August && y instanceof August) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof August) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof August) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof September && y instanceof September) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof September) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof September) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof October && y instanceof October) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof October) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof October) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof November && y instanceof November) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof November) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof November) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof December && y instanceof December) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.Date.Component line 63, column 8 - line 63, column 38: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var eqDay = Data_Eq.eqInt;
var boundedYear = new Data_Bounded.Bounded(function () {
    return ordYear;
}, -271820 | 0, 275759);
var boundedWeekday = new Data_Bounded.Bounded(function () {
    return ordWeekday;
}, Monday.value, Sunday.value);
var boundedMonth = new Data_Bounded.Bounded(function () {
    return ordMonth;
}, January.value, December.value);
var boundedEnumYear = new Data_Enum.BoundedEnum(function () {
    return boundedYear;
}, function () {
    return enumYear;
}, 547580, function (v) {
    return v;
}, function (n) {
    if (n >= (-271821 | 0) && n <= 275759) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Date.Component line 37, column 1 - line 37, column 45: " + [ n.constructor.name ]);
});
var enumYear = new Data_Enum.Enum(function () {
    return ordYear;
}, function ($110) {
    return Data_Enum.toEnum(boundedEnumYear)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumYear)($110)));
}, function ($111) {
    return Data_Enum.toEnum(boundedEnumYear)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumYear)($111)));
});
var boundedEnumWeekday = new Data_Enum.BoundedEnum(function () {
    return boundedWeekday;
}, function () {
    return enumWeekday;
}, 7, function (v) {
    if (v instanceof Monday) {
        return 1;
    };
    if (v instanceof Tuesday) {
        return 2;
    };
    if (v instanceof Wednesday) {
        return 3;
    };
    if (v instanceof Thursday) {
        return 4;
    };
    if (v instanceof Friday) {
        return 5;
    };
    if (v instanceof Saturday) {
        return 6;
    };
    if (v instanceof Sunday) {
        return 7;
    };
    throw new Error("Failed pattern match at Data.Date.Component line 180, column 14 - line 189, column 1: " + [ v.constructor.name ]);
}, function (v) {
    if (v === 1) {
        return new Data_Maybe.Just(Monday.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(Tuesday.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(Wednesday.value);
    };
    if (v === 4) {
        return new Data_Maybe.Just(Thursday.value);
    };
    if (v === 5) {
        return new Data_Maybe.Just(Friday.value);
    };
    if (v === 6) {
        return new Data_Maybe.Just(Saturday.value);
    };
    if (v === 7) {
        return new Data_Maybe.Just(Sunday.value);
    };
    return Data_Maybe.Nothing.value;
});
var enumWeekday = new Data_Enum.Enum(function () {
    return ordWeekday;
}, function ($112) {
    return Data_Enum.toEnum(boundedEnumWeekday)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumWeekday)($112)));
}, function ($113) {
    return Data_Enum.toEnum(boundedEnumWeekday)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumWeekday)($113)));
});
var boundedEnumMonth = new Data_Enum.BoundedEnum(function () {
    return boundedMonth;
}, function () {
    return enumMonth;
}, 12, function (v) {
    if (v instanceof January) {
        return 1;
    };
    if (v instanceof February) {
        return 2;
    };
    if (v instanceof March) {
        return 3;
    };
    if (v instanceof April) {
        return 4;
    };
    if (v instanceof May) {
        return 5;
    };
    if (v instanceof June) {
        return 6;
    };
    if (v instanceof July) {
        return 7;
    };
    if (v instanceof August) {
        return 8;
    };
    if (v instanceof September) {
        return 9;
    };
    if (v instanceof October) {
        return 10;
    };
    if (v instanceof November) {
        return 11;
    };
    if (v instanceof December) {
        return 12;
    };
    throw new Error("Failed pattern match at Data.Date.Component line 90, column 14 - line 104, column 1: " + [ v.constructor.name ]);
}, function (v) {
    if (v === 1) {
        return new Data_Maybe.Just(January.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(February.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(March.value);
    };
    if (v === 4) {
        return new Data_Maybe.Just(April.value);
    };
    if (v === 5) {
        return new Data_Maybe.Just(May.value);
    };
    if (v === 6) {
        return new Data_Maybe.Just(June.value);
    };
    if (v === 7) {
        return new Data_Maybe.Just(July.value);
    };
    if (v === 8) {
        return new Data_Maybe.Just(August.value);
    };
    if (v === 9) {
        return new Data_Maybe.Just(September.value);
    };
    if (v === 10) {
        return new Data_Maybe.Just(October.value);
    };
    if (v === 11) {
        return new Data_Maybe.Just(November.value);
    };
    if (v === 12) {
        return new Data_Maybe.Just(December.value);
    };
    return Data_Maybe.Nothing.value;
});
var enumMonth = new Data_Enum.Enum(function () {
    return ordMonth;
}, function ($114) {
    return Data_Enum.toEnum(boundedEnumMonth)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMonth)($114)));
}, function ($115) {
    return Data_Enum.toEnum(boundedEnumMonth)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMonth)($115)));
});
var boundedDay = new Data_Bounded.Bounded(function () {
    return ordDay;
}, 1, 31);
var boundedEnumDay = new Data_Enum.BoundedEnum(function () {
    return boundedDay;
}, function () {
    return enumDay;
}, 31, function (v) {
    return v;
}, function (n) {
    if (n >= 1 && n <= 31) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Date.Component line 137, column 1 - line 137, column 43: " + [ n.constructor.name ]);
});
var enumDay = new Data_Enum.Enum(function () {
    return ordDay;
}, function ($116) {
    return Data_Enum.toEnum(boundedEnumDay)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumDay)($116)));
}, function ($117) {
    return Data_Enum.toEnum(boundedEnumDay)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumDay)($117)));
});
module.exports = {
    January: January,
    February: February,
    March: March,
    April: April,
    May: May,
    June: June,
    July: July,
    August: August,
    September: September,
    October: October,
    November: November,
    December: December,
    Monday: Monday,
    Tuesday: Tuesday,
    Wednesday: Wednesday,
    Thursday: Thursday,
    Friday: Friday,
    Saturday: Saturday,
    Sunday: Sunday,
    eqYear: eqYear,
    ordYear: ordYear,
    genericYear: genericYear,
    boundedYear: boundedYear,
    enumYear: enumYear,
    boundedEnumYear: boundedEnumYear,
    showYear: showYear,
    eqMonth: eqMonth,
    ordMonth: ordMonth,
    genericMonth: genericMonth,
    boundedMonth: boundedMonth,
    enumMonth: enumMonth,
    boundedEnumMonth: boundedEnumMonth,
    showMonth: showMonth,
    eqDay: eqDay,
    ordDay: ordDay,
    genericDay: genericDay,
    boundedDay: boundedDay,
    enumDay: enumDay,
    boundedEnumDay: boundedEnumDay,
    showDay: showDay,
    eqWeekday: eqWeekday,
    ordWeekday: ordWeekday,
    genericWeekday: genericWeekday,
    boundedWeekday: boundedWeekday,
    enumWeekday: enumWeekday,
    boundedEnumWeekday: boundedEnumWeekday,
    showWeekday: showWeekday
};

},{"../Control.Apply":7,"../Control.Semigroupoid":66,"../Data.Boolean":131,"../Data.Bounded":134,"../Data.Enum":155,"../Data.Eq":157,"../Data.Generic":186,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Data.Unit":302,"../Prelude":358}],145:[function(require,module,exports){
"use strict";

var createDate = function (y, m, d) {
  var date = new Date(Date.UTC(y, m, d));
  if (y >= 0 && y < 100) {
    date.setUTCFullYear(y);
  }
  return date;
};

exports.canonicalDateImpl = function (ctor, y, m, d) {
  var date = createDate(y, m - 1, d);
  return ctor(date.getUTCFullYear())(date.getUTCMonth() + 1)(date.getUTCDate());
};

exports.calcWeekday = function (y, m, d) {
  return createDate(y, m - 1, d).getUTCDay();
};

exports.calcDiff = function (y1, m1, d1, y2, m2, d2) {
  var dt1 = createDate(y1, m1 - 1, d1);
  var dt2 = createDate(y2, m2 - 1, d2);
  return dt1.getTime() - dt2.getTime();
};

},{}],146:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_Date_Component = require("../Data.Date.Component");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Time_Duration = require("../Data.Time.Duration");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var $$Date = (function () {
    function $$Date(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    $$Date.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new $$Date(value0, value1, value2);
            };
        };
    };
    return $$Date;
})();
var year = function (v) {
    return v.value0;
};
var weekday = function (v) {
    var n = $foreign.calcWeekday(v.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v.value1), v.value2);
    var $44 = n === 0;
    if ($44) {
        return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(7));
    };
    return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(n));
};
var showDate = new Data_Show.Show(function (v) {
    return "(Date " + (Data_Show.show(Data_Date_Component.showYear)(v.value0) + (" " + (Data_Show.show(Data_Date_Component.showMonth)(v.value1) + (" " + (Data_Show.show(Data_Date_Component.showDay)(v.value2) + ")")))));
});
var month = function (v) {
    return v.value1;
};
var isLeapYear = function (y) {
    var y$prime = Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(y);
    return y$prime % 4 === 0 && (y$prime % 400 === 0 || !(y$prime % 100 === 0));
};
var lastDayOfMonth = function (y) {
    return function (m) {
        var unsafeDay = function ($98) {
            return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)($98));
        };
        if (m instanceof Data_Date_Component.January) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.February) {
            if (isLeapYear(y)) {
                return unsafeDay(29);
            };
            if (Data_Boolean.otherwise) {
                return unsafeDay(28);
            };
        };
        if (m instanceof Data_Date_Component.March) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.April) {
            return unsafeDay(30);
        };
        if (m instanceof Data_Date_Component.May) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.June) {
            return unsafeDay(30);
        };
        if (m instanceof Data_Date_Component.July) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.August) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.September) {
            return unsafeDay(30);
        };
        if (m instanceof Data_Date_Component.October) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.November) {
            return unsafeDay(30);
        };
        if (m instanceof Data_Date_Component.December) {
            return unsafeDay(31);
        };
        throw new Error("Failed pattern match at Data.Date line 89, column 22 - line 104, column 3: " + [ m.constructor.name ]);
    };
};
var genericDate = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Date" && v.value1.length === 3)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just($$Date.create))(Data_Generic.fromSpine(Data_Date_Component.genericYear)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Date_Component.genericMonth)(v["value1"][1](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Date_Component.genericDay)(v["value1"][2](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Date.Date", [ {
        sigConstructor: "Data.Date.Date",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Date_Component.genericYear)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Date_Component.genericMonth)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Date_Component.genericDay)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Date.Date", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Date_Component.genericYear)(v.value0);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Date_Component.genericMonth)(v.value1);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Date_Component.genericDay)(v.value2);
    } ]);
});
var eqDate = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(Data_Date_Component.eqYear)(x.value0)(y.value0) && Data_Eq.eq(Data_Date_Component.eqMonth)(x.value1)(y.value1) && Data_Eq.eq(Data_Date_Component.eqDay)(x.value2)(y.value2);
    };
});
var ordDate = new Data_Ord.Ord(function () {
    return eqDate;
}, function (x) {
    return function (y) {
        var v = Data_Ord.compare(Data_Date_Component.ordYear)(x.value0)(y.value0);
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        var v1 = Data_Ord.compare(Data_Date_Component.ordMonth)(x.value1)(y.value1);
        if (v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        return Data_Ord.compare(Data_Date_Component.ordDay)(x.value2)(y.value2);
    };
});
var diff = function (dictDuration) {
    return function (v) {
        return function (v1) {
            return Data_Time_Duration.toDuration(dictDuration)($foreign.calcDiff(v.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v.value1), v.value2, v1.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v1.value1), v1.value2));
        };
    };
};
var day = function (v) {
    return v.value2;
};
var canonicalDate = function (y) {
    return function (m) {
        return function (d) {
            var mkDate = function (y$prime) {
                return function (m$prime) {
                    return function (d$prime) {
                        return new $$Date(y$prime, Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(m$prime)), d$prime);
                    };
                };
            };
            return $foreign.canonicalDateImpl(mkDate, y, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(m), d);
        };
    };
};
var exactDate = function (y) {
    return function (m) {
        return function (d) {
            var dt = new $$Date(y, m, d);
            var $97 = Data_Eq.eq(eqDate)(canonicalDate(y)(m)(d))(dt);
            if ($97) {
                return new Data_Maybe.Just(dt);
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var boundedDate = new Data_Bounded.Bounded(function () {
    return ordDate;
}, new $$Date(Data_Bounded.bottom(Data_Date_Component.boundedYear), Data_Bounded.bottom(Data_Date_Component.boundedMonth), Data_Bounded.bottom(Data_Date_Component.boundedDay)), new $$Date(Data_Bounded.top(Data_Date_Component.boundedYear), Data_Bounded.top(Data_Date_Component.boundedMonth), Data_Bounded.top(Data_Date_Component.boundedDay)));
module.exports = {
    canonicalDate: canonicalDate,
    exactDate: exactDate,
    year: year,
    month: month,
    day: day,
    weekday: weekday,
    diff: diff,
    isLeapYear: isLeapYear,
    lastDayOfMonth: lastDayOfMonth,
    eqDate: eqDate,
    ordDate: ordDate,
    genericDate: genericDate,
    boundedDate: boundedDate,
    showDate: showDate
};

},{"../Control.Apply":7,"../Control.Semigroupoid":66,"../Data.Boolean":131,"../Data.Bounded":134,"../Data.Date.Component":144,"../Data.Enum":155,"../Data.Eq":157,"../Data.EuclideanRing":159,"../Data.Function":172,"../Data.Function.Uncurried":171,"../Data.Generic":186,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Semigroup":271,"../Data.Show":276,"../Data.Time.Duration":291,"../Data.Unit":302,"../Partial.Unsafe":355,"../Prelude":358,"./foreign":145}],147:[function(require,module,exports){
"use strict";

var createDateTime = function (y, m, d, h, mi, s, ms) {
  var dateTime = new Date(Date.UTC(y, m, d, h, mi, s, ms));
  if (y >= 0 && y < 100) {
    dateTime.setUTCFullYear(y);
  }
  return dateTime;
};

exports.fromDateTimeImpl = function (y, mo, d, h, mi, s, ms) {
  return createDateTime(y, mo - 1, d, h, mi, s, ms).getTime();
};

exports.toDateTimeImpl = function (ctor) {
  return function (instant) {
    var dt = new Date(instant);
    return ctor (dt.getUTCFullYear())(dt.getUTCMonth() + 1)(dt.getUTCDate())(dt.getUTCHours())(dt.getUTCMinutes())(dt.getUTCSeconds())(dt.getUTCMilliseconds());
  };
};

},{}],148:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Apply = require("../Control.Apply");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_Date = require("../Data.Date");
var Data_Date_Component = require("../Data.Date.Component");
var Data_DateTime = require("../Data.DateTime");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Time = require("../Data.Time");
var Data_Time_Component = require("../Data.Time.Component");
var Data_Time_Duration = require("../Data.Time.Duration");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Instant = function (x) {
    return x;
};
var unInstant = function (v) {
    return v;
};
var toDateTime = (function () {
    var mkDateTime = function (y) {
        return function (mo) {
            return function (d) {
                return function (h) {
                    return function (mi) {
                        return function (s) {
                            return function (ms) {
                                return new Data_DateTime.DateTime(Data_Date.canonicalDate(y)(Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(mo)))(d), new Data_Time.Time(h, mi, s, ms));
                            };
                        };
                    };
                };
            };
        };
    };
    return $foreign.toDateTimeImpl(mkDateTime);
})();
var showInstant = new Data_Show.Show(function (v) {
    return "(Instant " + (Data_Show.show(Data_Time_Duration.showMilliseconds)(v) + ")");
});
var ordDateTime = Data_Time_Duration.ordMilliseconds;
var instant = function (v) {
    if (v >= -8.6399778816e15 && v <= 8.639977881599999e15) {
        return new Data_Maybe.Just(v);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.DateTime.Instant line 46, column 1 - line 46, column 41: " + [ v.constructor.name ]);
};
var genericDateTime = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.DateTime.Instant.Instant" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Instant))(Data_Generic.fromSpine(Data_Time_Duration.genericMilliseconds)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.DateTime.Instant.Instant", [ {
        sigConstructor: "Data.DateTime.Instant.Instant",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Time_Duration.genericMilliseconds)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.DateTime.Instant.Instant", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Time_Duration.genericMilliseconds)(v);
    } ]);
});
var fromDateTime = function (v) {
    return $foreign.fromDateTimeImpl(Data_Date.year(v.value0), Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)), Data_Date.day(v.value0), Data_Time.hour(v.value1), Data_Time.minute(v.value1), Data_Time.second(v.value1), Data_Time.millisecond(v.value1));
};
var fromDate = function (d) {
    return $foreign.fromDateTimeImpl(Data_Date.year(d), Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(d)), Data_Date.day(d), Data_Bounded.bottom(Data_Time_Component.boundedHour), Data_Bounded.bottom(Data_Time_Component.boundedMinute), Data_Bounded.bottom(Data_Time_Component.boundedSecond), Data_Bounded.bottom(Data_Time_Component.boundedMillisecond));
};
var eqDateTime = Data_Time_Duration.eqMilliseconds;
var boundedInstant = new Data_Bounded.Bounded(function () {
    return ordDateTime;
}, -8.6399778816e15, 8.639977881599999e15);
module.exports = {
    instant: instant,
    unInstant: unInstant,
    fromDateTime: fromDateTime,
    fromDate: fromDate,
    toDateTime: toDateTime,
    eqDateTime: eqDateTime,
    ordDateTime: ordDateTime,
    genericDateTime: genericDateTime,
    boundedInstant: boundedInstant,
    showInstant: showInstant
};

},{"../Control.Apply":7,"../Data.Boolean":131,"../Data.Bounded":134,"../Data.Date":146,"../Data.Date.Component":144,"../Data.DateTime":150,"../Data.Enum":155,"../Data.Eq":157,"../Data.Function.Uncurried":171,"../Data.Generic":186,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Show":276,"../Data.Time":292,"../Data.Time.Component":290,"../Data.Time.Duration":291,"../Data.Unit":302,"../Partial.Unsafe":355,"../Prelude":358,"./foreign":147}],149:[function(require,module,exports){
"use strict";

var createUTC = function (y, mo, d, h, m, s, ms) {
  var date = new Date(Date.UTC(y, mo, d, h, m, s, ms));
  if (y >= 0 && y < 100) {
    date.setUTCFullYear(y);
  }
  return date.getTime();
};

exports.calcDiff = function (rec1, rec2) {
  var msUTC1 = createUTC(rec1.year, rec1.month - 1, rec1.day, rec1.hour, rec1.minute, rec1.second, rec1.millisecond);
  var msUTC2 = createUTC(rec2.year, rec2.month - 1, rec2.day, rec2.hour, rec2.minute, rec2.second, rec2.millisecond);
  return msUTC1 - msUTC2;
};

exports.adjustImpl = function (just) {
  return function (nothing) {
    return function (offset) {
      return function (rec) {
        var msUTC = createUTC(rec.year, rec.month - 1, rec.day, rec.hour, rec.minute, rec.second, rec.millisecond);
        var dt = new Date(msUTC + offset);
        return isNaN(dt.getTime()) ? nothing : just({
          year: dt.getUTCFullYear(),
          month: dt.getUTCMonth() + 1,
          day: dt.getUTCDate(),
          hour: dt.getUTCHours(),
          minute: dt.getUTCMinutes(),
          second: dt.getUTCSeconds(),
          millisecond: dt.getUTCMilliseconds()
        });
      };
    };
  };
};

},{}],150:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Data_Bounded = require("../Data.Bounded");
var Data_Date = require("../Data.Date");
var Data_Date_Component = require("../Data.Date.Component");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Time = require("../Data.Time");
var Data_Time_Component = require("../Data.Time.Component");
var Data_Time_Duration = require("../Data.Time.Duration");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var DateTime = (function () {
    function DateTime(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    DateTime.create = function (value0) {
        return function (value1) {
            return new DateTime(value0, value1);
        };
    };
    return DateTime;
})();
var toRecord = function (v) {
    return {
        year: Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)),
        month: Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)),
        day: Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0)),
        hour: Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1)),
        minute: Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1)),
        second: Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1)),
        millisecond: Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1))
    };
};
var time = function (v) {
    return v.value1;
};
var showDateTime = new Data_Show.Show(function (v) {
    return "(DateTime " + (Data_Show.show(Data_Date.showDate)(v.value0) + (" " + (Data_Show.show(Data_Time.showTime)(v.value1) + ")")));
});
var modifyTimeF = function (dictFunctor) {
    return function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(DateTime.create(v.value0))(f(v.value1));
        };
    };
};
var modifyTime = function (f) {
    return function (v) {
        return new DateTime(v.value0, f(v.value1));
    };
};
var modifyDateF = function (dictFunctor) {
    return function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(Data_Function.flip(DateTime.create)(v.value1))(f(v.value0));
        };
    };
};
var modifyDate = function (f) {
    return function (v) {
        return new DateTime(f(v.value0), v.value1);
    };
};
var genericDateTime = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.DateTime.DateTime" && v.value1.length === 2)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(DateTime.create))(Data_Generic.fromSpine(Data_Date.genericDate)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time.genericTime)(v["value1"][1](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.DateTime.DateTime", [ {
        sigConstructor: "Data.DateTime.DateTime",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Date.genericDate)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Time.genericTime)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.DateTime.DateTime", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Date.genericDate)(v.value0);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Time.genericTime)(v.value1);
    } ]);
});
var eqDateTime = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(Data_Date.eqDate)(x.value0)(y.value0) && Data_Eq.eq(Data_Time.eqTime)(x.value1)(y.value1);
    };
});
var ordDateTime = new Data_Ord.Ord(function () {
    return eqDateTime;
}, function (x) {
    return function (y) {
        var v = Data_Ord.compare(Data_Date.ordDate)(x.value0)(y.value0);
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        return Data_Ord.compare(Data_Time.ordTime)(x.value1)(y.value1);
    };
});
var diff = function (dictDuration) {
    return function (dt1) {
        return function (dt2) {
            return Data_Time_Duration.toDuration(dictDuration)($foreign.calcDiff(toRecord(dt1), toRecord(dt2)));
        };
    };
};
var date = function (v) {
    return v.value0;
};
var boundedDateTime = new Data_Bounded.Bounded(function () {
    return ordDateTime;
}, new DateTime(Data_Bounded.bottom(Data_Date.boundedDate), Data_Bounded.bottom(Data_Time.boundedTime)), new DateTime(Data_Bounded.top(Data_Date.boundedDate), Data_Bounded.top(Data_Time.boundedTime)));
var adjust = function (dictDuration) {
    return function (d) {
        return function (dt) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)($foreign.adjustImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value)(Data_Time_Duration.fromDuration(dictDuration)(d))(toRecord(dt)))(function (rec) {
                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(DateTime.create)(Control_Bind.join(Data_Maybe.bindMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Date.exactDate)(Data_Enum.toEnum(Data_Date_Component.boundedEnumYear)(rec.year)))(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(rec.month)))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(rec.day)))))(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Time.Time.create)(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(rec.hour)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(rec.minute)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(rec.second)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(rec.millisecond)));
            });
        };
    };
};
module.exports = {
    DateTime: DateTime,
    date: date,
    modifyDate: modifyDate,
    modifyDateF: modifyDateF,
    time: time,
    modifyTime: modifyTime,
    modifyTimeF: modifyTimeF,
    adjust: adjust,
    diff: diff,
    eqDateTime: eqDateTime,
    ordDateTime: ordDateTime,
    genericDateTime: genericDateTime,
    boundedDateTime: boundedDateTime,
    showDateTime: showDateTime
};

},{"../Control.Apply":7,"../Control.Bind":11,"../Data.Bounded":134,"../Data.Date":146,"../Data.Date.Component":144,"../Data.Enum":155,"../Data.Eq":157,"../Data.Function":172,"../Data.Function.Uncurried":171,"../Data.Functor":180,"../Data.Generic":186,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Semigroup":271,"../Data.Show":276,"../Data.Time":292,"../Data.Time.Component":290,"../Data.Time.Duration":291,"../Data.Unit":302,"../Prelude":358,"./foreign":149}],151:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Data_Newtype = require("../Data.Newtype");
var Prelude = require("../Prelude");
var Distributive = function (Functor0, collect, distribute) {
    this.Functor0 = Functor0;
    this.collect = collect;
    this.distribute = distribute;
};
var distributiveIdentity = new Distributive(function () {
    return Data_Identity.functorIdentity;
}, function (dictFunctor) {
    return function (f) {
        return function ($11) {
            return Data_Identity.Identity(Data_Functor.map(dictFunctor)(function ($12) {
                return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(f($12));
            })($11));
        };
    };
}, function (dictFunctor) {
    return function ($13) {
        return Data_Identity.Identity(Data_Functor.map(dictFunctor)(Data_Newtype.unwrap(Data_Identity.newtypeIdentity))($13));
    };
});
var distribute = function (dict) {
    return dict.distribute;
};
var distributiveFunction = new Distributive(function () {
    return Data_Functor.functorFn;
}, function (dictFunctor) {
    return function (f) {
        return function ($14) {
            return distribute(distributiveFunction)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($14));
        };
    };
}, function (dictFunctor) {
    return function (a) {
        return function (e) {
            return Data_Functor.map(dictFunctor)(function (v) {
                return v(e);
            })(a);
        };
    };
});
var cotraverse = function (dictDistributive) {
    return function (dictFunctor) {
        return function (f) {
            return function ($15) {
                return Data_Functor.map(dictDistributive.Functor0())(f)(distribute(dictDistributive)(dictFunctor)($15));
            };
        };
    };
};
var collectDefault = function (dictDistributive) {
    return function (dictFunctor) {
        return function (f) {
            return function ($16) {
                return distribute(dictDistributive)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($16));
            };
        };
    };
};
var collect = function (dict) {
    return dict.collect;
};
var distributeDefault = function (dictDistributive) {
    return function (dictFunctor) {
        return collect(dictDistributive)(dictFunctor)(Control_Category.id(Control_Category.categoryFn));
    };
};
module.exports = {
    collect: collect,
    distribute: distribute,
    Distributive: Distributive,
    distributeDefault: distributeDefault,
    collectDefault: collectDefault,
    cotraverse: cotraverse,
    distributiveIdentity: distributiveIdentity,
    distributiveFunction: distributiveFunction
};

},{"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Function":172,"../Data.Functor":180,"../Data.Identity":189,"../Data.Newtype":244,"../Prelude":358}],152:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var DivisionRing = function (Ring0, recip) {
    this.Ring0 = Ring0;
    this.recip = recip;
};
var recip = function (dict) {
    return dict.recip;
};
var rightDiv = function (dictDivisionRing) {
    return function (a) {
        return function (b) {
            return Data_Semiring.mul((dictDivisionRing.Ring0()).Semiring0())(a)(recip(dictDivisionRing)(b));
        };
    };
};
var leftDiv = function (dictDivisionRing) {
    return function (a) {
        return function (b) {
            return Data_Semiring.mul((dictDivisionRing.Ring0()).Semiring0())(recip(dictDivisionRing)(b))(a);
        };
    };
};
var divisionringNumber = new DivisionRing(function () {
    return Data_Ring.ringNumber;
}, function (x) {
    return 1.0 / x;
});
module.exports = {
    DivisionRing: DivisionRing,
    recip: recip,
    leftDiv: leftDiv,
    rightDiv: rightDiv,
    divisionringNumber: divisionringNumber
};

},{"../Data.EuclideanRing":159,"../Data.Ring":267,"../Data.Semiring":273}],153:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Either = require("../Data.Either");
var Data_Void = require("../Data.Void");
var in9 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))))))));
};
var in8 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))))))));
};
var in7 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))))));
};
var in6 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))))));
};
var in5 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))));
};
var in4 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))));
};
var in3 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)));
};
var in2 = function (v) {
    return new Data_Either.Right(new Data_Either.Left(v));
};
var in10 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))))))))));
};
var in1 = Data_Either.Left.create;
var either9 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return function (y) {
                                        if (y instanceof Data_Either.Left) {
                                            return a(y.value0);
                                        };
                                        if (y instanceof Data_Either.Right) {
                                            if (y.value0 instanceof Data_Either.Left) {
                                                return b(y.value0.value0);
                                            };
                                            if (y.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0 instanceof Data_Either.Left) {
                                                    return c(y.value0.value0.value0);
                                                };
                                                if (y.value0.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                        return d(y.value0.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return e(y.value0.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                            if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                return f(y.value0.value0.value0.value0.value0.value0);
                                                            };
                                                            if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                    return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                    if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                        return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                    };
                                                                    if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                            return i(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                        };
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                            return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                        };
                                                                        throw new Error("Failed pattern match at Data.Either.Nested line 245, column 29 - line 247, column 40: " + [ y.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                    };
                                                                    throw new Error("Failed pattern match at Data.Either.Nested line 243, column 27 - line 247, column 40: " + [ y.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                };
                                                                throw new Error("Failed pattern match at Data.Either.Nested line 241, column 25 - line 247, column 40: " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                            };
                                                            throw new Error("Failed pattern match at Data.Either.Nested line 239, column 23 - line 247, column 40: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Either.Nested line 237, column 21 - line 247, column 40: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Either.Nested line 235, column 19 - line 247, column 40: " + [ y.value0.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Either.Nested line 233, column 17 - line 247, column 40: " + [ y.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Either.Nested line 231, column 15 - line 247, column 40: " + [ y.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Either.Nested line 229, column 31 - line 247, column 40: " + [ y.constructor.name ]);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var either8 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (y) {
                                    if (y instanceof Data_Either.Left) {
                                        return a(y.value0);
                                    };
                                    if (y instanceof Data_Either.Right) {
                                        if (y.value0 instanceof Data_Either.Left) {
                                            return b(y.value0.value0);
                                        };
                                        if (y.value0 instanceof Data_Either.Right) {
                                            if (y.value0.value0 instanceof Data_Either.Left) {
                                                return c(y.value0.value0.value0);
                                            };
                                            if (y.value0.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                    return d(y.value0.value0.value0.value0);
                                                };
                                                if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                        return e(y.value0.value0.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return f(y.value0.value0.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                            if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                            };
                                                            if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                    return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                    return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                throw new Error("Failed pattern match at Data.Either.Nested line 224, column 27 - line 226, column 38: " + [ y.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                            };
                                                            throw new Error("Failed pattern match at Data.Either.Nested line 222, column 25 - line 226, column 38: " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Either.Nested line 220, column 23 - line 226, column 38: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Either.Nested line 218, column 21 - line 226, column 38: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Either.Nested line 216, column 19 - line 226, column 38: " + [ y.value0.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Either.Nested line 214, column 17 - line 226, column 38: " + [ y.value0.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Either.Nested line 212, column 15 - line 226, column 38: " + [ y.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Either.Nested line 210, column 29 - line 226, column 38: " + [ y.constructor.name ]);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var either7 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (y) {
                                if (y instanceof Data_Either.Left) {
                                    return a(y.value0);
                                };
                                if (y instanceof Data_Either.Right) {
                                    if (y.value0 instanceof Data_Either.Left) {
                                        return b(y.value0.value0);
                                    };
                                    if (y.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0 instanceof Data_Either.Left) {
                                            return c(y.value0.value0.value0);
                                        };
                                        if (y.value0.value0 instanceof Data_Either.Right) {
                                            if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                return d(y.value0.value0.value0.value0);
                                            };
                                            if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                    return e(y.value0.value0.value0.value0.value0);
                                                };
                                                if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                        return f(y.value0.value0.value0.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                            return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Either.Nested line 205, column 25 - line 207, column 36: " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Either.Nested line 203, column 23 - line 207, column 36: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Either.Nested line 201, column 21 - line 207, column 36: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Either.Nested line 199, column 19 - line 207, column 36: " + [ y.value0.value0.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Either.Nested line 197, column 17 - line 207, column 36: " + [ y.value0.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Either.Nested line 195, column 15 - line 207, column 36: " + [ y.value0.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Either.Nested line 193, column 27 - line 207, column 36: " + [ y.constructor.name ]);
                            };
                        };
                    };
                };
            };
        };
    };
};
var either6 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (y) {
                            if (y instanceof Data_Either.Left) {
                                return a(y.value0);
                            };
                            if (y instanceof Data_Either.Right) {
                                if (y.value0 instanceof Data_Either.Left) {
                                    return b(y.value0.value0);
                                };
                                if (y.value0 instanceof Data_Either.Right) {
                                    if (y.value0.value0 instanceof Data_Either.Left) {
                                        return c(y.value0.value0.value0);
                                    };
                                    if (y.value0.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                            return d(y.value0.value0.value0.value0);
                                        };
                                        if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                return e(y.value0.value0.value0.value0.value0);
                                            };
                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                    return f(y.value0.value0.value0.value0.value0.value0);
                                                };
                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                    return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0);
                                                };
                                                throw new Error("Failed pattern match at Data.Either.Nested line 188, column 23 - line 190, column 34: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Either.Nested line 186, column 21 - line 190, column 34: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Either.Nested line 184, column 19 - line 190, column 34: " + [ y.value0.value0.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Either.Nested line 182, column 17 - line 190, column 34: " + [ y.value0.value0.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Either.Nested line 180, column 15 - line 190, column 34: " + [ y.value0.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Data.Either.Nested line 178, column 25 - line 190, column 34: " + [ y.constructor.name ]);
                        };
                    };
                };
            };
        };
    };
};
var either5 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (y) {
                        if (y instanceof Data_Either.Left) {
                            return a(y.value0);
                        };
                        if (y instanceof Data_Either.Right) {
                            if (y.value0 instanceof Data_Either.Left) {
                                return b(y.value0.value0);
                            };
                            if (y.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0 instanceof Data_Either.Left) {
                                    return c(y.value0.value0.value0);
                                };
                                if (y.value0.value0 instanceof Data_Either.Right) {
                                    if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                        return d(y.value0.value0.value0.value0);
                                    };
                                    if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                            return e(y.value0.value0.value0.value0.value0);
                                        };
                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                            return Data_Void.absurd(y.value0.value0.value0.value0.value0);
                                        };
                                        throw new Error("Failed pattern match at Data.Either.Nested line 173, column 21 - line 175, column 32: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Either.Nested line 171, column 19 - line 175, column 32: " + [ y.value0.value0.value0.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Either.Nested line 169, column 17 - line 175, column 32: " + [ y.value0.value0.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Data.Either.Nested line 167, column 15 - line 175, column 32: " + [ y.value0.constructor.name ]);
                        };
                        throw new Error("Failed pattern match at Data.Either.Nested line 165, column 23 - line 175, column 32: " + [ y.constructor.name ]);
                    };
                };
            };
        };
    };
};
var either4 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (y) {
                    if (y instanceof Data_Either.Left) {
                        return a(y.value0);
                    };
                    if (y instanceof Data_Either.Right) {
                        if (y.value0 instanceof Data_Either.Left) {
                            return b(y.value0.value0);
                        };
                        if (y.value0 instanceof Data_Either.Right) {
                            if (y.value0.value0 instanceof Data_Either.Left) {
                                return c(y.value0.value0.value0);
                            };
                            if (y.value0.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                    return d(y.value0.value0.value0.value0);
                                };
                                if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                    return Data_Void.absurd(y.value0.value0.value0.value0);
                                };
                                throw new Error("Failed pattern match at Data.Either.Nested line 160, column 19 - line 162, column 30: " + [ y.value0.value0.value0.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Data.Either.Nested line 158, column 17 - line 162, column 30: " + [ y.value0.value0.constructor.name ]);
                        };
                        throw new Error("Failed pattern match at Data.Either.Nested line 156, column 15 - line 162, column 30: " + [ y.value0.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Data.Either.Nested line 154, column 21 - line 162, column 30: " + [ y.constructor.name ]);
                };
            };
        };
    };
};
var either3 = function (a) {
    return function (b) {
        return function (c) {
            return function (y) {
                if (y instanceof Data_Either.Left) {
                    return a(y.value0);
                };
                if (y instanceof Data_Either.Right) {
                    if (y.value0 instanceof Data_Either.Left) {
                        return b(y.value0.value0);
                    };
                    if (y.value0 instanceof Data_Either.Right) {
                        if (y.value0.value0 instanceof Data_Either.Left) {
                            return c(y.value0.value0.value0);
                        };
                        if (y.value0.value0 instanceof Data_Either.Right) {
                            return Data_Void.absurd(y.value0.value0.value0);
                        };
                        throw new Error("Failed pattern match at Data.Either.Nested line 149, column 17 - line 151, column 28: " + [ y.value0.value0.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Data.Either.Nested line 147, column 15 - line 151, column 28: " + [ y.value0.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.Either.Nested line 145, column 19 - line 151, column 28: " + [ y.constructor.name ]);
            };
        };
    };
};
var either2 = function (a) {
    return function (b) {
        return function (y) {
            if (y instanceof Data_Either.Left) {
                return a(y.value0);
            };
            if (y instanceof Data_Either.Right) {
                if (y.value0 instanceof Data_Either.Left) {
                    return b(y.value0.value0);
                };
                if (y.value0 instanceof Data_Either.Right) {
                    return Data_Void.absurd(y.value0.value0);
                };
                throw new Error("Failed pattern match at Data.Either.Nested line 140, column 15 - line 142, column 26: " + [ y.value0.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Either.Nested line 138, column 17 - line 142, column 26: " + [ y.constructor.name ]);
        };
    };
};
var either10 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return function (j) {
                                        return function (y) {
                                            if (y instanceof Data_Either.Left) {
                                                return a(y.value0);
                                            };
                                            if (y instanceof Data_Either.Right) {
                                                if (y.value0 instanceof Data_Either.Left) {
                                                    return b(y.value0.value0);
                                                };
                                                if (y.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0 instanceof Data_Either.Left) {
                                                        return c(y.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return d(y.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                return e(y.value0.value0.value0.value0.value0);
                                                            };
                                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                    return f(y.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                    if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                        return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                                    };
                                                                    if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                            return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                        };
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                            if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                                return i(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                            };
                                                                            if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                                if (y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                                    return j(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                                };
                                                                                if (y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                                    return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                                };
                                                                                throw new Error("Failed pattern match at Data.Either.Nested line 268, column 31 - line 270, column 41: " + [ y.value0.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                            };
                                                                            throw new Error("Failed pattern match at Data.Either.Nested line 266, column 29 - line 270, column 41: " + [ y.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                        };
                                                                        throw new Error("Failed pattern match at Data.Either.Nested line 264, column 27 - line 270, column 41: " + [ y.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                    };
                                                                    throw new Error("Failed pattern match at Data.Either.Nested line 262, column 25 - line 270, column 41: " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                };
                                                                throw new Error("Failed pattern match at Data.Either.Nested line 260, column 23 - line 270, column 41: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                            };
                                                            throw new Error("Failed pattern match at Data.Either.Nested line 258, column 21 - line 270, column 41: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Either.Nested line 256, column 19 - line 270, column 41: " + [ y.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Either.Nested line 254, column 17 - line 270, column 41: " + [ y.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Either.Nested line 252, column 15 - line 270, column 41: " + [ y.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Either.Nested line 250, column 34 - line 270, column 41: " + [ y.constructor.name ]);
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var either1 = function (y) {
    if (y instanceof Data_Either.Left) {
        return y.value0;
    };
    if (y instanceof Data_Either.Right) {
        return Data_Void.absurd(y.value0);
    };
    throw new Error("Failed pattern match at Data.Either.Nested line 133, column 13 - line 135, column 24: " + [ y.constructor.name ]);
};
var at9 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left)))))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at8 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left))))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at7 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left)))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at6 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Left))))) {
                return f(y.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at5 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Left)))) {
                return f(y.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at4 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Left))) {
                return f(y.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at3 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Left)) {
                return f(y.value0.value0.value0);
            };
            return b;
        };
    };
};
var at2 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Left) {
                return f(y.value0.value0);
            };
            return b;
        };
    };
};
var at10 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left))))))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at1 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Left) {
                return f(y.value0);
            };
            return b;
        };
    };
};
module.exports = {
    in1: in1,
    in2: in2,
    in3: in3,
    in4: in4,
    in5: in5,
    in6: in6,
    in7: in7,
    in8: in8,
    in9: in9,
    in10: in10,
    at1: at1,
    at2: at2,
    at3: at3,
    at4: at4,
    at5: at5,
    at6: at6,
    at7: at7,
    at8: at8,
    at9: at9,
    at10: at10,
    either1: either1,
    either2: either2,
    either3: either3,
    either4: either4,
    either5: either5,
    either6: either6,
    either7: either7,
    either8: either8,
    either9: either9,
    either10: either10
};

},{"../Data.Either":154,"../Data.Void":305}],154:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Bitraversable = require("../Data.Bitraversable");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Left = (function () {
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    return Left;
})();
var Right = (function () {
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    return Right;
})();
var showEither = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            if (v instanceof Left) {
                return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
            };
            if (v instanceof Right) {
                return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
            };
            throw new Error("Failed pattern match at Data.Either line 160, column 1 - line 160, column 61: " + [ v.constructor.name ]);
        });
    };
};
var note = function (a) {
    return Data_Maybe.maybe(new Left(a))(Right.create);
};
var functorEither = new Data_Functor.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v1.value0);
        };
        if (v1 instanceof Right) {
            return new Right(v(v1.value0));
        };
        throw new Error("Failed pattern match at Data.Either line 36, column 1 - line 36, column 45: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var invariantEither = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorEither));
var fromRight = function (dictPartial) {
    return function (v) {
        var __unused = function (dictPartial1) {
            return function ($dollar62) {
                return $dollar62;
            };
        };
        return __unused(dictPartial)((function () {
            if (v instanceof Right) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Data.Either line 252, column 1 - line 252, column 52: " + [ v.constructor.name ]);
        })());
    };
};
var fromLeft = function (dictPartial) {
    return function (v) {
        var __unused = function (dictPartial1) {
            return function ($dollar66) {
                return $dollar66;
            };
        };
        return __unused(dictPartial)((function () {
            if (v instanceof Left) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Data.Either line 247, column 1 - line 247, column 51: " + [ v.constructor.name ]);
        })());
    };
};
var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Left) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Right) {
                return f(v.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 184, column 1 - line 184, column 47: " + [ f.constructor.name, v.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 184, column 1 - line 184, column 47: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Either line 184, column 1 - line 184, column 47: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
});
var traversableEither = new Data_Traversable.Traversable(function () {
    return foldableEither;
}, function () {
    return functorEither;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Left) {
            return Control_Applicative.pure(dictApplicative)(new Left(v.value0));
        };
        if (v instanceof Right) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Either line 200, column 1 - line 200, column 53: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Left) {
                return Control_Applicative.pure(dictApplicative)(new Left(v1.value0));
            };
            if (v1 instanceof Right) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Either line 200, column 1 - line 200, column 53: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var extendEither = new Control_Extend.Extend(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v1.value0);
        };
        return new Right(v(v1));
    };
});
var eqEither = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                if (x instanceof Left && y instanceof Left) {
                    return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                };
                if (x instanceof Right && y instanceof Right) {
                    return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
                };
                return false;
            };
        });
    };
};
var ordEither = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqEither(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function (x) {
            return function (y) {
                if (x instanceof Left && y instanceof Left) {
                    return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                };
                if (x instanceof Left) {
                    return Data_Ordering.LT.value;
                };
                if (y instanceof Left) {
                    return Data_Ordering.GT.value;
                };
                if (x instanceof Right && y instanceof Right) {
                    return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 176, column 8 - line 176, column 64: " + [ x.constructor.name, y.constructor.name ]);
            };
        });
    };
};
var eq1Either = function (dictEq) {
    return new Data_Eq.Eq1(function (dictEq1) {
        return Data_Eq.eq(eqEither(dictEq)(dictEq1));
    });
};
var ord1Either = function (dictOrd) {
    return new Data_Ord.Ord1(function () {
        return eq1Either(dictOrd.Eq0());
    }, function (dictOrd1) {
        return Data_Ord.compare(ordEither(dictOrd)(dictOrd1));
    });
};
var either = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Left) {
                return v(v2.value0);
            };
            if (v2 instanceof Right) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 229, column 1 - line 229, column 64: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));
var choose = function (dictAlt) {
    return function (a) {
        return function (b) {
            return Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Left.create)(a))(Data_Functor.map(dictAlt.Functor0())(Right.create)(b));
        };
    };
};
var boundedEither = function (dictBounded) {
    return function (dictBounded1) {
        return new Data_Bounded.Bounded(function () {
            return ordEither(dictBounded.Ord0())(dictBounded1.Ord0());
        }, new Left(Data_Bounded.bottom(dictBounded)), new Right(Data_Bounded.top(dictBounded1)));
    };
};
var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Left) {
                return new Left(v(v2.value0));
            };
            if (v2 instanceof Right) {
                return new Right(v1(v2.value0));
            };
            throw new Error("Failed pattern match at Data.Either line 43, column 1 - line 43, column 45: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
});
var bifoldableEither = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(v2.value0);
                };
                if (v2 instanceof Right) {
                    return v1(v2.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 192, column 1 - line 192, column 47: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
}, function (v) {
    return function (v1) {
        return function (z) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(z)(v2.value0);
                };
                if (v2 instanceof Right) {
                    return v1(z)(v2.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 192, column 1 - line 192, column 47: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
            };
        };
    };
}, function (v) {
    return function (v1) {
        return function (z) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(v2.value0)(z);
                };
                if (v2 instanceof Right) {
                    return v1(v2.value0)(z);
                };
                throw new Error("Failed pattern match at Data.Either line 192, column 1 - line 192, column 47: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
            };
        };
    };
});
var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableEither;
}, function () {
    return bifunctorEither;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Left) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Left.create)(v.value0);
        };
        if (v instanceof Right) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Either line 206, column 1 - line 206, column 53: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Left.create)(v(v2.value0));
                };
                if (v2 instanceof Right) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v1(v2.value0));
                };
                throw new Error("Failed pattern match at Data.Either line 206, column 1 - line 206, column 53: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
});
var applyEither = new Control_Apply.Apply(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return new Left(v.value0);
        };
        if (v instanceof Right) {
            return Data_Functor.map(functorEither)(v.value0)(v1);
        };
        throw new Error("Failed pattern match at Data.Either line 79, column 1 - line 79, column 41: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindEither = new Control_Bind.Bind(function () {
    return applyEither;
}, either(function (e) {
    return function (v) {
        return new Left(e);
    };
})(function (a) {
    return function (f) {
        return f(a);
    };
}));
var semigroupEither = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (x) {
        return function (y) {
            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semigroup.append(dictSemigroup))(x))(y);
        };
    });
};
var semiringEither = function (dictSemiring) {
    return new Data_Semiring.Semiring(function (x) {
        return function (y) {
            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semiring.add(dictSemiring))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semiring.mul(dictSemiring))(x))(y);
        };
    }, new Right(Data_Semiring.one(dictSemiring)), new Right(Data_Semiring.zero(dictSemiring)));
};
var applicativeEither = new Control_Applicative.Applicative(function () {
    return applyEither;
}, Right.create);
var monadEither = new Control_Monad.Monad(function () {
    return applicativeEither;
}, function () {
    return bindEither;
});
var altEither = new Control_Alt.Alt(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return v1;
        };
        return v;
    };
});
module.exports = {
    Left: Left,
    Right: Right,
    either: either,
    choose: choose,
    isLeft: isLeft,
    isRight: isRight,
    fromLeft: fromLeft,
    fromRight: fromRight,
    note: note,
    hush: hush,
    functorEither: functorEither,
    invariantEither: invariantEither,
    bifunctorEither: bifunctorEither,
    applyEither: applyEither,
    applicativeEither: applicativeEither,
    altEither: altEither,
    bindEither: bindEither,
    monadEither: monadEither,
    extendEither: extendEither,
    showEither: showEither,
    eqEither: eqEither,
    eq1Either: eq1Either,
    ordEither: ordEither,
    ord1Either: ord1Either,
    boundedEither: boundedEither,
    foldableEither: foldableEither,
    bifoldableEither: bifoldableEither,
    traversableEither: traversableEither,
    bitraversableEither: bitraversableEither,
    semiringEither: semiringEither,
    semigroupEither: semigroupEither
};

},{"../Control.Alt":2,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Extend":16,"../Control.Monad":60,"../Data.Bifoldable":123,"../Data.Bifunctor":129,"../Data.Bitraversable":130,"../Data.Bounded":134,"../Data.Eq":157,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.Functor.Invariant":178,"../Data.Maybe":234,"../Data.Monoid":242,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Data.Traversable":296,"../Prelude":358}],155:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_Char = require("../Data.Char");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Cardinality = function (x) {
    return x;
};
var Enum = function (Ord0, pred, succ) {
    this.Ord0 = Ord0;
    this.pred = pred;
    this.succ = succ;
};
var BoundedEnum = function (Bounded0, Enum1, cardinality, fromEnum, toEnum) {
    this.Bounded0 = Bounded0;
    this.Enum1 = Enum1;
    this.cardinality = cardinality;
    this.fromEnum = fromEnum;
    this.toEnum = toEnum;
};
var toEnum = function (dict) {
    return dict.toEnum;
};
var succ = function (dict) {
    return dict.succ;
};
var pred = function (dict) {
    return dict.pred;
};
var ordCardinality = Data_Ord.ordInt;
var newtypeCardinality = new Data_Newtype.Newtype(function (n) {
    return n;
}, Cardinality);
var intStepFromTo = function (step) {
    return function (from) {
        return function (to) {
            return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(function (e) {
                var $54 = e <= to;
                if ($54) {
                    return Data_Maybe.Just.create(new Data_Tuple.Tuple(e, e + step | 0));
                };
                return Data_Maybe.Nothing.value;
            })(from);
        };
    };
};
var fromEnum = function (dict) {
    return dict.fromEnum;
};
var toEnumWithDefaults = function (dictBoundedEnum) {
    return function (b) {
        return function (t) {
            return function (x) {
                var v = toEnum(dictBoundedEnum)(x);
                if (v instanceof Data_Maybe.Just) {
                    return v.value0;
                };
                if (v instanceof Data_Maybe.Nothing) {
                    var $57 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                    if ($57) {
                        return b;
                    };
                    return t;
                };
                throw new Error("Failed pattern match at Data.Enum line 272, column 28 - line 274, column 56: " + [ v.constructor.name ]);
            };
        };
    };
};
var eqCardinality = Data_Eq.eqInt;
var enumUnit = new Enum(function () {
    return Data_Ord.ordUnit;
}, Data_Function["const"](Data_Maybe.Nothing.value), Data_Function["const"](Data_Maybe.Nothing.value));
var enumTuple = function (dictEnum) {
    return function (dictBoundedEnum) {
        return new Enum(function () {
            return Data_Tuple.ordTuple(dictEnum.Ord0())((dictBoundedEnum.Enum1()).Ord0());
        }, function (v) {
            return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.top(dictBoundedEnum.Bounded0())))(pred(dictEnum)(v.value0)))(function ($101) {
                return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0)($101));
            })(pred(dictBoundedEnum.Enum1())(v.value1));
        }, function (v) {
            return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.bottom(dictBoundedEnum.Bounded0())))(succ(dictEnum)(v.value0)))(function ($102) {
                return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0)($102));
            })(succ(dictBoundedEnum.Enum1())(v.value1));
        });
    };
};
var enumOrdering = new Enum(function () {
    return Data_Ord.ordOrdering;
}, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_Ordering.EQ) {
        return new Data_Maybe.Just(Data_Ordering.LT.value);
    };
    if (v instanceof Data_Ordering.GT) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    throw new Error("Failed pattern match at Data.Enum line 84, column 1 - line 84, column 39: " + [ v.constructor.name ]);
}, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    if (v instanceof Data_Ordering.EQ) {
        return new Data_Maybe.Just(Data_Ordering.GT.value);
    };
    if (v instanceof Data_Ordering.GT) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Enum line 84, column 1 - line 84, column 39: " + [ v.constructor.name ]);
});
var enumMaybe = function (dictBoundedEnum) {
    return new Enum(function () {
        return Data_Maybe.ordMaybe((dictBoundedEnum.Enum1()).Ord0());
    }, function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Nothing.value;
        };
        if (v instanceof Data_Maybe.Just) {
            return Data_Maybe.Just.create(pred(dictBoundedEnum.Enum1())(v.value0));
        };
        throw new Error("Failed pattern match at Data.Enum line 92, column 1 - line 92, column 54: " + [ v.constructor.name ]);
    }, function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Just.create(new Data_Maybe.Just(Data_Bounded.bottom(dictBoundedEnum.Bounded0())));
        };
        if (v instanceof Data_Maybe.Just) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(dictBoundedEnum.Enum1())(v.value0));
        };
        throw new Error("Failed pattern match at Data.Enum line 92, column 1 - line 92, column 54: " + [ v.constructor.name ]);
    });
};
var enumInt = new Enum(function () {
    return Data_Ord.ordInt;
}, function (n) {
    var $70 = n > Data_Bounded.bottom(Data_Bounded.boundedInt);
    if ($70) {
        return new Data_Maybe.Just(n - 1 | 0);
    };
    return Data_Maybe.Nothing.value;
}, function (n) {
    var $71 = n < Data_Bounded.top(Data_Bounded.boundedInt);
    if ($71) {
        return new Data_Maybe.Just(n + 1 | 0);
    };
    return Data_Maybe.Nothing.value;
});
var enumFromTo = function (dictEnum) {
    return function (dictUnfoldable) {
        return function (from) {
            return function (to) {
                var go = function (mx) {
                    return Control_Bind.bind(Data_Maybe.bindMaybe)(mx)(function (v) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(Data_Ord.lessThanOrEq(dictEnum.Ord0())(v)(to)))(function () {
                            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(v, succ(dictEnum)(v)));
                        });
                    });
                };
                return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_Maybe.Just(from));
            };
        };
    };
};
var enumFromThenTo = function (dictBoundedEnum) {
    return function (a) {
        return function (b) {
            return function (c) {
                var c$prime = fromEnum(dictBoundedEnum)(c);
                var b$prime = fromEnum(dictBoundedEnum)(b);
                var a$prime = fromEnum(dictBoundedEnum)(a);
                return Data_Functor.map(Data_Functor.functorArray)(function ($103) {
                    return Data_Maybe.fromJust()(toEnum(dictBoundedEnum)($103));
                })(intStepFromTo(b$prime - a$prime | 0)(a$prime)(c$prime));
            };
        };
    };
};
var enumEither = function (dictBoundedEnum) {
    return function (dictBoundedEnum1) {
        return new Enum(function () {
            return Data_Either.ordEither((dictBoundedEnum.Enum1()).Ord0())((dictBoundedEnum1.Enum1()).Ord0());
        }, function (v) {
            if (v instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($104) {
                    return Data_Maybe.Just.create(Data_Either.Left.create($104));
                })(pred(dictBoundedEnum.Enum1())(v.value0));
            };
            if (v instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Left(Data_Bounded.top(dictBoundedEnum.Bounded0()))))(function ($105) {
                    return Data_Maybe.Just.create(Data_Either.Right.create($105));
                })(pred(dictBoundedEnum1.Enum1())(v.value0));
            };
            throw new Error("Failed pattern match at Data.Enum line 98, column 1 - line 98, column 75: " + [ v.constructor.name ]);
        }, function (v) {
            if (v instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Right(Data_Bounded.bottom(dictBoundedEnum1.Bounded0()))))(function ($106) {
                    return Data_Maybe.Just.create(Data_Either.Left.create($106));
                })(succ(dictBoundedEnum.Enum1())(v.value0));
            };
            if (v instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($107) {
                    return Data_Maybe.Just.create(Data_Either.Right.create($107));
                })(succ(dictBoundedEnum1.Enum1())(v.value0));
            };
            throw new Error("Failed pattern match at Data.Enum line 98, column 1 - line 98, column 75: " + [ v.constructor.name ]);
        });
    };
};
var enumBoolean = new Enum(function () {
    return Data_Ord.ordBoolean;
}, function (v) {
    if (v) {
        return new Data_Maybe.Just(false);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    if (!v) {
        return new Data_Maybe.Just(true);
    };
    return Data_Maybe.Nothing.value;
});
var diag = function (a) {
    return new Data_Tuple.Tuple(a, a);
};
var downFrom = function (dictEnum) {
    return function (dictUnfoldable) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function ($108) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(pred(dictEnum)($108));
        });
    };
};
var upFrom = function (dictEnum) {
    return function (dictUnfoldable) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function ($109) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(succ(dictEnum)($109));
        });
    };
};
var upFromIncluding = function (dictEnum) {
    return function (dictUnfoldable) {
        return function (x) {
            return new Data_NonEmpty.NonEmpty(x, upFrom(dictEnum)(dictUnfoldable)(x));
        };
    };
};
var defaultToEnum = function (dictBounded) {
    return function (dictEnum) {
        return function (n) {
            if (n < 0) {
                return Data_Maybe.Nothing.value;
            };
            if (n === 0) {
                return new Data_Maybe.Just(Data_Bounded.bottom(dictBounded));
            };
            if (Data_Boolean.otherwise) {
                return Control_Bind.bind(Data_Maybe.bindMaybe)(defaultToEnum(dictBounded)(dictEnum)(n - 1 | 0))(succ(dictEnum));
            };
            throw new Error("Failed pattern match at Data.Enum line 251, column 1 - line 251, column 65: " + [ n.constructor.name ]);
        };
    };
};
var defaultSucc = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(fromEnum$prime(a) + 1 | 0);
        };
    };
};
var defaultPred = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(fromEnum$prime(a) - 1 | 0);
        };
    };
};
var defaultFromEnum = function (dictEnum) {
    return function ($110) {
        return Data_Maybe.maybe(0)(function (prd) {
            return defaultFromEnum(dictEnum)(prd) + 1 | 0;
        })(pred(dictEnum)($110));
    };
};
var defaultCardinality = function (dictBounded) {
    return function (dictEnum) {
        var defaultCardinality$prime = function (i) {
            return function ($111) {
                return Data_Maybe.maybe(i)(defaultCardinality$prime(i + 1 | 0))(succ(dictEnum)($111));
            };
        };
        return Cardinality(defaultCardinality$prime(1)(Data_Bounded.bottom(dictBounded)));
    };
};
var charToEnum = function (v) {
    if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
        return Data_Maybe.Just.create(Data_Char.fromCharCode(v));
    };
    return Data_Maybe.Nothing.value;
};
var enumChar = new Enum(function () {
    return Data_Ord.ordChar;
}, defaultPred(charToEnum)(Data_Char.toCharCode), defaultSucc(charToEnum)(Data_Char.toCharCode));
var cardinality = function (dict) {
    return dict.cardinality;
};
var boundedEnumUnit = new BoundedEnum(function () {
    return Data_Bounded.boundedUnit;
}, function () {
    return enumUnit;
}, 1, Data_Function["const"](0), function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(Data_Unit.unit);
    };
    return Data_Maybe.Nothing.value;
});
var boundedEnumTuple = function (dictBoundedEnum) {
    return function (dictBoundedEnum1) {
        return new BoundedEnum(function () {
            return Data_Tuple.boundedTuple(dictBoundedEnum.Bounded0())(dictBoundedEnum1.Bounded0());
        }, function () {
            return enumTuple(dictBoundedEnum.Enum1())(dictBoundedEnum1);
        }, Cardinality(Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) * Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum1)) | 0), (function () {
            var from = function (v) {
                return function (v1) {
                    return (fromEnum(dictBoundedEnum)(v1.value0) * v | 0) + fromEnum(dictBoundedEnum1)(v1.value1) | 0;
                };
            };
            return from(cardinality(dictBoundedEnum1));
        })(), (function () {
            var to = function (v) {
                return function (n) {
                    return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(toEnum(dictBoundedEnum)(n / v | 0)))(toEnum(dictBoundedEnum1)(n % v));
                };
            };
            return to(cardinality(dictBoundedEnum1));
        })());
    };
};
var boundedEnumOrdering = new BoundedEnum(function () {
    return Data_Bounded.boundedOrdering;
}, function () {
    return enumOrdering;
}, 3, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return 0;
    };
    if (v instanceof Data_Ordering.EQ) {
        return 1;
    };
    if (v instanceof Data_Ordering.GT) {
        return 2;
    };
    throw new Error("Failed pattern match at Data.Enum line 200, column 1 - line 200, column 53: " + [ v.constructor.name ]);
}, function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(Data_Ordering.LT.value);
    };
    if (v === 1) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(Data_Ordering.GT.value);
    };
    return Data_Maybe.Nothing.value;
});
var boundedEnumMaybe = function (dictBoundedEnum) {
    return new BoundedEnum(function () {
        return Data_Maybe.boundedMaybe(dictBoundedEnum.Bounded0());
    }, function () {
        return enumMaybe(dictBoundedEnum);
    }, Cardinality(Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) + 1 | 0), function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return 0;
        };
        if (v instanceof Data_Maybe.Just) {
            return fromEnum(dictBoundedEnum)(v.value0) + 1 | 0;
        };
        throw new Error("Failed pattern match at Data.Enum line 210, column 1 - line 210, column 68: " + [ v.constructor.name ]);
    }, function (v) {
        if (v === 0) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value);
        };
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(toEnum(dictBoundedEnum)(v - 1 | 0));
    });
};
var boundedEnumEither = function (dictBoundedEnum) {
    return function (dictBoundedEnum1) {
        return new BoundedEnum(function () {
            return Data_Either.boundedEither(dictBoundedEnum.Bounded0())(dictBoundedEnum1.Bounded0());
        }, function () {
            return enumEither(dictBoundedEnum)(dictBoundedEnum1);
        }, Cardinality(Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) + Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum1)) | 0), function (v) {
            if (v instanceof Data_Either.Left) {
                return fromEnum(dictBoundedEnum)(v.value0);
            };
            if (v instanceof Data_Either.Right) {
                return fromEnum(dictBoundedEnum1)(v.value0) + Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) | 0;
            };
            throw new Error("Failed pattern match at Data.Enum line 217, column 1 - line 217, column 89: " + [ v.constructor.name ]);
        }, function (n) {
            var to = function (v) {
                if (n >= 0 && n < v) {
                    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Left.create)(toEnum(dictBoundedEnum)(n));
                };
                if (Data_Boolean.otherwise) {
                    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Right.create)(toEnum(dictBoundedEnum1)(n - v | 0));
                };
                throw new Error("Failed pattern match at Data.Enum line 224, column 5 - line 224, column 46: " + [ v.constructor.name ]);
            };
            return to(cardinality(dictBoundedEnum));
        });
    };
};
var boundedEnumChar = new BoundedEnum(function () {
    return Data_Bounded.boundedChar;
}, function () {
    return enumChar;
}, Data_Char.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - Data_Char.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, Data_Char.toCharCode, charToEnum);
var boundedEnumBoolean = new BoundedEnum(function () {
    return Data_Bounded.boundedBoolean;
}, function () {
    return enumBoolean;
}, 2, function (v) {
    if (!v) {
        return 0;
    };
    if (v) {
        return 1;
    };
    throw new Error("Failed pattern match at Data.Enum line 181, column 1 - line 181, column 51: " + [ v.constructor.name ]);
}, function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(false);
    };
    if (v === 1) {
        return new Data_Maybe.Just(true);
    };
    return Data_Maybe.Nothing.value;
});
module.exports = {
    Enum: Enum,
    succ: succ,
    pred: pred,
    defaultSucc: defaultSucc,
    defaultPred: defaultPred,
    enumFromTo: enumFromTo,
    enumFromThenTo: enumFromThenTo,
    upFrom: upFrom,
    upFromIncluding: upFromIncluding,
    downFrom: downFrom,
    Cardinality: Cardinality,
    BoundedEnum: BoundedEnum,
    cardinality: cardinality,
    toEnum: toEnum,
    fromEnum: fromEnum,
    toEnumWithDefaults: toEnumWithDefaults,
    defaultCardinality: defaultCardinality,
    defaultToEnum: defaultToEnum,
    defaultFromEnum: defaultFromEnum,
    newtypeCardinality: newtypeCardinality,
    eqCardinality: eqCardinality,
    ordCardinality: ordCardinality,
    enumBoolean: enumBoolean,
    enumInt: enumInt,
    enumChar: enumChar,
    enumUnit: enumUnit,
    enumOrdering: enumOrdering,
    enumMaybe: enumMaybe,
    enumEither: enumEither,
    enumTuple: enumTuple,
    boundedEnumBoolean: boundedEnumBoolean,
    boundedEnumChar: boundedEnumChar,
    boundedEnumUnit: boundedEnumUnit,
    boundedEnumOrdering: boundedEnumOrdering,
    boundedEnumMaybe: boundedEnumMaybe,
    boundedEnumEither: boundedEnumEither,
    boundedEnumTuple: boundedEnumTuple
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.MonadPlus":61,"../Control.MonadZero":62,"../Control.Semigroupoid":66,"../Data.Boolean":131,"../Data.Bounded":134,"../Data.Char":138,"../Data.Either":154,"../Data.Eq":157,"../Data.EuclideanRing":159,"../Data.Function":172,"../Data.Functor":180,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.Newtype":244,"../Data.NonEmpty":245,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Ring":267,"../Data.Semiring":273,"../Data.Tuple":298,"../Data.Unfoldable":300,"../Data.Unit":302,"../Partial.Unsafe":355,"../Prelude":358}],156:[function(require,module,exports){
"use strict";

exports.refEq = function (r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs.length !== ys.length) return false;
      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }
      return true;
    };
  };
};

},{}],157:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Eq = function (eq) {
    this.eq = eq;
};
var Eq1 = function (eq1) {
    this.eq1 = eq1;
};
var eqVoid = new Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var eqUnit = new Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var eqString = new Eq($foreign.refEq);
var eqNumber = new Eq($foreign.refEq);
var eqInt = new Eq($foreign.refEq);
var eqChar = new Eq($foreign.refEq);
var eqBoolean = new Eq($foreign.refEq);
var eq1 = function (dict) {
    return dict.eq1;
};
var eq = function (dict) {
    return dict.eq;
};
var eqArray = function (dictEq) {
    return new Eq($foreign.eqArrayImpl(eq(dictEq)));
};
var eq1Array = new Eq1(function (dictEq) {
    return eq(eqArray(dictEq));
});
var notEq = function (dictEq) {
    return function (x) {
        return function (y) {
            return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
        };
    };
};
var notEq1 = function (dictEq1) {
    return function (dictEq) {
        return function (x) {
            return function (y) {
                return eq(eqBoolean)(eq1(dictEq1)(dictEq)(x)(y))(false);
            };
        };
    };
};
module.exports = {
    Eq: Eq,
    eq: eq,
    notEq: notEq,
    Eq1: Eq1,
    eq1: eq1,
    notEq1: notEq1,
    eqBoolean: eqBoolean,
    eqInt: eqInt,
    eqNumber: eqNumber,
    eqChar: eqChar,
    eqString: eqString,
    eqUnit: eqUnit,
    eqVoid: eqVoid,
    eqArray: eqArray,
    eq1Array: eq1Array
};

},{"../Data.Unit":302,"../Data.Void":305,"./foreign":156}],158:[function(require,module,exports){
"use strict";

exports.intDegree = function (x) {
  return Math.min(Math.abs(x), 2147483647);
};

exports.intDiv = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.intMod = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};

},{}],159:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Eq = require("../Data.Eq");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
    this.CommutativeRing0 = CommutativeRing0;
    this.degree = degree;
    this.div = div;
    this.mod = mod;
};
var mod = function (dict) {
    return dict.mod;
};
var gcd = function ($copy_dictEq) {
    return function ($copy_dictEuclideanRing) {
        return function ($copy_a) {
            return function ($copy_b) {
                var $tco_var_dictEq = $copy_dictEq;
                var $tco_var_dictEuclideanRing = $copy_dictEuclideanRing;
                var $tco_var_a = $copy_a;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(dictEq, dictEuclideanRing, a, b) {
                    var $7 = Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                    if ($7) {
                        $tco_done = true;
                        return a;
                    };
                    $tco_var_dictEq = dictEq;
                    $tco_var_dictEuclideanRing = dictEuclideanRing;
                    $tco_var_a = b;
                    $copy_b = mod(dictEuclideanRing)(a)(b);
                    return;
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_dictEq, $tco_var_dictEuclideanRing, $tco_var_a, $copy_b);
                };
                return $tco_result;
            };
        };
    };
};
var euclideanRingNumber = new EuclideanRing(function () {
    return Data_CommutativeRing.commutativeRingNumber;
}, function (v) {
    return 1;
}, $foreign.numDiv, function (v) {
    return function (v1) {
        return 0.0;
    };
});
var euclideanRingInt = new EuclideanRing(function () {
    return Data_CommutativeRing.commutativeRingInt;
}, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
var div = function (dict) {
    return dict.div;
};
var lcm = function (dictEq) {
    return function (dictEuclideanRing) {
        return function (a) {
            return function (b) {
                var $8 = Data_Eq.eq(dictEq)(a)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())) || Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                if ($8) {
                    return Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0());
                };
                return div(dictEuclideanRing)(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(a)(b))(gcd(dictEq)(dictEuclideanRing)(a)(b));
            };
        };
    };
};
var degree = function (dict) {
    return dict.degree;
};
module.exports = {
    EuclideanRing: EuclideanRing,
    degree: degree,
    div: div,
    mod: mod,
    gcd: gcd,
    lcm: lcm,
    euclideanRingInt: euclideanRingInt,
    euclideanRingNumber: euclideanRingNumber
};

},{"../Data.BooleanAlgebra":132,"../Data.CommutativeRing":141,"../Data.Eq":157,"../Data.HeytingAlgebra":188,"../Data.Ring":267,"../Data.Semiring":273,"./foreign":158}],160:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce");
var runExists = Unsafe_Coerce.unsafeCoerce;
var mkExists = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    mkExists: mkExists,
    runExists: runExists
};

},{"../Unsafe.Coerce":366}],161:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_DivisionRing = require("../Data.DivisionRing");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Field = function (EuclideanRing0) {
    this.EuclideanRing0 = EuclideanRing0;
};
var fieldNumber = new Field(function () {
    return Data_EuclideanRing.euclideanRingNumber;
});
module.exports = {
    Field: Field,
    fieldNumber: fieldNumber
};

},{"../Data.CommutativeRing":141,"../Data.DivisionRing":152,"../Data.EuclideanRing":159,"../Data.Ring":267,"../Data.Semiring":273}],162:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Either = require("../Data.Either");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Map = require("../Data.Map");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var Filterable = function (Functor0, filter, filterMap, partition, partitionMap) {
    this.Functor0 = Functor0;
    this.filter = filter;
    this.filterMap = filterMap;
    this.partition = partition;
    this.partitionMap = partitionMap;
};
var partitionMap = function (dict) {
    return dict.partitionMap;
};
var partitioned = function (dictFilterable) {
    return partitionMap(dictFilterable)(Control_Category.id(Control_Category.categoryFn));
};
var partition = function (dict) {
    return dict.partition;
};
var maybeBool = function (p) {
    return function (x) {
        var $33 = p(x);
        if ($33) {
            return new Data_Maybe.Just(x);
        };
        return Data_Maybe.Nothing.value;
    };
};
var filterableList = new Filterable(function () {
    return Data_List_Types.functorList;
}, Data_List.filter, function (p) {
    return Data_List.mapMaybe(p);
}, function (p) {
    return function (xs) {
        var select = function (x) {
            return function (v) {
                var $36 = p(x);
                if ($36) {
                    return {
                        no: v.no,
                        yes: new Data_List_Types.Cons(x, v.yes)
                    };
                };
                return {
                    no: new Data_List_Types.Cons(x, v.no),
                    yes: v.yes
                };
            };
        };
        return Data_Foldable.foldr(Data_List_Types.foldableList)(select)({
            no: Data_List_Types.Nil.value,
            yes: Data_List_Types.Nil.value
        })(xs);
    };
}, function (p) {
    return function (xs) {
        var select = function (x) {
            return function (v) {
                var v1 = p(x);
                if (v1 instanceof Data_Either.Left) {
                    return {
                        left: new Data_List_Types.Cons(v1.value0, v.left),
                        right: v.right
                    };
                };
                if (v1 instanceof Data_Either.Right) {
                    return {
                        left: v.left,
                        right: new Data_List_Types.Cons(v1.value0, v.right)
                    };
                };
                throw new Error("Failed pattern match at Data.Filterable line 173, column 36 - line 175, column 83: " + [ v1.constructor.name ]);
            };
        };
        return Data_Foldable.foldr(Data_List_Types.foldableList)(select)({
            left: Data_List_Types.Nil.value,
            right: Data_List_Types.Nil.value
        })(xs);
    };
});
var filterableArray = new Filterable(function () {
    return Data_Functor.functorArray;
}, Data_Array.filter, Data_Array.mapMaybe, Data_Array.partition, function (p) {
    var go = function (acc) {
        return function (x) {
            var v = p(x);
            if (v instanceof Data_Either.Left) {
                var $47 = {};
                for (var $48 in acc) {
                    if ({}.hasOwnProperty.call(acc, $48)) {
                        $47[$48] = acc[$48];
                    };
                };
                $47.left = Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc.left)([ v.value0 ]);
                return $47;
            };
            if (v instanceof Data_Either.Right) {
                var $51 = {};
                for (var $52 in acc) {
                    if ({}.hasOwnProperty.call(acc, $52)) {
                        $51[$52] = acc[$52];
                    };
                };
                $51.right = Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc.right)([ v.value0 ]);
                return $51;
            };
            throw new Error("Failed pattern match at Data.Filterable line 132, column 16 - line 134, column 50: " + [ v.constructor.name ]);
        };
    };
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(go)({
        left: [  ],
        right: [  ]
    });
});
var filterMap = function (dict) {
    return dict.filterMap;
};
var filtered = function (dictFilterable) {
    return filterMap(dictFilterable)(Control_Category.id(Control_Category.categoryFn));
};
var partitionDefaultFilterMap = function (dictFilterable) {
    return function (p) {
        return function (xs) {
            return {
                yes: filterMap(dictFilterable)(maybeBool(p))(xs),
                no: filterMap(dictFilterable)(maybeBool(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(p)))(xs)
            };
        };
    };
};
var filterDefaultPartition = function (dictFilterable) {
    return function (p) {
        return function (xs) {
            return (partition(dictFilterable)(p)(xs)).yes;
        };
    };
};
var filterDefault = function (dictFilterable) {
    return function ($88) {
        return filterMap(dictFilterable)(maybeBool($88));
    };
};
var filter = function (dict) {
    return dict.filter;
};
var partitionDefaultFilter = function (dictFilterable) {
    return function (p) {
        return function (xs) {
            return {
                yes: filter(dictFilterable)(p)(xs),
                no: filter(dictFilterable)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(p))(xs)
            };
        };
    };
};
var eitherBool = function (p) {
    return function (x) {
        var $55 = p(x);
        if ($55) {
            return new Data_Either.Right(x);
        };
        return new Data_Either.Left(x);
    };
};
var filterDefaultPartitionMap = function (dictFilterable) {
    return function (p) {
        return function (xs) {
            return (partitionMap(dictFilterable)(eitherBool(p))(xs)).right;
        };
    };
};
var partitionDefault = function (dictFilterable) {
    return function (p) {
        return function (xs) {
            var o = partitionMap(dictFilterable)(eitherBool(p))(xs);
            return {
                no: o.left,
                yes: o.right
            };
        };
    };
};
var filterableEither = function (dictMonoid) {
    return new Filterable(function () {
        return Data_Either.functorEither;
    }, function (p) {
        return filterDefault(filterableEither(dictMonoid))(p);
    }, function (p) {
        return function (v) {
            if (v instanceof Data_Either.Left) {
                return new Data_Either.Left(v.value0);
            };
            if (v instanceof Data_Either.Right) {
                var v1 = p(v.value0);
                if (v1 instanceof Data_Maybe.Nothing) {
                    return new Data_Either.Left(Data_Monoid.mempty(dictMonoid));
                };
                if (v1 instanceof Data_Maybe.Just) {
                    return new Data_Either.Right(v1.value0);
                };
                throw new Error("Failed pattern match at Data.Filterable line 163, column 27 - line 165, column 22: " + [ v1.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Filterable line 154, column 1 - line 154, column 63: " + [ p.constructor.name, v.constructor.name ]);
        };
    }, function (p) {
        return partitionDefault(filterableEither(dictMonoid))(p);
    }, function (p) {
        return function (v) {
            if (v instanceof Data_Either.Left) {
                return {
                    left: new Data_Either.Left(v.value0),
                    right: new Data_Either.Left(v.value0)
                };
            };
            if (v instanceof Data_Either.Right) {
                var v1 = p(v.value0);
                if (v1 instanceof Data_Either.Left) {
                    return {
                        left: new Data_Either.Right(v1.value0),
                        right: new Data_Either.Left(Data_Monoid.mempty(dictMonoid))
                    };
                };
                if (v1 instanceof Data_Either.Right) {
                    return {
                        left: new Data_Either.Left(Data_Monoid.mempty(dictMonoid)),
                        right: new Data_Either.Right(v1.value0)
                    };
                };
                throw new Error("Failed pattern match at Data.Filterable line 156, column 30 - line 158, column 53: " + [ v1.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Filterable line 154, column 1 - line 154, column 63: " + [ p.constructor.name, v.constructor.name ]);
        };
    });
};
var filterableMap = function (dictOrd) {
    return new Filterable(function () {
        return Data_Map.functorMap;
    }, function (p) {
        return filterDefault(filterableMap(dictOrd))(p);
    }, function (p) {
        return function (xs) {
            var toList = Data_Map.toUnfoldable(Data_List_Types.unfoldableList);
            var select = function (v) {
                return function (m) {
                    return Data_Map.alter(dictOrd)(Data_Function["const"](p(v.value1)))(v.value0)(m);
                };
            };
            return Data_Foldable.foldr(Data_List_Types.foldableList)(select)(Data_Map.empty)(toList(xs));
        };
    }, function (p) {
        return partitionDefault(filterableMap(dictOrd))(p);
    }, function (p) {
        return function (xs) {
            var toList = Data_Map.toUnfoldable(Data_List_Types.unfoldableList);
            var select = function (v) {
                return function (v1) {
                    var v2 = p(v.value1);
                    if (v2 instanceof Data_Either.Left) {
                        return {
                            left: Data_Map.insert(dictOrd)(v.value0)(v2.value0)(v1.left),
                            right: v1.right
                        };
                    };
                    if (v2 instanceof Data_Either.Right) {
                        return {
                            left: v1.left,
                            right: Data_Map.insert(dictOrd)(v.value0)(v2.value0)(v1.right)
                        };
                    };
                    throw new Error("Failed pattern match at Data.Filterable line 198, column 44 - line 200, column 57: " + [ v2.constructor.name ]);
                };
            };
            return Data_Foldable.foldr(Data_List_Types.foldableList)(select)({
                left: Data_Map.empty,
                right: Data_Map.empty
            })(toList(xs));
        };
    });
};
var filterableMaybe = new Filterable(function () {
    return Data_Maybe.functorMaybe;
}, function (p) {
    return filterDefault(filterableMaybe)(p);
}, Control_Bind.bindFlipped(Data_Maybe.bindMaybe), function (p) {
    return partitionDefault(filterableMaybe)(p);
}, function (p) {
    return function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return {
                left: Data_Maybe.Nothing.value,
                right: Data_Maybe.Nothing.value
            };
        };
        if (v instanceof Data_Maybe.Just) {
            var v1 = p(v.value0);
            if (v1 instanceof Data_Either.Left) {
                return {
                    left: new Data_Maybe.Just(v1.value0),
                    right: Data_Maybe.Nothing.value
                };
            };
            if (v1 instanceof Data_Either.Right) {
                return {
                    left: Data_Maybe.Nothing.value,
                    right: new Data_Maybe.Just(v1.value0)
                };
            };
            throw new Error("Failed pattern match at Data.Filterable line 144, column 29 - line 146, column 48: " + [ v1.constructor.name ]);
        };
        throw new Error("Failed pattern match at Data.Filterable line 142, column 1 - line 142, column 45: " + [ p.constructor.name, v.constructor.name ]);
    };
});
var cleared = function (dictFilterable) {
    return filterMap(dictFilterable)(Data_Function["const"](Data_Maybe.Nothing.value));
};
module.exports = {
    Filterable: Filterable,
    partitionMap: partitionMap,
    partition: partition,
    filterMap: filterMap,
    filter: filter,
    eitherBool: eitherBool,
    partitionDefault: partitionDefault,
    partitionDefaultFilter: partitionDefaultFilter,
    partitionDefaultFilterMap: partitionDefaultFilterMap,
    maybeBool: maybeBool,
    filterDefault: filterDefault,
    filterDefaultPartition: filterDefaultPartition,
    filterDefaultPartitionMap: filterDefaultPartitionMap,
    partitioned: partitioned,
    filtered: filtered,
    cleared: cleared,
    filterableArray: filterableArray,
    filterableMaybe: filterableMaybe,
    filterableEither: filterableEither,
    filterableList: filterableList,
    filterableMap: filterableMap
};

},{"../Control.Bind":11,"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Array":122,"../Data.Either":154,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.HeytingAlgebra":188,"../Data.List":230,"../Data.List.Types":229,"../Data.Map":231,"../Data.Maybe":234,"../Data.Monoid":242,"../Data.Semigroup":271,"../Data.Tuple":298,"../Prelude":358}],163:[function(require,module,exports){
"use strict";

exports.foldrArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
      }
      return acc;
    };
  };
};

exports.foldlArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
      }
      return acc;
    };
  };
};

},{}],164:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid = require("../Data.Monoid");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Endo = require("../Data.Monoid.Endo");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Foldable = function (foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
};
var foldr = function (dict) {
    return dict.foldr;
};
var $$null = function (dictFoldable) {
    return foldr(dictFoldable)(function (v) {
        return function (v1) {
            return false;
        };
    })(true);
};
var oneOf = function (dictFoldable) {
    return function (dictPlus) {
        return foldr(dictFoldable)(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));
    };
};
var oneOfMap = function (dictFoldable) {
    return function (dictPlus) {
        return function (f) {
            return foldr(dictFoldable)(function ($183) {
                return Control_Alt.alt(dictPlus.Alt0())(f($183));
            })(Control_Plus.empty(dictPlus));
        };
    };
};
var traverse_ = function (dictApplicative) {
    return function (dictFoldable) {
        return function (f) {
            return foldr(dictFoldable)(function ($184) {
                return Control_Apply.applySecond(dictApplicative.Apply0())(f($184));
            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
        };
    };
};
var for_ = function (dictApplicative) {
    return function (dictFoldable) {
        return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
    };
};
var sequence_ = function (dictApplicative) {
    return function (dictFoldable) {
        return traverse_(dictApplicative)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
    };
};
var foldl = function (dict) {
    return dict.foldl;
};
var intercalate = function (dictFoldable) {
    return function (dictMonoid) {
        return function (sep) {
            return function (xs) {
                var go = function (v) {
                    return function (x) {
                        if (v.init) {
                            return {
                                init: false,
                                acc: x
                            };
                        };
                        return {
                            init: false,
                            acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                        };
                    };
                };
                return (foldl(dictFoldable)(go)({
                    init: true,
                    acc: Data_Monoid.mempty(dictMonoid)
                })(xs)).acc;
            };
        };
    };
};
var length = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(function (c) {
            return function (v) {
                return Data_Semiring.add(dictSemiring)(Data_Semiring.one(dictSemiring))(c);
            };
        })(Data_Semiring.zero(dictSemiring));
    };
};
var maximumBy = function (dictFoldable) {
    return function (cmp) {
        var max$prime = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v1);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just((function () {
                        var $106 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);
                        if ($106) {
                            return v.value0;
                        };
                        return v1;
                    })());
                };
                throw new Error("Failed pattern match at Data.Foldable line 352, column 3 - line 352, column 27: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
    };
};
var maximum = function (dictOrd) {
    return function (dictFoldable) {
        return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));
    };
};
var minimumBy = function (dictFoldable) {
    return function (cmp) {
        var min$prime = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v1);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just((function () {
                        var $110 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.LT.value);
                        if ($110) {
                            return v.value0;
                        };
                        return v1;
                    })());
                };
                throw new Error("Failed pattern match at Data.Foldable line 365, column 3 - line 365, column 27: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
    };
};
var minimum = function (dictOrd) {
    return function (dictFoldable) {
        return minimumBy(dictFoldable)(Data_Ord.compare(dictOrd));
    };
};
var product = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));
    };
};
var sum = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
    };
};
var foldableMultiplicative = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableMaybe = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Data_Maybe.Just) {
                return f(v.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 129, column 1 - line 129, column 41: " + [ f.constructor.name, v.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return v(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 129, column 1 - line 129, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return v(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Foldable line 129, column 1 - line 129, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
});
var foldableDual = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableDisj = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableConj = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableAdditive = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldMapDefaultR = function (dictFoldable) {
    return function (dictMonoid) {
        return function (f) {
            return foldr(dictFoldable)(function (x) {
                return function (acc) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldableArray = new Foldable(function (dictMonoid) {
    return foldMapDefaultR(foldableArray)(dictMonoid);
}, $foreign.foldlArray, $foreign.foldrArray);
var foldMapDefaultL = function (dictFoldable) {
    return function (dictMonoid) {
        return function (f) {
            return foldl(dictFoldable)(function (acc) {
                return function (x) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(x));
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldMap = function (dict) {
    return dict.foldMap;
};
var foldableFirst = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldableLast = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldlDefault = function (dictFoldable) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($185) {
                    return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(c)($185)));
                })(xs)))(u);
            };
        };
    };
};
var foldrDefault = function (dictFoldable) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo)(function ($186) {
                    return Data_Monoid_Endo.Endo(c($186));
                })(xs))(u);
            };
        };
    };
};
var surroundMap = function (dictFoldable) {
    return function (dictSemigroup) {
        return function (d) {
            return function (t) {
                return function (f) {
                    var joined = function (a) {
                        return function (m) {
                            return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(a))(m));
                        };
                    };
                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo)(joined)(f))(d);
                };
            };
        };
    };
};
var surround = function (dictFoldable) {
    return function (dictSemigroup) {
        return function (d) {
            return surroundMap(dictFoldable)(dictSemigroup)(d)(Control_Category.id(Control_Category.categoryFn));
        };
    };
};
var foldM = function (dictFoldable) {
    return function (dictMonad) {
        return function (f) {
            return function (a0) {
                return foldl(dictFoldable)(function (ma) {
                    return function (b) {
                        return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f)(b));
                    };
                })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
            };
        };
    };
};
var fold = function (dictFoldable) {
    return function (dictMonoid) {
        return foldMap(dictFoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn));
    };
};
var findMap = function (dictFoldable) {
    return function (p) {
        var go = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return p(v1);
                };
                return v;
            };
        };
        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
    };
};
var find = function (dictFoldable) {
    return function (p) {
        var go = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing && p(v1)) {
                    return new Data_Maybe.Just(v1);
                };
                return v;
            };
        };
        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
    };
};
var any = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
    };
};
var elem = function (dictFoldable) {
    return function (dictEq) {
        return function ($187) {
            return any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(dictEq)($187));
        };
    };
};
var notElem = function (dictFoldable) {
    return function (dictEq) {
        return function (x) {
            return function ($188) {
                return !elem(dictFoldable)(dictEq)(x)($188);
            };
        };
    };
};
var or = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return any(dictFoldable)(dictHeytingAlgebra)(Control_Category.id(Control_Category.categoryFn));
    };
};
var all = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
    };
};
var and = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return all(dictFoldable)(dictHeytingAlgebra)(Control_Category.id(Control_Category.categoryFn));
    };
};
module.exports = {
    Foldable: Foldable,
    foldr: foldr,
    foldl: foldl,
    foldMap: foldMap,
    foldrDefault: foldrDefault,
    foldlDefault: foldlDefault,
    foldMapDefaultL: foldMapDefaultL,
    foldMapDefaultR: foldMapDefaultR,
    fold: fold,
    foldM: foldM,
    traverse_: traverse_,
    for_: for_,
    sequence_: sequence_,
    oneOf: oneOf,
    oneOfMap: oneOfMap,
    intercalate: intercalate,
    surroundMap: surroundMap,
    surround: surround,
    and: and,
    or: or,
    all: all,
    any: any,
    sum: sum,
    product: product,
    elem: elem,
    notElem: notElem,
    find: find,
    findMap: findMap,
    maximum: maximum,
    maximumBy: maximumBy,
    minimum: minimum,
    minimumBy: minimumBy,
    "null": $$null,
    length: length,
    foldableArray: foldableArray,
    foldableMaybe: foldableMaybe,
    foldableFirst: foldableFirst,
    foldableLast: foldableLast,
    foldableAdditive: foldableAdditive,
    foldableDual: foldableDual,
    foldableDisj: foldableDisj,
    foldableConj: foldableConj,
    foldableMultiplicative: foldableMultiplicative
};

},{"../Control.Alt":2,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Plus":65,"../Control.Semigroupoid":66,"../Data.Eq":157,"../Data.Function":172,"../Data.Functor":180,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.Maybe.First":232,"../Data.Maybe.Last":233,"../Data.Monoid":242,"../Data.Monoid.Additive":236,"../Data.Monoid.Conj":237,"../Data.Monoid.Disj":238,"../Data.Monoid.Dual":239,"../Data.Monoid.Endo":240,"../Data.Monoid.Multiplicative":241,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Unit":302,"../Prelude":358,"./foreign":163}],165:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid = require("../Data.Monoid");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Endo = require("../Data.Monoid.Endo");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Tuple = (function () {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
})();
var FoldableWithIndex = function (Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
    this.Foldable0 = Foldable0;
    this.foldMapWithIndex = foldMapWithIndex;
    this.foldlWithIndex = foldlWithIndex;
    this.foldrWithIndex = foldrWithIndex;
};
var foldrWithIndex = function (dict) {
    return dict.foldrWithIndex;
};
var traverseWithIndex_ = function (dictApplicative) {
    return function (dictFoldableWithIndex) {
        return function (f) {
            return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                return function ($41) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(f(i)($41));
                };
            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
        };
    };
};
var forWithIndex_ = function (dictApplicative) {
    return function (dictFoldableWithIndex) {
        return Data_Function.flip(traverseWithIndex_(dictApplicative)(dictFoldableWithIndex));
    };
};
var foldlWithIndex = function (dict) {
    return dict.foldlWithIndex;
};
var foldableWithIndexMultiplicative = new FoldableWithIndex(function () {
    return Data_Foldable.foldableMultiplicative;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableMultiplicative)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
});
var foldableWithIndexMaybe = new FoldableWithIndex(function () {
    return Data_Foldable.foldableMaybe;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
});
var foldableWithIndexLast = new FoldableWithIndex(function () {
    return Data_Foldable.foldableLast;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableLast)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableLast)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableLast)(f(Data_Unit.unit));
});
var foldableWithIndexFirst = new FoldableWithIndex(function () {
    return Data_Foldable.foldableFirst;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableFirst)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
});
var foldableWithIndexDual = new FoldableWithIndex(function () {
    return Data_Foldable.foldableDual;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableDual)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableDual)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableDual)(f(Data_Unit.unit));
});
var foldableWithIndexDisj = new FoldableWithIndex(function () {
    return Data_Foldable.foldableDisj;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableDisj)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
});
var foldableWithIndexConj = new FoldableWithIndex(function () {
    return Data_Foldable.foldableConj;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableConj)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableConj)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableConj)(f(Data_Unit.unit));
});
var foldableWithIndexAdditive = new FoldableWithIndex(function () {
    return Data_Foldable.foldableAdditive;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableAdditive)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
});
var foldWithIndexM = function (dictFoldableWithIndex) {
    return function (dictMonad) {
        return function (f) {
            return function (a0) {
                return foldlWithIndex(dictFoldableWithIndex)(function (i) {
                    return function (ma) {
                        return function (b) {
                            return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f(i))(b));
                        };
                    };
                })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
            };
        };
    };
};
var foldMapWithIndexDefaultR = function (dictFoldableWithIndex) {
    return function (dictMonoid) {
        return function (f) {
            return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                return function (x) {
                    return function (acc) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
                    };
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldableWithIndexArray = new FoldableWithIndex(function () {
    return Data_Foldable.foldableArray;
}, function (dictMonoid) {
    return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
}, function (f) {
    return function (z) {
        return function ($42) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (y) {
                return function (v) {
                    return f(v.value0)(y)(v.value1);
                };
            })(z)(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create)($42));
        };
    };
}, function (f) {
    return function (z) {
        return function ($43) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
                return function (y) {
                    return f(v.value0)(v.value1)(y);
                };
            })(z)(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create)($43));
        };
    };
});
var foldMapWithIndexDefaultL = function (dictFoldableWithIndex) {
    return function (dictMonoid) {
        return function (f) {
            return foldlWithIndex(dictFoldableWithIndex)(function (i) {
                return function (acc) {
                    return function (x) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)(x));
                    };
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldMapWithIndex = function (dict) {
    return dict.foldMapWithIndex;
};
var foldlWithIndexDefault = function (dictFoldableWithIndex) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function (i) {
                    return function ($44) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(c(i))($44)));
                    };
                })(xs)))(u);
            };
        };
    };
};
var foldrWithIndexDefault = function (dictFoldableWithIndex) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo)(function (i) {
                    return function ($45) {
                        return Data_Monoid_Endo.Endo(c(i)($45));
                    };
                })(xs))(u);
            };
        };
    };
};
var surroundMapWithIndex = function (dictFoldableWithIndex) {
    return function (dictSemigroup) {
        return function (d) {
            return function (t) {
                return function (f) {
                    var joined = function (i) {
                        return function (a) {
                            return function (m) {
                                return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(i)(a))(m));
                            };
                        };
                    };
                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo)(joined)(f))(d);
                };
            };
        };
    };
};
var findWithIndex = function (dictFoldableWithIndex) {
    return function (p) {
        var go = function (i) {
            return function (v) {
                return function (v1) {
                    if (v instanceof Data_Maybe.Nothing && p(i)(v1)) {
                        return new Data_Maybe.Just(v1);
                    };
                    return v;
                };
            };
        };
        return foldlWithIndex(dictFoldableWithIndex)(go)(Data_Maybe.Nothing.value);
    };
};
var anyWithIndex = function (dictFoldableWithIndex) {
    return function (dictHeytingAlgebra) {
        return function (t) {
            return function ($46) {
                return Data_Newtype.unwrap(Data_Monoid_Disj.newtypeDisj)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra))(function (i) {
                    return function ($47) {
                        return Data_Monoid_Disj.Disj(t(i)($47));
                    };
                })($46));
            };
        };
    };
};
var allWithIndex = function (dictFoldableWithIndex) {
    return function (dictHeytingAlgebra) {
        return function (t) {
            return function ($48) {
                return Data_Newtype.unwrap(Data_Monoid_Conj.newtypeConj)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra))(function (i) {
                    return function ($49) {
                        return Data_Monoid_Conj.Conj(t(i)($49));
                    };
                })($48));
            };
        };
    };
};
module.exports = {
    FoldableWithIndex: FoldableWithIndex,
    foldrWithIndex: foldrWithIndex,
    foldlWithIndex: foldlWithIndex,
    foldMapWithIndex: foldMapWithIndex,
    foldrWithIndexDefault: foldrWithIndexDefault,
    foldlWithIndexDefault: foldlWithIndexDefault,
    foldMapWithIndexDefaultR: foldMapWithIndexDefaultR,
    foldMapWithIndexDefaultL: foldMapWithIndexDefaultL,
    foldWithIndexM: foldWithIndexM,
    traverseWithIndex_: traverseWithIndex_,
    forWithIndex_: forWithIndex_,
    surroundMapWithIndex: surroundMapWithIndex,
    allWithIndex: allWithIndex,
    anyWithIndex: anyWithIndex,
    findWithIndex: findWithIndex,
    foldableWithIndexArray: foldableWithIndexArray,
    foldableWithIndexMaybe: foldableWithIndexMaybe,
    foldableWithIndexFirst: foldableWithIndexFirst,
    foldableWithIndexLast: foldableWithIndexLast,
    foldableWithIndexAdditive: foldableWithIndexAdditive,
    foldableWithIndexDual: foldableWithIndexDual,
    foldableWithIndexDisj: foldableWithIndexDisj,
    foldableWithIndexConj: foldableWithIndexConj,
    foldableWithIndexMultiplicative: foldableWithIndexMultiplicative
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Semigroupoid":66,"../Data.Foldable":164,"../Data.Function":172,"../Data.FunctorWithIndex":182,"../Data.Maybe":234,"../Data.Maybe.First":232,"../Data.Maybe.Last":233,"../Data.Monoid":242,"../Data.Monoid.Additive":236,"../Data.Monoid.Conj":237,"../Data.Monoid.Disj":238,"../Data.Monoid.Dual":239,"../Data.Monoid.Endo":240,"../Data.Monoid.Multiplicative":241,"../Data.Newtype":244,"../Data.Semigroup":271,"../Data.Unit":302,"../Prelude":358}],166:[function(require,module,exports){
"use strict";

exports.unsafeReadPropImpl = function (f, s, key, value) {
  return value == null ? f : s(value[key]);
};

exports.unsafeHasOwnProperty = function (prop, value) {
  return Object.prototype.hasOwnProperty.call(value, prop);
};

exports.unsafeHasProperty = function (prop, value) {
  return prop in value;
};

},{}],167:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Data_Eq = require("../Data.Eq");
var Data_Foreign = require("../Data.Foreign");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Identity = require("../Data.Identity");
var Data_List_NonEmpty = require("../Data.List.NonEmpty");
var Prelude = require("../Prelude");
var Index = function (errorAt, hasOwnProperty, hasProperty, index) {
    this.errorAt = errorAt;
    this.hasOwnProperty = hasOwnProperty;
    this.hasProperty = hasProperty;
    this.index = index;
};
var Indexable = function (ix) {
    this.ix = ix;
};
var unsafeReadProp = function (k) {
    return function (value) {
        return $foreign.unsafeReadPropImpl(Data_Foreign.fail(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
    };
};
var readProp = unsafeReadProp;
var readIndex = unsafeReadProp;
var ix = function (dict) {
    return dict.ix;
};
var index = function (dict) {
    return dict.index;
};
var indexableExceptT = new Indexable(function (dictIndex) {
    return function (f) {
        return function (i) {
            return Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Function.flip(index(dictIndex))(i))(f);
        };
    };
});
var indexableForeign = new Indexable(function (dictIndex) {
    return index(dictIndex);
});
var hasPropertyImpl = function (v) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
            return $foreign.unsafeHasProperty(v, value);
        };
        return false;
    };
};
var hasProperty = function (dict) {
    return dict.hasProperty;
};
var hasOwnPropertyImpl = function (v) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
            return $foreign.unsafeHasOwnProperty(v, value);
        };
        return false;
    };
};
var indexInt = new Index(Data_Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readIndex));
var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readProp));
var hasOwnProperty = function (dict) {
    return dict.hasOwnProperty;
};
var errorAt = function (dict) {
    return dict.errorAt;
};
module.exports = {
    Index: Index,
    Indexable: Indexable,
    readProp: readProp,
    readIndex: readIndex,
    ix: ix,
    index: index,
    hasProperty: hasProperty,
    hasOwnProperty: hasOwnProperty,
    errorAt: errorAt,
    indexString: indexString,
    indexInt: indexInt,
    indexableForeign: indexableForeign,
    indexableExceptT: indexableExceptT
};

},{"../Control.Applicative":5,"../Control.Bind":11,"../Control.Monad.Except.Trans":41,"../Data.Eq":157,"../Data.Foreign":169,"../Data.Function":172,"../Data.Function.Uncurried":171,"../Data.HeytingAlgebra":188,"../Data.Identity":189,"../Data.List.NonEmpty":228,"../Prelude":358,"./foreign":166}],168:[function(require,module,exports){
"use strict";

exports.toForeign = function (value) {
  return value;
};

exports.unsafeFromForeign = function (value) {
  return value;
};

exports.typeOf = function (value) {
  return typeof value;
};

exports.tagOf = function (value) {
  return Object.prototype.toString.call(value).slice(8, -1);
};

exports.isNull = function (value) {
  return value === null;
};

exports.isUndefined = function (value) {
  return value === undefined;
};

exports.isArray = Array.isArray || function (value) {
  return Object.prototype.toString.call(value) === "[object Array]";
};

},{}],169:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Identity = require("../Data.Identity");
var Data_Int = require("../Data.Int");
var Data_List_NonEmpty = require("../Data.List.NonEmpty");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Prelude = require("../Prelude");
var ForeignError = (function () {
    function ForeignError(value0) {
        this.value0 = value0;
    };
    ForeignError.create = function (value0) {
        return new ForeignError(value0);
    };
    return ForeignError;
})();
var TypeMismatch = (function () {
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    return TypeMismatch;
})();
var ErrorAtIndex = (function () {
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    return ErrorAtIndex;
})();
var ErrorAtProperty = (function () {
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    return ErrorAtProperty;
})();
var JSONError = (function () {
    function JSONError(value0) {
        this.value0 = value0;
    };
    JSONError.create = function (value0) {
        return new JSONError(value0);
    };
    return JSONError;
})();
var showForeignError = new Data_Show.Show(function (v) {
    if (v instanceof ForeignError) {
        return "(ForeignError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
    };
    if (v instanceof ErrorAtIndex) {
        return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    };
    if (v instanceof ErrorAtProperty) {
        return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    };
    if (v instanceof JSONError) {
        return "(JSONError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
    };
    if (v instanceof TypeMismatch) {
        return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
    };
    throw new Error("Failed pattern match at Data.Foreign line 64, column 1 - line 64, column 47: " + [ v.constructor.name ]);
});
var renderForeignError = function (v) {
    if (v instanceof ForeignError) {
        return v.value0;
    };
    if (v instanceof ErrorAtIndex) {
        return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
    };
    if (v instanceof ErrorAtProperty) {
        return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
    };
    if (v instanceof JSONError) {
        return "JSON error: " + v.value0;
    };
    if (v instanceof TypeMismatch) {
        return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
    };
    throw new Error("Failed pattern match at Data.Foreign line 74, column 1 - line 74, column 45: " + [ v.constructor.name ]);
};
var readUndefined = function (value) {
    if ($foreign.isUndefined(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
    };
    if (Data_Boolean.otherwise) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
    };
    throw new Error("Failed pattern match at Data.Foreign line 155, column 1 - line 155, column 46: " + [ value.constructor.name ]);
};
var readNullOrUndefined = function (value) {
    if ($foreign.isNull(value) || $foreign.isUndefined(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
    };
    if (Data_Boolean.otherwise) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
    };
    throw new Error("Failed pattern match at Data.Foreign line 160, column 1 - line 160, column 52: " + [ value.constructor.name ]);
};
var readNull = function (value) {
    if ($foreign.isNull(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
    };
    if (Data_Boolean.otherwise) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
    };
    throw new Error("Failed pattern match at Data.Foreign line 150, column 1 - line 150, column 41: " + [ value.constructor.name ]);
};
var fail = function ($121) {
    return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($121));
};
var readArray = function (value) {
    if ($foreign.isArray(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
    };
    if (Data_Boolean.otherwise) {
        return fail(new TypeMismatch("array", $foreign.tagOf(value)));
    };
    throw new Error("Failed pattern match at Data.Foreign line 145, column 1 - line 145, column 42: " + [ value.constructor.name ]);
};
var unsafeReadTagged = function (tag) {
    return function (value) {
        if ($foreign.tagOf(value) === tag) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
        };
        if (Data_Boolean.otherwise) {
            return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
        };
        throw new Error("Failed pattern match at Data.Foreign line 104, column 1 - line 104, column 55: " + [ tag.constructor.name, value.constructor.name ]);
    };
};
var readBoolean = unsafeReadTagged("Boolean");
var readNumber = unsafeReadTagged("Number");
var readInt = function (value) {
    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));
    var fromNumber = function ($122) {
        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Int.fromNumber($122));
    };
    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromNumber))(readNumber(value));
};
var readString = unsafeReadTagged("String");
var readChar = function (value) {
    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Char", $foreign.tagOf(value))));
    var fromString = function ($123) {
        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_String.toChar($123));
    };
    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromString))(readString(value));
};
var eqForeignError = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof ForeignError && y instanceof ForeignError) {
            return x.value0 === y.value0;
        };
        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
            return x.value0 === y.value0 && x.value1 === y.value1;
        };
        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
        };
        if (x instanceof JSONError && y instanceof JSONError) {
            return x.value0 === y.value0;
        };
        return false;
    };
});
var ordForeignError = new Data_Ord.Ord(function () {
    return eqForeignError;
}, function (x) {
    return function (y) {
        if (x instanceof ForeignError && y instanceof ForeignError) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        if (x instanceof ForeignError) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ForeignError) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
        };
        if (x instanceof TypeMismatch) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TypeMismatch) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
            var v = Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtIndex) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ErrorAtIndex) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtProperty) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ErrorAtProperty) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof JSONError && y instanceof JSONError) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        throw new Error("Failed pattern match at Data.Foreign line 62, column 8 - line 62, column 52: " + [ x.constructor.name, y.constructor.name ]);
    };
});
module.exports = {
    ForeignError: ForeignError,
    TypeMismatch: TypeMismatch,
    ErrorAtIndex: ErrorAtIndex,
    ErrorAtProperty: ErrorAtProperty,
    JSONError: JSONError,
    renderForeignError: renderForeignError,
    unsafeReadTagged: unsafeReadTagged,
    readString: readString,
    readChar: readChar,
    readBoolean: readBoolean,
    readNumber: readNumber,
    readInt: readInt,
    readArray: readArray,
    readNull: readNull,
    readUndefined: readUndefined,
    readNullOrUndefined: readNullOrUndefined,
    fail: fail,
    eqForeignError: eqForeignError,
    ordForeignError: ordForeignError,
    showForeignError: showForeignError,
    toForeign: $foreign.toForeign,
    unsafeFromForeign: $foreign.unsafeFromForeign,
    typeOf: $foreign.typeOf,
    tagOf: $foreign.tagOf,
    isNull: $foreign.isNull,
    isUndefined: $foreign.isUndefined,
    isArray: $foreign.isArray
};

},{"../Control.Applicative":5,"../Control.Monad.Error.Class":40,"../Control.Monad.Except":42,"../Control.Monad.Except.Trans":41,"../Control.Semigroupoid":66,"../Data.Boolean":131,"../Data.Either":154,"../Data.Eq":157,"../Data.Function":172,"../Data.HeytingAlgebra":188,"../Data.Identity":189,"../Data.Int":193,"../Data.List.NonEmpty":228,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Semigroup":271,"../Data.Show":276,"../Data.String":288,"../Prelude":358,"./foreign":168}],170:[function(require,module,exports){
"use strict";

// module Data.Function.Uncurried

exports.mkFn0 = function (fn) {
  return function () {
    return fn({});
  };
};

exports.mkFn2 = function (fn) {
  /* jshint maxparams: 2 */
  return function (a, b) {
    return fn(a)(b);
  };
};

exports.mkFn3 = function (fn) {
  /* jshint maxparams: 3 */
  return function (a, b, c) {
    return fn(a)(b)(c);
  };
};

exports.mkFn4 = function (fn) {
  /* jshint maxparams: 4 */
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d);
  };
};

exports.mkFn5 = function (fn) {
  /* jshint maxparams: 5 */
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e);
  };
};

exports.mkFn6 = function (fn) {
  /* jshint maxparams: 6 */
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f);
  };
};

exports.mkFn7 = function (fn) {
  /* jshint maxparams: 7 */
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g);
  };
};

exports.mkFn8 = function (fn) {
  /* jshint maxparams: 8 */
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h);
  };
};

exports.mkFn9 = function (fn) {
  /* jshint maxparams: 9 */
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
  };
};

exports.mkFn10 = function (fn) {
  /* jshint maxparams: 10 */
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
  };
};

exports.runFn0 = function (fn) {
  return fn();
};

exports.runFn2 = function (fn) {
  return function (a) {
    return function (b) {
      return fn(a, b);
    };
  };
};

exports.runFn3 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return fn(a, b, c);
      };
    };
  };
};

exports.runFn4 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return fn(a, b, c, d);
        };
      };
    };
  };
};

exports.runFn5 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return fn(a, b, c, d, e);
          };
        };
      };
    };
  };
};

exports.runFn6 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return fn(a, b, c, d, e, f);
            };
          };
        };
      };
    };
  };
};

exports.runFn7 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return fn(a, b, c, d, e, f, g);
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn8 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return fn(a, b, c, d, e, f, g, h);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn9 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return fn(a, b, c, d, e, f, g, h, i);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn10 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return fn(a, b, c, d, e, f, g, h, i, j);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

},{}],171:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var runFn1 = function (f) {
    return f;
};
var mkFn1 = function (f) {
    return f;
};
module.exports = {
    mkFn1: mkFn1,
    runFn1: runFn1,
    mkFn0: $foreign.mkFn0,
    mkFn2: $foreign.mkFn2,
    mkFn3: $foreign.mkFn3,
    mkFn4: $foreign.mkFn4,
    mkFn5: $foreign.mkFn5,
    mkFn6: $foreign.mkFn6,
    mkFn7: $foreign.mkFn7,
    mkFn8: $foreign.mkFn8,
    mkFn9: $foreign.mkFn9,
    mkFn10: $foreign.mkFn10,
    runFn0: $foreign.runFn0,
    runFn2: $foreign.runFn2,
    runFn3: $foreign.runFn3,
    runFn4: $foreign.runFn4,
    runFn5: $foreign.runFn5,
    runFn6: $foreign.runFn6,
    runFn7: $foreign.runFn7,
    runFn8: $foreign.runFn8,
    runFn9: $foreign.runFn9,
    runFn10: $foreign.runFn10
};

},{"../Data.Unit":302,"./foreign":170}],172:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var on = function (f) {
    return function (g) {
        return function (x) {
            return function (y) {
                return f(g(x))(g(y));
            };
        };
    };
};
var flip = function (f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var $$const = function (a) {
    return function (v) {
        return a;
    };
};
var applyFlipped = function (x) {
    return function (f) {
        return f(x);
    };
};
var apply = function (f) {
    return function (x) {
        return f(x);
    };
};
module.exports = {
    flip: flip,
    "const": $$const,
    apply: apply,
    applyFlipped: applyFlipped,
    on: on
};

},{"../Control.Category":12}],173:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var App = function (x) {
    return x;
};
var traversableApp = function (dictTraversable) {
    return dictTraversable;
};
var showApp = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(App " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupApp = function (dictApply) {
    return function (dictSemigroup) {
        return new Data_Semigroup.Semigroup(function (v) {
            return function (v1) {
                return Control_Apply.lift2(dictApply)(Data_Semigroup.append(dictSemigroup))(v)(v1);
            };
        });
    };
};
var plusApp = function (dictPlus) {
    return dictPlus;
};
var newtypeApp = new Data_Newtype.Newtype(function (n) {
    return n;
}, App);
var monoidApp = function (dictApplicative) {
    return function (dictMonoid) {
        return new Data_Monoid.Monoid(function () {
            return semigroupApp(dictApplicative.Apply0())(dictMonoid.Semigroup0());
        }, Control_Applicative.pure(dictApplicative)(Data_Monoid.mempty(dictMonoid)));
    };
};
var monadZeroApp = function (dictMonadZero) {
    return dictMonadZero;
};
var monadPlusApp = function (dictMonadPlus) {
    return dictMonadPlus;
};
var monadApp = function (dictMonad) {
    return dictMonad;
};
var lazyApp = function (dictLazy) {
    return dictLazy;
};
var hoistLowerApp = Unsafe_Coerce.unsafeCoerce;
var hoistLiftApp = Unsafe_Coerce.unsafeCoerce;
var hoistApp = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorApp = function (dictFunctor) {
    return dictFunctor;
};
var foldableApp = function (dictFoldable) {
    return dictFoldable;
};
var extendApp = function (dictExtend) {
    return dictExtend;
};
var eq1App = function (dictEq1) {
    return new Data_Eq.Eq1(function (dictEq) {
        return function (v) {
            return function (v1) {
                return Data_Eq.eq1(dictEq1)(dictEq)(v)(v1);
            };
        };
    });
};
var eqApp = function (dictEq1) {
    return function (dictEq) {
        return new Data_Eq.Eq(Data_Eq.eq1(eq1App(dictEq1))(dictEq));
    };
};
var ord1App = function (dictOrd1) {
    return new Data_Ord.Ord1(function () {
        return eq1App(dictOrd1.Eq10());
    }, function (dictOrd) {
        return function (v) {
            return function (v1) {
                return Data_Ord.compare1(dictOrd1)(dictOrd)(v)(v1);
            };
        };
    });
};
var ordApp = function (dictOrd1) {
    return function (dictOrd) {
        return new Data_Ord.Ord(function () {
            return eqApp(dictOrd1.Eq10())(dictOrd.Eq0());
        }, Data_Ord.compare1(ord1App(dictOrd1))(dictOrd));
    };
};
var comonadApp = function (dictComonad) {
    return dictComonad;
};
var bindApp = function (dictBind) {
    return dictBind;
};
var applyApp = function (dictApply) {
    return dictApply;
};
var applicativeApp = function (dictApplicative) {
    return dictApplicative;
};
var alternativeApp = function (dictAlternative) {
    return dictAlternative;
};
var altApp = function (dictAlt) {
    return dictAlt;
};
module.exports = {
    App: App,
    hoistApp: hoistApp,
    hoistLiftApp: hoistLiftApp,
    hoistLowerApp: hoistLowerApp,
    newtypeApp: newtypeApp,
    eqApp: eqApp,
    eq1App: eq1App,
    ordApp: ordApp,
    ord1App: ord1App,
    showApp: showApp,
    semigroupApp: semigroupApp,
    monoidApp: monoidApp,
    functorApp: functorApp,
    applyApp: applyApp,
    applicativeApp: applicativeApp,
    bindApp: bindApp,
    monadApp: monadApp,
    altApp: altApp,
    plusApp: plusApp,
    alternativeApp: alternativeApp,
    monadZeroApp: monadZeroApp,
    monadPlusApp: monadPlusApp,
    lazyApp: lazyApp,
    foldableApp: foldableApp,
    traversableApp: traversableApp,
    extendApp: extendApp,
    comonadApp: comonadApp
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Comonad":13,"../Control.Extend":16,"../Control.Lazy":17,"../Control.Monad":60,"../Control.MonadPlus":61,"../Control.MonadZero":62,"../Control.Plus":65,"../Data.Eq":157,"../Data.Foldable":164,"../Data.Functor":180,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Semigroup":271,"../Data.Show":276,"../Data.Traversable":296,"../Prelude":358,"../Unsafe.Coerce":366}],174:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_App = require("../Data.Functor.App");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Compose = function (x) {
    return x;
};
var showCompose = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Compose " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var newtypeCompose = new Data_Newtype.Newtype(function (n) {
    return n;
}, Compose);
var functorCompose = function (dictFunctor) {
    return function (dictFunctor1) {
        return new Data_Functor.Functor(function (f) {
            return function (v) {
                return Compose(Data_Functor.map(dictFunctor)(Data_Functor.map(dictFunctor1)(f))(v));
            };
        });
    };
};
var foldableCompose = function (dictFoldable) {
    return function (dictFoldable1) {
        return new Data_Foldable.Foldable(function (dictMonoid) {
            return function (f) {
                return function (v) {
                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(Data_Foldable.foldMap(dictFoldable1)(dictMonoid)(f))(v);
                };
            };
        }, function (f) {
            return function (i) {
                return function (v) {
                    return Data_Foldable.foldl(dictFoldable)(Data_Foldable.foldl(dictFoldable1)(f))(i)(v);
                };
            };
        }, function (f) {
            return function (i) {
                return function (v) {
                    return Data_Foldable.foldr(dictFoldable)(Data_Function.flip(Data_Foldable.foldr(dictFoldable1)(f)))(i)(v);
                };
            };
        });
    };
};
var traversableCompose = function (dictTraversable) {
    return function (dictTraversable1) {
        return new Data_Traversable.Traversable(function () {
            return foldableCompose(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
        }, function () {
            return functorCompose(dictTraversable.Functor0())(dictTraversable1.Functor0());
        }, function (dictApplicative) {
            return Data_Traversable.traverse(traversableCompose(dictTraversable)(dictTraversable1))(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
        }, function (dictApplicative) {
            return function (f) {
                return function (v) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Compose)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(Data_Traversable.traverse(dictTraversable1)(dictApplicative)(f))(v));
                };
            };
        });
    };
};
var eq1Compose = function (dictEq1) {
    return function (dictEq11) {
        return new Data_Eq.Eq1(function (dictEq) {
            return function (v) {
                return function (v1) {
                    return Data_Eq.eq1(dictEq1)(Data_Functor_App.eqApp(dictEq11)(dictEq))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
                };
            };
        });
    };
};
var eqCompose = function (dictEq1) {
    return function (dictEq11) {
        return function (dictEq) {
            return new Data_Eq.Eq(Data_Eq.eq1(eq1Compose(dictEq1)(dictEq11))(dictEq));
        };
    };
};
var ord1Compose = function (dictOrd1) {
    return function (dictOrd11) {
        return new Data_Ord.Ord1(function () {
            return eq1Compose(dictOrd1.Eq10())(dictOrd11.Eq10());
        }, function (dictOrd) {
            return function (v) {
                return function (v1) {
                    return Data_Ord.compare1(dictOrd1)(Data_Functor_App.ordApp(dictOrd11)(dictOrd))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
                };
            };
        });
    };
};
var ordCompose = function (dictOrd1) {
    return function (dictOrd11) {
        return function (dictOrd) {
            return new Data_Ord.Ord(function () {
                return eqCompose(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
            }, Data_Ord.compare1(ord1Compose(dictOrd1)(dictOrd11))(dictOrd));
        };
    };
};
var bihoistCompose = function (dictFunctor) {
    return function (natF) {
        return function (natG) {
            return function (v) {
                return natF(Data_Functor.map(dictFunctor)(natG)(v));
            };
        };
    };
};
var applyCompose = function (dictApply) {
    return function (dictApply1) {
        return new Control_Apply.Apply(function () {
            return functorCompose(dictApply.Functor0())(dictApply1.Functor0());
        }, function (v) {
            return function (v1) {
                return Compose(Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Control_Apply.apply(dictApply1))(v))(v1));
            };
        });
    };
};
var applicativeCompose = function (dictApplicative) {
    return function (dictApplicative1) {
        return new Control_Applicative.Applicative(function () {
            return applyCompose(dictApplicative.Apply0())(dictApplicative1.Apply0());
        }, function ($75) {
            return Compose(Control_Applicative.pure(dictApplicative)(Control_Applicative.pure(dictApplicative1)($75)));
        });
    };
};
var altCompose = function (dictAlt) {
    return function (dictFunctor) {
        return new Control_Alt.Alt(function () {
            return functorCompose(dictAlt.Functor0())(dictFunctor);
        }, function (v) {
            return function (v1) {
                return Compose(Control_Alt.alt(dictAlt)(v)(v1));
            };
        });
    };
};
var plusCompose = function (dictPlus) {
    return function (dictFunctor) {
        return new Control_Plus.Plus(function () {
            return altCompose(dictPlus.Alt0())(dictFunctor);
        }, Control_Plus.empty(dictPlus));
    };
};
var alternativeCompose = function (dictAlternative) {
    return function (dictApplicative) {
        return new Control_Alternative.Alternative(function () {
            return applicativeCompose(dictAlternative.Applicative0())(dictApplicative);
        }, function () {
            return plusCompose(dictAlternative.Plus1())((dictApplicative.Apply0()).Functor0());
        });
    };
};
module.exports = {
    Compose: Compose,
    bihoistCompose: bihoistCompose,
    newtypeCompose: newtypeCompose,
    eq1Compose: eq1Compose,
    eqCompose: eqCompose,
    ord1Compose: ord1Compose,
    ordCompose: ordCompose,
    showCompose: showCompose,
    functorCompose: functorCompose,
    applyCompose: applyCompose,
    applicativeCompose: applicativeCompose,
    foldableCompose: foldableCompose,
    traversableCompose: traversableCompose,
    altCompose: altCompose,
    plusCompose: plusCompose,
    alternativeCompose: alternativeCompose
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Category":12,"../Control.Plus":65,"../Control.Semigroupoid":66,"../Data.Eq":157,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.Functor.App":173,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Semigroup":271,"../Data.Show":276,"../Data.Traversable":296,"../Prelude":358}],175:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Functor = require("../Data.Functor");
var Data_Void = require("../Data.Void");
var Prelude = require("../Prelude");
var Contravariant = function (cmap) {
    this.cmap = cmap;
};
var cmap = function (dict) {
    return dict.cmap;
};
var cmapFlipped = function (dictContravariant) {
    return function (x) {
        return function (f) {
            return cmap(dictContravariant)(f)(x);
        };
    };
};
var coerce = function (dictContravariant) {
    return function (dictFunctor) {
        return function (a) {
            return Data_Functor.map(dictFunctor)(Data_Void.absurd)(cmap(dictContravariant)(Data_Void.absurd)(a));
        };
    };
};
module.exports = {
    cmap: cmap,
    Contravariant: Contravariant,
    cmapFlipped: cmapFlipped,
    coerce: coerce
};

},{"../Data.Functor":180,"../Data.Void":305,"../Prelude":358}],176:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Const = require("../Data.Const");
var Data_Either = require("../Data.Either");
var Data_Functor_Coproduct = require("../Data.Functor.Coproduct");
var Data_Newtype = require("../Data.Newtype");
var Data_Void = require("../Data.Void");
var Prelude = require("../Prelude");
var in9 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)))))))));
};
var in8 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))))))));
};
var in7 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)))))));
};
var in6 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))))));
};
var in5 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)))));
};
var in4 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))));
};
var in3 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)));
};
var in2 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v));
};
var in10 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))))))))));
};
var in1 = Data_Functor_Coproduct.left;
var coproduct9 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return function (y) {
                                        if (y instanceof Data_Either.Left) {
                                            return a(y.value0);
                                        };
                                        if (y instanceof Data_Either.Right) {
                                            if (y.value0 instanceof Data_Either.Left) {
                                                return b(y.value0.value0);
                                            };
                                            if (y.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0 instanceof Data_Either.Left) {
                                                    return c(y.value0.value0.value0);
                                                };
                                                if (y.value0.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                        return d(y.value0.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return e(y.value0.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                            if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                return f(y.value0.value0.value0.value0.value0.value0);
                                                            };
                                                            if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                    return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                    if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                        return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                    };
                                                                    if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                            return i(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                        };
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                            return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0.value0.value0.value0));
                                                                        };
                                                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 228, column 41 - line 230, column 61: " + [ y.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                    };
                                                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 226, column 39 - line 230, column 61: " + [ y.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                };
                                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 224, column 37 - line 230, column 61: " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                            };
                                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 222, column 35 - line 230, column 61: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 220, column 33 - line 230, column 61: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 218, column 31 - line 230, column 61: " + [ y.value0.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 216, column 29 - line 230, column 61: " + [ y.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 214, column 27 - line 230, column 61: " + [ y.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 212, column 34 - line 230, column 61: " + [ y.constructor.name ]);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var coproduct8 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (y) {
                                    if (y instanceof Data_Either.Left) {
                                        return a(y.value0);
                                    };
                                    if (y instanceof Data_Either.Right) {
                                        if (y.value0 instanceof Data_Either.Left) {
                                            return b(y.value0.value0);
                                        };
                                        if (y.value0 instanceof Data_Either.Right) {
                                            if (y.value0.value0 instanceof Data_Either.Left) {
                                                return c(y.value0.value0.value0);
                                            };
                                            if (y.value0.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                    return d(y.value0.value0.value0.value0);
                                                };
                                                if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                        return e(y.value0.value0.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return f(y.value0.value0.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                            if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                            };
                                                            if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                    return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                    return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0.value0.value0));
                                                                };
                                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 207, column 39 - line 209, column 59: " + [ y.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                            };
                                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 205, column 37 - line 209, column 59: " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 203, column 35 - line 209, column 59: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 201, column 33 - line 209, column 59: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 199, column 31 - line 209, column 59: " + [ y.value0.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 197, column 29 - line 209, column 59: " + [ y.value0.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 195, column 27 - line 209, column 59: " + [ y.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 193, column 32 - line 209, column 59: " + [ y.constructor.name ]);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var coproduct7 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (y) {
                                if (y instanceof Data_Either.Left) {
                                    return a(y.value0);
                                };
                                if (y instanceof Data_Either.Right) {
                                    if (y.value0 instanceof Data_Either.Left) {
                                        return b(y.value0.value0);
                                    };
                                    if (y.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0 instanceof Data_Either.Left) {
                                            return c(y.value0.value0.value0);
                                        };
                                        if (y.value0.value0 instanceof Data_Either.Right) {
                                            if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                return d(y.value0.value0.value0.value0);
                                            };
                                            if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                    return e(y.value0.value0.value0.value0.value0);
                                                };
                                                if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                        return f(y.value0.value0.value0.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                            return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0.value0));
                                                        };
                                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 188, column 37 - line 190, column 57: " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 186, column 35 - line 190, column 57: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 184, column 33 - line 190, column 57: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 182, column 31 - line 190, column 57: " + [ y.value0.value0.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 180, column 29 - line 190, column 57: " + [ y.value0.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 178, column 27 - line 190, column 57: " + [ y.value0.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 176, column 30 - line 190, column 57: " + [ y.constructor.name ]);
                            };
                        };
                    };
                };
            };
        };
    };
};
var coproduct6 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (y) {
                            if (y instanceof Data_Either.Left) {
                                return a(y.value0);
                            };
                            if (y instanceof Data_Either.Right) {
                                if (y.value0 instanceof Data_Either.Left) {
                                    return b(y.value0.value0);
                                };
                                if (y.value0 instanceof Data_Either.Right) {
                                    if (y.value0.value0 instanceof Data_Either.Left) {
                                        return c(y.value0.value0.value0);
                                    };
                                    if (y.value0.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                            return d(y.value0.value0.value0.value0);
                                        };
                                        if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                return e(y.value0.value0.value0.value0.value0);
                                            };
                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                    return f(y.value0.value0.value0.value0.value0.value0);
                                                };
                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                    return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0));
                                                };
                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 171, column 35 - line 173, column 55: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 169, column 33 - line 173, column 55: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 167, column 31 - line 173, column 55: " + [ y.value0.value0.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 165, column 29 - line 173, column 55: " + [ y.value0.value0.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 163, column 27 - line 173, column 55: " + [ y.value0.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 161, column 28 - line 173, column 55: " + [ y.constructor.name ]);
                        };
                    };
                };
            };
        };
    };
};
var coproduct5 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (y) {
                        if (y instanceof Data_Either.Left) {
                            return a(y.value0);
                        };
                        if (y instanceof Data_Either.Right) {
                            if (y.value0 instanceof Data_Either.Left) {
                                return b(y.value0.value0);
                            };
                            if (y.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0 instanceof Data_Either.Left) {
                                    return c(y.value0.value0.value0);
                                };
                                if (y.value0.value0 instanceof Data_Either.Right) {
                                    if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                        return d(y.value0.value0.value0.value0);
                                    };
                                    if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                            return e(y.value0.value0.value0.value0.value0);
                                        };
                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                            return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0));
                                        };
                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 156, column 33 - line 158, column 53: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 154, column 31 - line 158, column 53: " + [ y.value0.value0.value0.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 152, column 29 - line 158, column 53: " + [ y.value0.value0.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 150, column 27 - line 158, column 53: " + [ y.value0.constructor.name ]);
                        };
                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 148, column 26 - line 158, column 53: " + [ y.constructor.name ]);
                    };
                };
            };
        };
    };
};
var coproduct4 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (y) {
                    if (y instanceof Data_Either.Left) {
                        return a(y.value0);
                    };
                    if (y instanceof Data_Either.Right) {
                        if (y.value0 instanceof Data_Either.Left) {
                            return b(y.value0.value0);
                        };
                        if (y.value0 instanceof Data_Either.Right) {
                            if (y.value0.value0 instanceof Data_Either.Left) {
                                return c(y.value0.value0.value0);
                            };
                            if (y.value0.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                    return d(y.value0.value0.value0.value0);
                                };
                                if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                    return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0));
                                };
                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 143, column 31 - line 145, column 51: " + [ y.value0.value0.value0.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 141, column 29 - line 145, column 51: " + [ y.value0.value0.constructor.name ]);
                        };
                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 139, column 27 - line 145, column 51: " + [ y.value0.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 137, column 24 - line 145, column 51: " + [ y.constructor.name ]);
                };
            };
        };
    };
};
var coproduct3 = function (a) {
    return function (b) {
        return function (c) {
            return function (y) {
                if (y instanceof Data_Either.Left) {
                    return a(y.value0);
                };
                if (y instanceof Data_Either.Right) {
                    if (y.value0 instanceof Data_Either.Left) {
                        return b(y.value0.value0);
                    };
                    if (y.value0 instanceof Data_Either.Right) {
                        if (y.value0.value0 instanceof Data_Either.Left) {
                            return c(y.value0.value0.value0);
                        };
                        if (y.value0.value0 instanceof Data_Either.Right) {
                            return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0));
                        };
                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 132, column 29 - line 134, column 49: " + [ y.value0.value0.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 130, column 27 - line 134, column 49: " + [ y.value0.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 128, column 22 - line 134, column 49: " + [ y.constructor.name ]);
            };
        };
    };
};
var coproduct2 = function (a) {
    return function (b) {
        return function (y) {
            if (y instanceof Data_Either.Left) {
                return a(y.value0);
            };
            if (y instanceof Data_Either.Right) {
                if (y.value0 instanceof Data_Either.Left) {
                    return b(y.value0.value0);
                };
                if (y.value0 instanceof Data_Either.Right) {
                    return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0));
                };
                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 123, column 27 - line 125, column 47: " + [ y.value0.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 121, column 20 - line 125, column 47: " + [ y.constructor.name ]);
        };
    };
};
var coproduct10 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return function (j) {
                                        return function (y) {
                                            if (y instanceof Data_Either.Left) {
                                                return a(y.value0);
                                            };
                                            if (y instanceof Data_Either.Right) {
                                                if (y.value0 instanceof Data_Either.Left) {
                                                    return b(y.value0.value0);
                                                };
                                                if (y.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0 instanceof Data_Either.Left) {
                                                        return c(y.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return d(y.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                return e(y.value0.value0.value0.value0.value0);
                                                            };
                                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                    return f(y.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                    if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                        return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                                    };
                                                                    if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                            return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                        };
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                            if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                                return i(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                            };
                                                                            if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                                if (y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                                    return j(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                                };
                                                                                if (y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                                    return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0));
                                                                                };
                                                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 251, column 43 - line 253, column 64: " + [ y.value0.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                            };
                                                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 249, column 41 - line 253, column 64: " + [ y.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                        };
                                                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 247, column 39 - line 253, column 64: " + [ y.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                    };
                                                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 245, column 37 - line 253, column 64: " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                };
                                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 243, column 35 - line 253, column 64: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                            };
                                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 241, column 33 - line 253, column 64: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 239, column 31 - line 253, column 64: " + [ y.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 237, column 29 - line 253, column 64: " + [ y.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 235, column 27 - line 253, column 64: " + [ y.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 233, column 37 - line 253, column 64: " + [ y.constructor.name ]);
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var coproduct1 = function (y) {
    if (y instanceof Data_Either.Left) {
        return y.value0;
    };
    if (y instanceof Data_Either.Right) {
        return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0));
    };
    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 116, column 16 - line 118, column 45: " + [ y.constructor.name ]);
};
var at9 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left)))))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at8 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left))))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at7 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left)))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at6 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Left))))) {
                return f(y.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at5 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Left)))) {
                return f(y.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at4 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Left))) {
                return f(y.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at3 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Left)) {
                return f(y.value0.value0.value0);
            };
            return b;
        };
    };
};
var at2 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Left) {
                return f(y.value0.value0);
            };
            return b;
        };
    };
};
var at10 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left))))))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at1 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Left) {
                return f(y.value0);
            };
            return b;
        };
    };
};
module.exports = {
    in1: in1,
    in2: in2,
    in3: in3,
    in4: in4,
    in5: in5,
    in6: in6,
    in7: in7,
    in8: in8,
    in9: in9,
    in10: in10,
    at1: at1,
    at2: at2,
    at3: at3,
    at4: at4,
    at5: at5,
    at6: at6,
    at7: at7,
    at8: at8,
    at9: at9,
    at10: at10,
    coproduct1: coproduct1,
    coproduct2: coproduct2,
    coproduct3: coproduct3,
    coproduct4: coproduct4,
    coproduct5: coproduct5,
    coproduct6: coproduct6,
    coproduct7: coproduct7,
    coproduct8: coproduct8,
    coproduct9: coproduct9,
    coproduct10: coproduct10
};

},{"../Data.Const":142,"../Data.Either":154,"../Data.Functor.Coproduct":177,"../Data.Newtype":244,"../Data.Void":305,"../Prelude":358}],177:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Coproduct = function (x) {
    return x;
};
var showCoproduct = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            if (v instanceof Data_Either.Left) {
                return "(left " + (Data_Show.show(dictShow)(v.value0) + ")");
            };
            if (v instanceof Data_Either.Right) {
                return "(right " + (Data_Show.show(dictShow1)(v.value0) + ")");
            };
            throw new Error("Failed pattern match at Data.Functor.Coproduct line 65, column 1 - line 65, column 77: " + [ v.constructor.name ]);
        });
    };
};
var right = function (ga) {
    return new Data_Either.Right(ga);
};
var newtypeCoproduct = new Data_Newtype.Newtype(function (n) {
    return n;
}, Coproduct);
var left = function (fa) {
    return new Data_Either.Left(fa);
};
var functorCoproduct = function (dictFunctor) {
    return function (dictFunctor1) {
        return new Data_Functor.Functor(function (f) {
            return function (v) {
                return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(Data_Functor.map(dictFunctor)(f))(Data_Functor.map(dictFunctor1)(f))(v);
            };
        });
    };
};
var eq1Coproduct = function (dictEq1) {
    return function (dictEq11) {
        return new Data_Eq.Eq1(function (dictEq) {
            return function (v) {
                return function (v1) {
                    if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
                        return Data_Eq.eq1(dictEq1)(dictEq)(v.value0)(v1.value0);
                    };
                    if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
                        return Data_Eq.eq1(dictEq11)(dictEq)(v.value0)(v1.value0);
                    };
                    return false;
                };
            };
        });
    };
};
var eqCoproduct = function (dictEq1) {
    return function (dictEq11) {
        return function (dictEq) {
            return new Data_Eq.Eq(Data_Eq.eq1(eq1Coproduct(dictEq1)(dictEq11))(dictEq));
        };
    };
};
var ord1Coproduct = function (dictOrd1) {
    return function (dictOrd11) {
        return new Data_Ord.Ord1(function () {
            return eq1Coproduct(dictOrd1.Eq10())(dictOrd11.Eq10());
        }, function (dictOrd) {
            return function (v) {
                return function (v1) {
                    if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
                        return Data_Ord.compare1(dictOrd1)(dictOrd)(v.value0)(v1.value0);
                    };
                    if (v instanceof Data_Either.Left) {
                        return Data_Ordering.LT.value;
                    };
                    if (v1 instanceof Data_Either.Left) {
                        return Data_Ordering.GT.value;
                    };
                    if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
                        return Data_Ord.compare1(dictOrd11)(dictOrd)(v.value0)(v1.value0);
                    };
                    throw new Error("Failed pattern match at Data.Functor.Coproduct line 59, column 5 - line 63, column 43: " + [ v.constructor.name, v1.constructor.name ]);
                };
            };
        });
    };
};
var ordCoproduct = function (dictOrd1) {
    return function (dictOrd11) {
        return function (dictOrd) {
            return new Data_Ord.Ord(function () {
                return eqCoproduct(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
            }, Data_Ord.compare1(ord1Coproduct(dictOrd1)(dictOrd11))(dictOrd));
        };
    };
};
var coproduct = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Data_Either.Left) {
                return v(v2.value0);
            };
            if (v2 instanceof Data_Either.Right) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Functor.Coproduct line 29, column 1 - line 29, column 78: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var extendCoproduct = function (dictExtend) {
    return function (dictExtend1) {
        return new Control_Extend.Extend(function () {
            return functorCoproduct(dictExtend.Functor0())(dictExtend1.Functor0());
        }, function (f) {
            return function ($71) {
                return Coproduct(coproduct(function ($72) {
                    return Data_Either.Left.create(Control_Extend.extend(dictExtend)(function ($73) {
                        return f(Coproduct(Data_Either.Left.create($73)));
                    })($72));
                })(function ($74) {
                    return Data_Either.Right.create(Control_Extend.extend(dictExtend1)(function ($75) {
                        return f(Coproduct(Data_Either.Right.create($75)));
                    })($74));
                })($71));
            };
        });
    };
};
var foldableCoproduct = function (dictFoldable) {
    return function (dictFoldable1) {
        return new Data_Foldable.Foldable(function (dictMonoid) {
            return function (f) {
                return coproduct(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f))(Data_Foldable.foldMap(dictFoldable1)(dictMonoid)(f));
            };
        }, function (f) {
            return function (z) {
                return coproduct(Data_Foldable.foldl(dictFoldable)(f)(z))(Data_Foldable.foldl(dictFoldable1)(f)(z));
            };
        }, function (f) {
            return function (z) {
                return coproduct(Data_Foldable.foldr(dictFoldable)(f)(z))(Data_Foldable.foldr(dictFoldable1)(f)(z));
            };
        });
    };
};
var traversableCoproduct = function (dictTraversable) {
    return function (dictTraversable1) {
        return new Data_Traversable.Traversable(function () {
            return foldableCoproduct(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
        }, function () {
            return functorCoproduct(dictTraversable.Functor0())(dictTraversable1.Functor0());
        }, function (dictApplicative) {
            return coproduct(function ($76) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function ($77) {
                    return Coproduct(Data_Either.Left.create($77));
                })(Data_Traversable.sequence(dictTraversable)(dictApplicative)($76));
            })(function ($78) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function ($79) {
                    return Coproduct(Data_Either.Right.create($79));
                })(Data_Traversable.sequence(dictTraversable1)(dictApplicative)($78));
            });
        }, function (dictApplicative) {
            return function (f) {
                return coproduct(function ($80) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function ($81) {
                        return Coproduct(Data_Either.Left.create($81));
                    })(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)($80));
                })(function ($82) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function ($83) {
                        return Coproduct(Data_Either.Right.create($83));
                    })(Data_Traversable.traverse(dictTraversable1)(dictApplicative)(f)($82));
                });
            };
        });
    };
};
var comonadCoproduct = function (dictComonad) {
    return function (dictComonad1) {
        return new Control_Comonad.Comonad(function () {
            return extendCoproduct(dictComonad.Extend0())(dictComonad1.Extend0());
        }, coproduct(Control_Comonad.extract(dictComonad))(Control_Comonad.extract(dictComonad1)));
    };
};
var bihoistCoproduct = function (natF) {
    return function (natG) {
        return function (v) {
            return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(natF)(natG)(v);
        };
    };
};
module.exports = {
    Coproduct: Coproduct,
    left: left,
    right: right,
    coproduct: coproduct,
    bihoistCoproduct: bihoistCoproduct,
    newtypeCoproduct: newtypeCoproduct,
    eqCoproduct: eqCoproduct,
    eq1Coproduct: eq1Coproduct,
    ordCoproduct: ordCoproduct,
    ord1Coproduct: ord1Coproduct,
    showCoproduct: showCoproduct,
    functorCoproduct: functorCoproduct,
    extendCoproduct: extendCoproduct,
    comonadCoproduct: comonadCoproduct,
    foldableCoproduct: foldableCoproduct,
    traversableCoproduct: traversableCoproduct
};

},{"../Control.Comonad":13,"../Control.Extend":16,"../Control.Semigroupoid":66,"../Data.Bifunctor":129,"../Data.Either":154,"../Data.Eq":157,"../Data.Foldable":164,"../Data.Functor":180,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Semigroup":271,"../Data.Show":276,"../Data.Traversable":296,"../Prelude":358}],178:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Functor = require("../Data.Functor");
var Invariant = function (imap) {
    this.imap = imap;
};
var imapF = function (dictFunctor) {
    return function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(f);
        };
    };
};
var invariantArray = new Invariant(imapF(Data_Functor.functorArray));
var invariantFn = new Invariant(imapF(Data_Functor.functorFn));
var imap = function (dict) {
    return dict.imap;
};
module.exports = {
    imap: imap,
    Invariant: Invariant,
    imapF: imapF,
    invariantFn: invariantFn,
    invariantArray: invariantArray
};

},{"../Data.Functor":180}],179:[function(require,module,exports){
"use strict";

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }
    return result;
  };
};

},{}],180:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Unit = require("../Data.Unit");
var Functor = function (map) {
    this.map = map;
};
var map = function (dict) {
    return dict.map;
};
var mapFlipped = function (dictFunctor) {
    return function (fa) {
        return function (f) {
            return map(dictFunctor)(f)(fa);
        };
    };
};
var $$void = function (dictFunctor) {
    return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
};
var voidLeft = function (dictFunctor) {
    return function (f) {
        return function (x) {
            return map(dictFunctor)(Data_Function["const"](x))(f);
        };
    };
};
var voidRight = function (dictFunctor) {
    return function (x) {
        return map(dictFunctor)(Data_Function["const"](x));
    };
};
var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
var functorArray = new Functor($foreign.arrayMap);
var flap = function (dictFunctor) {
    return function (ff) {
        return function (x) {
            return map(dictFunctor)(function (f) {
                return f(x);
            })(ff);
        };
    };
};
module.exports = {
    Functor: Functor,
    map: map,
    mapFlipped: mapFlipped,
    "void": $$void,
    voidRight: voidRight,
    voidLeft: voidLeft,
    flap: flap,
    functorFn: functorFn,
    functorArray: functorArray
};

},{"../Control.Semigroupoid":66,"../Data.Function":172,"../Data.Unit":302,"./foreign":179}],181:[function(require,module,exports){
"use strict";

exports.mapWithIndexArray = function (f) {
  return function (xs) {
    var l = xs.length;
    var result = Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(i)(xs[i]);
    }
    return result;
  };
};

},{}],182:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var FunctorWithIndex = function (Functor0, mapWithIndex) {
    this.Functor0 = Functor0;
    this.mapWithIndex = mapWithIndex;
};
var mapWithIndex = function (dict) {
    return dict.mapWithIndex;
};
var functorWithIndexMultiplicative = new FunctorWithIndex(function () {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Multiplicative.functorMultiplicative)(f(Data_Unit.unit));
});
var functorWithIndexMaybe = new FunctorWithIndex(function () {
    return Data_Maybe.functorMaybe;
}, function (f) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(f(Data_Unit.unit));
});
var functorWithIndexLast = new FunctorWithIndex(function () {
    return Data_Maybe_Last.functorLast;
}, function (f) {
    return Data_Functor.map(Data_Maybe_Last.functorLast)(f(Data_Unit.unit));
});
var functorWithIndexFirst = new FunctorWithIndex(function () {
    return Data_Maybe_First.functorFirst;
}, function (f) {
    return Data_Functor.map(Data_Maybe_First.functorFirst)(f(Data_Unit.unit));
});
var functorWithIndexDual = new FunctorWithIndex(function () {
    return Data_Monoid_Dual.functorDual;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Dual.functorDual)(f(Data_Unit.unit));
});
var functorWithIndexDisj = new FunctorWithIndex(function () {
    return Data_Monoid_Disj.functorDisj;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Disj.functorDisj)(f(Data_Unit.unit));
});
var functorWithIndexConj = new FunctorWithIndex(function () {
    return Data_Monoid_Conj.functorConj;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Conj.functorConj)(f(Data_Unit.unit));
});
var functorWithIndexArray = new FunctorWithIndex(function () {
    return Data_Functor.functorArray;
}, $foreign.mapWithIndexArray);
var functorWithIndexAdditive = new FunctorWithIndex(function () {
    return Data_Monoid_Additive.functorAdditive;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Additive.functorAdditive)(f(Data_Unit.unit));
});
module.exports = {
    FunctorWithIndex: FunctorWithIndex,
    mapWithIndex: mapWithIndex,
    functorWithIndexArray: functorWithIndexArray,
    functorWithIndexMaybe: functorWithIndexMaybe,
    functorWithIndexFirst: functorWithIndexFirst,
    functorWithIndexLast: functorWithIndexLast,
    functorWithIndexAdditive: functorWithIndexAdditive,
    functorWithIndexDual: functorWithIndexDual,
    functorWithIndexConj: functorWithIndexConj,
    functorWithIndexDisj: functorWithIndexDisj,
    functorWithIndexMultiplicative: functorWithIndexMultiplicative
};

},{"../Data.Function":172,"../Data.Functor":180,"../Data.Maybe":234,"../Data.Maybe.First":232,"../Data.Maybe.Last":233,"../Data.Monoid.Additive":236,"../Data.Monoid.Conj":237,"../Data.Monoid.Disj":238,"../Data.Monoid.Dual":239,"../Data.Monoid.Multiplicative":241,"../Data.Unit":302,"../Prelude":358,"./foreign":181}],183:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Foldable = require("../Data.Foldable");
var Data_Generic_Rep = require("../Data.Generic.Rep");
var Data_Monoid = require("../Data.Monoid");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Symbol = require("../Data.Symbol");
var Prelude = require("../Prelude");
var GenericShow = function (genericShow$prime) {
    this["genericShow'"] = genericShow$prime;
};
var GenericShowArgs = function (genericShowArgs) {
    this.genericShowArgs = genericShowArgs;
};
var GenericShowFields = function (genericShowFields) {
    this.genericShowFields = genericShowFields;
};
var genericShowFieldsNoArguments = new GenericShowFields(function (v) {
    return [  ];
});
var genericShowFieldsField = function (dictShow) {
    return function (dictIsSymbol) {
        return new GenericShowFields(function (v) {
            return [ Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value) + (": " + Data_Show.show(dictShow)(v)) ];
        });
    };
};
var genericShowFields = function (dict) {
    return dict.genericShowFields;
};
var genericShowFieldsProduct = function (dictGenericShowFields) {
    return function (dictGenericShowFields1) {
        return new GenericShowFields(function (v) {
            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(genericShowFields(dictGenericShowFields)(v.value0))(genericShowFields(dictGenericShowFields1)(v.value1));
        });
    };
};
var genericShowArgsRec = function (dictGenericShowFields) {
    return new GenericShowArgs(function (v) {
        return [ "{ " + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")(genericShowFields(dictGenericShowFields)(v)) + " }") ];
    });
};
var genericShowArgsNoArguments = new GenericShowArgs(function (v) {
    return [  ];
});
var genericShowArgsArgument = function (dictShow) {
    return new GenericShowArgs(function (v) {
        return [ Data_Show.show(dictShow)(v) ];
    });
};
var genericShowArgs = function (dict) {
    return dict.genericShowArgs;
};
var genericShowArgsProduct = function (dictGenericShowArgs) {
    return function (dictGenericShowArgs1) {
        return new GenericShowArgs(function (v) {
            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(genericShowArgs(dictGenericShowArgs)(v.value0))(genericShowArgs(dictGenericShowArgs1)(v.value1));
        });
    };
};
var genericShowConstructor = function (dictGenericShowArgs) {
    return function (dictIsSymbol) {
        return new GenericShow(function (v) {
            var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
            var v1 = genericShowArgs(dictGenericShowArgs)(v);
            if (v1.length === 0) {
                return ctor;
            };
            return "(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ ctor ])(v1)) + ")");
        });
    };
};
var genericShow$prime = function (dict) {
    return dict["genericShow'"];
};
var genericShowNoConstructors = new GenericShow(function (a) {
    return genericShow$prime(genericShowNoConstructors)(a);
});
var genericShowSum = function (dictGenericShow) {
    return function (dictGenericShow1) {
        return new GenericShow(function (v) {
            if (v instanceof Data_Generic_Rep.Inl) {
                return genericShow$prime(dictGenericShow)(v.value0);
            };
            if (v instanceof Data_Generic_Rep.Inr) {
                return genericShow$prime(dictGenericShow1)(v.value0);
            };
            throw new Error("Failed pattern match at Data.Generic.Rep.Show line 31, column 1 - line 31, column 83: " + [ v.constructor.name ]);
        });
    };
};
var genericShow = function (dictGeneric) {
    return function (dictGenericShow) {
        return function (x) {
            return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x));
        };
    };
};
module.exports = {
    GenericShow: GenericShow,
    "genericShow'": genericShow$prime,
    genericShow: genericShow,
    GenericShowArgs: GenericShowArgs,
    genericShowArgs: genericShowArgs,
    GenericShowFields: GenericShowFields,
    genericShowFields: genericShowFields,
    genericShowNoConstructors: genericShowNoConstructors,
    genericShowArgsNoArguments: genericShowArgsNoArguments,
    genericShowSum: genericShowSum,
    genericShowArgsProduct: genericShowArgsProduct,
    genericShowFieldsProduct: genericShowFieldsProduct,
    genericShowConstructor: genericShowConstructor,
    genericShowArgsArgument: genericShowArgsArgument,
    genericShowArgsRec: genericShowArgsRec,
    genericShowFieldsField: genericShowFieldsField,
    genericShowFieldsNoArguments: genericShowFieldsNoArguments
};

},{"../Data.Foldable":164,"../Data.Generic.Rep":184,"../Data.Monoid":242,"../Data.Semigroup":271,"../Data.Show":276,"../Data.Symbol":289,"../Prelude":358}],184:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Maybe = require("../Data.Maybe");
var Inl = (function () {
    function Inl(value0) {
        this.value0 = value0;
    };
    Inl.create = function (value0) {
        return new Inl(value0);
    };
    return Inl;
})();
var Inr = (function () {
    function Inr(value0) {
        this.value0 = value0;
    };
    Inr.create = function (value0) {
        return new Inr(value0);
    };
    return Inr;
})();
var Rec = function (x) {
    return x;
};
var Product = (function () {
    function Product(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Product.create = function (value0) {
        return function (value1) {
            return new Product(value0, value1);
        };
    };
    return Product;
})();
var NoArguments = (function () {
    function NoArguments() {

    };
    NoArguments.value = new NoArguments();
    return NoArguments;
})();
var Field = function (x) {
    return x;
};
var Constructor = function (x) {
    return x;
};
var Argument = function (x) {
    return x;
};
var Generic = function (from, to) {
    this.from = from;
    this.to = to;
};
var to = function (dict) {
    return dict.to;
};
var genericMaybe = new Generic(function (v) {
    if (v instanceof Data_Maybe.Nothing) {
        return new Inl(NoArguments.value);
    };
    if (v instanceof Data_Maybe.Just) {
        return new Inr(v.value0);
    };
    throw new Error("Failed pattern match at Data.Generic.Rep line 49, column 1 - line 51, column 63: " + [ v.constructor.name ]);
}, function (v) {
    if (v instanceof Inl) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Inr) {
        return new Data_Maybe.Just(v.value0);
    };
    throw new Error("Failed pattern match at Data.Generic.Rep line 49, column 1 - line 51, column 63: " + [ v.constructor.name ]);
});
var from = function (dict) {
    return dict.from;
};
module.exports = {
    Generic: Generic,
    to: to,
    from: from,
    NoArguments: NoArguments,
    Inl: Inl,
    Inr: Inr,
    Product: Product,
    Constructor: Constructor,
    Argument: Argument,
    Rec: Rec,
    Field: Field,
    genericMaybe: genericMaybe
};

},{"../Data.Maybe":234}],185:[function(require,module,exports){
"use strict";

// module Data.Generic

exports.zipAll = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      for (var i = 0; i < l; i++) {
        if (!f(xs[i])(ys[i])) {
          return false;
        }
      }
      return true;
    };
  };
};

exports.zipCompare = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var o = f(xs[i])(ys[i]);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

},{}],186:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Identity = require("../Data.Identity");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Prelude = require("../Prelude");
var Type_Proxy = require("../Type.Proxy");
var SProd = (function () {
    function SProd(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SProd.create = function (value0) {
        return function (value1) {
            return new SProd(value0, value1);
        };
    };
    return SProd;
})();
var SRecord = (function () {
    function SRecord(value0) {
        this.value0 = value0;
    };
    SRecord.create = function (value0) {
        return new SRecord(value0);
    };
    return SRecord;
})();
var SNumber = (function () {
    function SNumber(value0) {
        this.value0 = value0;
    };
    SNumber.create = function (value0) {
        return new SNumber(value0);
    };
    return SNumber;
})();
var SBoolean = (function () {
    function SBoolean(value0) {
        this.value0 = value0;
    };
    SBoolean.create = function (value0) {
        return new SBoolean(value0);
    };
    return SBoolean;
})();
var SInt = (function () {
    function SInt(value0) {
        this.value0 = value0;
    };
    SInt.create = function (value0) {
        return new SInt(value0);
    };
    return SInt;
})();
var SString = (function () {
    function SString(value0) {
        this.value0 = value0;
    };
    SString.create = function (value0) {
        return new SString(value0);
    };
    return SString;
})();
var SChar = (function () {
    function SChar(value0) {
        this.value0 = value0;
    };
    SChar.create = function (value0) {
        return new SChar(value0);
    };
    return SChar;
})();
var SArray = (function () {
    function SArray(value0) {
        this.value0 = value0;
    };
    SArray.create = function (value0) {
        return new SArray(value0);
    };
    return SArray;
})();
var SUnit = (function () {
    function SUnit() {

    };
    SUnit.value = new SUnit();
    return SUnit;
})();
var SigProd = (function () {
    function SigProd(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SigProd.create = function (value0) {
        return function (value1) {
            return new SigProd(value0, value1);
        };
    };
    return SigProd;
})();
var SigRecord = (function () {
    function SigRecord(value0) {
        this.value0 = value0;
    };
    SigRecord.create = function (value0) {
        return new SigRecord(value0);
    };
    return SigRecord;
})();
var SigNumber = (function () {
    function SigNumber() {

    };
    SigNumber.value = new SigNumber();
    return SigNumber;
})();
var SigBoolean = (function () {
    function SigBoolean() {

    };
    SigBoolean.value = new SigBoolean();
    return SigBoolean;
})();
var SigInt = (function () {
    function SigInt() {

    };
    SigInt.value = new SigInt();
    return SigInt;
})();
var SigString = (function () {
    function SigString() {

    };
    SigString.value = new SigString();
    return SigString;
})();
var SigChar = (function () {
    function SigChar() {

    };
    SigChar.value = new SigChar();
    return SigChar;
})();
var SigArray = (function () {
    function SigArray(value0) {
        this.value0 = value0;
    };
    SigArray.create = function (value0) {
        return new SigArray(value0);
    };
    return SigArray;
})();
var SigUnit = (function () {
    function SigUnit() {

    };
    SigUnit.value = new SigUnit();
    return SigUnit;
})();
var Generic = function (fromSpine, toSignature, toSpine) {
    this.fromSpine = fromSpine;
    this.toSignature = toSignature;
    this.toSpine = toSpine;
};
var toSpine = function (dict) {
    return dict.toSpine;
};
var toSignature = function (dict) {
    return dict.toSignature;
};
var showSuspended = function (dictShow) {
    return function (e) {
        return "\\_ -> " + Data_Show.show(dictShow)(e(Data_Unit.unit));
    };
};
var showArray = function (v) {
    return function (v1) {
        if (v1.length === 0) {
            return "[]";
        };
        return "[ " + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")(Data_Functor.map(Data_Functor.functorArray)(v)(v1)) + " ]");
    };
};
var showGenericSpine = new Data_Show.Show(function (v) {
    if (v instanceof SUnit) {
        return "SUnit";
    };
    if (v instanceof SChar) {
        return "SChar " + Data_Show.show(Data_Show.showChar)(v.value0);
    };
    if (v instanceof SString) {
        return "SString " + Data_Show.show(Data_Show.showString)(v.value0);
    };
    if (v instanceof SBoolean) {
        return "SBoolean " + Data_Show.show(Data_Show.showBoolean)(v.value0);
    };
    if (v instanceof SNumber) {
        return "SNumber " + Data_Show.show(Data_Show.showNumber)(v.value0);
    };
    if (v instanceof SInt) {
        return "SInt " + Data_Show.show(Data_Show.showInt)(v.value0);
    };
    if (v instanceof SArray) {
        return "SArray " + showArray(showSuspended(showGenericSpine))(v.value0);
    };
    if (v instanceof SProd) {
        return "SProd " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + showArray(showSuspended(showGenericSpine))(v.value1)));
    };
    if (v instanceof SRecord) {
        var showElt = function (v1) {
            return Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)([ "{ recLabel: ", Data_Show.show(Data_Show.showString)(v1.recLabel), ", recValue: ", showSuspended(showGenericSpine)(v1.recValue), " }" ]);
        };
        return "SRecord " + showArray(showElt)(v.value0);
    };
    throw new Error("Failed pattern match at Data.Generic line 270, column 1 - line 270, column 47: " + [ v.constructor.name ]);
});
var orderingToInt = function (v) {
    if (v instanceof Data_Ordering.EQ) {
        return 0;
    };
    if (v instanceof Data_Ordering.LT) {
        return 1;
    };
    if (v instanceof Data_Ordering.GT) {
        return -1 | 0;
    };
    throw new Error("Failed pattern match at Data.Generic line 538, column 17 - line 541, column 10: " + [ v.constructor.name ]);
};
var genericVoid = new Generic(function (v) {
    return Data_Maybe.Nothing.value;
}, function (v) {
    return new SigProd("Data.Void.Void", [  ]);
}, Data_Void.absurd);
var genericUnit = new Generic(function (v) {
    if (v instanceof SUnit) {
        return new Data_Maybe.Just(Data_Unit.unit);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigUnit.value;
}, function (v) {
    return SUnit.value;
});
var genericString = new Generic(function (v) {
    if (v instanceof SString) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigString.value;
}, SString.create);
var genericOrdering = new Generic(function (v) {
    if (v instanceof SProd && (v.value0 === "Data.Ordering.LT" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Data_Ordering.LT.value);
    };
    if (v instanceof SProd && (v.value0 === "Data.Ordering.EQ" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    if (v instanceof SProd && (v.value0 === "Data.Ordering.GT" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Data_Ordering.GT.value);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return new SigProd("Data.Ordering.Ordering", [ {
        sigConstructor: "Data.Ordering.LT",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Ordering.EQ",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Ordering.GT",
        sigValues: [  ]
    } ]);
}, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return new SProd("Data.Ordering.LT", [  ]);
    };
    if (v instanceof Data_Ordering.EQ) {
        return new SProd("Data.Ordering.EQ", [  ]);
    };
    if (v instanceof Data_Ordering.GT) {
        return new SProd("Data.Ordering.GT", [  ]);
    };
    throw new Error("Failed pattern match at Data.Generic line 218, column 13 - line 221, column 38: " + [ v.constructor.name ]);
});
var genericNumber = new Generic(function (v) {
    if (v instanceof SNumber) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigNumber.value;
}, SNumber.create);
var genericInt = new Generic(function (v) {
    if (v instanceof SInt) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigInt.value;
}, SInt.create);
var genericChar = new Generic(function (v) {
    if (v instanceof SChar) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigChar.value;
}, SChar.create);
var genericBool = new Generic(function (v) {
    if (v instanceof SBoolean) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigBoolean.value;
}, SBoolean.create);
var fromSpine = function (dict) {
    return dict.fromSpine;
};
var force = function (f) {
    return f(Data_Unit.unit);
};
var genericArray = function (dictGeneric) {
    return new Generic(function (v) {
        if (v instanceof SArray) {
            return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(function ($310) {
                return fromSpine(dictGeneric)(force($310));
            })(v.value0);
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var lowerProxy = function (v) {
            return Type_Proxy["Proxy"].value;
        };
        return new SigArray(function (v) {
            return toSignature(dictGeneric)(lowerProxy(x));
        });
    }, function ($311) {
        return SArray.create(Data_Functor.map(Data_Functor.functorArray)(function (x) {
            return function (v) {
                return toSpine(dictGeneric)(x);
            };
        })($311));
    });
};
var genericEither = function (dictGeneric) {
    return function (dictGeneric1) {
        return new Generic(function (v) {
            if (v instanceof SProd && (v.value0 === "Data.Either.Left" && v.value1.length === 1)) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Left.create)(fromSpine(dictGeneric)(force(v["value1"][0])));
            };
            if (v instanceof SProd && (v.value0 === "Data.Either.Right" && v.value1.length === 1)) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Right.create)(fromSpine(dictGeneric1)(force(v["value1"][0])));
            };
            return Data_Maybe.Nothing.value;
        }, function (x) {
            var rproxy = function (v) {
                return Type_Proxy["Proxy"].value;
            };
            var lproxy = function (v) {
                return Type_Proxy["Proxy"].value;
            };
            return new SigProd("Data.Either.Either", [ {
                sigConstructor: "Data.Either.Left",
                sigValues: [ function (v) {
                    return toSignature(dictGeneric)(lproxy(x));
                } ]
            }, {
                sigConstructor: "Data.Either.Right",
                sigValues: [ function (v) {
                    return toSignature(dictGeneric1)(rproxy(x));
                } ]
            } ]);
        }, function (v) {
            if (v instanceof Data_Either.Left) {
                return new SProd("Data.Either.Left", [ function (v1) {
                    return toSpine(dictGeneric)(v.value0);
                } ]);
            };
            if (v instanceof Data_Either.Right) {
                return new SProd("Data.Either.Right", [ function (v1) {
                    return toSpine(dictGeneric1)(v.value0);
                } ]);
            };
            throw new Error("Failed pattern match at Data.Generic line 180, column 1 - line 180, column 73: " + [ v.constructor.name ]);
        });
    };
};
var genericIdentity = function (dictGeneric) {
    return new Generic(function (v) {
        if (v instanceof SProd && (v.value0 === "Data.Identity.Identity" && v.value1.length === 1)) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Identity.Identity)(fromSpine(dictGeneric)(force(v["value1"][0])));
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var iproxy = function (v) {
            return Type_Proxy["Proxy"].value;
        };
        return new SigProd("Data.Identity.Identity", [ {
            sigConstructor: "Data.Identity.Identity",
            sigValues: [ function (v) {
                return toSignature(dictGeneric)(iproxy(x));
            } ]
        } ]);
    }, function (v) {
        return new SProd("Data.Identity.Identity", [ function (v1) {
            return toSpine(dictGeneric)(v);
        } ]);
    });
};
var genericList = function (dictGeneric) {
    return new Generic(function (v) {
        if (v instanceof SProd && (v.value0 === "Data.List.Types.Cons" && v.value1.length === 2)) {
            return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_List_Types.Cons.create)(fromSpine(dictGeneric)(force(v["value1"][0]))))(fromSpine(genericList(dictGeneric))(force(v["value1"][1])));
        };
        if (v instanceof SProd && (v.value0 === "Data.List.Types.Nil" && v.value1.length === 0)) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_List_Types.Nil.value);
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var headProxy = function (v) {
            return Type_Proxy["Proxy"].value;
        };
        return new SigProd("Data.List.Types.List", [ {
            sigConstructor: "Data.List.Types.Cons",
            sigValues: [ function (v) {
                return toSignature(dictGeneric)(headProxy(x));
            }, function (v) {
                return toSignature(genericList(dictGeneric))(x);
            } ]
        }, {
            sigConstructor: "Data.List.Types.Nil",
            sigValues: [  ]
        } ]);
    }, function (v) {
        if (v instanceof Data_List_Types.Cons) {
            return new SProd("Data.List.Types.Cons", [ function (v1) {
                return toSpine(dictGeneric)(v.value0);
            }, function (v1) {
                return toSpine(genericList(dictGeneric))(v.value1);
            } ]);
        };
        if (v instanceof Data_List_Types.Nil) {
            return new SProd("Data.List.Types.Nil", [  ]);
        };
        throw new Error("Failed pattern match at Data.Generic line 116, column 1 - line 116, column 58: " + [ v.constructor.name ]);
    });
};
var genericMaybe = function (dictGeneric) {
    return new Generic(function (v) {
        if (v instanceof SProd && (v.value0 === "Data.Maybe.Just" && v.value1.length === 1)) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(fromSpine(dictGeneric)(force(v["value1"][0])));
        };
        if (v instanceof SProd && (v.value0 === "Data.Maybe.Nothing" && v.value1.length === 0)) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value);
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var mbProxy = function (v) {
            return Type_Proxy["Proxy"].value;
        };
        return new SigProd("Data.Maybe.Maybe", [ {
            sigConstructor: "Data.Maybe.Just",
            sigValues: [ function (v) {
                return toSignature(dictGeneric)(mbProxy(x));
            } ]
        }, {
            sigConstructor: "Data.Maybe.Nothing",
            sigValues: [  ]
        } ]);
    }, function (v) {
        if (v instanceof Data_Maybe.Just) {
            return new SProd("Data.Maybe.Just", [ function (v1) {
                return toSpine(dictGeneric)(v.value0);
            } ]);
        };
        if (v instanceof Data_Maybe.Nothing) {
            return new SProd("Data.Maybe.Nothing", [  ]);
        };
        throw new Error("Failed pattern match at Data.Generic line 160, column 1 - line 160, column 56: " + [ v.constructor.name ]);
    });
};
var genericNonEmpty = function (dictGeneric) {
    return function (dictGeneric1) {
        return new Generic(function (v) {
            if (v instanceof SProd && (v.value0 === "Data.NonEmpty.NonEmpty" && v.value1.length === 2)) {
                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_NonEmpty.NonEmpty.create)(fromSpine(dictGeneric1)(force(v["value1"][0]))))(fromSpine(dictGeneric)(force(v["value1"][1])));
            };
            return Data_Maybe.Nothing.value;
        }, function (x) {
            var tailProxy = function (v) {
                return Type_Proxy["Proxy"].value;
            };
            var headProxy = function (v) {
                return Type_Proxy["Proxy"].value;
            };
            return new SigProd("Data.NonEmpty.NonEmpty", [ {
                sigConstructor: "Data.NonEmpty.NonEmpty",
                sigValues: [ function (v) {
                    return toSignature(dictGeneric1)(headProxy(x));
                }, function (v) {
                    return toSignature(dictGeneric)(tailProxy(x));
                } ]
            } ]);
        }, function (v) {
            return new SProd("Data.NonEmpty.NonEmpty", [ function (v1) {
                return toSpine(dictGeneric1)(v.value0);
            }, function (v1) {
                return toSpine(dictGeneric)(v.value1);
            } ]);
        });
    };
};
var genericNonEmptyList = function (dictGeneric) {
    return new Generic(function (v) {
        if (v instanceof SProd && (v.value0 === "Data.List.Types.NonEmptyList" && v.value1.length === 1)) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_List_Types.NonEmptyList)(fromSpine(genericNonEmpty(genericList(dictGeneric))(dictGeneric))(force(v["value1"][0])));
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var listProxy = function (v) {
            return Type_Proxy["Proxy"].value;
        };
        return new SigProd("Data.List.Types.NonEmptyList", [ {
            sigConstructor: "Data.List.Types.NonEmptyList",
            sigValues: [ function (v) {
                return toSignature(genericList(dictGeneric))(listProxy(x));
            } ]
        } ]);
    }, function (v) {
        return new SProd("Data.List.Types.NonEmptyList", [ function (v1) {
            return toSpine(genericNonEmpty(genericList(dictGeneric))(dictGeneric))(v);
        } ]);
    });
};
var genericShowPrec = function (v) {
    return function (v1) {
        if (v1 instanceof SProd) {
            if (Data_Array["null"](v1.value1)) {
                return v1.value0;
            };
            if (Data_Boolean.otherwise) {
                var showParen = function (v2) {
                    return function (x) {
                        if (!v2) {
                            return x;
                        };
                        if (v2) {
                            return "(" + (x + ")");
                        };
                        throw new Error("Failed pattern match at Data.Generic line 467, column 7 - line 467, column 28: " + [ v2.constructor.name, x.constructor.name ]);
                    };
                };
                return showParen(v > 10)(v1.value0 + (" " + Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                    return genericShowPrec(11)(force(x));
                })(v1.value1))));
            };
        };
        if (v1 instanceof SRecord) {
            var showLabelPart = function (x) {
                return x.recLabel + (": " + genericShowPrec(0)(force(x.recValue)));
            };
            return "{" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(showLabelPart)(v1.value0)) + "}");
        };
        if (v1 instanceof SBoolean) {
            return Data_Show.show(Data_Show.showBoolean)(v1.value0);
        };
        if (v1 instanceof SInt) {
            return Data_Show.show(Data_Show.showInt)(v1.value0);
        };
        if (v1 instanceof SNumber) {
            return Data_Show.show(Data_Show.showNumber)(v1.value0);
        };
        if (v1 instanceof SString) {
            return Data_Show.show(Data_Show.showString)(v1.value0);
        };
        if (v1 instanceof SChar) {
            return Data_Show.show(Data_Show.showChar)(v1.value0);
        };
        if (v1 instanceof SArray) {
            return "[" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                return genericShowPrec(0)(force(x));
            })(v1.value0)) + "]");
        };
        if (v1 instanceof SUnit) {
            return "unit";
        };
        throw new Error("Failed pattern match at Data.Generic line 460, column 1 - line 460, column 49: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var gShow = function (dictGeneric) {
    return function ($312) {
        return genericShowPrec(0)(toSpine(dictGeneric)($312));
    };
};
var genericTuple = function (dictGeneric) {
    return function (dictGeneric1) {
        return new Generic(function (v) {
            if (v instanceof SProd && (v.value0 === "Data.Tuple.Tuple" && v.value1.length === 2)) {
                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(fromSpine(dictGeneric)(force(v["value1"][0]))))(fromSpine(dictGeneric1)(force(v["value1"][1])));
            };
            return Data_Maybe.Nothing.value;
        }, function (x) {
            var sndProxy = function (v) {
                return Type_Proxy["Proxy"].value;
            };
            var fstProxy = function (v) {
                return Type_Proxy["Proxy"].value;
            };
            return new SigProd("Data.Tuple.Tuple", [ {
                sigConstructor: "Data.Tuple.Tuple",
                sigValues: [ function (v) {
                    return toSignature(dictGeneric)(fstProxy(x));
                }, function (v) {
                    return toSignature(dictGeneric1)(sndProxy(x));
                } ]
            } ]);
        }, function (v) {
            return new SProd("Data.Tuple.Tuple", [ function (v1) {
                return toSpine(dictGeneric)(v.value0);
            }, function (v1) {
                return toSpine(dictGeneric1)(v.value1);
            } ]);
        });
    };
};
var isValidSpine = function (v) {
    return function (v1) {
        if (v instanceof SigBoolean && v1 instanceof SBoolean) {
            return true;
        };
        if (v instanceof SigNumber && v1 instanceof SNumber) {
            return true;
        };
        if (v instanceof SigInt && v1 instanceof SInt) {
            return true;
        };
        if (v instanceof SigString && v1 instanceof SString) {
            return true;
        };
        if (v instanceof SigChar && v1 instanceof SChar) {
            return true;
        };
        if (v instanceof SigArray && v1 instanceof SArray) {
            return Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function ($313) {
                return isValidSpine(force(v.value0))(force($313));
            })(v1.value0);
        };
        if (v instanceof SigProd && v1 instanceof SProd) {
            var v2 = Data_Foldable.find(Data_Foldable.foldableArray)(function (alt) {
                return alt.sigConstructor === v1.value0;
            })(v.value1);
            if (v2 instanceof Data_Maybe.Nothing) {
                return false;
            };
            if (v2 instanceof Data_Maybe.Just) {
                return Data_Foldable.and(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Array.zipWith(function (sig) {
                    return function (spine) {
                        return isValidSpine(force(sig))(force(spine));
                    };
                })(v2.value0.sigValues)(v1.value1));
            };
            throw new Error("Failed pattern match at Data.Generic line 438, column 3 - line 444, column 15: " + [ v2.constructor.name ]);
        };
        if (v instanceof SigRecord && v1 instanceof SRecord) {
            return Data_Foldable.and(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Array.zipWith(function (sig) {
                return function (val) {
                    return isValidSpine(force(sig.recValue))(force(val.recValue));
                };
            })(Data_Array.sortBy(function (a) {
                return function (b) {
                    return Data_Ord.compare(Data_Ord.ordString)(a.recLabel)(b.recLabel);
                };
            })(v.value0))(Data_Array.sortBy(function (a) {
                return function (b) {
                    return Data_Ord.compare(Data_Ord.ordString)(a.recLabel)(b.recLabel);
                };
            })(v1.value0)));
        };
        if (v instanceof SigUnit && v1 instanceof SUnit) {
            return true;
        };
        return false;
    };
};
var showSignature = function (sig) {
    var needsParen = function (s) {
        if (s instanceof SigProd) {
            return true;
        };
        if (s instanceof SigRecord) {
            return true;
        };
        if (s instanceof SigNumber) {
            return false;
        };
        if (s instanceof SigBoolean) {
            return false;
        };
        if (s instanceof SigInt) {
            return false;
        };
        if (s instanceof SigString) {
            return false;
        };
        if (s instanceof SigChar) {
            return false;
        };
        if (s instanceof SigArray) {
            return true;
        };
        if (s instanceof SigUnit) {
            return false;
        };
        throw new Error("Failed pattern match at Data.Generic line 403, column 18 - line 412, column 21: " + [ s.constructor.name ]);
    };
    var paren = function (s) {
        if (needsParen(s)) {
            return "(" + (showSignature(s) + ")");
        };
        if (Data_Boolean.otherwise) {
            return showSignature(s);
        };
        throw new Error("Failed pattern match at Data.Generic line 399, column 3 - line 401, column 34: " + [ s.constructor.name ]);
    };
    return Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)((function () {
        if (sig instanceof SigProd) {
            return [ "SigProd ", Data_Show.show(Data_Show.showString)(sig.value0), " ", showArray(showDataConstructor)(sig.value1) ];
        };
        if (sig instanceof SigRecord) {
            return [ "SigRecord ", showArray(showLabel)(sig.value0) ];
        };
        if (sig instanceof SigNumber) {
            return [ "SigNumber" ];
        };
        if (sig instanceof SigBoolean) {
            return [ "SigBoolean" ];
        };
        if (sig instanceof SigInt) {
            return [ "SigInt" ];
        };
        if (sig instanceof SigString) {
            return [ "SigString" ];
        };
        if (sig instanceof SigChar) {
            return [ "SigChar" ];
        };
        if (sig instanceof SigArray) {
            return [ "SigArray ", paren(force(sig.value0)) ];
        };
        if (sig instanceof SigUnit) {
            return [ "SigUnit" ];
        };
        throw new Error("Failed pattern match at Data.Generic line 386, column 10 - line 396, column 27: " + [ sig.constructor.name ]);
    })());
};
var showLabel = function (l) {
    return "{ recLabel: " + (Data_Show.show(Data_Show.showString)(l.recLabel) + (", recValue: " + (showSignature(force(l.recValue)) + " }")));
};
var showDataConstructor = function (dc) {
    return "{ sigConstructor: " + (Data_Show.show(Data_Show.showString)(dc.sigConstructor) + (", sigValues: " + (showArray(function ($314) {
        return showSignature(force($314));
    })(dc.sigValues) + " }")));
};
var showGenericSignature = new Data_Show.Show(showSignature);
var eqThunk = function (dictEq) {
    return function (x) {
        return function (y) {
            return Data_Eq.eq(dictEq)(force(x))(force(y));
        };
    };
};
var eqRecordSigs = function (dictEq) {
    return function (arr1) {
        return function (arr2) {
            var labelCompare = function (r1) {
                return function (r2) {
                    return Data_Ord.compare(Data_Ord.ordString)(r1.recLabel)(r2.recLabel);
                };
            };
            var sorted1 = Data_Array.sortBy(labelCompare)(arr1);
            var sorted2 = Data_Array.sortBy(labelCompare)(arr2);
            var doCmp = function (x) {
                return function (y) {
                    return x.recLabel === y.recLabel && Data_Eq.eq(dictEq)(force(x.recValue))(force(y.recValue));
                };
            };
            return Data_Array.length(arr1) === Data_Array.length(arr2) && $foreign.zipAll(doCmp)(sorted1)(sorted2);
        };
    };
};
var eqGenericSpine = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof SProd && v1 instanceof SProd) {
            return v.value0 === v1.value0 && (Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value1)(v1.value1));
        };
        if (v instanceof SRecord && v1 instanceof SRecord) {
            return eqRecordSigs(eqGenericSpine)(v.value0)(v1.value0);
        };
        if (v instanceof SNumber && v1 instanceof SNumber) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SBoolean && v1 instanceof SBoolean) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SInt && v1 instanceof SInt) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SString && v1 instanceof SString) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SChar && v1 instanceof SChar) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SArray && v1 instanceof SArray) {
            return Data_Array.length(v.value0) === Data_Array.length(v1.value0) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value0)(v1.value0);
        };
        if (v instanceof SUnit && v1 instanceof SUnit) {
            return true;
        };
        return false;
    };
});
var gEq = function (dictGeneric) {
    return function (x) {
        return function (y) {
            return Data_Eq.eq(eqGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
        };
    };
};
var eqGenericSignature = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof SigProd && v1 instanceof SigProd) {
            return v.value0 === v1.value0 && (Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(eqDataConstructor)(v.value1)(v1.value1));
        };
        if (v instanceof SigRecord && v1 instanceof SigRecord) {
            return eqRecordSigs(eqGenericSignature)(v.value0)(v1.value0);
        };
        if (v instanceof SigNumber && v1 instanceof SigNumber) {
            return true;
        };
        if (v instanceof SigBoolean && v1 instanceof SigBoolean) {
            return true;
        };
        if (v instanceof SigInt && v1 instanceof SigInt) {
            return true;
        };
        if (v instanceof SigString && v1 instanceof SigString) {
            return true;
        };
        if (v instanceof SigChar && v1 instanceof SigChar) {
            return true;
        };
        if (v instanceof SigArray && v1 instanceof SigArray) {
            return eqThunk(eqGenericSignature)(v.value0)(v1.value0);
        };
        if (v instanceof SigUnit && v1 instanceof SigUnit) {
            return true;
        };
        return false;
    };
});
var eqDataConstructor = function (p1) {
    return function (p2) {
        return p1.sigConstructor === p2.sigConstructor && $foreign.zipAll(eqThunk(eqGenericSignature))(p1.sigValues)(p2.sigValues);
    };
};
var compareThunk = function (dictOrd) {
    return function (x) {
        return function (y) {
            return orderingToInt(Data_Ord.compare(dictOrd)(force(x))(force(y)));
        };
    };
};
var ordGenericSpine = new Data_Ord.Ord(function () {
    return eqGenericSpine;
}, function (v) {
    return function (v1) {
        if (v instanceof SProd && v1 instanceof SProd) {
            var v2 = Data_Ord.compare(Data_Ord.ordString)(v.value0)(v1.value0);
            if (v2 instanceof Data_Ordering.EQ) {
                return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(compareThunk(ordGenericSpine))(v.value1)(v1.value1));
            };
            return v2;
        };
        if (v instanceof SProd) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SProd) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SRecord && v1 instanceof SRecord) {
            var go = function (x) {
                return function (y) {
                    var v2 = Data_Ord.compare(Data_Ord.ordString)(x.recLabel)(y.recLabel);
                    if (v2 instanceof Data_Ordering.EQ) {
                        return orderingToInt(Data_Ord.compare(ordGenericSpine)(force(x.recValue))(force(y.recValue)));
                    };
                    return orderingToInt(v2);
                };
            };
            return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(go)(v.value0)(v1.value0));
        };
        if (v instanceof SRecord) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SRecord) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SInt && v1 instanceof SInt) {
            return Data_Ord.compare(Data_Ord.ordInt)(v.value0)(v1.value0);
        };
        if (v instanceof SInt) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SInt) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SBoolean && v1 instanceof SBoolean) {
            return Data_Ord.compare(Data_Ord.ordBoolean)(v.value0)(v1.value0);
        };
        if (v instanceof SBoolean) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SBoolean) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SNumber && v1 instanceof SNumber) {
            return Data_Ord.compare(Data_Ord.ordNumber)(v.value0)(v1.value0);
        };
        if (v instanceof SNumber) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SNumber) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SString && v1 instanceof SString) {
            return Data_Ord.compare(Data_Ord.ordString)(v.value0)(v1.value0);
        };
        if (v instanceof SString) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SString) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SChar && v1 instanceof SChar) {
            return Data_Ord.compare(Data_Ord.ordChar)(v.value0)(v1.value0);
        };
        if (v instanceof SChar) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SChar) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SArray && v1 instanceof SArray) {
            return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(compareThunk(ordGenericSpine))(v.value0)(v1.value0));
        };
        if (v instanceof SArray) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SArray) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SUnit && v1 instanceof SUnit) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.Generic line 303, column 1 - line 303, column 45: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var gCompare = function (dictGeneric) {
    return function (x) {
        return function (y) {
            return Data_Ord.compare(ordGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
        };
    };
};
module.exports = {
    Generic: Generic,
    toSpine: toSpine,
    toSignature: toSignature,
    fromSpine: fromSpine,
    SProd: SProd,
    SRecord: SRecord,
    SNumber: SNumber,
    SBoolean: SBoolean,
    SInt: SInt,
    SString: SString,
    SChar: SChar,
    SArray: SArray,
    SUnit: SUnit,
    SigProd: SigProd,
    SigRecord: SigRecord,
    SigNumber: SigNumber,
    SigBoolean: SigBoolean,
    SigInt: SigInt,
    SigString: SigString,
    SigChar: SigChar,
    SigArray: SigArray,
    SigUnit: SigUnit,
    showDataConstructor: showDataConstructor,
    showSignature: showSignature,
    isValidSpine: isValidSpine,
    gShow: gShow,
    gEq: gEq,
    gCompare: gCompare,
    genericNumber: genericNumber,
    genericInt: genericInt,
    genericString: genericString,
    genericChar: genericChar,
    genericBool: genericBool,
    genericArray: genericArray,
    genericUnit: genericUnit,
    genericVoid: genericVoid,
    genericTuple: genericTuple,
    genericList: genericList,
    genericNonEmptyList: genericNonEmptyList,
    genericMaybe: genericMaybe,
    genericEither: genericEither,
    genericIdentity: genericIdentity,
    genericOrdering: genericOrdering,
    genericNonEmpty: genericNonEmpty,
    showGenericSpine: showGenericSpine,
    eqGenericSpine: eqGenericSpine,
    ordGenericSpine: ordGenericSpine,
    eqGenericSignature: eqGenericSignature,
    showGenericSignature: showGenericSignature
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Semigroupoid":66,"../Data.Array":122,"../Data.Boolean":131,"../Data.Either":154,"../Data.Eq":157,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.HeytingAlgebra":188,"../Data.Identity":189,"../Data.List.Types":229,"../Data.Maybe":234,"../Data.Monoid":242,"../Data.NonEmpty":245,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Show":276,"../Data.String":288,"../Data.Traversable":296,"../Data.Tuple":298,"../Data.Unit":302,"../Data.Void":305,"../Prelude":358,"../Type.Proxy":363,"./foreign":185}],187:[function(require,module,exports){
"use strict";

exports.boolConj = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

exports.boolDisj = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolNot = function (b) {
  return !b;
};

},{}],188:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
    this.conj = conj;
    this.disj = disj;
    this.ff = ff;
    this.implies = implies;
    this.not = not;
    this.tt = tt;
};
var tt = function (dict) {
    return dict.tt;
};
var not = function (dict) {
    return dict.not;
};
var implies = function (dict) {
    return dict.implies;
};
var heytingAlgebraUnit = new HeytingAlgebra(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, Data_Unit.unit, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return Data_Unit.unit;
}, Data_Unit.unit);
var ff = function (dict) {
    return dict.ff;
};
var disj = function (dict) {
    return dict.disj;
};
var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
    return function (b) {
        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
    };
}, $foreign.boolNot, true);
var conj = function (dict) {
    return dict.conj;
};
var heytingAlgebraFunction = function (dictHeytingAlgebra) {
    return new HeytingAlgebra(function (f) {
        return function (g) {
            return function (a) {
                return conj(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (f) {
        return function (g) {
            return function (a) {
                return disj(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (v) {
        return ff(dictHeytingAlgebra);
    }, function (f) {
        return function (g) {
            return function (a) {
                return implies(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (f) {
        return function (a) {
            return not(dictHeytingAlgebra)(f(a));
        };
    }, function (v) {
        return tt(dictHeytingAlgebra);
    });
};
module.exports = {
    HeytingAlgebra: HeytingAlgebra,
    tt: tt,
    ff: ff,
    implies: implies,
    conj: conj,
    disj: disj,
    not: not,
    heytingAlgebraBoolean: heytingAlgebraBoolean,
    heytingAlgebraUnit: heytingAlgebraUnit,
    heytingAlgebraFunction: heytingAlgebraFunction
};

},{"../Data.Unit":302,"./foreign":187}],189:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Field = require("../Data.Field");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Identity = function (x) {
    return x;
};
var showIdentity = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Identity " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringIdentity = function (dictSemiring) {
    return dictSemiring;
};
var semigroupIdenity = function (dictSemigroup) {
    return dictSemigroup;
};
var ringIdentity = function (dictRing) {
    return dictRing;
};
var ordIdentity = function (dictOrd) {
    return dictOrd;
};
var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
    return n;
}, Identity);
var monoidIdentity = function (dictMonoid) {
    return dictMonoid;
};
var lazyIdentity = function (dictLazy) {
    return dictLazy;
};
var heytingAlgebraIdentity = function (dictHeytingAlgebra) {
    return dictHeytingAlgebra;
};
var functorIdentity = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));
var foldableIdentity = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var traversableIdentity = new Data_Traversable.Traversable(function () {
    return foldableIdentity;
}, function () {
    return functorIdentity;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Identity)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Identity)(f(v));
        };
    };
});
var fieldIdentity = function (dictField) {
    return dictField;
};
var extendIdentity = new Control_Extend.Extend(function () {
    return functorIdentity;
}, function (f) {
    return function (m) {
        return f(m);
    };
});
var euclideanRingIdentity = function (dictEuclideanRing) {
    return dictEuclideanRing;
};
var eqIdentity = function (dictEq) {
    return dictEq;
};
var eq1Identity = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqIdentity(dictEq));
});
var ord1Identity = new Data_Ord.Ord1(function () {
    return eq1Identity;
}, function (dictOrd) {
    return Data_Ord.compare(ordIdentity(dictOrd));
});
var comonadIdentity = new Control_Comonad.Comonad(function () {
    return extendIdentity;
}, function (v) {
    return v;
});
var commutativeRingIdentity = function (dictCommutativeRing) {
    return dictCommutativeRing;
};
var boundedIdentity = function (dictBounded) {
    return dictBounded;
};
var booleanAlgebraIdentity = function (dictBooleanAlgebra) {
    return dictBooleanAlgebra;
};
var applyIdentity = new Control_Apply.Apply(function () {
    return functorIdentity;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindIdentity = new Control_Bind.Bind(function () {
    return applyIdentity;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeIdentity = new Control_Applicative.Applicative(function () {
    return applyIdentity;
}, Identity);
var monadIdentity = new Control_Monad.Monad(function () {
    return applicativeIdentity;
}, function () {
    return bindIdentity;
});
var altIdentity = new Control_Alt.Alt(function () {
    return functorIdentity;
}, function (x) {
    return function (v) {
        return x;
    };
});
module.exports = {
    Identity: Identity,
    newtypeIdentity: newtypeIdentity,
    eqIdentity: eqIdentity,
    ordIdentity: ordIdentity,
    boundedIdentity: boundedIdentity,
    heytingAlgebraIdentity: heytingAlgebraIdentity,
    booleanAlgebraIdentity: booleanAlgebraIdentity,
    semigroupIdenity: semigroupIdenity,
    monoidIdentity: monoidIdentity,
    semiringIdentity: semiringIdentity,
    euclideanRingIdentity: euclideanRingIdentity,
    ringIdentity: ringIdentity,
    commutativeRingIdentity: commutativeRingIdentity,
    fieldIdentity: fieldIdentity,
    lazyIdentity: lazyIdentity,
    showIdentity: showIdentity,
    eq1Identity: eq1Identity,
    ord1Identity: ord1Identity,
    functorIdentity: functorIdentity,
    invariantIdentity: invariantIdentity,
    altIdentity: altIdentity,
    applyIdentity: applyIdentity,
    applicativeIdentity: applicativeIdentity,
    bindIdentity: bindIdentity,
    monadIdentity: monadIdentity,
    extendIdentity: extendIdentity,
    comonadIdentity: comonadIdentity,
    foldableIdentity: foldableIdentity,
    traversableIdentity: traversableIdentity
};

},{"../Control.Alt":2,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Comonad":13,"../Control.Extend":16,"../Control.Lazy":17,"../Control.Monad":60,"../Data.BooleanAlgebra":132,"../Data.Bounded":134,"../Data.CommutativeRing":141,"../Data.Eq":157,"../Data.EuclideanRing":159,"../Data.Field":161,"../Data.Foldable":164,"../Data.Functor":180,"../Data.Functor.Invariant":178,"../Data.HeytingAlgebra":188,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Data.Traversable":296,"../Prelude":358}],190:[function(require,module,exports){
"use strict";

// module Data.Int.Bits

exports.and = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 & n2;
  };
};

exports.or = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 | n2;
  };
};

exports.xor = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 ^ n2;
  };
};

exports.shl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 << n2;
  };
};

exports.shr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >> n2;
  };
};

exports.zshr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >>> n2;
  };
};

exports.complement = function (n) {
  /* jshint bitwise: false */
  return ~n;
};

},{}],191:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    and: $foreign.and,
    or: $foreign.or,
    xor: $foreign.xor,
    shl: $foreign.shl,
    shr: $foreign.shr,
    zshr: $foreign.zshr,
    complement: $foreign.complement
};

},{"./foreign":190}],192:[function(require,module,exports){
"use strict";

// module Data.Int

exports.fromNumberImpl = function (just) {
  return function (nothing) {
    return function (n) {
      /* jshint bitwise: false */
      return (n | 0) === n ? just(n) : nothing;
    };
  };
};

exports.toNumber = function (n) {
  return n;
};

exports.fromStringAsImpl = function (just) {
  return function (nothing) {
    return function (radix) {
      var digits;
      if (radix < 11) {
        digits = "[0-" + (radix - 1).toString() + "]";
      } else if (radix === 11) {
        digits = "[0-9a]";
      } else {
        digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
      }
      var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

      return function (s) {
        /* jshint bitwise: false */
        if (pattern.test(s)) {
          var i = parseInt(s, radix);
          return (i | 0) === i ? just(i) : nothing;
        } else {
          return nothing;
        }
      };
    };
  };
};

exports.toStringAs = function (radix) {
  return function (i) {
    return i.toString(radix);
  };
};

exports.pow = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return Math.pow(x,y) | 0;
  };
};

},{}],193:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_DivisionRing = require("../Data.DivisionRing");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Field = require("../Data.Field");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Int_Bits = require("../Data.Int.Bits");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Global = require("../Global");
var $$Math = require("../Math");
var Prelude = require("../Prelude");
var Radix = function (x) {
    return x;
};
var Even = (function () {
    function Even() {

    };
    Even.value = new Even();
    return Even;
})();
var Odd = (function () {
    function Odd() {

    };
    Odd.value = new Odd();
    return Odd;
})();
var showParity = new Data_Show.Show(function (v) {
    if (v instanceof Even) {
        return "Even";
    };
    if (v instanceof Odd) {
        return "Odd";
    };
    throw new Error("Failed pattern match at Data.Int line 110, column 1 - line 110, column 35: " + [ v.constructor.name ]);
});
var radix = function (n) {
    if (n >= 2 && n <= 36) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Int line 193, column 1 - line 193, column 28: " + [ n.constructor.name ]);
};
var odd = function (x) {
    return (x & 1) !== 0;
};
var octal = 8;
var hexadecimal = 16;
var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromString = fromStringAs(10);
var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeClamp = function (x) {
    if (x === Global.infinity) {
        return 0;
    };
    if (x === -Global.infinity) {
        return 0;
    };
    if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
        return Data_Bounded.top(Data_Bounded.boundedInt);
    };
    if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
        return Data_Bounded.bottom(Data_Bounded.boundedInt);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.fromMaybe(0)(fromNumber(x));
    };
    throw new Error("Failed pattern match at Data.Int line 64, column 1 - line 64, column 29: " + [ x.constructor.name ]);
};
var round = function ($23) {
    return unsafeClamp($$Math.round($23));
};
var floor = function ($24) {
    return unsafeClamp($$Math.floor($24));
};
var even = function (x) {
    return (x & 1) === 0;
};
var parity = function (n) {
    var $14 = even(n);
    if ($14) {
        return Even.value;
    };
    return Odd.value;
};
var eqParity = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Even && y instanceof Even) {
            return true;
        };
        if (x instanceof Odd && y instanceof Odd) {
            return true;
        };
        return false;
    };
});
var ordParity = new Data_Ord.Ord(function () {
    return eqParity;
}, function (x) {
    return function (y) {
        if (x instanceof Even && y instanceof Even) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Even) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Even) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Odd && y instanceof Odd) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.Int line 108, column 8 - line 108, column 40: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var semiringParity = new Data_Semiring.Semiring(function (x) {
    return function (y) {
        var $19 = Data_Eq.eq(eqParity)(x)(y);
        if ($19) {
            return Even.value;
        };
        return Odd.value;
    };
}, function (v) {
    return function (v1) {
        if (v instanceof Odd && v1 instanceof Odd) {
            return Odd.value;
        };
        return Even.value;
    };
}, Odd.value, Even.value);
var ringParity = new Data_Ring.Ring(function () {
    return semiringParity;
}, Data_Semiring.add(semiringParity));
var divisionRingParity = new Data_DivisionRing.DivisionRing(function () {
    return ringParity;
}, Control_Category.id(Control_Category.categoryFn));
var decimal = 10;
var commutativeRingParity = new Data_CommutativeRing.CommutativeRing(function () {
    return ringParity;
});
var euclideanRingParity = new Data_EuclideanRing.EuclideanRing(function () {
    return commutativeRingParity;
}, function (v) {
    if (v instanceof Even) {
        return 0;
    };
    if (v instanceof Odd) {
        return 1;
    };
    throw new Error("Failed pattern match at Data.Int line 130, column 1 - line 130, column 53: " + [ v.constructor.name ]);
}, function (x) {
    return function (v) {
        return x;
    };
}, function (v) {
    return function (v1) {
        return Even.value;
    };
});
var fieldParity = new Data_Field.Field(function () {
    return euclideanRingParity;
});
var ceil = function ($25) {
    return unsafeClamp($$Math.ceil($25));
};
var boundedParity = new Data_Bounded.Bounded(function () {
    return ordParity;
}, Even.value, Odd.value);
var binary = 2;
var base36 = 36;
module.exports = {
    fromNumber: fromNumber,
    ceil: ceil,
    floor: floor,
    round: round,
    fromString: fromString,
    radix: radix,
    binary: binary,
    octal: octal,
    decimal: decimal,
    hexadecimal: hexadecimal,
    base36: base36,
    fromStringAs: fromStringAs,
    Even: Even,
    Odd: Odd,
    parity: parity,
    even: even,
    odd: odd,
    eqParity: eqParity,
    ordParity: ordParity,
    showParity: showParity,
    boundedParity: boundedParity,
    semiringParity: semiringParity,
    ringParity: ringParity,
    commutativeRingParity: commutativeRingParity,
    euclideanRingParity: euclideanRingParity,
    divisionRingParity: divisionRingParity,
    fieldParity: fieldParity,
    toNumber: $foreign.toNumber,
    toStringAs: $foreign.toStringAs,
    pow: $foreign.pow
};

},{"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Boolean":131,"../Data.Bounded":134,"../Data.CommutativeRing":141,"../Data.DivisionRing":152,"../Data.Eq":157,"../Data.EuclideanRing":159,"../Data.Field":161,"../Data.HeytingAlgebra":188,"../Data.Int.Bits":191,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Ring":267,"../Data.Semiring":273,"../Data.Show":276,"../Global":321,"../Math":353,"../Prelude":358,"./foreign":192}],194:[function(require,module,exports){
/* global exports */
"use strict";

exports.isValid = function (date) {
  return !isNaN(date.getTime());
};

exports.toInstantImpl = function (just) {
  return function (nothing) {
    return function (date) {
      var t = date.getTime();
      return isNaN(t) ? nothing : just(t);
    };
  };
};

exports.jsdate = function (parts) {
  var t = Date.UTC(parts.year, parts.month, parts.day, parts.hour, parts.minute, parts.second, parts.millisecond);
  return new Date(t);
};

exports.jsdateLocal = function (parts) {
  return function () {
    return new Date(parts.year, parts.month, parts.day, parts.hour, parts.minute, parts.second, parts.millisecond);
  };
};

exports.dateMethod = function (method, date) {
  return date[method]();
};

exports.dateMethodEff = function (method, date) {
  return function () {
    return date[method]();
  };
};

exports.parse = function (dateString) {
  return function () {
    return new Date(dateString);
  };
};

},{}],195:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Date = require("../Data.Date");
var Data_Date_Component = require("../Data.Date.Component");
var Data_DateTime = require("../Data.DateTime");
var Data_DateTime_Instant = require("../Data.DateTime.Instant");
var Data_Enum = require("../Data.Enum");
var Data_Foreign = require("../Data.Foreign");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_Int = require("../Data.Int");
var Data_Maybe = require("../Data.Maybe");
var Data_Ring = require("../Data.Ring");
var Data_Time = require("../Data.Time");
var Data_Time_Component = require("../Data.Time.Component");
var Data_Time_Duration = require("../Data.Time.Duration");
var Prelude = require("../Prelude");
var toUTCString = function (dt) {
    return $foreign.dateMethod("toUTCString", dt);
};
var toTimeString = function (dt) {
    return $foreign.dateMethod("toTimeString", dt);
};
var toString = function (dt) {
    return $foreign.dateMethod("toString", dt);
};
var toInstant = Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(function ($4) {
    return Data_DateTime_Instant.instant(Data_Time_Duration.Milliseconds($4));
})($foreign.toInstantImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value));
var toISOString = function (dt) {
    return $foreign.dateMethodEff("toISOString", dt);
};
var toDateTime = Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime_Instant.toDateTime))(toInstant);
var toDateString = function (dt) {
    return $foreign.dateMethod("toDateString", dt);
};
var toDate = Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime.date))(toDateTime);
var readDate = Data_Foreign.unsafeReadTagged("Date");
var getUTCSeconds = function (dt) {
    return $foreign.dateMethod("getUTCSeconds", dt);
};
var getUTCMonth = function (dt) {
    return $foreign.dateMethod("getUTCMonth", dt);
};
var getUTCMinutes = function (dt) {
    return $foreign.dateMethod("getUTCMinutes", dt);
};
var getUTCMilliseconds = function (dt) {
    return $foreign.dateMethod("getUTCMilliseconds", dt);
};
var getUTCHours = function (dt) {
    return $foreign.dateMethod("getUTCHours", dt);
};
var getUTCFullYear = function (dt) {
    return $foreign.dateMethod("getUTCFullYear", dt);
};
var getUTCDay = function (dt) {
    return $foreign.dateMethod("getUTCDay", dt);
};
var getUTCDate = function (dt) {
    return $foreign.dateMethod("getUTCDate", dt);
};
var getTimezoneOffset = function (dt) {
    return $foreign.dateMethodEff("getTimezoneOffset", dt);
};
var getTime = function (dt) {
    return $foreign.dateMethod("getTime", dt);
};
var getSeconds = function (dt) {
    return $foreign.dateMethodEff("getSeconds", dt);
};
var getMonth = function (dt) {
    return $foreign.dateMethodEff("getMonth", dt);
};
var getMinutes = function (dt) {
    return $foreign.dateMethodEff("getMinutes", dt);
};
var getMilliseconds = function (dt) {
    return $foreign.dateMethodEff("getMilliseconds", dt);
};
var getHours = function (dt) {
    return $foreign.dateMethodEff("getHours", dt);
};
var getFullYear = function (dt) {
    return $foreign.dateMethodEff("getFullYear", dt);
};
var getDay = function (dt) {
    return $foreign.dateMethodEff("getDay", dt);
};
var getDate = function (dt) {
    return $foreign.dateMethodEff("getDate", dt);
};
var fromDateTime = function (v) {
    return $foreign.jsdate({
        year: Data_Int.toNumber(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0))),
        month: Data_Int.toNumber(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)) - 1 | 0),
        day: Data_Int.toNumber(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0))),
        hour: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1))),
        minute: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1))),
        second: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1))),
        millisecond: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1)))
    });
};
module.exports = {
    readDate: readDate,
    fromDateTime: fromDateTime,
    toDateTime: toDateTime,
    toDate: toDate,
    toInstant: toInstant,
    getTime: getTime,
    getUTCDate: getUTCDate,
    getUTCDay: getUTCDay,
    getUTCFullYear: getUTCFullYear,
    getUTCHours: getUTCHours,
    getUTCMilliseconds: getUTCMilliseconds,
    getUTCMinutes: getUTCMinutes,
    getUTCMonth: getUTCMonth,
    getUTCSeconds: getUTCSeconds,
    getDate: getDate,
    getDay: getDay,
    getFullYear: getFullYear,
    getHours: getHours,
    getMilliseconds: getMilliseconds,
    getMinutes: getMinutes,
    getMonth: getMonth,
    getSeconds: getSeconds,
    getTimezoneOffset: getTimezoneOffset,
    toDateString: toDateString,
    toISOString: toISOString,
    toString: toString,
    toTimeString: toTimeString,
    toUTCString: toUTCString,
    isValid: $foreign.isValid,
    jsdate: $foreign.jsdate,
    jsdateLocal: $foreign.jsdateLocal,
    parse: $foreign.parse
};

},{"../Control.Bind":11,"../Control.Monad.Eff":39,"../Control.Monad.Eff.Exception":31,"../Control.Semigroupoid":66,"../Data.Date":146,"../Data.Date.Component":144,"../Data.DateTime":150,"../Data.DateTime.Instant":148,"../Data.Enum":155,"../Data.Foreign":169,"../Data.Function.Uncurried":171,"../Data.Functor":180,"../Data.Int":193,"../Data.Maybe":234,"../Data.Ring":267,"../Data.Time":292,"../Data.Time.Component":290,"../Data.Time.Duration":291,"../Prelude":358,"./foreign":194}],196:[function(require,module,exports){
"use strict";

exports.defer = function () {

  function Defer(thunk) {
    if (this instanceof Defer) {
      this.thunk = thunk;
      return this;
    } else {
      return new Defer(thunk);
    }
  }

  Defer.prototype.force = function () {
    var value = this.thunk();
    this.thunk = null;
    this.force = function () {
      return value;
    };
    return value;
  };

  return Defer;

}();

exports.force = function (l) {
  return l.force();
};

},{}],197:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Field = require("../Data.Field");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var showLazy = function (dictShow) {
    return new Data_Show.Show(function (x) {
        return "(defer \\_ -> " + (Data_Show.show(dictShow)($foreign.force(x)) + ")");
    });
};
var semiringLazy = function (dictSemiring) {
    return new Data_Semiring.Semiring(function (a) {
        return function (b) {
            return $foreign.defer(function (v) {
                return Data_Semiring.add(dictSemiring)($foreign.force(a))($foreign.force(b));
            });
        };
    }, function (a) {
        return function (b) {
            return $foreign.defer(function (v) {
                return Data_Semiring.mul(dictSemiring)($foreign.force(a))($foreign.force(b));
            });
        };
    }, $foreign.defer(function (v) {
        return Data_Semiring.one(dictSemiring);
    }), $foreign.defer(function (v) {
        return Data_Semiring.zero(dictSemiring);
    }));
};
var semigroupLazy = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (a) {
        return function (b) {
            return $foreign.defer(function (v) {
                return Data_Semigroup.append(dictSemigroup)($foreign.force(a))($foreign.force(b));
            });
        };
    });
};
var ringLazy = function (dictRing) {
    return new Data_Ring.Ring(function () {
        return semiringLazy(dictRing.Semiring0());
    }, function (a) {
        return function (b) {
            return $foreign.defer(function (v) {
                return Data_Ring.sub(dictRing)($foreign.force(a))($foreign.force(b));
            });
        };
    });
};
var monoidLazy = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupLazy(dictMonoid.Semigroup0());
    }, $foreign.defer(function (v) {
        return Data_Monoid.mempty(dictMonoid);
    }));
};
var lazyLazy = new Control_Lazy.Lazy(function (f) {
    return $foreign.defer(function (v) {
        return $foreign.force(f(Data_Unit.unit));
    });
});
var functorLazy = new Data_Functor.Functor(function (f) {
    return function (l) {
        return $foreign.defer(function (v) {
            return f($foreign.force(l));
        });
    };
});
var invariantLazy = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorLazy));
var extendLazy = new Control_Extend.Extend(function () {
    return functorLazy;
}, function (f) {
    return function (x) {
        return $foreign.defer(function (v) {
            return f(x);
        });
    };
});
var eqLazy = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            return Data_Eq.eq(dictEq)($foreign.force(x))($foreign.force(y));
        };
    });
};
var ordLazy = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqLazy(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            return Data_Ord.compare(dictOrd)($foreign.force(x))($foreign.force(y));
        };
    });
};
var comonadLazy = new Control_Comonad.Comonad(function () {
    return extendLazy;
}, $foreign.force);
var commutativeRingLazy = function (dictCommutativeRing) {
    return new Data_CommutativeRing.CommutativeRing(function () {
        return ringLazy(dictCommutativeRing.Ring0());
    });
};
var euclideanRingLazy = function (dictEuclideanRing) {
    return new Data_EuclideanRing.EuclideanRing(function () {
        return commutativeRingLazy(dictEuclideanRing.CommutativeRing0());
    }, function ($32) {
        return Data_EuclideanRing.degree(dictEuclideanRing)($foreign.force($32));
    }, function (a) {
        return function (b) {
            return $foreign.defer(function (v) {
                return Data_EuclideanRing.div(dictEuclideanRing)($foreign.force(a))($foreign.force(b));
            });
        };
    }, function (a) {
        return function (b) {
            return $foreign.defer(function (v) {
                return Data_EuclideanRing.mod(dictEuclideanRing)($foreign.force(a))($foreign.force(b));
            });
        };
    });
};
var fieldLazy = function (dictField) {
    return new Data_Field.Field(function () {
        return euclideanRingLazy(dictField.EuclideanRing0());
    });
};
var boundedLazy = function (dictBounded) {
    return new Data_Bounded.Bounded(function () {
        return ordLazy(dictBounded.Ord0());
    }, $foreign.defer(function (v) {
        return Data_Bounded.bottom(dictBounded);
    }), $foreign.defer(function (v) {
        return Data_Bounded.top(dictBounded);
    }));
};
var applyLazy = new Control_Apply.Apply(function () {
    return functorLazy;
}, function (f) {
    return function (x) {
        return $foreign.defer(function (v) {
            return $foreign.force(f)($foreign.force(x));
        });
    };
});
var bindLazy = new Control_Bind.Bind(function () {
    return applyLazy;
}, function (l) {
    return function (f) {
        return $foreign.defer(function (v) {
            return $foreign.force(f($foreign.force(l)));
        });
    };
});
var heytingAlgebraLazy = function (dictHeytingAlgebra) {
    return new Data_HeytingAlgebra.HeytingAlgebra(function (a) {
        return function (b) {
            return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.conj(dictHeytingAlgebra))(a))(b);
        };
    }, function (a) {
        return function (b) {
            return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.disj(dictHeytingAlgebra))(a))(b);
        };
    }, $foreign.defer(function (v) {
        return Data_HeytingAlgebra.ff(dictHeytingAlgebra);
    }), function (a) {
        return function (b) {
            return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.implies(dictHeytingAlgebra))(a))(b);
        };
    }, function (a) {
        return Data_Functor.map(functorLazy)(Data_HeytingAlgebra.not(dictHeytingAlgebra))(a);
    }, $foreign.defer(function (v) {
        return Data_HeytingAlgebra.tt(dictHeytingAlgebra);
    }));
};
var booleanAlgebraLazy = function (dictBooleanAlgebra) {
    return new Data_BooleanAlgebra.BooleanAlgebra(function () {
        return heytingAlgebraLazy(dictBooleanAlgebra.HeytingAlgebra0());
    });
};
var applicativeLazy = new Control_Applicative.Applicative(function () {
    return applyLazy;
}, function (a) {
    return $foreign.defer(function (v) {
        return a;
    });
});
var monadLazy = new Control_Monad.Monad(function () {
    return applicativeLazy;
}, function () {
    return bindLazy;
});
module.exports = {
    semiringLazy: semiringLazy,
    ringLazy: ringLazy,
    commutativeRingLazy: commutativeRingLazy,
    euclideanRingLazy: euclideanRingLazy,
    fieldLazy: fieldLazy,
    eqLazy: eqLazy,
    ordLazy: ordLazy,
    boundedLazy: boundedLazy,
    semigroupLazy: semigroupLazy,
    monoidLazy: monoidLazy,
    heytingAlgebraLazy: heytingAlgebraLazy,
    booleanAlgebraLazy: booleanAlgebraLazy,
    functorLazy: functorLazy,
    invariantLazy: invariantLazy,
    applyLazy: applyLazy,
    applicativeLazy: applicativeLazy,
    bindLazy: bindLazy,
    monadLazy: monadLazy,
    extendLazy: extendLazy,
    comonadLazy: comonadLazy,
    showLazy: showLazy,
    lazyLazy: lazyLazy,
    defer: $foreign.defer,
    force: $foreign.force
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Comonad":13,"../Control.Extend":16,"../Control.Lazy":17,"../Control.Monad":60,"../Control.Semigroupoid":66,"../Data.BooleanAlgebra":132,"../Data.Bounded":134,"../Data.CommutativeRing":141,"../Data.Eq":157,"../Data.EuclideanRing":159,"../Data.Field":161,"../Data.Function":172,"../Data.Functor":180,"../Data.Functor.Invariant":178,"../Data.HeytingAlgebra":188,"../Data.Monoid":242,"../Data.Ord":251,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Data.Unit":302,"../Prelude":358,"./foreign":196}],198:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Lens_Lens_Tuple = require("../Data.Lens.Lens.Tuple");
var Data_Lens_Lens_Unit = require("../Data.Lens.Lens.Unit");
var Data_Lens_Prism_Either = require("../Data.Lens.Prism.Either");
var Data_Lens_Prism_Maybe = require("../Data.Lens.Prism.Maybe");
module.exports = {};

},{"../Data.Lens.Lens.Tuple":215,"../Data.Lens.Lens.Unit":216,"../Data.Lens.Prism.Either":219,"../Data.Lens.Prism.Maybe":220}],199:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed");
var Data_Lens_Types = require("../Data.Lens.Types");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid = require("../Data.Monoid");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Endo = require("../Data.Monoid.Endo");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var unfolded = function (dictMonoid) {
    return function (f) {
        return function (p) {
            var go = function ($43) {
                return Data_Maybe.maybe(Data_Monoid.mempty(dictMonoid))(function (v) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(p)(v.value0))(go(v.value1));
                })(f($43));
            };
            return go;
        };
    };
};
var replicated = function (dictMonoid) {
    return function (i) {
        return function (v) {
            var go = function (v1) {
                return function (x) {
                    if (v1 === 0) {
                        return Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid));
                    };
                    return Data_Semigroup.append(Data_Semigroup.semigroupFn(dictMonoid.Semigroup0()))(x)(go(v1 - 1 | 0)(x));
                };
            };
            return go(i)(v);
        };
    };
};
var ifoldMapOf = function (p) {
    return function (f) {
        return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(p(Data_Lens_Internal_Indexed.Indexed(Data_Tuple.uncurry(f))));
    };
};
var ifoldlOf = function (p) {
    return function (f) {
        return function (r) {
            return function ($44) {
                return Data_Function.flip(Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo))(r)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(ifoldMapOf(p)(function (i) {
                    return function ($45) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f(i))($45)));
                    };
                })($44)));
            };
        };
    };
};
var ifoldrOf = function (p) {
    return function (f) {
        return function (r) {
            return function ($46) {
                return Data_Function.flip(Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo))(r)(ifoldMapOf(p)(function (i) {
                    return function ($47) {
                        return Data_Monoid_Endo.Endo(f(i)($47));
                    };
                })($46));
            };
        };
    };
};
var itoListOf = function (p) {
    return ifoldrOf(p)(function (i) {
        return function (x) {
            return function (xs) {
                return new Data_List_Types.Cons(new Data_Tuple.Tuple(i, x), xs);
            };
        };
    })(Data_List_Types.Nil.value);
};
var itraverseOf_ = function (dictApplicative) {
    return function (p) {
        return function (f) {
            return ifoldrOf(p)(function (i) {
                return function (a) {
                    return function (fu) {
                        return Control_Apply.applySecond(dictApplicative.Apply0())(Data_Functor["void"]((dictApplicative.Apply0()).Functor0())(f(i)(a)))(fu);
                    };
                };
            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
        };
    };
};
var iforOf_ = function (dictApplicative) {
    return function ($48) {
        return Data_Function.flip(itraverseOf_(dictApplicative)($48));
    };
};
var ifindOf = function (p) {
    return function (f) {
        return ifoldrOf(p)(function (i) {
            return function (a) {
                return Data_Maybe.maybe((function () {
                    var $37 = f(i)(a);
                    if ($37) {
                        return new Data_Maybe.Just(a);
                    };
                    return Data_Maybe.Nothing.value;
                })())(Data_Maybe.Just.create);
            };
        })(Data_Maybe.Nothing.value);
    };
};
var ianyOf = function (dictHeytingAlgebra) {
    return function (p) {
        return function (f) {
            return function ($49) {
                return Data_Newtype.unwrap(Data_Monoid_Disj.newtypeDisj)(ifoldMapOf(p)(function (i) {
                    return function ($50) {
                        return Data_Monoid_Disj.Disj(f(i)($50));
                    };
                })($49));
            };
        };
    };
};
var iallOf = function (dictHeytingAlgebra) {
    return function (p) {
        return function (f) {
            return function ($51) {
                return Data_Newtype.unwrap(Data_Monoid_Conj.newtypeConj)(ifoldMapOf(p)(function (i) {
                    return function ($52) {
                        return Data_Monoid_Conj.Conj(f(i)($52));
                    };
                })($51));
            };
        };
    };
};
var folded = function (dictMonoid) {
    return function (dictFoldable) {
        return function (v) {
            return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(v);
        };
    };
};
var foldMapOf = Data_Newtype.under(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.Forget);
var foldOf = function (p) {
    return foldMapOf(p)(Control_Category.id(Control_Category.categoryFn));
};
var foldlOf = function (p) {
    return function (f) {
        return function (r) {
            return function ($53) {
                return Data_Function.flip(Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo))(r)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(foldMapOf(p)(function ($54) {
                    return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f)($54)));
                })($53)));
            };
        };
    };
};
var foldrOf = function (p) {
    return function (f) {
        return function (r) {
            return function ($55) {
                return Data_Function.flip(Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo))(r)(foldMapOf(p)(function ($56) {
                    return Data_Monoid_Endo.Endo(f($56));
                })($55));
            };
        };
    };
};
var maximumOf = function (dictOrd) {
    return function (p) {
        var max = function (a) {
            return function (b) {
                var $39 = Data_Ord.greaterThan(dictOrd)(a)(b);
                if ($39) {
                    return a;
                };
                return b;
            };
        };
        return foldrOf(p)(function (a) {
            return function ($57) {
                return Data_Maybe.Just.create(Data_Maybe.maybe(a)(max(a))($57));
            };
        })(Data_Maybe.Nothing.value);
    };
};
var minimumOf = function (dictOrd) {
    return function (p) {
        var min = function (a) {
            return function (b) {
                var $40 = Data_Ord.lessThan(dictOrd)(a)(b);
                if ($40) {
                    return a;
                };
                return b;
            };
        };
        return foldrOf(p)(function (a) {
            return function ($58) {
                return Data_Maybe.Just.create(Data_Maybe.maybe(a)(min(a))($58));
            };
        })(Data_Maybe.Nothing.value);
    };
};
var toListOf = function (p) {
    return foldrOf(p)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
};
var toListOfOn = function (s) {
    return function (p) {
        return toListOf(p)(s);
    };
};
var traverseOf_ = function (dictApplicative) {
    return function (p) {
        return function (f) {
            return foldrOf(p)(function (a) {
                return function (fu) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(Data_Functor["void"]((dictApplicative.Apply0()).Functor0())(f(a)))(fu);
                };
            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
        };
    };
};
var has = function (dictHeytingAlgebra) {
    return function (p) {
        return function ($59) {
            return Data_Newtype.unwrap(Data_Monoid_Disj.newtypeDisj)(foldMapOf(p)(Data_Function["const"](Data_HeytingAlgebra.tt(dictHeytingAlgebra)))($59));
        };
    };
};
var hasn$primet = function (dictHeytingAlgebra) {
    return function (p) {
        return function ($60) {
            return Data_Newtype.unwrap(Data_Monoid_Conj.newtypeConj)(foldMapOf(p)(Data_Function["const"](Data_HeytingAlgebra.ff(dictHeytingAlgebra)))($60));
        };
    };
};
var lastOf = function (p) {
    return function ($61) {
        return Data_Newtype.unwrap(Data_Maybe_Last.newtypeLast)(foldMapOf(p)(function ($62) {
            return Data_Maybe_Last.Last(Data_Maybe.Just.create($62));
        })($61));
    };
};
var lengthOf = function (p) {
    return function ($63) {
        return Data_Newtype.unwrap(Data_Monoid_Additive.newtypeAdditive)(foldMapOf(p)(Data_Function["const"](1))($63));
    };
};
var preview = function (p) {
    return function ($64) {
        return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(foldMapOf(p)(function ($65) {
            return Data_Maybe_First.First(Data_Maybe.Just.create($65));
        })($64));
    };
};
var previewOn = function (s) {
    return function (p) {
        return preview(p)(s);
    };
};
var productOf = function (dictSemiring) {
    return function (p) {
        return function ($66) {
            return Data_Newtype.unwrap(Data_Monoid_Multiplicative.newtypeMultiplicative)(foldMapOf(p)(Data_Monoid_Multiplicative.Multiplicative)($66));
        };
    };
};
var sequenceOf_ = function (dictApplicative) {
    return function (p) {
        return function ($67) {
            return Data_Function.flip(Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo))(Control_Applicative.pure(dictApplicative)(Data_Unit.unit))(foldMapOf(p)(function (f) {
                return function (v) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(f)(v);
                };
            })($67));
        };
    };
};
var sumOf = function (dictSemiring) {
    return function (p) {
        return function ($68) {
            return Data_Newtype.unwrap(Data_Monoid_Additive.newtypeAdditive)(foldMapOf(p)(Data_Monoid_Additive.Additive)($68));
        };
    };
};
var firstOf = function (p) {
    return function ($69) {
        return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(foldMapOf(p)(function ($70) {
            return Data_Maybe_First.First(Data_Maybe.Just.create($70));
        })($69));
    };
};
var findOf = function (p) {
    return function (f) {
        return foldrOf(p)(function (a) {
            return Data_Maybe.maybe((function () {
                var $41 = f(a);
                if ($41) {
                    return new Data_Maybe.Just(a);
                };
                return Data_Maybe.Nothing.value;
            })())(Data_Maybe.Just.create);
        })(Data_Maybe.Nothing.value);
    };
};
var filtered = function (dictChoice) {
    return function (f) {
        return function ($71) {
            return Data_Profunctor.dimap(dictChoice.Profunctor0())(function (x) {
                var $42 = f(x);
                if ($42) {
                    return new Data_Either.Right(x);
                };
                return new Data_Either.Left(x);
            })(Data_Either.either(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)($71));
        };
    };
};
var anyOf = function (dictHeytingAlgebra) {
    return function (p) {
        return function (f) {
            return function ($72) {
                return Data_Newtype.unwrap(Data_Monoid_Disj.newtypeDisj)(foldMapOf(p)(function ($73) {
                    return Data_Monoid_Disj.Disj(f($73));
                })($72));
            };
        };
    };
};
var elemOf = function (dictEq) {
    return function (p) {
        return function (a) {
            return anyOf(Data_HeytingAlgebra.heytingAlgebraBoolean)(p)(function (v) {
                return Data_Eq.eq(dictEq)(v)(a);
            });
        };
    };
};
var orOf = function (dictHeytingAlgebra) {
    return function (p) {
        return anyOf(dictHeytingAlgebra)(p)(Control_Category.id(Control_Category.categoryFn));
    };
};
var allOf = function (dictHeytingAlgebra) {
    return function (p) {
        return function (f) {
            return function ($74) {
                return Data_Newtype.unwrap(Data_Monoid_Conj.newtypeConj)(foldMapOf(p)(function ($75) {
                    return Data_Monoid_Conj.Conj(f($75));
                })($74));
            };
        };
    };
};
var andOf = function (dictHeytingAlgebra) {
    return function (p) {
        return allOf(dictHeytingAlgebra)(p)(Control_Category.id(Control_Category.categoryFn));
    };
};
var notElemOf = function (dictEq) {
    return function (p) {
        return function (a) {
            return allOf(Data_HeytingAlgebra.heytingAlgebraBoolean)(p)(function (v) {
                return Data_Eq.notEq(dictEq)(v)(a);
            });
        };
    };
};
module.exports = {
    previewOn: previewOn,
    toListOfOn: toListOfOn,
    preview: preview,
    foldOf: foldOf,
    foldMapOf: foldMapOf,
    foldrOf: foldrOf,
    foldlOf: foldlOf,
    toListOf: toListOf,
    firstOf: firstOf,
    lastOf: lastOf,
    maximumOf: maximumOf,
    minimumOf: minimumOf,
    allOf: allOf,
    anyOf: anyOf,
    andOf: andOf,
    orOf: orOf,
    elemOf: elemOf,
    notElemOf: notElemOf,
    sumOf: sumOf,
    productOf: productOf,
    lengthOf: lengthOf,
    findOf: findOf,
    sequenceOf_: sequenceOf_,
    traverseOf_: traverseOf_,
    has: has,
    "hasn't": hasn$primet,
    replicated: replicated,
    filtered: filtered,
    folded: folded,
    unfolded: unfolded,
    ifoldMapOf: ifoldMapOf,
    ifoldrOf: ifoldrOf,
    ifoldlOf: ifoldlOf,
    iallOf: iallOf,
    ianyOf: ianyOf,
    itoListOf: itoListOf,
    itraverseOf_: itraverseOf_
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Either":154,"../Data.Eq":157,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.HeytingAlgebra":188,"../Data.Lens.Internal.Forget":204,"../Data.Lens.Internal.Indexed":206,"../Data.Lens.Types":224,"../Data.List":230,"../Data.List.Types":229,"../Data.Maybe":234,"../Data.Maybe.First":232,"../Data.Maybe.Last":233,"../Data.Monoid":242,"../Data.Monoid.Additive":236,"../Data.Monoid.Conj":237,"../Data.Monoid.Disj":238,"../Data.Monoid.Dual":239,"../Data.Monoid.Endo":240,"../Data.Monoid.Multiplicative":241,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Profunctor":260,"../Data.Profunctor.Choice":253,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Tuple":298,"../Data.Unit":302,"../Prelude":358}],200:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed");
var Data_Lens_Types = require("../Data.Lens.Types");
var Data_Newtype = require("../Data.Newtype");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var view = function (l) {
    return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(l(Control_Category.id(Control_Category.categoryFn)));
};
var viewOn = function (s) {
    return function (l) {
        return view(l)(s);
    };
};
var use = function (dictMonadState) {
    return function (p) {
        return Control_Monad_State_Class.gets(dictMonadState)(function (v) {
            return viewOn(v)(p);
        });
    };
};
var to = function (f) {
    return function (p) {
        return function ($7) {
            return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(p)(f($7));
        };
    };
};
var takeBoth = function (l) {
    return function (r) {
        return function (a) {
            var cmps = function (v) {
                return function (v1) {
                    return Data_Profunctor_Strong.fanout(Control_Category.categoryFn)(Data_Profunctor_Strong.strongFn)(v)(v1);
                };
            };
            return cmps(l(Control_Category.id(Control_Category.categoryFn)))(r(Control_Category.id(Control_Category.categoryFn)));
        };
    };
};
var iview = function (l) {
    return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(l(Data_Lens_Internal_Indexed.Indexed(Control_Category.id(Control_Category.categoryFn))));
};
var iuse = function (dictMonadState) {
    return function (p) {
        return Control_Monad_State_Class.gets(dictMonadState)(iview(p));
    };
};
module.exports = {
    viewOn: viewOn,
    view: view,
    to: to,
    takeBoth: takeBoth,
    use: use,
    iview: iview,
    iuse: iuse
};

},{"../Control.Category":12,"../Control.Monad.State.Class":54,"../Control.Semigroupoid":66,"../Data.Function":172,"../Data.Lens.Internal.Forget":204,"../Data.Lens.Internal.Indexed":206,"../Data.Lens.Types":224,"../Data.Newtype":244,"../Data.Profunctor.Strong":259,"../Data.Tuple":298,"../Prelude":358}],201:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Data_Distributive = require("../Data.Distributive");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Lens_Internal_Grating = require("../Data.Lens.Internal.Grating");
var Data_Lens_Internal_Zipping = require("../Data.Lens.Internal.Zipping");
var Data_Lens_Types = require("../Data.Lens.Types");
var Data_Newtype = require("../Data.Newtype");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed");
var Data_Profunctor_Costar = require("../Data.Profunctor.Costar");
var Data_Profunctor_Star = require("../Data.Profunctor.Star");
var Prelude = require("../Prelude");
var zipWithOf = function (g) {
    return function (f) {
        return Data_Newtype.unwrap(Data_Lens_Internal_Zipping.newtypeZipping)(g(f));
    };
};
var zipFWithOf = function (g) {
    return function (f) {
        return Data_Newtype.unwrap(Data_Profunctor_Costar.newtypeCostar)(g(f));
    };
};
var withGrate = function (g) {
    return Data_Newtype.unwrap(Data_Lens_Internal_Grating.newtypeGrating)(g(function (f) {
        return f(Control_Category.id(Control_Category.categoryFn));
    }));
};
var grate = function (f) {
    return function (dictClosed) {
        return function (pab) {
            return Data_Profunctor.dimap(dictClosed.Profunctor0())(Data_Function.applyFlipped)(f)(Data_Profunctor_Closed.closed(dictClosed)(pab));
        };
    };
};
var cotraversed = function (dictDistributive) {
    return function (dictClosed) {
        return grate(function (f) {
            return Data_Distributive.cotraverse(dictDistributive)(Data_Functor.functorFn)(f)(Control_Category.id(Control_Category.categoryFn));
        })(dictClosed);
    };
};
var collectOf = function (g) {
    return function (f) {
        return Data_Newtype.unwrap(Data_Profunctor_Star.newtypeStar)(g(f));
    };
};
var cloneGrate = function (g) {
    return function (dictClosed) {
        return grate(withGrate(g))(dictClosed);
    };
};
module.exports = {
    grate: grate,
    withGrate: withGrate,
    cloneGrate: cloneGrate,
    cotraversed: cotraversed,
    zipWithOf: zipWithOf,
    zipFWithOf: zipFWithOf,
    collectOf: collectOf
};

},{"../Control.Category":12,"../Data.Distributive":151,"../Data.Function":172,"../Data.Functor":180,"../Data.Lens.Internal.Grating":205,"../Data.Lens.Internal.Zipping":212,"../Data.Lens.Types":224,"../Data.Newtype":244,"../Data.Profunctor":260,"../Data.Profunctor.Closed":254,"../Data.Profunctor.Costar":256,"../Data.Profunctor.Star":258,"../Prelude":358}],202:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Monad_State = require("../Control.Monad.State");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Compose = require("../Data.Functor.Compose");
var Data_Identity = require("../Data.Identity");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed");
var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander");
var Data_Lens_Iso_Newtype = require("../Data.Lens.Iso.Newtype");
var Data_Lens_Setter = require("../Data.Lens.Setter");
var Data_Lens_Types = require("../Data.Lens.Types");
var Data_Newtype = require("../Data.Newtype");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Star = require("../Data.Profunctor.Star");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Semiring = require("../Data.Semiring");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var unIndex = function (dictProfunctor) {
    return function (l) {
        return function ($12) {
            return l(Data_Lens_Internal_Indexed.Indexed(Data_Profunctor.dimap(dictProfunctor)(Data_Tuple.snd)(Control_Category.id(Control_Category.categoryFn))($12)));
        };
    };
};
var reindexed = function (dictProfunctor) {
    return function (ij) {
        return function (v) {
            return function ($13) {
                return v(Data_Lens_Setter.over(Data_Lens_Iso_Newtype._Newtype(Data_Lens_Internal_Indexed.newtypeIndexed)(Data_Lens_Internal_Indexed.newtypeIndexed)(Data_Profunctor.profunctorFn))(Data_Profunctor.lmap(dictProfunctor)(Data_Profunctor_Strong.first(Data_Profunctor_Strong.strongFn)(ij)))($13));
            };
        };
    };
};
var iwander = function (itr) {
    return function (dictWander) {
        return function ($14) {
            return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
                return function (f) {
                    return function (s) {
                        return itr(dictApplicative)(Data_Tuple.curry(f))(s);
                    };
                };
            })(Data_Newtype.unwrap(Data_Lens_Internal_Indexed.newtypeIndexed)($14));
        };
    };
};
var positions = function (tr) {
    return function (dictWander) {
        return iwander(function (dictApplicative) {
            return function (f) {
                return function (s) {
                    return Data_Function.flip(Control_Monad_State.evalState)(0)(Data_Newtype.unwrap(Data_Functor_Compose.newtypeCompose)(Data_Function.flip(Data_Newtype.unwrap(Data_Profunctor_Star.newtypeStar))(s)(tr(Data_Lens_Internal_Wander.wanderStar(Data_Functor_Compose.applicativeCompose(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(dictApplicative)))(function (a) {
                        return Data_Functor_Compose.Compose(Control_Apply.applyFirst(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(f)(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))))(Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(a)))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function (v) {
                            return v + 1 | 0;
                        })));
                    }))));
                };
            };
        })(dictWander);
    };
};
var itraversed = function (dictTraversableWithIndex) {
    return function (dictWander) {
        return iwander(function (dictApplicative) {
            return Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative);
        })(dictWander);
    };
};
var asIndex = function (dictProfunctor) {
    return function (l) {
        return function ($15) {
            return l(Data_Lens_Internal_Indexed.Indexed(Data_Profunctor.dimap(dictProfunctor)(Data_Tuple.fst)(Control_Category.id(Control_Category.categoryFn))($15)));
        };
    };
};
module.exports = {
    unIndex: unIndex,
    asIndex: asIndex,
    reindexed: reindexed,
    iwander: iwander,
    itraversed: itraversed,
    positions: positions
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Category":12,"../Control.Monad.State":56,"../Control.Monad.State.Class":54,"../Control.Monad.State.Trans":55,"../Control.Semigroupoid":66,"../Data.Function":172,"../Data.Functor":180,"../Data.Functor.Compose":174,"../Data.Identity":189,"../Data.Lens.Internal.Indexed":206,"../Data.Lens.Internal.Wander":211,"../Data.Lens.Iso.Newtype":213,"../Data.Lens.Setter":222,"../Data.Lens.Types":224,"../Data.Newtype":244,"../Data.Profunctor":260,"../Data.Profunctor.Star":258,"../Data.Profunctor.Strong":259,"../Data.Semiring":273,"../Data.TraversableWithIndex":297,"../Data.Tuple":298,"../Prelude":358}],203:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor = require("../Data.Functor");
var Data_Profunctor = require("../Data.Profunctor");
var Prelude = require("../Prelude");
var Exchange = (function () {
    function Exchange(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Exchange.create = function (value0) {
        return function (value1) {
            return new Exchange(value0, value1);
        };
    };
    return Exchange;
})();
var profunctorExchange = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Exchange(function ($11) {
                return v.value0(f($11));
            }, function ($12) {
                return g(v.value1($12));
            });
        };
    };
});
var functorExchange = new Data_Functor.Functor(function (f) {
    return function (v) {
        return new Exchange(v.value0, function ($13) {
            return f(v.value1($13));
        });
    };
});
module.exports = {
    Exchange: Exchange,
    functorExchange: functorExchange,
    profunctorExchange: profunctorExchange
};

},{"../Control.Semigroupoid":66,"../Data.Functor":180,"../Data.Profunctor":260,"../Prelude":358}],204:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Const = require("../Data.Const");
var Data_Either = require("../Data.Either");
var Data_Functor = require("../Data.Functor");
var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Profunctor_Cochoice = require("../Data.Profunctor.Cochoice");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var Forget = function (x) {
    return x;
};
var semigroupForget = function (dictSemigroup) {
    return Data_Semigroup.semigroupFn(dictSemigroup);
};
var profunctorForget = new Data_Profunctor.Profunctor(function (f) {
    return function (v) {
        return function (v1) {
            return function ($27) {
                return v1(f($27));
            };
        };
    };
});
var strongForget = new Data_Profunctor_Strong.Strong(function () {
    return profunctorForget;
}, function (v) {
    return function ($28) {
        return v(Data_Tuple.fst($28));
    };
}, function (v) {
    return function ($29) {
        return v(Data_Tuple.snd($29));
    };
});
var newtypeForget = new Data_Newtype.Newtype(function (n) {
    return n;
}, Forget);
var monoidForget = function (dictMonoid) {
    return Data_Monoid.monoidFn(dictMonoid);
};
var cochoiceForget = new Data_Profunctor_Cochoice.Cochoice(function () {
    return profunctorForget;
}, function (v) {
    return function ($30) {
        return v(Data_Either.Left.create($30));
    };
}, function (v) {
    return function ($31) {
        return v(Data_Either.Right.create($31));
    };
});
var choiceForget = function (dictMonoid) {
    return new Data_Profunctor_Choice.Choice(function () {
        return profunctorForget;
    }, function (v) {
        return Data_Either.either(v)(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)));
    }, function (v) {
        return Data_Either.either(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)))(v);
    });
};
var wanderForget = function (dictMonoid) {
    return new Data_Lens_Internal_Wander.Wander(function () {
        return choiceForget(dictMonoid);
    }, function () {
        return strongForget;
    }, function (f) {
        return function (v) {
            return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Const.newtypeConst)(Data_Const.newtypeConst)(Data_Const.Const)(f(Data_Const.applicativeConst(dictMonoid)))(v);
        };
    });
};
module.exports = {
    Forget: Forget,
    newtypeForget: newtypeForget,
    semigroupForget: semigroupForget,
    monoidForget: monoidForget,
    profunctorForget: profunctorForget,
    choiceForget: choiceForget,
    strongForget: strongForget,
    cochoiceForget: cochoiceForget,
    wanderForget: wanderForget
};

},{"../Control.Semigroupoid":66,"../Data.Const":142,"../Data.Either":154,"../Data.Functor":180,"../Data.Lens.Internal.Wander":211,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Profunctor":260,"../Data.Profunctor.Choice":253,"../Data.Profunctor.Cochoice":255,"../Data.Profunctor.Strong":259,"../Data.Semigroup":271,"../Data.Tuple":298,"../Prelude":358}],205:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed");
var Prelude = require("../Prelude");
var Grating = function (x) {
    return x;
};
var profunctorGrating = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (v) {
            return function (d) {
                return g(v(function (k) {
                    return d(function ($9) {
                        return k(f($9));
                    });
                }));
            };
        };
    };
});
var newtypeGrating = new Data_Newtype.Newtype(function (n) {
    return n;
}, Grating);
var closedGrating = new Data_Profunctor_Closed.Closed(function () {
    return profunctorGrating;
}, function (v) {
    return function (f) {
        return function (x) {
            return v(function (k) {
                return f(function (g) {
                    return k(g(x));
                });
            });
        };
    };
});
module.exports = {
    Grating: Grating,
    newtypeGrating: newtypeGrating,
    profunctorGrating: profunctorGrating,
    closedGrating: closedGrating
};

},{"../Control.Semigroupoid":66,"../Data.Newtype":244,"../Data.Profunctor":260,"../Data.Profunctor.Closed":254,"../Prelude":358}],206:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander");
var Data_Newtype = require("../Data.Newtype");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var Indexed = function (x) {
    return x;
};
var profunctorIndexed = function (dictProfunctor) {
    return new Data_Profunctor.Profunctor(function (f) {
        return function (g) {
            return function (v) {
                return Data_Profunctor.dimap(dictProfunctor)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(f))(g)(v);
            };
        };
    });
};
var strongIndexed = function (dictStrong) {
    return new Data_Profunctor_Strong.Strong(function () {
        return profunctorIndexed(dictStrong.Profunctor0());
    }, function (v) {
        return Indexed(Data_Profunctor.lmap(dictStrong.Profunctor0())(function (v1) {
            return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1.value0), v1.value1.value1);
        })(Data_Profunctor_Strong.first(dictStrong)(v)));
    }, function (v) {
        return Indexed(Data_Profunctor.lmap(dictStrong.Profunctor0())(function (v1) {
            return new Data_Tuple.Tuple(v1.value1.value0, new Data_Tuple.Tuple(v1.value0, v1.value1.value1));
        })(Data_Profunctor_Strong.second(dictStrong)(v)));
    });
};
var newtypeIndexed = new Data_Newtype.Newtype(function (n) {
    return n;
}, Indexed);
var choiceIndexed = function (dictChoice) {
    return new Data_Profunctor_Choice.Choice(function () {
        return profunctorIndexed(dictChoice.Profunctor0());
    }, function (v) {
        return Indexed(Data_Profunctor.lmap(dictChoice.Profunctor0())(function (v1) {
            return Data_Either.either(function ($47) {
                return Data_Either.Left.create(Data_Tuple.Tuple.create(v1.value0)($47));
            })(Data_Either.Right.create)(v1.value1);
        })(Data_Profunctor_Choice.left(dictChoice)(v)));
    }, function (v) {
        return Indexed(Data_Profunctor.lmap(dictChoice.Profunctor0())(function (v1) {
            return Data_Either.either(Data_Either.Left.create)(function ($48) {
                return Data_Either.Right.create(Data_Tuple.Tuple.create(v1.value0)($48));
            })(v1.value1);
        })(Data_Profunctor_Choice.right(dictChoice)(v)));
    });
};
var wanderIndexed = function (dictWander) {
    return new Data_Lens_Internal_Wander.Wander(function () {
        return choiceIndexed(dictWander.Choice1());
    }, function () {
        return strongIndexed(dictWander.Strong0());
    }, function (trav) {
        return function (v) {
            return Indexed(Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
                return function (ia2fb) {
                    return function (v1) {
                        return trav(dictApplicative)(function ($49) {
                            return ia2fb(Data_Tuple.Tuple.create(v1.value0)($49));
                        })(v1.value1);
                    };
                };
            })(v));
        };
    });
};
module.exports = {
    Indexed: Indexed,
    newtypeIndexed: newtypeIndexed,
    profunctorIndexed: profunctorIndexed,
    strongIndexed: strongIndexed,
    choiceIndexed: choiceIndexed,
    wanderIndexed: wanderIndexed
};

},{"../Control.Semigroupoid":66,"../Data.Either":154,"../Data.Function":172,"../Data.Lens.Internal.Wander":211,"../Data.Newtype":244,"../Data.Profunctor":260,"../Data.Profunctor.Choice":253,"../Data.Profunctor.Strong":259,"../Data.Tuple":298,"../Prelude":358}],207:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Functor = require("../Data.Functor");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Prelude = require("../Prelude");
var Market = (function () {
    function Market(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Market.create = function (value0) {
        return function (value1) {
            return new Market(value0, value1);
        };
    };
    return Market;
})();
var profunctorMarket = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Market(function ($19) {
                return g(v.value0($19));
            }, function ($20) {
                return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(g)(v.value1(f($20)));
            });
        };
    };
});
var functorMarket = new Data_Functor.Functor(function (f) {
    return function (v) {
        return new Market(function ($21) {
            return f(v.value0($21));
        }, function ($22) {
            return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(f)(v.value1($22));
        });
    };
});
var choiceMarket = new Data_Profunctor_Choice.Choice(function () {
    return profunctorMarket;
}, function (v) {
    return new Market(function ($23) {
        return Data_Either.Left.create(v.value0($23));
    }, Data_Either.either(function ($24) {
        return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Either.Left.create)(v.value1($24));
    })(function ($25) {
        return Data_Either.Left.create(Data_Either.Right.create($25));
    }));
}, function (v) {
    return new Market(function ($26) {
        return Data_Either.Right.create(v.value0($26));
    }, Data_Either.either(function ($27) {
        return Data_Either.Left.create(Data_Either.Left.create($27));
    })(function ($28) {
        return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Either.Right.create)(v.value1($28));
    }));
});
module.exports = {
    Market: Market,
    functorMarket: functorMarket,
    profunctorMarket: profunctorMarket,
    choiceMarket: choiceMarket
};

},{"../Control.Semigroupoid":66,"../Data.Bifunctor":129,"../Data.Either":154,"../Data.Functor":180,"../Data.Profunctor":260,"../Data.Profunctor.Choice":253,"../Prelude":358}],208:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Profunctor_Cochoice = require("../Data.Profunctor.Cochoice");
var Data_Profunctor_Costrong = require("../Data.Profunctor.Costrong");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Prelude = require("../Prelude");
var Re = function (x) {
    return x;
};
var profunctorRe = function (dictProfunctor) {
    return new Data_Profunctor.Profunctor(function (f) {
        return function (g) {
            return function (v) {
                return function ($28) {
                    return v(Data_Profunctor.dimap(dictProfunctor)(g)(f)($28));
                };
            };
        };
    });
};
var strongRe = function (dictStrong) {
    return new Data_Profunctor_Costrong.Costrong(function () {
        return profunctorRe(dictStrong.Profunctor0());
    }, function (v) {
        return function ($29) {
            return v(Data_Profunctor_Strong.first(dictStrong)($29));
        };
    }, function (v) {
        return function ($30) {
            return v(Data_Profunctor_Strong.second(dictStrong)($30));
        };
    });
};
var newtypeRe = new Data_Newtype.Newtype(function (n) {
    return n;
}, Re);
var costrongRe = function (dictCostrong) {
    return new Data_Profunctor_Strong.Strong(function () {
        return profunctorRe(dictCostrong.Profunctor0());
    }, function (v) {
        return function ($31) {
            return v(Data_Profunctor_Costrong.unfirst(dictCostrong)($31));
        };
    }, function (v) {
        return function ($32) {
            return v(Data_Profunctor_Costrong.unsecond(dictCostrong)($32));
        };
    });
};
var cochoiceRe = function (dictCochoice) {
    return new Data_Profunctor_Choice.Choice(function () {
        return profunctorRe(dictCochoice.Profunctor0());
    }, function (v) {
        return function ($33) {
            return v(Data_Profunctor_Cochoice.unleft(dictCochoice)($33));
        };
    }, function (v) {
        return function ($34) {
            return v(Data_Profunctor_Cochoice.unright(dictCochoice)($34));
        };
    });
};
var choiceRe = function (dictChoice) {
    return new Data_Profunctor_Cochoice.Cochoice(function () {
        return profunctorRe(dictChoice.Profunctor0());
    }, function (v) {
        return function ($35) {
            return v(Data_Profunctor_Choice.left(dictChoice)($35));
        };
    }, function (v) {
        return function ($36) {
            return v(Data_Profunctor_Choice.right(dictChoice)($36));
        };
    });
};
module.exports = {
    Re: Re,
    newtypeRe: newtypeRe,
    profunctorRe: profunctorRe,
    choiceRe: choiceRe,
    cochoiceRe: cochoiceRe,
    strongRe: strongRe,
    costrongRe: costrongRe
};

},{"../Control.Semigroupoid":66,"../Data.Newtype":244,"../Data.Profunctor":260,"../Data.Profunctor.Choice":253,"../Data.Profunctor.Cochoice":255,"../Data.Profunctor.Costrong":257,"../Data.Profunctor.Strong":259,"../Prelude":358}],209:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var Shop = (function () {
    function Shop(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Shop.create = function (value0) {
        return function (value1) {
            return new Shop(value0, value1);
        };
    };
    return Shop;
})();
var profunctorShop = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Shop(function ($30) {
                return v.value0(f($30));
            }, function (s) {
                return function ($31) {
                    return g(v.value1(f(s))($31));
                };
            });
        };
    };
});
var strongShop = new Data_Profunctor_Strong.Strong(function () {
    return profunctorShop;
}, function (v) {
    return new Shop(function (v1) {
        return v.value0(v1.value0);
    }, function (v1) {
        return function (b) {
            return new Data_Tuple.Tuple(v.value1(v1.value0)(b), v1.value1);
        };
    });
}, function (v) {
    return new Shop(function (v1) {
        return v.value0(v1.value1);
    }, function (v1) {
        return function (b) {
            return new Data_Tuple.Tuple(v1.value0, v.value1(v1.value1)(b));
        };
    });
});
module.exports = {
    Shop: Shop,
    profunctorShop: profunctorShop,
    strongShop: strongShop
};

},{"../Control.Semigroupoid":66,"../Data.Profunctor":260,"../Data.Profunctor.Strong":259,"../Data.Tuple":298,"../Prelude":358}],210:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed");
var Data_Profunctor_Costrong = require("../Data.Profunctor.Costrong");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var Tagged = function (x) {
    return x;
};
var taggedProfunctor = new Data_Profunctor.Profunctor(function (v) {
    return function (g) {
        return function (v1) {
            return g(v1);
        };
    };
});
var taggedCostrong = new Data_Profunctor_Costrong.Costrong(function () {
    return taggedProfunctor;
}, function (v) {
    return v.value0;
}, function (v) {
    return v.value1;
});
var taggedClosed = new Data_Profunctor_Closed.Closed(function () {
    return taggedProfunctor;
}, function (v) {
    return Data_Function["const"](v);
});
var taggedChoice = new Data_Profunctor_Choice.Choice(function () {
    return taggedProfunctor;
}, function (v) {
    return new Data_Either.Left(v);
}, function (v) {
    return new Data_Either.Right(v);
});
var newtypeTagged = new Data_Newtype.Newtype(function (n) {
    return n;
}, Tagged);
var functorTagged = new Data_Functor.Functor(function (f) {
    return function (m) {
        return f(m);
    };
});
var foldableTagged = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (b) {
        return function (v) {
            return f(b)(v);
        };
    };
}, function (f) {
    return function (b) {
        return function (v) {
            return f(v)(b);
        };
    };
});
var traversableTagged = new Data_Traversable.Traversable(function () {
    return foldableTagged;
}, function () {
    return functorTagged;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tagged)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tagged)(f(v));
        };
    };
});
var eqTagged = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            return Data_Eq.eq(dictEq)(x)(y);
        };
    });
};
var ordTagged = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqTagged(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            return Data_Ord.compare(dictOrd)(x)(y);
        };
    });
};
var eq1Tagged = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqTagged(dictEq));
});
var ord1Tagged = new Data_Ord.Ord1(function () {
    return eq1Tagged;
}, function (dictOrd) {
    return Data_Ord.compare(ordTagged(dictOrd));
});
module.exports = {
    Tagged: Tagged,
    newtypeTagged: newtypeTagged,
    eqTagged: eqTagged,
    eq1Tagged: eq1Tagged,
    ordTagged: ordTagged,
    ord1Tagged: ord1Tagged,
    functorTagged: functorTagged,
    taggedProfunctor: taggedProfunctor,
    taggedChoice: taggedChoice,
    taggedCostrong: taggedCostrong,
    taggedClosed: taggedClosed,
    foldableTagged: foldableTagged,
    traversableTagged: traversableTagged
};

},{"../Data.Either":154,"../Data.Eq":157,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Profunctor":260,"../Data.Profunctor.Choice":253,"../Data.Profunctor.Closed":254,"../Data.Profunctor.Costrong":257,"../Data.Traversable":296,"../Data.Tuple":298,"../Prelude":358}],211:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Data_Newtype = require("../Data.Newtype");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Profunctor_Star = require("../Data.Profunctor.Star");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Prelude = require("../Prelude");
var Wander = function (Choice1, Strong0, wander) {
    this.Choice1 = Choice1;
    this.Strong0 = Strong0;
    this.wander = wander;
};
var wanderStar = function (dictApplicative) {
    return new Wander(function () {
        return Data_Profunctor_Star.choiceStar(dictApplicative);
    }, function () {
        return Data_Profunctor_Star.strongStar((dictApplicative.Apply0()).Functor0());
    }, function (t) {
        return function (v) {
            return t(dictApplicative)(v);
        };
    });
};
var wanderFunction = new Wander(function () {
    return Data_Profunctor_Choice.choiceFn;
}, function () {
    return Data_Profunctor_Strong.strongFn;
}, function (t) {
    return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Identity.newtypeIdentity)(Data_Identity.newtypeIdentity)(Data_Identity.Identity)(t(Data_Identity.applicativeIdentity));
});
var wander = function (dict) {
    return dict.wander;
};
module.exports = {
    wander: wander,
    Wander: Wander,
    wanderFunction: wanderFunction,
    wanderStar: wanderStar
};

},{"../Data.Functor":180,"../Data.Identity":189,"../Data.Newtype":244,"../Data.Profunctor.Choice":253,"../Data.Profunctor.Star":258,"../Data.Profunctor.Strong":259,"../Prelude":358}],212:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Newtype = require("../Data.Newtype");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed");
var Zipping = function (x) {
    return x;
};
var profunctorZipping = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (v) {
            return function (a1) {
                return function (a2) {
                    return g(v(f(a1))(f(a2)));
                };
            };
        };
    };
});
var newtypeZipping = new Data_Newtype.Newtype(function (n) {
    return n;
}, Zipping);
var closedZipping = new Data_Profunctor_Closed.Closed(function () {
    return profunctorZipping;
}, function (v) {
    return function (f1) {
        return function (f2) {
            return function (x) {
                return v(f1(x))(f2(x));
            };
        };
    };
});
module.exports = {
    Zipping: Zipping,
    newtypeZipping: newtypeZipping,
    profunctorZipping: profunctorZipping,
    closedZipping: closedZipping
};

},{"../Data.Newtype":244,"../Data.Profunctor":260,"../Data.Profunctor.Closed":254}],213:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Lens_Iso = require("../Data.Lens.Iso");
var Data_Newtype = require("../Data.Newtype");
var _Newtype = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (dictProfunctor) {
            return Data_Lens_Iso.iso(Data_Newtype.unwrap(dictNewtype))(Data_Newtype.wrap(dictNewtype1))(dictProfunctor);
        };
    };
};
module.exports = {
    _Newtype: _Newtype
};

},{"../Data.Lens.Iso":214,"../Data.Newtype":244}],214:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Lens_Internal_Exchange = require("../Data.Lens.Internal.Exchange");
var Data_Lens_Internal_Re = require("../Data.Lens.Internal.Re");
var Data_Lens_Types = require("../Data.Lens.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var withIso = function (l) {
    return function (f) {
        var v = l(new Data_Lens_Internal_Exchange.Exchange(Control_Category.id(Control_Category.categoryFn), Control_Category.id(Control_Category.categoryFn)));
        return f(v.value0)(v.value1);
    };
};
var under = function (l) {
    return withIso(l)(function (sa) {
        return function (bt) {
            return function (ts) {
                return function ($19) {
                    return sa(ts(bt($19)));
                };
            };
        };
    });
};
var re = function (t) {
    return Data_Newtype.unwrap(Data_Lens_Internal_Re.newtypeRe)(t(Control_Category.id(Control_Category.categoryFn)));
};
var iso = function (f) {
    return function (g) {
        return function (dictProfunctor) {
            return function (pab) {
                return Data_Profunctor.dimap(dictProfunctor)(f)(g)(pab);
            };
        };
    };
};
var mapping = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (l) {
            return function (dictProfunctor) {
                return withIso(l)(function (sa) {
                    return function (bt) {
                        return iso(Data_Functor.map(dictFunctor)(sa))(Data_Functor.map(dictFunctor1)(bt))(dictProfunctor);
                    };
                });
            };
        };
    };
};
var non = function (dictEq) {
    return function (def) {
        return function (dictProfunctor) {
            var g = function (a) {
                if (Data_Eq.eq(dictEq)(a)(def)) {
                    return Data_Maybe.Nothing.value;
                };
                if (Data_Boolean.otherwise) {
                    return new Data_Maybe.Just(a);
                };
                throw new Error("Failed pattern match at Data.Lens.Iso line 44, column 9 - line 45, column 33: " + [ a.constructor.name ]);
            };
            return iso(Data_Maybe.fromMaybe(def))(g)(dictProfunctor);
        };
    };
};
var uncurried = function (dictProfunctor) {
    return iso(Data_Tuple.uncurry)(Data_Tuple.curry)(dictProfunctor);
};
var flipped = function (dictProfunctor) {
    return iso(Data_Function.flip)(Data_Function.flip)(dictProfunctor);
};
var dimapping = function (dictProfunctor) {
    return function (dictProfunctor1) {
        return function (f) {
            return function (g) {
                return function (dictProfunctor2) {
                    return withIso(f)(function (sa) {
                        return function (bt) {
                            return withIso(g)(function (ssaa) {
                                return function (bbtt) {
                                    return iso(Data_Profunctor.dimap(dictProfunctor)(sa)(ssaa))(Data_Profunctor.dimap(dictProfunctor1)(bt)(bbtt))(dictProfunctor2);
                                };
                            });
                        };
                    });
                };
            };
        };
    };
};
var curried = function (dictProfunctor) {
    return iso(Data_Tuple.curry)(Data_Tuple.uncurry)(dictProfunctor);
};
var cloneIso = function (l) {
    return function (dictProfunctor) {
        return withIso(l)(function (x) {
            return function (y) {
                return function (p) {
                    return iso(x)(y)(dictProfunctor)(p);
                };
            };
        });
    };
};
var auf = function (dictProfunctor) {
    return function (l) {
        return withIso(l)(function (sa) {
            return function (bt) {
                return function (f) {
                    return function (g) {
                        return function (e) {
                            return bt(f(Data_Profunctor.rmap(dictProfunctor)(sa)(g))(e));
                        };
                    };
                };
            };
        });
    };
};
var au = function (l) {
    return withIso(l)(function (sa) {
        return function (bt) {
            return function (f) {
                return function (e) {
                    return sa(f(bt)(e));
                };
            };
        };
    });
};
module.exports = {
    iso: iso,
    withIso: withIso,
    cloneIso: cloneIso,
    re: re,
    au: au,
    auf: auf,
    under: under,
    non: non,
    curried: curried,
    uncurried: uncurried,
    flipped: flipped,
    mapping: mapping,
    dimapping: dimapping
};

},{"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Boolean":131,"../Data.Eq":157,"../Data.Function":172,"../Data.Functor":180,"../Data.Lens.Internal.Exchange":203,"../Data.Lens.Internal.Re":208,"../Data.Lens.Types":224,"../Data.Maybe":234,"../Data.Newtype":244,"../Data.Profunctor":260,"../Data.Tuple":298,"../Prelude":358}],215:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Lens_Lens = require("../Data.Lens.Lens");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Tuple = require("../Data.Tuple");
var _2 = function (dictStrong) {
    return Data_Profunctor_Strong.second(dictStrong);
};
var _1 = function (dictStrong) {
    return Data_Profunctor_Strong.first(dictStrong);
};
module.exports = {
    _1: _1,
    _2: _2
};

},{"../Data.Lens.Lens":217,"../Data.Profunctor.Strong":259,"../Data.Tuple":298}],216:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Function = require("../Data.Function");
var Data_Lens_Lens = require("../Data.Lens.Lens");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var united = function (dictStrong) {
    return Data_Lens_Lens.lens(Data_Function["const"](Data_Unit.unit))(Data_Function["const"])(dictStrong);
};
module.exports = {
    united: united
};

},{"../Data.Function":172,"../Data.Lens.Lens":217,"../Data.Unit":302,"../Prelude":358}],217:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed");
var Data_Lens_Internal_Shop = require("../Data.Lens.Internal.Shop");
var Data_Lens_Types = require("../Data.Lens.Types");
var Data_Newtype = require("../Data.Newtype");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var withLens = function (l) {
    return function (f) {
        var v = l(new Data_Lens_Internal_Shop.Shop(Control_Category.id(Control_Category.categoryFn), function (v1) {
            return function (b) {
                return b;
            };
        }));
        return f(v.value0)(v.value1);
    };
};
var withIndexedLens = function (l) {
    return function (f) {
        var v = l(new Data_Lens_Internal_Shop.Shop(Control_Category.id(Control_Category.categoryFn), function (v1) {
            return function (b) {
                return b;
            };
        }));
        return f(v.value0)(v.value1);
    };
};
var lens$prime = function (to) {
    return function (dictStrong) {
        return function (pab) {
            return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function (v) {
                return v.value1(v.value0);
            })(Data_Profunctor_Strong.first(dictStrong)(pab));
        };
    };
};
var lens = function (get) {
    return function (set) {
        return function (dictStrong) {
            return lens$prime(function (s) {
                return new Data_Tuple.Tuple(get(s), function (b) {
                    return set(s)(b);
                });
            })(dictStrong);
        };
    };
};
var ilens$prime = function (to) {
    return function (dictStrong) {
        return function (pab) {
            return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function (v) {
                return v.value1(v.value0);
            })(Data_Profunctor_Strong.first(dictStrong)(Data_Newtype.un(Data_Lens_Internal_Indexed.newtypeIndexed)(Data_Lens_Internal_Indexed.Indexed)(pab)));
        };
    };
};
var ilens = function (get) {
    return function (set) {
        return function (dictStrong) {
            return ilens$prime(function (s) {
                return new Data_Tuple.Tuple(get(s), function (b) {
                    return set(s)(b);
                });
            })(dictStrong);
        };
    };
};
var cloneLens = function (l) {
    return function (dictStrong) {
        return withLens(l)(function (x) {
            return function (y) {
                return function (p) {
                    return lens(x)(y)(dictStrong)(p);
                };
            };
        });
    };
};
var cloneIndexedLens = function (l) {
    return function (dictStrong) {
        return withIndexedLens(l)(function (x) {
            return function (y) {
                return function (p) {
                    return ilens(x)(y)(dictStrong)(p);
                };
            };
        });
    };
};
module.exports = {
    lens: lens,
    "lens'": lens$prime,
    withLens: withLens,
    cloneLens: cloneLens,
    ilens: ilens,
    "ilens'": ilens$prime,
    withIndexedLens: withIndexedLens,
    cloneIndexedLens: cloneIndexedLens
};

},{"../Control.Category":12,"../Data.Lens.Internal.Indexed":206,"../Data.Lens.Internal.Shop":209,"../Data.Lens.Types":224,"../Data.Newtype":244,"../Data.Profunctor":260,"../Data.Profunctor.Strong":259,"../Data.Tuple":298,"../Prelude":358}],218:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor_Coproduct = require("../Data.Functor.Coproduct");
var Data_Lens_Iso_Newtype = require("../Data.Lens.Iso.Newtype");
var Data_Lens_Prism = require("../Data.Lens.Prism");
var Data_Lens_Prism_Either = require("../Data.Lens.Prism.Either");
var Prelude = require("../Prelude");
var _Right = function (dictChoice) {
    return function ($2) {
        return Data_Lens_Iso_Newtype._Newtype(Data_Functor_Coproduct.newtypeCoproduct)(Data_Functor_Coproduct.newtypeCoproduct)(dictChoice.Profunctor0())(Data_Lens_Prism_Either._Right(dictChoice)($2));
    };
};
var _Left = function (dictChoice) {
    return function ($3) {
        return Data_Lens_Iso_Newtype._Newtype(Data_Functor_Coproduct.newtypeCoproduct)(Data_Functor_Coproduct.newtypeCoproduct)(dictChoice.Profunctor0())(Data_Lens_Prism_Either._Left(dictChoice)($3));
    };
};
module.exports = {
    _Left: _Left,
    _Right: _Right
};

},{"../Control.Semigroupoid":66,"../Data.Functor.Coproduct":177,"../Data.Lens.Iso.Newtype":213,"../Data.Lens.Prism":221,"../Data.Lens.Prism.Either":219,"../Prelude":358}],219:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Either = require("../Data.Either");
var Data_Lens_Prism = require("../Data.Lens.Prism");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var _Right = function (dictChoice) {
    return Data_Profunctor_Choice.right(dictChoice);
};
var _Left = function (dictChoice) {
    return Data_Profunctor_Choice.left(dictChoice);
};
module.exports = {
    _Left: _Left,
    _Right: _Right
};

},{"../Data.Either":154,"../Data.Lens.Prism":221,"../Data.Profunctor.Choice":253}],220:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Lens_Prism = require("../Data.Lens.Prism");
var Data_Maybe = require("../Data.Maybe");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var _Nothing = function (dictChoice) {
    return Data_Lens_Prism.prism(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.maybe(new Data_Either.Right(Data_Unit.unit))(Data_Function["const"](new Data_Either.Left(Data_Maybe.Nothing.value))))(dictChoice);
};
var _Just = function (dictChoice) {
    return Data_Lens_Prism.prism(Data_Maybe.Just.create)(Data_Maybe.maybe(new Data_Either.Left(Data_Maybe.Nothing.value))(Data_Either.Right.create))(dictChoice);
};
module.exports = {
    _Nothing: _Nothing,
    _Just: _Just
};

},{"../Data.Either":154,"../Data.Function":172,"../Data.Lens.Prism":221,"../Data.Maybe":234,"../Data.Unit":302,"../Prelude":358}],221:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Lens_Internal_Market = require("../Data.Lens.Internal.Market");
var Data_Lens_Internal_Tagged = require("../Data.Lens.Internal.Tagged");
var Data_Lens_Types = require("../Data.Lens.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Prelude = require("../Prelude");
var withPrism = function (l) {
    return function (f) {
        var v = l(new Data_Lens_Internal_Market.Market(Control_Category.id(Control_Category.categoryFn), Data_Either.Right.create));
        return f(v.value0)(v.value1);
    };
};
var review = Data_Newtype.under(Data_Lens_Internal_Tagged.newtypeTagged)(Data_Lens_Internal_Tagged.newtypeTagged)(Data_Lens_Internal_Tagged.Tagged);
var prism = function (to) {
    return function (fro) {
        return function (dictChoice) {
            return function (pab) {
                return Data_Profunctor.dimap(dictChoice.Profunctor0())(fro)(Data_Either.either(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)(Data_Profunctor.rmap(dictChoice.Profunctor0())(to)(pab)));
            };
        };
    };
};
var prism$prime = function (to) {
    return function (fro) {
        return function (dictChoice) {
            return prism(to)(function (s) {
                return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(fro(s));
            })(dictChoice);
        };
    };
};
var nearly = function (x) {
    return function (f) {
        return function (dictChoice) {
            return prism$prime(Data_Function["const"](x))(function ($14) {
                return Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(f($14));
            })(dictChoice);
        };
    };
};
var only = function (dictEq) {
    return function (x) {
        return function (dictChoice) {
            return nearly(x)(function (v) {
                return Data_Eq.eq(dictEq)(v)(x);
            })(dictChoice);
        };
    };
};
var matching = function (l) {
    return withPrism(l)(function (v) {
        return function (f) {
            return f;
        };
    });
};
var is = function (dictHeytingAlgebra) {
    return function (l) {
        return function ($15) {
            return Data_Either.either(Data_Function["const"](Data_HeytingAlgebra.ff(dictHeytingAlgebra)))(Data_Function["const"](Data_HeytingAlgebra.tt(dictHeytingAlgebra)))(matching(l)($15));
        };
    };
};
var isn$primet = function (dictHeytingAlgebra) {
    return function (l) {
        return function ($16) {
            return Data_HeytingAlgebra.not(dictHeytingAlgebra)(is(dictHeytingAlgebra)(l)($16));
        };
    };
};
var clonePrism = function (l) {
    return function (dictChoice) {
        return withPrism(l)(function (x) {
            return function (y) {
                return function (p) {
                    return prism(x)(y)(dictChoice)(p);
                };
            };
        });
    };
};
module.exports = {
    prism: prism,
    "prism'": prism$prime,
    review: review,
    nearly: nearly,
    only: only,
    clonePrism: clonePrism,
    withPrism: withPrism,
    matching: matching,
    is: is,
    "isn't": isn$primet
};

},{"../Control.Category":12,"../Control.MonadPlus":61,"../Control.MonadZero":62,"../Control.Semigroupoid":66,"../Data.Either":154,"../Data.Eq":157,"../Data.Function":172,"../Data.HeytingAlgebra":188,"../Data.Lens.Internal.Market":207,"../Data.Lens.Internal.Tagged":210,"../Data.Lens.Types":224,"../Data.Maybe":234,"../Data.Newtype":244,"../Data.Profunctor":260,"../Data.Profunctor.Choice":253,"../Prelude":358}],222:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed");
var Data_Lens_Types = require("../Data.Lens.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var over = function (l) {
    return l;
};
var set = function (l) {
    return function (b) {
        return over(l)(Data_Function["const"](b));
    };
};
var setJust = function (p) {
    return function ($24) {
        return set(p)(Data_Maybe.Just.create($24));
    };
};
var subOver = function (dictRing) {
    return function (p) {
        return function ($25) {
            return over(p)(Data_Function.flip(Data_Ring.sub(dictRing))($25));
        };
    };
};
var mulOver = function (dictSemiring) {
    return function (p) {
        return function ($26) {
            return over(p)(Data_Function.flip(Data_Semiring.mul(dictSemiring))($26));
        };
    };
};
var modifying = function (dictMonadState) {
    return function (p) {
        return function (f) {
            return Control_Monad_State_Class.modify(dictMonadState)(over(p)(f));
        };
    };
};
var mulModifying = function (dictMonadState) {
    return function (dictSemiring) {
        return function (p) {
            return function ($27) {
                return modifying(dictMonadState)(p)(Data_Function.flip(Data_Semiring.mul(dictSemiring))($27));
            };
        };
    };
};
var subModifying = function (dictMonadState) {
    return function (dictRing) {
        return function (p) {
            return function ($28) {
                return modifying(dictMonadState)(p)(Data_Function.flip(Data_Ring.sub(dictRing))($28));
            };
        };
    };
};
var iover = function (l) {
    return function (f) {
        return l(Data_Lens_Internal_Indexed.Indexed(Data_Tuple.uncurry(f)));
    };
};
var divOver = function (dictEuclideanRing) {
    return function (p) {
        return function ($29) {
            return over(p)(Data_Function.flip(Data_EuclideanRing.div(dictEuclideanRing))($29));
        };
    };
};
var divModifying = function (dictMonadState) {
    return function (dictEuclideanRing) {
        return function (p) {
            return function ($30) {
                return modifying(dictMonadState)(p)(Data_Function.flip(Data_EuclideanRing.div(dictEuclideanRing))($30));
            };
        };
    };
};
var disjOver = function (dictHeytingAlgebra) {
    return function (p) {
        return function ($31) {
            return over(p)(Data_Function.flip(Data_HeytingAlgebra.disj(dictHeytingAlgebra))($31));
        };
    };
};
var disjModifying = function (dictMonadState) {
    return function (dictHeytingAlgebra) {
        return function (p) {
            return function ($32) {
                return modifying(dictMonadState)(p)(Data_Function.flip(Data_HeytingAlgebra.disj(dictHeytingAlgebra))($32));
            };
        };
    };
};
var conjOver = function (dictHeytingAlgebra) {
    return function (p) {
        return function ($33) {
            return over(p)(Data_Function.flip(Data_HeytingAlgebra.conj(dictHeytingAlgebra))($33));
        };
    };
};
var conjModifying = function (dictMonadState) {
    return function (dictHeytingAlgebra) {
        return function (p) {
            return function ($34) {
                return modifying(dictMonadState)(p)(Data_Function.flip(Data_HeytingAlgebra.conj(dictHeytingAlgebra))($34));
            };
        };
    };
};
var assign = function (dictMonadState) {
    return function (p) {
        return function (b) {
            return Control_Monad_State_Class.modify(dictMonadState)(set(p)(b));
        };
    };
};
var assignJust = function (dictMonadState) {
    return function (p) {
        return function ($35) {
            return assign(dictMonadState)(p)(Data_Maybe.Just.create($35));
        };
    };
};
var appendOver = function (dictSemigroup) {
    return function (p) {
        return function ($36) {
            return over(p)(Data_Function.flip(Data_Semigroup.append(dictSemigroup))($36));
        };
    };
};
var appendModifying = function (dictMonadState) {
    return function (dictSemigroup) {
        return function (p) {
            return function ($37) {
                return modifying(dictMonadState)(p)(Data_Function.flip(Data_Semigroup.append(dictSemigroup))($37));
            };
        };
    };
};
var addOver = function (dictSemiring) {
    return function (p) {
        return function ($38) {
            return over(p)(Data_Semiring.add(dictSemiring)($38));
        };
    };
};
var addModifying = function (dictMonadState) {
    return function (dictSemiring) {
        return function (p) {
            return function ($39) {
                return modifying(dictMonadState)(p)(Data_Semiring.add(dictSemiring)($39));
            };
        };
    };
};
module.exports = {
    over: over,
    iover: iover,
    set: set,
    addOver: addOver,
    subOver: subOver,
    mulOver: mulOver,
    divOver: divOver,
    disjOver: disjOver,
    conjOver: conjOver,
    appendOver: appendOver,
    setJust: setJust,
    assign: assign,
    modifying: modifying,
    addModifying: addModifying,
    mulModifying: mulModifying,
    subModifying: subModifying,
    divModifying: divModifying,
    disjModifying: disjModifying,
    conjModifying: conjModifying,
    appendModifying: appendModifying,
    assignJust: assignJust
};

},{"../Control.Monad.State.Class":54,"../Control.Semigroupoid":66,"../Data.EuclideanRing":159,"../Data.Function":172,"../Data.HeytingAlgebra":188,"../Data.Lens.Internal.Indexed":206,"../Data.Lens.Types":224,"../Data.Maybe":234,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Tuple":298,"../Prelude":358}],223:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Category = require("../Control.Category");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Lens_Indexed = require("../Data.Lens.Indexed");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed");
var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander");
var Data_Lens_Types = require("../Data.Lens.Types");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Newtype = require("../Data.Newtype");
var Data_Profunctor_Star = require("../Data.Profunctor.Star");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var traversed = function (dictTraversable) {
    return function (dictWander) {
        return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
            return Data_Traversable.traverse(dictTraversable)(dictApplicative);
        });
    };
};
var traverseOf = function (dictApplicative) {
    return Data_Newtype.under(Data_Profunctor_Star.newtypeStar)(Data_Profunctor_Star.newtypeStar)(Data_Profunctor_Star.Star);
};
var sequenceOf = function (dictApplicative) {
    return function (t) {
        return traverseOf(dictApplicative)(t)(Control_Category.id(Control_Category.categoryFn));
    };
};
var itraverseOf = function (dictApplicative) {
    return function (t) {
        return function ($25) {
            return Data_Newtype.under(Data_Profunctor_Star.newtypeStar)(Data_Profunctor_Star.newtypeStar)(Data_Profunctor_Star.Star)(function ($26) {
                return t(Data_Lens_Internal_Indexed.Indexed($26));
            })(Data_Tuple.uncurry($25));
        };
    };
};
var iforOf = function (dictApplicative) {
    return function ($27) {
        return Data_Function.flip(itraverseOf(dictApplicative)($27));
    };
};
var failover = function (dictAlternative) {
    return function (t) {
        return function (f) {
            return function (s) {
                var v = Data_Newtype.unwrap(Data_Profunctor_Star.newtypeStar)(t(Data_Profunctor_Star.Star(function ($28) {
                    return Data_Tuple.Tuple.create(true)(f($28));
                })))(s);
                if (v.value0) {
                    return Control_Applicative.pure(dictAlternative.Applicative0())(v.value1);
                };
                if (!v.value0) {
                    return Control_Plus.empty(dictAlternative.Plus1());
                };
                throw new Error("Failed pattern match at Data.Lens.Traversal line 55, column 18 - line 57, column 32: " + [ v.constructor.name ]);
            };
        };
    };
};
var elementsOf = function (dictWander) {
    return function (tr) {
        return function (pr) {
            return Data_Lens_Indexed.iwander(function (dictApplicative) {
                return function (f) {
                    return Data_Newtype.unwrap(Data_Profunctor_Star.newtypeStar)(tr(Data_Lens_Internal_Wander.wanderStar(dictApplicative))(Data_Lens_Internal_Indexed.Indexed(Data_Profunctor_Star.Star(function (v) {
                        var $22 = pr(v.value0);
                        if ($22) {
                            return f(v.value0)(v.value1);
                        };
                        return Control_Applicative.pure(dictApplicative)(v.value1);
                    }))));
                };
            })(dictWander);
        };
    };
};
var element = function (dictWander) {
    return function (n) {
        return function (tr) {
            return Data_Lens_Indexed.unIndex((dictWander.Choice1()).Profunctor0())(elementsOf(dictWander)(function (dictWander1) {
                return Data_Lens_Indexed.positions(function (dictWander2) {
                    return tr(dictWander2);
                })(dictWander1);
            })(function (v) {
                return v === n;
            }));
        };
    };
};
module.exports = {
    traversed: traversed,
    traverseOf: traverseOf,
    sequenceOf: sequenceOf,
    failover: failover,
    elementsOf: elementsOf,
    itraverseOf: itraverseOf,
    element: element
};

},{"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Category":12,"../Control.Plus":65,"../Control.Semigroupoid":66,"../Data.Eq":157,"../Data.Function":172,"../Data.Lens.Indexed":202,"../Data.Lens.Internal.Indexed":206,"../Data.Lens.Internal.Wander":211,"../Data.Lens.Types":224,"../Data.Monoid.Disj":238,"../Data.Newtype":244,"../Data.Profunctor.Star":258,"../Data.Traversable":296,"../Data.Tuple":298,"../Prelude":358}],224:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Lens_Internal_Exchange = require("../Data.Lens.Internal.Exchange");
var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget");
var Data_Lens_Internal_Grating = require("../Data.Lens.Internal.Grating");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed");
var Data_Lens_Internal_Market = require("../Data.Lens.Internal.Market");
var Data_Lens_Internal_Re = require("../Data.Lens.Internal.Re");
var Data_Lens_Internal_Shop = require("../Data.Lens.Internal.Shop");
var Data_Lens_Internal_Tagged = require("../Data.Lens.Internal.Tagged");
var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Tuple = require("../Data.Tuple");
module.exports = {};

},{"../Data.Lens.Internal.Exchange":203,"../Data.Lens.Internal.Forget":204,"../Data.Lens.Internal.Grating":205,"../Data.Lens.Internal.Indexed":206,"../Data.Lens.Internal.Market":207,"../Data.Lens.Internal.Re":208,"../Data.Lens.Internal.Shop":209,"../Data.Lens.Internal.Tagged":210,"../Data.Lens.Internal.Wander":211,"../Data.Profunctor":260,"../Data.Profunctor.Choice":253,"../Data.Profunctor.Closed":254,"../Data.Profunctor.Strong":259,"../Data.Tuple":298}],225:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Lens_Common = require("../Data.Lens.Common");
var Data_Lens_Fold = require("../Data.Lens.Fold");
var Data_Lens_Getter = require("../Data.Lens.Getter");
var Data_Lens_Grate = require("../Data.Lens.Grate");
var Data_Lens_Iso = require("../Data.Lens.Iso");
var Data_Lens_Lens = require("../Data.Lens.Lens");
var Data_Lens_Prism = require("../Data.Lens.Prism");
var Data_Lens_Setter = require("../Data.Lens.Setter");
var Data_Lens_Traversal = require("../Data.Lens.Traversal");
var Data_Lens_Types = require("../Data.Lens.Types");
module.exports = {};

},{"../Data.Lens.Common":198,"../Data.Lens.Fold":199,"../Data.Lens.Getter":200,"../Data.Lens.Grate":201,"../Data.Lens.Iso":214,"../Data.Lens.Lens":217,"../Data.Lens.Prism":221,"../Data.Lens.Setter":222,"../Data.Lens.Traversal":223,"../Data.Lens.Types":224}],226:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_Lazy = require("../Data.Lazy");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Prelude = require("../Prelude");
var List = function (x) {
    return x;
};
var Nil = (function () {
    function Nil() {

    };
    Nil.value = new Nil();
    return Nil;
})();
var Cons = (function () {
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cons.create = function (value0) {
        return function (value1) {
            return new Cons(value0, value1);
        };
    };
    return Cons;
})();
var NonEmptyList = function (x) {
    return x;
};
var nil = List(Data_Lazy.defer(function (v) {
    return Nil.value;
}));
var newtypeNonEmptyList = new Data_Newtype.Newtype(function (n) {
    return n;
}, NonEmptyList);
var newtypeList = new Data_Newtype.Newtype(function (n) {
    return n;
}, List);
var step = function ($184) {
    return Data_Lazy.force(Data_Newtype.unwrap(newtypeList)($184));
};
var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
    return function (ys) {
        var go = function (v) {
            if (v instanceof Nil) {
                return step(ys);
            };
            if (v instanceof Cons) {
                return new Cons(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(ys));
            };
            throw new Error("Failed pattern match at Data.List.Lazy.Types line 98, column 5 - line 98, column 21: " + [ v.constructor.name ]);
        };
        return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(newtypeList)(xs));
    };
});
var showList = function (dictShow) {
    return new Data_Show.Show(function (xs) {
        var go = function (v) {
            if (v instanceof Nil) {
                return "Nil";
            };
            if (v instanceof Cons) {
                return "(Cons " + (Data_Show.show(dictShow)(v.value0) + (" " + (go(step(v.value1)) + ")")));
            };
            throw new Error("Failed pattern match at Data.List.Lazy.Types line 64, column 5 - line 65, column 5: " + [ v.constructor.name ]);
        };
        return "fromStrict (" + (go(step(xs)) + ")");
    });
};
var showNonEmptyList = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(NonEmptyList " + (Data_Show.show(Data_Lazy.showLazy(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow))))(v) + ")");
    });
};
var monoidList = new Data_Monoid.Monoid(function () {
    return semigroupList;
}, nil);
var lazyList = new Control_Lazy.Lazy(function (f) {
    return List(Data_Lazy.defer(function ($185) {
        return step(f($185));
    }));
});
var functorList = new Data_Functor.Functor(function (f) {
    return function (xs) {
        var go = function (v) {
            if (v instanceof Nil) {
                return Nil.value;
            };
            if (v instanceof Cons) {
                return new Cons(f(v.value0), Data_Functor.map(functorList)(f)(v.value1));
            };
            throw new Error("Failed pattern match at Data.List.Lazy.Types line 107, column 5 - line 107, column 17: " + [ v.constructor.name ]);
        };
        return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(newtypeList)(xs));
    };
});
var functorNonEmptyList = new Data_Functor.Functor(function (f) {
    return function (v) {
        return Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(Data_NonEmpty.functorNonEmpty(functorList))(f))(v);
    };
});
var eq1List = new Data_Eq.Eq1(function (dictEq) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    var $tco_var_v = $copy_v;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v, v1) {
                        if (v instanceof Nil && v1 instanceof Nil) {
                            $tco_done = true;
                            return true;
                        };
                        if (v instanceof Cons && (v1 instanceof Cons && Data_Eq.eq(dictEq)(v.value0)(v1.value0))) {
                            $tco_var_v = step(v.value1);
                            $copy_v1 = step(v1.value1);
                            return;
                        };
                        $tco_done = true;
                        return false;
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_v, $copy_v1);
                    };
                    return $tco_result;
                };
            };
            return go(step(xs))(step(ys));
        };
    };
});
var eqList = function (dictEq) {
    return new Data_Eq.Eq(Data_Eq.eq1(eq1List)(dictEq));
};
var eqNonEmptyList = function (dictEq) {
    return Data_Lazy.eqLazy(Data_NonEmpty.eqNonEmpty(eq1List)(dictEq));
};
var ord1List = new Data_Ord.Ord1(function () {
    return eq1List;
}, function (dictOrd) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    var $tco_var_v = $copy_v;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v, v1) {
                        if (v instanceof Nil && v1 instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.EQ.value;
                        };
                        if (v instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.LT.value;
                        };
                        if (v1 instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.GT.value;
                        };
                        if (v instanceof Cons && v1 instanceof Cons) {
                            var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
                            if (v2 instanceof Data_Ordering.EQ) {
                                $tco_var_v = step(v.value1);
                                $copy_v1 = step(v1.value1);
                                return;
                            };
                            $tco_done = true;
                            return v2;
                        };
                        throw new Error("Failed pattern match at Data.List.Lazy.Types line 84, column 5 - line 84, column 20: " + [ v.constructor.name, v1.constructor.name ]);
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_v, $copy_v1);
                    };
                    return $tco_result;
                };
            };
            return go(step(xs))(step(ys));
        };
    };
});
var ordList = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqList(dictOrd.Eq0());
    }, Data_Ord.compare1(ord1List)(dictOrd));
};
var ordNonEmptyList = function (dictOrd) {
    return Data_Lazy.ordLazy(Data_NonEmpty.ordNonEmpty(ord1List)(dictOrd));
};
var cons = function (x) {
    return function (xs) {
        return List(Data_Lazy.defer(function (v) {
            return new Cons(x, xs);
        }));
    };
};
var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldl(foldableList)(function (b) {
            return function (a) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(b)(f(a));
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function (op) {
    var go = function ($copy_b) {
        return function ($copy_xs) {
            var $tco_var_b = $copy_b;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(b, xs) {
                var v = step(xs);
                if (v instanceof Nil) {
                    $tco_done = true;
                    return b;
                };
                if (v instanceof Cons) {
                    $tco_var_b = op(b)(v.value0);
                    $copy_xs = v.value1;
                    return;
                };
                throw new Error("Failed pattern match at Data.List.Lazy.Types line 122, column 7 - line 124, column 40: " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_b, $copy_xs);
            };
            return $tco_result;
        };
    };
    return go;
}, function (op) {
    return function (z) {
        return function (xs) {
            var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(cons))(nil);
            return Data_Foldable.foldl(foldableList)(Data_Function.flip(op))(z)(rev(xs));
        };
    };
});
var extendList = new Control_Extend.Extend(function () {
    return functorList;
}, function (f) {
    return function (l) {
        var go = function (a) {
            return function (v) {
                var acc$prime = cons(a)(v.acc);
                return {
                    val: cons(f(acc$prime))(v.val),
                    acc: acc$prime
                };
            };
        };
        var v = step(l);
        if (v instanceof Nil) {
            return nil;
        };
        if (v instanceof Cons) {
            return cons(f(l))((Data_Foldable.foldr(foldableList)(go)({
                val: nil,
                acc: nil
            })(v.value1)).val);
        };
        throw new Error("Failed pattern match at Data.List.Lazy.Types line 188, column 5 - line 191, column 55: " + [ v.constructor.name ]);
    };
});
var extendNonEmptyList = new Control_Extend.Extend(function () {
    return functorNonEmptyList;
}, function (f) {
    return function (v) {
        var go = function (a) {
            return function (v1) {
                return {
                    val: cons(f(Data_Lazy.defer(function (v2) {
                        return new Data_NonEmpty.NonEmpty(a, v1.acc);
                    })))(v1.val),
                    acc: cons(a)(v1.acc)
                };
            };
        };
        var v1 = Data_Lazy.force(v);
        return NonEmptyList(Data_Lazy.defer(function (v2) {
            return new Data_NonEmpty.NonEmpty(f(v), (Data_Foldable.foldr(foldableList)(go)({
                val: nil,
                acc: nil
            })(v1.value1)).val);
        }));
    };
});
var foldableNonEmptyList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return Data_Foldable.foldMap(Data_NonEmpty.foldableNonEmpty(foldableList))(dictMonoid)(f)(Data_Lazy.force(v));
        };
    };
}, function (f) {
    return function (b) {
        return function (v) {
            return Data_Foldable.foldl(Data_NonEmpty.foldableNonEmpty(foldableList))(f)(b)(Data_Lazy.force(v));
        };
    };
}, function (f) {
    return function (b) {
        return function (v) {
            return Data_Foldable.foldr(Data_NonEmpty.foldableNonEmpty(foldableList))(f)(b)(Data_Lazy.force(v));
        };
    };
});
var foldableWithIndexList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableList;
}, function (dictMonoid) {
    return function (f) {
        return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
            return function (acc) {
                return function ($186) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)($186));
                };
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function (f) {
    return function (acc) {
        return function ($187) {
            return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v) {
                return function (a) {
                    return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));
                };
            })(new Data_Tuple.Tuple(0, acc))($187));
        };
    };
}, function (f) {
    return function (b) {
        return function (xs) {
            var v = (function () {
                var rev = Data_Foldable.foldl(foldableList)(function (v1) {
                    return function (a) {
                        return new Data_Tuple.Tuple(v1.value0 + 1 | 0, cons(a)(v1.value1));
                    };
                });
                return rev(new Data_Tuple.Tuple(0, nil))(xs);
            })();
            return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v1) {
                return function (a) {
                    return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));
                };
            })(new Data_Tuple.Tuple(v.value0, b))(v.value1));
        };
    };
});
var functorWithIndexList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorList;
}, function (f) {
    return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function (i) {
        return function (x) {
            return function (acc) {
                return cons(f(i)(x))(acc);
            };
        };
    })(nil);
});
var toList = function (v) {
    return Control_Lazy.defer(lazyList)(function (v1) {
        var v2 = Data_Lazy.force(v);
        return cons(v2.value0)(v2.value1);
    });
};
var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
    return function (as$prime) {
        var v1 = Data_Lazy.force(v);
        return Data_Lazy.defer(function (v2) {
            return new Data_NonEmpty.NonEmpty(v1.value0, Data_Semigroup.append(semigroupList)(v1.value1)(toList(as$prime)));
        });
    };
});
var traversableList = new Data_Traversable.Traversable(function () {
    return foldableList;
}, function () {
    return functorList;
}, function (dictApplicative) {
    return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
}, function (dictApplicative) {
    return function (f) {
        return Data_Foldable.foldr(foldableList)(function (a) {
            return function (b) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(cons)(f(a)))(b);
            };
        })(Control_Applicative.pure(dictApplicative)(nil));
    };
});
var traversableNonEmptyList = new Data_Traversable.Traversable(function () {
    return foldableNonEmptyList;
}, function () {
    return functorNonEmptyList;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function (xxs) {
            return NonEmptyList(Data_Lazy.defer(function (v1) {
                return xxs;
            }));
        })(Data_Traversable.sequence(Data_NonEmpty.traversableNonEmpty(traversableList))(dictApplicative)(Data_Lazy.force(v)));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function (xxs) {
                return NonEmptyList(Data_Lazy.defer(function (v1) {
                    return xxs;
                }));
            })(Data_Traversable.traverse(Data_NonEmpty.traversableNonEmpty(traversableList))(dictApplicative)(f)(Data_Lazy.force(v)));
        };
    };
});
var traversableWithIndexList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexList;
}, function () {
    return functorWithIndexList;
}, function () {
    return traversableList;
}, function (dictApplicative) {
    return function (f) {
        return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function (i) {
            return function (a) {
                return function (b) {
                    return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(cons)(f(i)(a)))(b);
                };
            };
        })(Control_Applicative.pure(dictApplicative)(nil));
    };
});
var unfoldableList = new Data_Unfoldable.Unfoldable((function () {
    var go = function (f) {
        return function (b) {
            return Control_Lazy.defer(lazyList)(function (v) {
                var v1 = f(b);
                if (v1 instanceof Data_Maybe.Nothing) {
                    return nil;
                };
                if (v1 instanceof Data_Maybe.Just) {
                    return cons(v1.value0.value0)(go(f)(v1.value0.value1));
                };
                throw new Error("Failed pattern match at Data.List.Lazy.Types line 146, column 28 - line 148, column 39: " + [ v1.constructor.name ]);
            });
        };
    };
    return go;
})());
var comonadNonEmptyList = new Control_Comonad.Comonad(function () {
    return extendNonEmptyList;
}, function (v) {
    return Data_NonEmpty.head(Data_Lazy.force(v));
});
var monadList = new Control_Monad.Monad(function () {
    return applicativeList;
}, function () {
    return bindList;
});
var bindList = new Control_Bind.Bind(function () {
    return applyList;
}, function (xs) {
    return function (f) {
        var go = function (v) {
            if (v instanceof Nil) {
                return Nil.value;
            };
            if (v instanceof Cons) {
                return step(Data_Semigroup.append(semigroupList)(f(v.value0))(Control_Bind.bind(bindList)(v.value1)(f)));
            };
            throw new Error("Failed pattern match at Data.List.Lazy.Types line 169, column 5 - line 169, column 17: " + [ v.constructor.name ]);
        };
        return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(newtypeList)(xs));
    };
});
var applyList = new Control_Apply.Apply(function () {
    return functorList;
}, Control_Monad.ap(monadList));
var applicativeList = new Control_Applicative.Applicative(function () {
    return applyList;
}, function (a) {
    return cons(a)(nil);
});
var applyNonEmptyList = new Control_Apply.Apply(function () {
    return functorNonEmptyList;
}, function (v) {
    return function (v1) {
        var v2 = Data_Lazy.force(v1);
        var v3 = Data_Lazy.force(v);
        return Data_Lazy.defer(function (v4) {
            return new Data_NonEmpty.NonEmpty(v3.value0(v2.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v3.value1)(cons(v2.value0)(nil)))(Control_Apply.apply(applyList)(cons(v3.value0)(v3.value1))(v2.value1)));
        });
    };
});
var bindNonEmptyList = new Control_Bind.Bind(function () {
    return applyNonEmptyList;
}, function (v) {
    return function (f) {
        var v1 = Data_Lazy.force(v);
        var v2 = Data_Lazy.force(Data_Newtype.unwrap(newtypeNonEmptyList)(f(v1.value0)));
        return Data_Lazy.defer(function (v3) {
            return new Data_NonEmpty.NonEmpty(v2.value0, Data_Semigroup.append(semigroupList)(v2.value1)(Control_Bind.bind(bindList)(v1.value1)(function ($188) {
                return toList(f($188));
            })));
        });
    };
});
var altNonEmptyList = new Control_Alt.Alt(function () {
    return functorNonEmptyList;
}, Data_Semigroup.append(semigroupNonEmptyList));
var altList = new Control_Alt.Alt(function () {
    return functorList;
}, Data_Semigroup.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
    return altList;
}, nil);
var alternativeList = new Control_Alternative.Alternative(function () {
    return applicativeList;
}, function () {
    return plusList;
});
var monadZeroList = new Control_MonadZero.MonadZero(function () {
    return alternativeList;
}, function () {
    return monadList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
    return monadZeroList;
});
var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
    return applyNonEmptyList;
}, function (a) {
    return Data_Lazy.defer(function (v) {
        return Data_NonEmpty.singleton(plusList)(a);
    });
});
var monadNonEmptyList = new Control_Monad.Monad(function () {
    return applicativeNonEmptyList;
}, function () {
    return bindNonEmptyList;
});
module.exports = {
    List: List,
    Nil: Nil,
    Cons: Cons,
    step: step,
    nil: nil,
    cons: cons,
    NonEmptyList: NonEmptyList,
    toList: toList,
    newtypeList: newtypeList,
    showList: showList,
    eqList: eqList,
    eq1List: eq1List,
    ordList: ordList,
    ord1List: ord1List,
    lazyList: lazyList,
    semigroupList: semigroupList,
    monoidList: monoidList,
    functorList: functorList,
    functorWithIndexList: functorWithIndexList,
    foldableList: foldableList,
    foldableWithIndexList: foldableWithIndexList,
    unfoldableList: unfoldableList,
    traversableList: traversableList,
    traversableWithIndexList: traversableWithIndexList,
    applyList: applyList,
    applicativeList: applicativeList,
    bindList: bindList,
    monadList: monadList,
    altList: altList,
    plusList: plusList,
    alternativeList: alternativeList,
    monadZeroList: monadZeroList,
    monadPlusList: monadPlusList,
    extendList: extendList,
    newtypeNonEmptyList: newtypeNonEmptyList,
    eqNonEmptyList: eqNonEmptyList,
    ordNonEmptyList: ordNonEmptyList,
    showNonEmptyList: showNonEmptyList,
    functorNonEmptyList: functorNonEmptyList,
    applyNonEmptyList: applyNonEmptyList,
    applicativeNonEmptyList: applicativeNonEmptyList,
    bindNonEmptyList: bindNonEmptyList,
    monadNonEmptyList: monadNonEmptyList,
    altNonEmptyList: altNonEmptyList,
    extendNonEmptyList: extendNonEmptyList,
    comonadNonEmptyList: comonadNonEmptyList,
    semigroupNonEmptyList: semigroupNonEmptyList,
    foldableNonEmptyList: foldableNonEmptyList,
    traversableNonEmptyList: traversableNonEmptyList
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Comonad":13,"../Control.Extend":16,"../Control.Lazy":17,"../Control.Monad":60,"../Control.MonadPlus":61,"../Control.MonadZero":62,"../Control.Plus":65,"../Control.Semigroupoid":66,"../Data.Eq":157,"../Data.Foldable":164,"../Data.FoldableWithIndex":165,"../Data.Function":172,"../Data.Functor":180,"../Data.FunctorWithIndex":182,"../Data.Lazy":197,"../Data.Maybe":234,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.NonEmpty":245,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Data.Traversable":296,"../Data.TraversableWithIndex":297,"../Data.Tuple":298,"../Data.Unfoldable":300,"../Prelude":358}],227:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Lazy = require("../Data.Lazy");
var Data_List_Lazy_Types = require("../Data.List.Lazy.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Prelude = require("../Prelude");
var Pattern = function (x) {
    return x;
};
var zipWith = function (f) {
    return function (xs) {
        return function (ys) {
            var go = function (v) {
                return function (v1) {
                    if (v instanceof Data_List_Lazy_Types.Nil) {
                        return Data_List_Lazy_Types.Nil.value;
                    };
                    if (v1 instanceof Data_List_Lazy_Types.Nil) {
                        return Data_List_Lazy_Types.Nil.value;
                    };
                    if (v instanceof Data_List_Lazy_Types.Cons && v1 instanceof Data_List_Lazy_Types.Cons) {
                        return new Data_List_Lazy_Types.Cons(f(v.value0)(v1.value0), zipWith(f)(v.value1)(v1.value1));
                    };
                    throw new Error("Failed pattern match at Data.List.Lazy line 691, column 3 - line 691, column 35: " + [ v.constructor.name, v1.constructor.name ]);
                };
            };
            return Control_Apply.apply(Data_Lazy.applyLazy)(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs)))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(ys));
        };
    };
};
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_List_Lazy_Types.traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var updateAt = function (n) {
    return function (x) {
        return function (xs) {
            var go = function (v) {
                return function (v1) {
                    if (v1 instanceof Data_List_Lazy_Types.Nil) {
                        return Data_List_Lazy_Types.Nil.value;
                    };
                    if (v === 0 && v1 instanceof Data_List_Lazy_Types.Cons) {
                        return new Data_List_Lazy_Types.Cons(x, v1.value1);
                    };
                    if (v1 instanceof Data_List_Lazy_Types.Cons) {
                        return new Data_List_Lazy_Types.Cons(v1.value0, updateAt(v - 1 | 0)(x)(v1.value1));
                    };
                    throw new Error("Failed pattern match at Data.List.Lazy line 366, column 3 - line 366, column 17: " + [ v.constructor.name, v1.constructor.name ]);
                };
            };
            return Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
        };
    };
};
var unzip = Data_Foldable.foldr(Data_List_Lazy_Types.foldableList)(function (v) {
    return function (v1) {
        return new Data_Tuple.Tuple(Data_List_Lazy_Types.cons(v.value0)(v1.value0), Data_List_Lazy_Types.cons(v.value1)(v1.value1));
    };
})(new Data_Tuple.Tuple(Data_List_Lazy_Types.nil, Data_List_Lazy_Types.nil));
var uncons = function (xs) {
    var v = Data_List_Lazy_Types.step(xs);
    if (v instanceof Data_List_Lazy_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Lazy_Types.Cons) {
        return new Data_Maybe.Just({
            head: v.value0,
            tail: v.value1
        });
    };
    throw new Error("Failed pattern match at Data.List.Lazy line 284, column 13 - line 286, column 44: " + [ v.constructor.name ]);
};
var toUnfoldable = function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
            return new Data_Tuple.Tuple(rec.head, rec.tail);
        })(uncons(xs));
    });
};
var takeWhile = function (p) {
    var go = function (v) {
        if (v instanceof Data_List_Lazy_Types.Cons && p(v.value0)) {
            return new Data_List_Lazy_Types.Cons(v.value0, takeWhile(p)(v.value1));
        };
        return Data_List_Lazy_Types.Nil.value;
    };
    return function ($244) {
        return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($244)));
    };
};
var take = function (n) {
    var go = function (v) {
        return function (v1) {
            if (v <= 0) {
                return Data_List_Lazy_Types.Nil.value;
            };
            if (v1 instanceof Data_List_Lazy_Types.Nil) {
                return Data_List_Lazy_Types.Nil.value;
            };
            if (v1 instanceof Data_List_Lazy_Types.Cons) {
                return new Data_List_Lazy_Types.Cons(v1.value0, take(v - 1 | 0)(v1.value1));
            };
            throw new Error("Failed pattern match at Data.List.Lazy line 514, column 3 - line 514, column 32: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
    return function ($245) {
        return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($245)));
    };
};
var tail = function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
        return v.tail;
    })(uncons(xs));
};
var stripPrefix = function (dictEq) {
    return function (v) {
        return function (s) {
            var go = function (prefix) {
                return function (input) {
                    var v1 = Data_List_Lazy_Types.step(prefix);
                    if (v1 instanceof Data_List_Lazy_Types.Nil) {
                        return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Done(input));
                    };
                    if (v1 instanceof Data_List_Lazy_Types.Cons) {
                        var v2 = Data_List_Lazy_Types.step(input);
                        if (v2 instanceof Data_List_Lazy_Types.Cons && Data_Eq.eq(dictEq)(v1.value0)(v2.value0)) {
                            return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Loop({
                                a: v1.value1,
                                b: v2.value1
                            }));
                        };
                        return Data_Maybe.Nothing.value;
                    };
                    throw new Error("Failed pattern match at Data.List.Lazy line 498, column 21 - line 502, column 19: " + [ v1.constructor.name ]);
                };
            };
            return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe)(go)(v)(s);
        };
    };
};
var span = function (p) {
    return function (xs) {
        var v = uncons(xs);
        if (v instanceof Data_Maybe.Just && p(v.value0.head)) {
            var v1 = span(p)(v.value0.tail);
            return {
                init: Data_List_Lazy_Types.cons(v.value0.head)(v1.init),
                rest: v1.rest
            };
        };
        return {
            init: Data_List_Lazy_Types.nil,
            rest: xs
        };
    };
};
var snoc = function (xs) {
    return function (x) {
        return Data_Foldable.foldr(Data_List_Lazy_Types.foldableList)(Data_List_Lazy_Types.cons)(Data_List_Lazy_Types.cons(x)(Data_List_Lazy_Types.nil))(xs);
    };
};
var singleton = function (a) {
    return Data_List_Lazy_Types.cons(a)(Data_List_Lazy_Types.nil);
};
var showPattern = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Pattern " + (Data_Show.show(Data_List_Lazy_Types.showList(dictShow))(v) + ")");
    });
};
var reverse = function (xs) {
    return Control_Lazy.defer(Data_List_Lazy_Types.lazyList)(function (v) {
        return Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(Data_Function.flip(Data_List_Lazy_Types.cons))(Data_List_Lazy_Types.nil)(xs);
    });
};
var replicateM = function (dictMonad) {
    return function (n) {
        return function (m) {
            if (n < 1) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Lazy_Types.nil);
            };
            if (Data_Boolean.otherwise) {
                return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
                    return Control_Bind.bind(dictMonad.Bind1())(replicateM(dictMonad)(n - 1 | 0)(m))(function (v1) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Lazy_Types.cons(v)(v1));
                    });
                });
            };
            throw new Error("Failed pattern match at Data.List.Lazy line 160, column 1 - line 160, column 62: " + [ n.constructor.name, m.constructor.name ]);
        };
    };
};
var repeat = function (x) {
    return Control_Lazy.fix(Data_List_Lazy_Types.lazyList)(function (xs) {
        return Data_List_Lazy_Types.cons(x)(xs);
    });
};
var replicate = function (i) {
    return function (xs) {
        return take(i)(repeat(xs));
    };
};
var range = function (start) {
    return function (end) {
        if (start > end) {
            var g = function (x) {
                if (x >= end) {
                    return new Data_Maybe.Just(new Data_Tuple.Tuple(x, x - 1 | 0));
                };
                if (Data_Boolean.otherwise) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.List.Lazy line 147, column 13 - line 148, column 38: " + [ x.constructor.name ]);
            };
            return Data_Unfoldable.unfoldr(Data_List_Lazy_Types.unfoldableList)(g)(start);
        };
        if (Data_Boolean.otherwise) {
            var f = function (x) {
                if (x <= end) {
                    return new Data_Maybe.Just(new Data_Tuple.Tuple(x, x + 1 | 0));
                };
                if (Data_Boolean.otherwise) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.List.Lazy line 152, column 5 - line 153, column 30: " + [ x.constructor.name ]);
            };
            return Data_Unfoldable.unfoldr(Data_List_Lazy_Types.unfoldableList)(f)(start);
        };
        throw new Error("Failed pattern match at Data.List.Lazy line 144, column 1 - line 144, column 32: " + [ start.constructor.name, end.constructor.name ]);
    };
};
var partition = function (f) {
    var go = function (x) {
        return function (v) {
            var $149 = f(x);
            if ($149) {
                return {
                    yes: Data_List_Lazy_Types.cons(x)(v.yes),
                    no: v.no
                };
            };
            return {
                yes: v.yes,
                no: Data_List_Lazy_Types.cons(x)(v.no)
            };
        };
    };
    return Data_Foldable.foldr(Data_List_Lazy_Types.foldableList)(go)({
        yes: Data_List_Lazy_Types.nil,
        no: Data_List_Lazy_Types.nil
    });
};
var $$null = function ($246) {
    return Data_Maybe.isNothing(uncons($246));
};
var newtypePattern = new Data_Newtype.Newtype(function (n) {
    return n;
}, Pattern);
var mapMaybe = function (f) {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Lazy_Types.Nil) {
                $tco_done = true;
                return Data_List_Lazy_Types.Nil.value;
            };
            if (v instanceof Data_List_Lazy_Types.Cons) {
                var v1 = f(v.value0);
                if (v1 instanceof Data_Maybe.Nothing) {
                    $copy_v = Data_List_Lazy_Types.step(v.value1);
                    return;
                };
                if (v1 instanceof Data_Maybe.Just) {
                    $tco_done = true;
                    return new Data_List_Lazy_Types.Cons(v1.value0, mapMaybe(f)(v.value1));
                };
                throw new Error("Failed pattern match at Data.List.Lazy line 459, column 5 - line 461, column 39: " + [ v1.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.List.Lazy line 457, column 3 - line 457, column 15: " + [ v.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return function ($247) {
        return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($247)));
    };
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Lazy_Types.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Lazy_Types.nil));
        };
    };
};
var length = Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(function (l) {
    return function (v) {
        return l + 1 | 0;
    };
})(0);
var last = (function () {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Lazy_Types.Cons) {
                if ($$null(v.value1)) {
                    $tco_done = true;
                    return new Data_Maybe.Just(v.value0);
                };
                if (Data_Boolean.otherwise) {
                    $copy_v = Data_List_Lazy_Types.step(v.value1);
                    return;
                };
            };
            $tco_done = true;
            return Data_Maybe.Nothing.value;
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return function ($248) {
        return go(Data_List_Lazy_Types.step($248));
    };
})();
var iterate = function (f) {
    return function (x) {
        return Control_Lazy.fix(Data_List_Lazy_Types.lazyList)(function (xs) {
            return Data_List_Lazy_Types.cons(x)(Data_Functor.map(Data_List_Lazy_Types.functorList)(f)(xs));
        });
    };
};
var insertAt = function (v) {
    return function (x) {
        return function (xs) {
            if (v === 0) {
                return Data_List_Lazy_Types.cons(x)(xs);
            };
            var go = function (v1) {
                if (v1 instanceof Data_List_Lazy_Types.Nil) {
                    return new Data_List_Lazy_Types.Cons(x, Data_List_Lazy_Types.nil);
                };
                if (v1 instanceof Data_List_Lazy_Types.Cons) {
                    return new Data_List_Lazy_Types.Cons(v1.value0, insertAt(v - 1 | 0)(x)(v1.value1));
                };
                throw new Error("Failed pattern match at Data.List.Lazy line 339, column 3 - line 339, column 22: " + [ v1.constructor.name ]);
            };
            return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
        };
    };
};
var init = (function () {
    var go = function (v) {
        if (v instanceof Data_List_Lazy_Types.Cons) {
            if ($$null(v.value1)) {
                return new Data_Maybe.Just(Data_List_Lazy_Types.nil);
            };
            if (Data_Boolean.otherwise) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_List_Lazy_Types.cons(v.value0))(go(Data_List_Lazy_Types.step(v.value1)));
            };
        };
        return Data_Maybe.Nothing.value;
    };
    return function ($249) {
        return go(Data_List_Lazy_Types.step($249));
    };
})();
var index = function (xs) {
    var go = function ($copy_v) {
        return function ($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v instanceof Data_List_Lazy_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                if (v instanceof Data_List_Lazy_Types.Cons && v1 === 0) {
                    $tco_done = true;
                    return new Data_Maybe.Just(v.value0);
                };
                if (v instanceof Data_List_Lazy_Types.Cons) {
                    $tco_var_v = Data_List_Lazy_Types.step(v.value1);
                    $copy_v1 = v1 - 1 | 0;
                    return;
                };
                throw new Error("Failed pattern match at Data.List.Lazy line 298, column 3 - line 298, column 21: " + [ v.constructor.name, v1.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Lazy_Types.step(xs));
};
var head = function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
        return v.head;
    })(uncons(xs));
};
var transpose = function (xs) {
    var v = uncons(xs);
    if (v instanceof Data_Maybe.Nothing) {
        return xs;
    };
    if (v instanceof Data_Maybe.Just) {
        var v1 = uncons(v.value0.head);
        if (v1 instanceof Data_Maybe.Nothing) {
            return transpose(v.value0.tail);
        };
        if (v1 instanceof Data_Maybe.Just) {
            return Data_List_Lazy_Types.cons(Data_List_Lazy_Types.cons(v1.value0.head)(mapMaybe(head)(v.value0.tail)))(transpose(Data_List_Lazy_Types.cons(v1.value0.tail)(mapMaybe(tail)(v.value0.tail))));
        };
        throw new Error("Failed pattern match at Data.List.Lazy line 732, column 7 - line 736, column 72: " + [ v1.constructor.name ]);
    };
    throw new Error("Failed pattern match at Data.List.Lazy line 728, column 3 - line 736, column 72: " + [ v.constructor.name ]);
};
var groupBy = function (eq) {
    var go = function (v) {
        if (v instanceof Data_List_Lazy_Types.Nil) {
            return Data_List_Lazy_Types.Nil.value;
        };
        if (v instanceof Data_List_Lazy_Types.Cons) {
            var v1 = span(eq(v.value0))(v.value1);
            return new Data_List_Lazy_Types.Cons(Data_Lazy.defer(function (v2) {
                return new Data_NonEmpty.NonEmpty(v.value0, v1.init);
            }), groupBy(eq)(v1.rest));
        };
        throw new Error("Failed pattern match at Data.List.Lazy line 586, column 3 - line 586, column 15: " + [ v.constructor.name ]);
    };
    return function ($250) {
        return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($250)));
    };
};
var group = function (dictEq) {
    return groupBy(Data_Eq.eq(dictEq));
};
var fromStep = function ($251) {
    return Data_List_Lazy_Types.List(Control_Applicative.pure(Data_Lazy.applicativeLazy)($251));
};
var insertBy = function (cmp) {
    return function (x) {
        return function (xs) {
            var go = function (v) {
                if (v instanceof Data_List_Lazy_Types.Nil) {
                    return new Data_List_Lazy_Types.Cons(x, Data_List_Lazy_Types.nil);
                };
                if (v instanceof Data_List_Lazy_Types.Cons) {
                    var v1 = cmp(x)(v.value0);
                    if (v1 instanceof Data_Ordering.GT) {
                        return new Data_List_Lazy_Types.Cons(v.value0, insertBy(cmp)(x)(v.value1));
                    };
                    return new Data_List_Lazy_Types.Cons(x, fromStep(v));
                };
                throw new Error("Failed pattern match at Data.List.Lazy line 234, column 3 - line 234, column 22: " + [ v.constructor.name ]);
            };
            return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
        };
    };
};
var insert = function (dictOrd) {
    return insertBy(Data_Ord.compare(dictOrd));
};
var fromFoldable = function (dictFoldable) {
    return Data_Foldable.foldr(dictFoldable)(Data_List_Lazy_Types.cons)(Data_List_Lazy_Types.nil);
};
var foldrLazy = function (dictLazy) {
    return function (op) {
        return function (z) {
            var go = function (xs) {
                var v = Data_List_Lazy_Types.step(xs);
                if (v instanceof Data_List_Lazy_Types.Cons) {
                    return Control_Lazy.defer(dictLazy)(function (v1) {
                        return op(v.value0)(go(v.value1));
                    });
                };
                if (v instanceof Data_List_Lazy_Types.Nil) {
                    return z;
                };
                throw new Error("Failed pattern match at Data.List.Lazy line 754, column 13 - line 756, column 14: " + [ v.constructor.name ]);
            };
            return go;
        };
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (a) {
            return function (xs) {
                var v = uncons(xs);
                if (v instanceof Data_Maybe.Nothing) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(a);
                };
                if (v instanceof Data_Maybe.Just) {
                    return Control_Bind.bind(dictMonad.Bind1())(f(a)(v.value0.head))(function (a$prime) {
                        return foldM(dictMonad)(f)(a$prime)(v.value0.tail);
                    });
                };
                throw new Error("Failed pattern match at Data.List.Lazy line 745, column 5 - line 748, column 54: " + [ v.constructor.name ]);
            };
        };
    };
};
var findIndex = function (fn) {
    var go = function (n) {
        return function (list) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)(uncons(list))(function (v) {
                var $202 = fn(v.head);
                if ($202) {
                    return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(n);
                };
                return go(n + 1 | 0)(v.tail);
            });
        };
    };
    return go(0);
};
var findLastIndex = function (fn) {
    return function (xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
            return (length(xs) - 1 | 0) - v | 0;
        })(findIndex(fn)(reverse(xs)));
    };
};
var filterM = function (dictMonad) {
    return function (p) {
        return function (list) {
            var v = uncons(list);
            if (v instanceof Data_Maybe.Nothing) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Lazy_Types.nil);
            };
            if (v instanceof Data_Maybe.Just) {
                return Control_Bind.bind(dictMonad.Bind1())(p(v.value0.head))(function (v1) {
                    return Control_Bind.bind(dictMonad.Bind1())(filterM(dictMonad)(p)(v.value0.tail))(function (v2) {
                        return Control_Applicative.pure(dictMonad.Applicative0())((function () {
                            if (v1) {
                                return Data_List_Lazy_Types.cons(v.value0.head)(v2);
                            };
                            return v2;
                        })());
                    });
                });
            };
            throw new Error("Failed pattern match at Data.List.Lazy line 442, column 5 - line 447, column 48: " + [ v.constructor.name ]);
        };
    };
};
var filter = function (p) {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Lazy_Types.Nil) {
                $tco_done = true;
                return Data_List_Lazy_Types.Nil.value;
            };
            if (v instanceof Data_List_Lazy_Types.Cons) {
                if (p(v.value0)) {
                    $tco_done = true;
                    return new Data_List_Lazy_Types.Cons(v.value0, filter(p)(v.value1));
                };
                if (Data_Boolean.otherwise) {
                    $copy_v = Data_List_Lazy_Types.step(v.value1);
                    return;
                };
            };
            throw new Error("Failed pattern match at Data.List.Lazy line 427, column 3 - line 427, column 15: " + [ v.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return function ($252) {
        return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($252)));
    };
};
var intersectBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return filter(function (x) {
                return Data_Foldable.any(Data_List_Lazy_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(eq(x))(ys);
            })(xs);
        };
    };
};
var intersect = function (dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var nubBy = function (eq) {
    var go = function (v) {
        if (v instanceof Data_List_Lazy_Types.Nil) {
            return Data_List_Lazy_Types.Nil.value;
        };
        if (v instanceof Data_List_Lazy_Types.Cons) {
            return new Data_List_Lazy_Types.Cons(v.value0, nubBy(eq)(filter(function (y) {
                return !eq(v.value0)(y);
            })(v.value1)));
        };
        throw new Error("Failed pattern match at Data.List.Lazy line 619, column 3 - line 619, column 15: " + [ v.constructor.name ]);
    };
    return function ($253) {
        return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($253)));
    };
};
var nub = function (dictEq) {
    return nubBy(Data_Eq.eq(dictEq));
};
var eqPattern = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            return Data_Eq.eq(Data_List_Lazy_Types.eqList(dictEq))(x)(y);
        };
    });
};
var ordPattern = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqPattern(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            return Data_Ord.compare(Data_List_Lazy_Types.ordList(dictOrd))(x)(y);
        };
    });
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function (p) {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Lazy_Types.Cons && p(v.value0)) {
                $copy_v = Data_List_Lazy_Types.step(v.value1);
                return;
            };
            $tco_done = true;
            return fromStep(v);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return function ($254) {
        return go(Data_List_Lazy_Types.step($254));
    };
};
var drop = function (n) {
    var go = function ($copy_v) {
        return function ($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v === 0) {
                    $tco_done = true;
                    return v1;
                };
                if (v1 instanceof Data_List_Lazy_Types.Nil) {
                    $tco_done = true;
                    return Data_List_Lazy_Types.Nil.value;
                };
                if (v1 instanceof Data_List_Lazy_Types.Cons) {
                    $tco_var_v = v - 1 | 0;
                    $copy_v1 = Data_List_Lazy_Types.step(v1.value1);
                    return;
                };
                throw new Error("Failed pattern match at Data.List.Lazy line 534, column 3 - line 534, column 15: " + [ v.constructor.name, v1.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
            };
            return $tco_result;
        };
    };
    return function ($255) {
        return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($255)));
    };
};
var slice = function (start) {
    return function (end) {
        return function (xs) {
            return take(end - start | 0)(drop(start)(xs));
        };
    };
};
var deleteBy = function (eq) {
    return function (x) {
        return function (xs) {
            var go = function (v) {
                if (v instanceof Data_List_Lazy_Types.Nil) {
                    return Data_List_Lazy_Types.Nil.value;
                };
                if (v instanceof Data_List_Lazy_Types.Cons) {
                    if (eq(x)(v.value0)) {
                        return Data_List_Lazy_Types.step(v.value1);
                    };
                    if (Data_Boolean.otherwise) {
                        return new Data_List_Lazy_Types.Cons(v.value0, deleteBy(eq)(x)(v.value1));
                    };
                };
                throw new Error("Failed pattern match at Data.List.Lazy line 648, column 3 - line 648, column 15: " + [ v.constructor.name ]);
            };
            return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Data_Semigroup.append(Data_List_Lazy_Types.semigroupList)(xs)(Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var deleteAt = function (n) {
    return function (xs) {
        var go = function (v) {
            return function (v1) {
                if (v1 instanceof Data_List_Lazy_Types.Nil) {
                    return Data_List_Lazy_Types.Nil.value;
                };
                if (v === 0 && v1 instanceof Data_List_Lazy_Types.Cons) {
                    return Data_List_Lazy_Types.step(v1.value1);
                };
                if (v1 instanceof Data_List_Lazy_Types.Cons) {
                    return new Data_List_Lazy_Types.Cons(v1.value0, deleteAt(v - 1 | 0)(v1.value1));
                };
                throw new Error("Failed pattern match at Data.List.Lazy line 352, column 3 - line 352, column 17: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
    };
};
var $$delete = function (dictEq) {
    return deleteBy(Data_Eq.eq(dictEq));
};
var difference = function (dictEq) {
    return Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
};
var cycle = function (xs) {
    return Control_Lazy.fix(Data_List_Lazy_Types.lazyList)(function (ys) {
        return Data_Semigroup.append(Data_List_Lazy_Types.semigroupList)(xs)(ys);
    });
};
var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Lazy_Types.bindList));
var concat = function (v) {
    return Control_Bind.bind(Data_List_Lazy_Types.bindList)(v)(Control_Category.id(Control_Category.categoryFn));
};
var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
var alterAt = function (n) {
    return function (f) {
        return function (xs) {
            var go = function (v) {
                return function (v1) {
                    if (v1 instanceof Data_List_Lazy_Types.Nil) {
                        return Data_List_Lazy_Types.Nil.value;
                    };
                    if (v === 0 && v1 instanceof Data_List_Lazy_Types.Cons) {
                        var v2 = f(v1.value0);
                        if (v2 instanceof Data_Maybe.Nothing) {
                            return Data_List_Lazy_Types.step(v1.value1);
                        };
                        if (v2 instanceof Data_Maybe.Just) {
                            return new Data_List_Lazy_Types.Cons(v2.value0, v1.value1);
                        };
                        throw new Error("Failed pattern match at Data.List.Lazy line 393, column 22 - line 395, column 26: " + [ v2.constructor.name ]);
                    };
                    if (v1 instanceof Data_List_Lazy_Types.Cons) {
                        return new Data_List_Lazy_Types.Cons(v1.value0, alterAt(v - 1 | 0)(f)(v1.value1));
                    };
                    throw new Error("Failed pattern match at Data.List.Lazy line 392, column 3 - line 392, column 17: " + [ v.constructor.name, v1.constructor.name ]);
                };
            };
            return Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
        };
    };
};
var modifyAt = function (n) {
    return function (f) {
        return alterAt(n)(function ($256) {
            return Data_Maybe.Just.create(f($256));
        });
    };
};
module.exports = {
    toUnfoldable: toUnfoldable,
    fromFoldable: fromFoldable,
    singleton: singleton,
    range: range,
    replicate: replicate,
    replicateM: replicateM,
    some: some,
    many: many,
    repeat: repeat,
    iterate: iterate,
    cycle: cycle,
    "null": $$null,
    length: length,
    snoc: snoc,
    insert: insert,
    insertBy: insertBy,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    deleteAt: deleteAt,
    updateAt: updateAt,
    modifyAt: modifyAt,
    alterAt: alterAt,
    reverse: reverse,
    concat: concat,
    concatMap: concatMap,
    filter: filter,
    filterM: filterM,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    Pattern: Pattern,
    stripPrefix: stripPrefix,
    slice: slice,
    take: take,
    takeWhile: takeWhile,
    drop: drop,
    dropWhile: dropWhile,
    span: span,
    group: group,
    groupBy: groupBy,
    partition: partition,
    nub: nub,
    nubBy: nubBy,
    union: union,
    unionBy: unionBy,
    "delete": $$delete,
    deleteBy: deleteBy,
    difference: difference,
    intersect: intersect,
    intersectBy: intersectBy,
    zipWith: zipWith,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    transpose: transpose,
    foldM: foldM,
    foldrLazy: foldrLazy,
    eqPattern: eqPattern,
    ordPattern: ordPattern,
    newtypePattern: newtypePattern,
    showPattern: showPattern
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Lazy":17,"../Control.Monad.Rec.Class":51,"../Control.Semigroupoid":66,"../Data.Boolean":131,"../Data.Eq":157,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.HeytingAlgebra":188,"../Data.Lazy":197,"../Data.List.Lazy.Types":226,"../Data.Maybe":234,"../Data.Newtype":244,"../Data.NonEmpty":245,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Data.Traversable":296,"../Data.Tuple":298,"../Data.Unfoldable":300,"../Prelude":358}],228:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable");
var Data_Semiring = require("../Data.Semiring");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var zipWith = function (f) {
    return function (v) {
        return function (v1) {
            return new Data_NonEmpty.NonEmpty(f(v.value0)(v1.value0), Data_List.zipWith(f)(v.value1)(v1.value1));
        };
    };
};
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Semigroup_Traversable.sequence1(Data_List_Types.traversable1NonEmptyList)(dictApplicative.Apply0())(zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var wrappedOperation2 = function (name) {
    return function (f) {
        return function (v) {
            return function (v1) {
                var v2 = f(new Data_List_Types.Cons(v.value0, v.value1))(new Data_List_Types.Cons(v1.value0, v1.value1));
                if (v2 instanceof Data_List_Types.Cons) {
                    return new Data_NonEmpty.NonEmpty(v2.value0, v2.value1);
                };
                if (v2 instanceof Data_List_Types.Nil) {
                    return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
                };
                throw new Error("Failed pattern match at Data.List.NonEmpty line 101, column 3 - line 103, column 81: " + [ v2.constructor.name ]);
            };
        };
    };
};
var wrappedOperation = function (name) {
    return function (f) {
        return function (v) {
            var v1 = f(new Data_List_Types.Cons(v.value0, v.value1));
            if (v1 instanceof Data_List_Types.Cons) {
                return new Data_NonEmpty.NonEmpty(v1.value0, v1.value1);
            };
            if (v1 instanceof Data_List_Types.Nil) {
                return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty line 88, column 3 - line 90, column 81: " + [ v1.constructor.name ]);
        };
    };
};
var updateAt = function (i) {
    return function (a) {
        return function (v) {
            if (i === 0) {
                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, v.value1));
            };
            if (Data_Boolean.otherwise) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($156) {
                    return Data_List_Types.NonEmptyList((function (v1) {
                        return new Data_NonEmpty.NonEmpty(v.value0, v1);
                    })($156));
                })(Data_List.updateAt(i - 1 | 0)(a)(v.value1));
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty line 187, column 1 - line 187, column 75: " + [ i.constructor.name, a.constructor.name, v.constructor.name ]);
        };
    };
};
var unzip = function (ts) {
    return new Data_Tuple.Tuple(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.fst)(ts), Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.snd)(ts));
};
var unsnoc = function (v) {
    var v1 = Data_List.unsnoc(v.value1);
    if (v1 instanceof Data_Maybe.Nothing) {
        return {
            init: Data_List_Types.Nil.value,
            last: v.value0
        };
    };
    if (v1 instanceof Data_Maybe.Just) {
        return {
            init: new Data_List_Types.Cons(v.value0, v1.value0.init),
            last: v1.value0.last
        };
    };
    throw new Error("Failed pattern match at Data.List.NonEmpty line 149, column 35 - line 151, column 50: " + [ v1.constructor.name ]);
};
var unionBy = function ($157) {
    return wrappedOperation2("unionBy")(Data_List.unionBy($157));
};
var union = function (dictEq) {
    return wrappedOperation2("union")(Data_List.union(dictEq));
};
var uncons = function (v) {
    return {
        head: v.value0,
        tail: v.value1
    };
};
var toList = function (v) {
    return new Data_List_Types.Cons(v.value0, v.value1);
};
var toUnfoldable = function (dictUnfoldable) {
    return function ($158) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
                return new Data_Tuple.Tuple(rec.head, rec.tail);
            })(Data_List.uncons(xs));
        })(toList($158));
    };
};
var tail = function (v) {
    return v.value1;
};
var sortBy = function ($159) {
    return wrappedOperation("sortBy")(Data_List.sortBy($159));
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var snoc = function (v) {
    return function (y) {
        return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(y));
    };
};
var singleton = function ($160) {
    return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($160));
};
var reverse = wrappedOperation("reverse")(Data_List.reverse);
var nubBy = function ($161) {
    return wrappedOperation("nubBy")(Data_List.nubBy($161));
};
var nub = function (dictEq) {
    return wrappedOperation("nub")(Data_List.nub(dictEq));
};
var modifyAt = function (i) {
    return function (f) {
        return function (v) {
            if (i === 0) {
                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(f(v.value0), v.value1));
            };
            if (Data_Boolean.otherwise) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($162) {
                    return Data_List_Types.NonEmptyList((function (v1) {
                        return new Data_NonEmpty.NonEmpty(v.value0, v1);
                    })($162));
                })(Data_List.modifyAt(i - 1 | 0)(f)(v.value1));
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty line 192, column 1 - line 192, column 82: " + [ i.constructor.name, f.constructor.name, v.constructor.name ]);
        };
    };
};
var mapWithIndex = function ($163) {
    return wrappedOperation("mapWithIndex")(Data_List.mapWithIndex($163));
};
var lift = function (f) {
    return function (v) {
        return f(new Data_List_Types.Cons(v.value0, v.value1));
    };
};
var mapMaybe = function ($164) {
    return lift(Data_List.mapMaybe($164));
};
var partition = function ($165) {
    return lift(Data_List.partition($165));
};
var span = function ($166) {
    return lift(Data_List.span($166));
};
var take = function ($167) {
    return lift(Data_List.take($167));
};
var takeWhile = function ($168) {
    return lift(Data_List.takeWhile($168));
};
var length = function (v) {
    return 1 + Data_List.length(v.value1) | 0;
};
var last = function (v) {
    return Data_Maybe.fromMaybe(v.value0)(Data_List.last(v.value1));
};
var intersectBy = function ($169) {
    return wrappedOperation2("intersectBy")(Data_List.intersectBy($169));
};
var intersect = function (dictEq) {
    return wrappedOperation2("intersect")(Data_List.intersect(dictEq));
};
var insertAt = function (i) {
    return function (a) {
        return function (v) {
            if (i === 0) {
                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, new Data_List_Types.Cons(v.value0, v.value1)));
            };
            if (Data_Boolean.otherwise) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($170) {
                    return Data_List_Types.NonEmptyList((function (v1) {
                        return new Data_NonEmpty.NonEmpty(v.value0, v1);
                    })($170));
                })(Data_List.insertAt(i - 1 | 0)(a)(v.value1));
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty line 182, column 1 - line 182, column 75: " + [ i.constructor.name, a.constructor.name, v.constructor.name ]);
        };
    };
};
var init = function (v) {
    return Data_Maybe.maybe(Data_List_Types.Nil.value)(function (v1) {
        return new Data_List_Types.Cons(v.value0, v1);
    })(Data_List.init(v.value1));
};
var index = function (v) {
    return function (i) {
        if (i === 0) {
            return new Data_Maybe.Just(v.value0);
        };
        if (Data_Boolean.otherwise) {
            return Data_List.index(v.value1)(i - 1 | 0);
        };
        throw new Error("Failed pattern match at Data.List.NonEmpty line 156, column 1 - line 156, column 52: " + [ v.constructor.name, i.constructor.name ]);
    };
};
var head = function (v) {
    return v.value0;
};
var groupBy = function ($171) {
    return wrappedOperation("groupBy")(Data_List.groupBy($171));
};
var group$prime = function (dictOrd) {
    return wrappedOperation("group'")(Data_List["group'"](dictOrd));
};
var group = function (dictEq) {
    return wrappedOperation("group")(Data_List.group(dictEq));
};
var fromList = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(v.value0, v.value1));
    };
    throw new Error("Failed pattern match at Data.List.NonEmpty line 117, column 1 - line 117, column 57: " + [ v.constructor.name ]);
};
var fromFoldable = function (dictFoldable) {
    return function ($172) {
        return fromList(Data_List.fromFoldable(dictFoldable)($172));
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (a) {
            return function (v) {
                return Control_Bind.bind(dictMonad.Bind1())(f(a)(v.value0))(function (a$prime) {
                    return Data_List.foldM(dictMonad)(f)(a$prime)(v.value1);
                });
            };
        };
    };
};
var findLastIndex = function (f) {
    return function (v) {
        var v1 = Data_List.findLastIndex(f)(v.value1);
        if (v1 instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just(v1.value0 + 1 | 0);
        };
        if (v1 instanceof Data_Maybe.Nothing) {
            if (f(v.value0)) {
                return new Data_Maybe.Just(0);
            };
            if (Data_Boolean.otherwise) {
                return Data_Maybe.Nothing.value;
            };
        };
        throw new Error("Failed pattern match at Data.List.NonEmpty line 176, column 3 - line 180, column 29: " + [ v1.constructor.name ]);
    };
};
var findIndex = function (f) {
    return function (v) {
        if (f(v.value0)) {
            return new Data_Maybe.Just(0);
        };
        if (Data_Boolean.otherwise) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
                return v1 + 1 | 0;
            })(Data_List.findIndex(f)(v.value1));
        };
        throw new Error("Failed pattern match at Data.List.NonEmpty line 169, column 1 - line 169, column 69: " + [ f.constructor.name, v.constructor.name ]);
    };
};
var filterM = function (dictMonad) {
    return function ($173) {
        return lift(Data_List.filterM(dictMonad)($173));
    };
};
var filter = function ($174) {
    return lift(Data_List.filter($174));
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function ($175) {
    return lift(Data_List.dropWhile($175));
};
var drop = function ($176) {
    return lift(Data_List.drop($176));
};
var cons = function (y) {
    return function (v) {
        return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
    };
};
var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindNonEmptyList));
var concat = function (v) {
    return Control_Bind.bind(Data_List_Types.bindNonEmptyList)(v)(Control_Category.id(Control_Category.categoryFn));
};
var catMaybes = lift(Data_List.catMaybes);
var appendFoldable = function (dictFoldable) {
    return function (v) {
        return function (ys) {
            return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(v.value1)(Data_List.fromFoldable(dictFoldable)(ys)));
        };
    };
};
module.exports = {
    toUnfoldable: toUnfoldable,
    fromFoldable: fromFoldable,
    fromList: fromList,
    toList: toList,
    singleton: singleton,
    length: length,
    cons: cons,
    snoc: snoc,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    unsnoc: unsnoc,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    updateAt: updateAt,
    modifyAt: modifyAt,
    reverse: reverse,
    concat: concat,
    concatMap: concatMap,
    filter: filter,
    filterM: filterM,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    appendFoldable: appendFoldable,
    mapWithIndex: mapWithIndex,
    sort: sort,
    sortBy: sortBy,
    take: take,
    takeWhile: takeWhile,
    drop: drop,
    dropWhile: dropWhile,
    span: span,
    group: group,
    "group'": group$prime,
    groupBy: groupBy,
    partition: partition,
    nub: nub,
    nubBy: nubBy,
    union: union,
    unionBy: unionBy,
    intersect: intersect,
    intersectBy: intersectBy,
    zipWith: zipWith,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    foldM: foldM
};

},{"../Control.Bind":11,"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Boolean":131,"../Data.Eq":157,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.List":230,"../Data.List.Types":229,"../Data.Maybe":234,"../Data.NonEmpty":245,"../Data.Ord":251,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semigroup.Foldable":268,"../Data.Semigroup.Traversable":269,"../Data.Semiring":273,"../Data.Traversable":296,"../Data.Tuple":298,"../Data.Unfoldable":300,"../Partial.Unsafe":355,"../Prelude":358}],229:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Prelude = require("../Prelude");
var Nil = (function () {
    function Nil() {

    };
    Nil.value = new Nil();
    return Nil;
})();
var Cons = (function () {
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cons.create = function (value0) {
        return function (value1) {
            return new Cons(value0, value1);
        };
    };
    return Cons;
})();
var NonEmptyList = function (x) {
    return x;
};
var toList = function (v) {
    return new Cons(v.value0, v.value1);
};
var newtypeNonEmptyList = new Data_Newtype.Newtype(function (n) {
    return n;
}, NonEmptyList);
var nelCons = function (a) {
    return function (v) {
        return new Data_NonEmpty.NonEmpty(a, new Cons(v.value0, v.value1));
    };
};
var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldl(foldableList)(function (acc) {
            return function ($158) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($158));
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function (f) {
    var go = function ($copy_b) {
        return function ($copy_v) {
            var $tco_var_b = $copy_b;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(b, v) {
                if (v instanceof Nil) {
                    $tco_done = true;
                    return b;
                };
                if (v instanceof Cons) {
                    $tco_var_b = f(b)(v.value0);
                    $copy_v = v.value1;
                    return;
                };
                throw new Error("Failed pattern match at Data.List.Types line 81, column 12 - line 83, column 30: " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_b, $copy_v);
            };
            return $tco_result;
        };
    };
    return go;
}, function (f) {
    return function (b) {
        var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
        return function ($159) {
            return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev($159));
        };
    };
});
var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
var foldableWithIndexList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableList;
}, function (dictMonoid) {
    return function (f) {
        return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
            return function (acc) {
                return function ($160) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)($160));
                };
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function (f) {
    return function (acc) {
        return function ($161) {
            return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v) {
                return function (a) {
                    return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));
                };
            })(new Data_Tuple.Tuple(0, acc))($161));
        };
    };
}, function (f) {
    return function (b) {
        return function (xs) {
            var v = (function () {
                var rev = Data_Foldable.foldl(foldableList)(function (v1) {
                    return function (a) {
                        return new Data_Tuple.Tuple(v1.value0 + 1 | 0, new Cons(a, v1.value1));
                    };
                });
                return rev(new Data_Tuple.Tuple(0, Nil.value))(xs);
            })();
            return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v1) {
                return function (a) {
                    return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));
                };
            })(new Data_Tuple.Tuple(v.value0, b))(v.value1));
        };
    };
});
var functorList = new Data_Functor.Functor(function (f) {
    return Data_Foldable.foldr(foldableList)(function (x) {
        return function (acc) {
            return new Cons(f(x), acc);
        };
    })(Nil.value);
});
var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
var functorWithIndexList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorList;
}, function (f) {
    return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function (i) {
        return function (x) {
            return function (acc) {
                return new Cons(f(i)(x), acc);
            };
        };
    })(Nil.value);
});
var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
    return function (ys) {
        return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
    };
});
var monoidList = new Data_Monoid.Monoid(function () {
    return semigroupList;
}, Nil.value);
var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
    return function (as$prime) {
        return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
    };
});
var showList = function (dictShow) {
    return new Data_Show.Show(function (v) {
        if (v instanceof Nil) {
            return "Nil";
        };
        return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
    });
};
var showNonEmptyList = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
    });
};
var traversableList = new Data_Traversable.Traversable(function () {
    return foldableList;
}, function () {
    return functorList;
}, function (dictApplicative) {
    return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
}, function (dictApplicative) {
    return function (f) {
        return function ($162) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value))(Data_Foldable.foldl(foldableList)(function (acc) {
                return function ($163) {
                    return Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc)(f($163));
                };
            })(Control_Applicative.pure(dictApplicative)(Nil.value))($162));
        };
    };
});
var traversableNonEmptyList = Data_NonEmpty.traversableNonEmpty(traversableList);
var traversableWithIndexList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexList;
}, function () {
    return functorWithIndexList;
}, function () {
    return traversableList;
}, function (dictApplicative) {
    return function (f) {
        var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
        return function ($164) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(rev)(Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
                return function (acc) {
                    return function ($165) {
                        return Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc)(f(i)($165));
                    };
                };
            })(Control_Applicative.pure(dictApplicative)(Nil.value))($164));
        };
    };
});
var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
    return function (b) {
        var go = function ($copy_source) {
            return function ($copy_memo) {
                var $tco_var_source = $copy_source;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(source, memo) {
                    var v = f(source);
                    if (v instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
                    };
                    if (v instanceof Data_Maybe.Just) {
                        $tco_var_source = v.value0.value1;
                        $copy_memo = new Cons(v.value0.value0, memo);
                        return;
                    };
                    throw new Error("Failed pattern match at Data.List.Types line 105, column 22 - line 107, column 52: " + [ v.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_source, $copy_memo);
                };
                return $tco_result;
            };
        };
        return go(b)(Nil.value);
    };
});
var foldable1NonEmptyList = new Data_Semigroup_Foldable.Foldable1(function () {
    return foldableNonEmptyList;
}, function (dictSemigroup) {
    return function (v) {
        return Data_Foldable.foldl(foldableList)(Data_Semigroup.append(dictSemigroup))(v.value0)(v.value1);
    };
}, function (dictSemigroup) {
    return function (f) {
        return function (v) {
            return Data_Foldable.foldl(foldableList)(function (acc) {
                return function ($166) {
                    return Data_Semigroup.append(dictSemigroup)(acc)(f($166));
                };
            })(f(v.value0))(v.value1);
        };
    };
});
var extendNonEmptyList = new Control_Extend.Extend(function () {
    return functorNonEmptyList;
}, function (f) {
    return function (v) {
        var go = function (a) {
            return function (v1) {
                return {
                    val: new Cons(f(new Data_NonEmpty.NonEmpty(a, v1.acc)), v1.val),
                    acc: new Cons(a, v1.acc)
                };
            };
        };
        return new Data_NonEmpty.NonEmpty(f(v), (Data_Foldable.foldr(foldableList)(go)({
            val: Nil.value,
            acc: Nil.value
        })(v.value1)).val);
    };
});
var extendList = new Control_Extend.Extend(function () {
    return functorList;
}, function (f) {
    return function (v) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            var go = function (a$prime) {
                return function (v1) {
                    var acc$prime = new Cons(a$prime, v1.acc);
                    return {
                        val: new Cons(f(acc$prime), v1.val),
                        acc: acc$prime
                    };
                };
            };
            return new Cons(f(v), (Data_Foldable.foldr(foldableList)(go)({
                val: Nil.value,
                acc: Nil.value
            })(v.value1)).val);
        };
        throw new Error("Failed pattern match at Data.List.Types line 145, column 1 - line 145, column 35: " + [ f.constructor.name, v.constructor.name ]);
    };
});
var eq1List = new Data_Eq.Eq1(function (dictEq) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    return function ($copy_v2) {
                        var $tco_var_v = $copy_v;
                        var $tco_var_v1 = $copy_v1;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, v1, v2) {
                            if (!v2) {
                                $tco_done = true;
                                return false;
                            };
                            if (v instanceof Nil && v1 instanceof Nil) {
                                $tco_done = true;
                                return v2;
                            };
                            if (v instanceof Cons && v1 instanceof Cons) {
                                $tco_var_v = v.value1;
                                $tco_var_v1 = v1.value1;
                                $copy_v2 = v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0);
                                return;
                            };
                            $tco_done = true;
                            return false;
                        };
                        while (!$tco_done) {
                            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
                        };
                        return $tco_result;
                    };
                };
            };
            return go(xs)(ys)(true);
        };
    };
});
var eqList = function (dictEq) {
    return new Data_Eq.Eq(Data_Eq.eq1(eq1List)(dictEq));
};
var eqNonEmptyList = function (dictEq) {
    return Data_NonEmpty.eqNonEmpty(eq1List)(dictEq);
};
var ord1List = new Data_Ord.Ord1(function () {
    return eq1List;
}, function (dictOrd) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    var $tco_var_v = $copy_v;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v, v1) {
                        if (v instanceof Nil && v1 instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.EQ.value;
                        };
                        if (v instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.LT.value;
                        };
                        if (v1 instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.GT.value;
                        };
                        if (v instanceof Cons && v1 instanceof Cons) {
                            var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
                            if (v2 instanceof Data_Ordering.EQ) {
                                $tco_var_v = v.value1;
                                $copy_v1 = v1.value1;
                                return;
                            };
                            $tco_done = true;
                            return v2;
                        };
                        throw new Error("Failed pattern match at Data.List.Types line 55, column 5 - line 55, column 20: " + [ v.constructor.name, v1.constructor.name ]);
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_v, $copy_v1);
                    };
                    return $tco_result;
                };
            };
            return go(xs)(ys);
        };
    };
});
var ordList = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqList(dictOrd.Eq0());
    }, Data_Ord.compare1(ord1List)(dictOrd));
};
var ordNonEmptyList = function (dictOrd) {
    return Data_NonEmpty.ordNonEmpty(ord1List)(dictOrd);
};
var comonadNonEmptyList = new Control_Comonad.Comonad(function () {
    return extendNonEmptyList;
}, function (v) {
    return v.value0;
});
var applyList = new Control_Apply.Apply(function () {
    return functorList;
}, function (v) {
    return function (v1) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
        };
        throw new Error("Failed pattern match at Data.List.Types line 120, column 1 - line 120, column 33: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var applyNonEmptyList = new Control_Apply.Apply(function () {
    return functorNonEmptyList;
}, function (v) {
    return function (v1) {
        return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
    };
});
var bindList = new Control_Bind.Bind(function () {
    return applyList;
}, function (v) {
    return function (v1) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
        };
        throw new Error("Failed pattern match at Data.List.Types line 127, column 1 - line 127, column 31: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindNonEmptyList = new Control_Bind.Bind(function () {
    return applyNonEmptyList;
}, function (v) {
    return function (f) {
        var v1 = f(v.value0);
        return new Data_NonEmpty.NonEmpty(v1.value0, Data_Semigroup.append(semigroupList)(v1.value1)(Control_Bind.bind(bindList)(v.value1)(function ($167) {
            return toList(f($167));
        })));
    };
});
var applicativeList = new Control_Applicative.Applicative(function () {
    return applyList;
}, function (a) {
    return new Cons(a, Nil.value);
});
var monadList = new Control_Monad.Monad(function () {
    return applicativeList;
}, function () {
    return bindList;
});
var altNonEmptyList = new Control_Alt.Alt(function () {
    return functorNonEmptyList;
}, Data_Semigroup.append(semigroupNonEmptyList));
var altList = new Control_Alt.Alt(function () {
    return functorList;
}, Data_Semigroup.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
    return altList;
}, Nil.value);
var alternativeList = new Control_Alternative.Alternative(function () {
    return applicativeList;
}, function () {
    return plusList;
});
var monadZeroList = new Control_MonadZero.MonadZero(function () {
    return alternativeList;
}, function () {
    return monadList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
    return monadZeroList;
});
var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
    return applyNonEmptyList;
}, function ($168) {
    return NonEmptyList(Data_NonEmpty.singleton(plusList)($168));
});
var monadNonEmptyList = new Control_Monad.Monad(function () {
    return applicativeNonEmptyList;
}, function () {
    return bindNonEmptyList;
});
var traversable1NonEmptyList = new Data_Semigroup_Traversable.Traversable1(function () {
    return foldable1NonEmptyList;
}, function () {
    return traversableNonEmptyList;
}, function (dictApply) {
    return Data_Semigroup_Traversable.traverse1(traversable1NonEmptyList)(dictApply)(Control_Category.id(Control_Category.categoryFn));
}, function (dictApply) {
    return function (f) {
        return function (v) {
            return Data_Functor.mapFlipped(dictApply.Functor0())(Data_Foldable.foldl(foldableList)(function (acc) {
                return function ($169) {
                    return Control_Apply.lift2(dictApply)(Data_Function.flip(nelCons))(acc)(f($169));
                };
            })(Data_Functor.map(dictApply.Functor0())(Control_Applicative.pure(applicativeNonEmptyList))(f(v.value0)))(v.value1))(function (v1) {
                return Data_Foldable.foldl(foldableList)(Data_Function.flip(nelCons))(Control_Applicative.pure(applicativeNonEmptyList)(v1.value0))(v1.value1);
            });
        };
    };
});
module.exports = {
    Nil: Nil,
    Cons: Cons,
    NonEmptyList: NonEmptyList,
    toList: toList,
    nelCons: nelCons,
    showList: showList,
    eqList: eqList,
    eq1List: eq1List,
    ordList: ordList,
    ord1List: ord1List,
    semigroupList: semigroupList,
    monoidList: monoidList,
    functorList: functorList,
    functorWithIndexList: functorWithIndexList,
    foldableList: foldableList,
    foldableWithIndexList: foldableWithIndexList,
    unfoldableList: unfoldableList,
    traversableList: traversableList,
    traversableWithIndexList: traversableWithIndexList,
    applyList: applyList,
    applicativeList: applicativeList,
    bindList: bindList,
    monadList: monadList,
    altList: altList,
    plusList: plusList,
    alternativeList: alternativeList,
    monadZeroList: monadZeroList,
    monadPlusList: monadPlusList,
    extendList: extendList,
    newtypeNonEmptyList: newtypeNonEmptyList,
    eqNonEmptyList: eqNonEmptyList,
    ordNonEmptyList: ordNonEmptyList,
    showNonEmptyList: showNonEmptyList,
    functorNonEmptyList: functorNonEmptyList,
    applyNonEmptyList: applyNonEmptyList,
    applicativeNonEmptyList: applicativeNonEmptyList,
    bindNonEmptyList: bindNonEmptyList,
    monadNonEmptyList: monadNonEmptyList,
    altNonEmptyList: altNonEmptyList,
    extendNonEmptyList: extendNonEmptyList,
    comonadNonEmptyList: comonadNonEmptyList,
    semigroupNonEmptyList: semigroupNonEmptyList,
    foldableNonEmptyList: foldableNonEmptyList,
    traversableNonEmptyList: traversableNonEmptyList,
    foldable1NonEmptyList: foldable1NonEmptyList,
    traversable1NonEmptyList: traversable1NonEmptyList
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Comonad":13,"../Control.Extend":16,"../Control.Monad":60,"../Control.MonadPlus":61,"../Control.MonadZero":62,"../Control.Plus":65,"../Control.Semigroupoid":66,"../Data.Eq":157,"../Data.Foldable":164,"../Data.FoldableWithIndex":165,"../Data.Function":172,"../Data.Functor":180,"../Data.FunctorWithIndex":182,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.NonEmpty":245,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semigroup.Foldable":268,"../Data.Semigroup.Traversable":269,"../Data.Semiring":273,"../Data.Show":276,"../Data.Traversable":296,"../Data.TraversableWithIndex":297,"../Data.Tuple":298,"../Data.Unfoldable":300,"../Prelude":358}],230:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Pattern = function (x) {
    return x;
};
var updateAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0 && v2 instanceof Data_List_Types.Cons) {
                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2.value1));
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                    return new Data_List_Types.Cons(v2.value0, v3);
                })(updateAt(v - 1 | 0)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var unzip = Data_Foldable.foldr(Data_List_Types.foldableList)(function (v) {
    return function (v1) {
        return new Data_Tuple.Tuple(new Data_List_Types.Cons(v.value0, v1.value0), new Data_List_Types.Cons(v.value1, v1.value1));
    };
})(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_Types.Nil.value));
var uncons = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just({
            head: v.value0,
            tail: v.value1
        });
    };
    throw new Error("Failed pattern match at Data.List line 259, column 1 - line 259, column 66: " + [ v.constructor.name ]);
};
var toUnfoldable = function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
            return new Data_Tuple.Tuple(rec.head, rec.tail);
        })(uncons(xs));
    });
};
var tail = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(v.value1);
    };
    throw new Error("Failed pattern match at Data.List line 245, column 1 - line 245, column 43: " + [ v.constructor.name ]);
};
var stripPrefix = function (dictEq) {
    return function (v) {
        return function (s) {
            var go = function (prefix) {
                return function (input) {
                    if (prefix instanceof Data_List_Types.Cons && (input instanceof Data_List_Types.Cons && Data_Eq.eq(dictEq)(prefix.value0)(input.value0))) {
                        return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Loop({
                            a: prefix.value1,
                            b: input.value1
                        }));
                    };
                    if (prefix instanceof Data_List_Types.Nil) {
                        return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Done(input));
                    };
                    return Data_Maybe.Nothing.value;
                };
            };
            return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe)(go)(v)(s);
        };
    };
};
var span = function (v) {
    return function (v1) {
        if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {
            var v2 = span(v)(v1.value1);
            return {
                init: new Data_List_Types.Cons(v1.value0, v2.init),
                rest: v2.rest
            };
        };
        return {
            init: Data_List_Types.Nil.value,
            rest: v1
        };
    };
};
var snoc = function (xs) {
    return function (x) {
        return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_List_Types.Cons.create)(new Data_List_Types.Cons(x, Data_List_Types.Nil.value))(xs);
    };
};
var singleton = function (a) {
    return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
};
var sortBy = function (cmp) {
    var merge = function (v) {
        return function (v1) {
            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {
                    return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));
                };
                if (Data_Boolean.otherwise) {
                    return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));
                };
            };
            if (v instanceof Data_List_Types.Nil) {
                return v1;
            };
            if (v1 instanceof Data_List_Types.Nil) {
                return v;
            };
            throw new Error("Failed pattern match at Data.List line 473, column 3 - line 473, column 38: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
    var mergePairs = function (v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
            return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
        };
        return v;
    };
    var mergeAll = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return v.value0;
            };
            $copy_v = mergePairs(v);
            return;
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    var sequences = function (v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
            if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {
                return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
            };
            if (Data_Boolean.otherwise) {
                return ascending(v.value1.value0)(function (v1) {
                    return new Data_List_Types.Cons(v.value0, v1);
                })(v.value1.value1);
            };
        };
        return singleton(v);
    };
    var descending = function ($copy_a) {
        return function ($copy_as) {
            return function ($copy_v) {
                var $tco_var_a = $copy_a;
                var $tco_var_as = $copy_as;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(a, as, v) {
                    if (v instanceof Data_List_Types.Cons && Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
                        $tco_var_a = v.value0;
                        $tco_var_as = new Data_List_Types.Cons(a, as);
                        $copy_v = v.value1;
                        return;
                    };
                    $tco_done = true;
                    return new Data_List_Types.Cons(new Data_List_Types.Cons(a, as), sequences(v));
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
                };
                return $tco_result;
            };
        };
    };
    var ascending = function ($copy_a) {
        return function ($copy_as) {
            return function ($copy_v) {
                var $tco_var_a = $copy_a;
                var $tco_var_as = $copy_as;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(a, as, v) {
                    if (v instanceof Data_List_Types.Cons && Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
                        $tco_var_a = v.value0;
                        $tco_var_as = function (ys) {
                            return as(new Data_List_Types.Cons(a, ys));
                        };
                        $copy_v = v.value1;
                        return;
                    };
                    $tco_done = true;
                    return new Data_List_Types.Cons(as(singleton(a)), sequences(v));
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
                };
                return $tco_result;
            };
        };
    };
    return function ($333) {
        return mergeAll(sequences($333));
    };
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var showPattern = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Pattern " + (Data_Show.show(Data_List_Types.showList(dictShow))(v) + ")");
    });
};
var reverse = (function () {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return acc;
                };
                if (v instanceof Data_List_Types.Cons) {
                    $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                    $copy_v = v.value1;
                    return;
                };
                throw new Error("Failed pattern match at Data.List line 368, column 3 - line 368, column 19: " + [ acc.constructor.name, v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
})();
var take = (function () {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            return function ($copy_v1) {
                var $tco_var_acc = $copy_acc;
                var $tco_var_v = $copy_v;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(acc, v, v1) {
                    if (v < 1) {
                        $tco_done = true;
                        return reverse(acc);
                    };
                    if (v1 instanceof Data_List_Types.Nil) {
                        $tco_done = true;
                        return reverse(acc);
                    };
                    if (v1 instanceof Data_List_Types.Cons) {
                        $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
                        $tco_var_v = v - 1 | 0;
                        $copy_v1 = v1.value1;
                        return;
                    };
                    throw new Error("Failed pattern match at Data.List line 520, column 3 - line 520, column 35: " + [ acc.constructor.name, v.constructor.name, v1.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_acc, $tco_var_v, $copy_v1);
                };
                return $tco_result;
            };
        };
    };
    return go(Data_List_Types.Nil.value);
})();
var takeWhile = function (p) {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Cons && p(v.value0)) {
                    $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                    $copy_v = v.value1;
                    return;
                };
                $tco_done = true;
                return reverse(acc);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
};
var unsnoc = function (lst) {
    var go = function ($copy_v) {
        return function ($copy_acc) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, acc) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return new Data_Maybe.Just({
                        revInit: acc,
                        last: v.value0
                    });
                };
                if (v instanceof Data_List_Types.Cons) {
                    $tco_var_v = v.value1;
                    $copy_acc = new Data_List_Types.Cons(v.value0, acc);
                    return;
                };
                throw new Error("Failed pattern match at Data.List line 270, column 3 - line 270, column 23: " + [ v.constructor.name, acc.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_acc);
            };
            return $tco_result;
        };
    };
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (h) {
        return {
            init: reverse(h.revInit),
            last: h.last
        };
    })(go(lst)(Data_List_Types.Nil.value));
};
var zipWith = function (f) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    return function ($copy_acc) {
                        var $tco_var_v = $copy_v;
                        var $tco_var_v1 = $copy_v1;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, v1, acc) {
                            if (v instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return acc;
                            };
                            if (v1 instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return acc;
                            };
                            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                                $tco_var_v = v.value1;
                                $tco_var_v1 = v1.value1;
                                $copy_acc = new Data_List_Types.Cons(f(v.value0)(v1.value0), acc);
                                return;
                            };
                            throw new Error("Failed pattern match at Data.List line 708, column 3 - line 708, column 21: " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
                        };
                        while (!$tco_done) {
                            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_acc);
                        };
                        return $tco_result;
                    };
                };
            };
            return reverse(go(xs)(ys)(Data_List_Types.Nil.value));
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_List_Types.traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
            };
        };
    };
};
var range = function (start) {
    return function (end) {
        if (start === end) {
            return singleton(start);
        };
        if (Data_Boolean.otherwise) {
            var go = function ($copy_s) {
                return function ($copy_e) {
                    return function ($copy_step) {
                        return function ($copy_rest) {
                            var $tco_var_s = $copy_s;
                            var $tco_var_e = $copy_e;
                            var $tco_var_step = $copy_step;
                            var $tco_done = false;
                            var $tco_result;
                            function $tco_loop(s, e, step, rest) {
                                if (s === e) {
                                    $tco_done = true;
                                    return new Data_List_Types.Cons(s, rest);
                                };
                                if (Data_Boolean.otherwise) {
                                    $tco_var_s = s + step | 0;
                                    $tco_var_e = e;
                                    $tco_var_step = step;
                                    $copy_rest = new Data_List_Types.Cons(s, rest);
                                    return;
                                };
                                throw new Error("Failed pattern match at Data.List line 148, column 3 - line 149, column 65: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                            };
                            while (!$tco_done) {
                                $tco_result = $tco_loop($tco_var_s, $tco_var_e, $tco_var_step, $copy_rest);
                            };
                            return $tco_result;
                        };
                    };
                };
            };
            return go(end)(start)((function () {
                var $219 = start > end;
                if ($219) {
                    return 1;
                };
                return -1 | 0;
            })())(Data_List_Types.Nil.value);
        };
        throw new Error("Failed pattern match at Data.List line 144, column 1 - line 144, column 32: " + [ start.constructor.name, end.constructor.name ]);
    };
};
var partition = function (p) {
    return function (xs) {
        var select = function (x) {
            return function (v) {
                var $222 = p(x);
                if ($222) {
                    return {
                        no: v.no,
                        yes: new Data_List_Types.Cons(x, v.yes)
                    };
                };
                return {
                    no: new Data_List_Types.Cons(x, v.no),
                    yes: v.yes
                };
            };
        };
        return Data_Foldable.foldr(Data_List_Types.foldableList)(select)({
            no: Data_List_Types.Nil.value,
            yes: Data_List_Types.Nil.value
        })(xs);
    };
};
var $$null = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return true;
    };
    return false;
};
var newtypePattern = new Data_Newtype.Newtype(function (n) {
    return n;
}, Pattern);
var mapWithIndex = Data_FunctorWithIndex.mapWithIndex(Data_List_Types.functorWithIndexList);
var mapMaybe = function (f) {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return reverse(acc);
                };
                if (v instanceof Data_List_Types.Cons) {
                    var v1 = f(v.value0);
                    if (v1 instanceof Data_Maybe.Nothing) {
                        $tco_var_acc = acc;
                        $copy_v = v.value1;
                        return;
                    };
                    if (v1 instanceof Data_Maybe.Just) {
                        $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
                        $copy_v = v.value1;
                        return;
                    };
                    throw new Error("Failed pattern match at Data.List line 419, column 5 - line 421, column 32: " + [ v1.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.List line 417, column 3 - line 417, column 27: " + [ acc.constructor.name, v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
};
var manyRec = function (dictMonadRec) {
    return function (dictAlternative) {
        return function (p) {
            var go = function (acc) {
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative.Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (v) {
                    return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v1) {
                        return new Data_List_Types.Cons(v1, acc);
                    })(function (v1) {
                        return reverse(acc);
                    })(v));
                });
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
        };
    };
};
var someRec = function (dictMonadRec) {
    return function (dictAlternative) {
        return function (v) {
            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v))(manyRec(dictMonadRec)(dictAlternative)(v));
        };
    };
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
        };
    };
};
var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
    return function (v) {
        return acc + 1 | 0;
    };
})(0);
var last = function ($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return new Data_Maybe.Just(v.value0);
        };
        if (v instanceof Data_List_Types.Cons) {
            $copy_v = v.value1;
            return;
        };
        $tco_done = true;
        return Data_Maybe.Nothing.value;
    };
    while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
    };
    return $tco_result;
};
var insertBy = function (v) {
    return function (x) {
        return function (v1) {
            if (v1 instanceof Data_List_Types.Nil) {
                return singleton(x);
            };
            if (v1 instanceof Data_List_Types.Cons) {
                var v2 = v(x)(v1.value0);
                if (v2 instanceof Data_Ordering.GT) {
                    return new Data_List_Types.Cons(v1.value0, insertBy(v)(x)(v1.value1));
                };
                return new Data_List_Types.Cons(x, v1);
            };
            throw new Error("Failed pattern match at Data.List line 216, column 1 - line 216, column 68: " + [ v.constructor.name, x.constructor.name, v1.constructor.name ]);
        };
    };
};
var insertAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0) {
                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2));
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                    return new Data_List_Types.Cons(v2.value0, v3);
                })(insertAt(v - 1 | 0)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var insert = function (dictOrd) {
    return insertBy(Data_Ord.compare(dictOrd));
};
var init = function (lst) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
        return v.init;
    })(unsnoc(lst));
};
var index = function ($copy_v) {
    return function ($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
            if (v instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Data_List_Types.Cons && v1 === 0) {
                $tco_done = true;
                return new Data_Maybe.Just(v.value0);
            };
            if (v instanceof Data_List_Types.Cons) {
                $tco_var_v = v.value1;
                $copy_v1 = v1 - 1 | 0;
                return;
            };
            throw new Error("Failed pattern match at Data.List line 281, column 1 - line 281, column 44: " + [ v.constructor.name, v1.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
        };
        return $tco_result;
    };
};
var head = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(v.value0);
    };
    throw new Error("Failed pattern match at Data.List line 230, column 1 - line 230, column 22: " + [ v.constructor.name ]);
};
var transpose = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
    };
    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Nil) {
        return transpose(v.value1);
    };
    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Cons) {
        return new Data_List_Types.Cons(new Data_List_Types.Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new Data_List_Types.Cons(v.value0.value1, mapMaybe(tail)(v.value1))));
    };
    throw new Error("Failed pattern match at Data.List line 742, column 1 - line 742, column 54: " + [ v.constructor.name ]);
};
var groupBy = function (v) {
    return function (v1) {
        if (v1 instanceof Data_List_Types.Nil) {
            return Data_List_Types.Nil.value;
        };
        if (v1 instanceof Data_List_Types.Cons) {
            var v2 = span(v(v1.value0))(v1.value1);
            return new Data_List_Types.Cons(new Data_NonEmpty.NonEmpty(v1.value0, v2.init), groupBy(v)(v2.rest));
        };
        throw new Error("Failed pattern match at Data.List line 605, column 1 - line 605, column 80: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var group = function (dictEq) {
    return groupBy(Data_Eq.eq(dictEq));
};
var group$prime = function (dictOrd) {
    return function ($334) {
        return group(dictOrd.Eq0())(sort(dictOrd)($334));
    };
};
var fromFoldable = function (dictFoldable) {
    return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
};
var foldM = function (dictMonad) {
    return function (v) {
        return function (a) {
            return function (v1) {
                if (v1 instanceof Data_List_Types.Nil) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(a);
                };
                if (v1 instanceof Data_List_Types.Cons) {
                    return Control_Bind.bind(dictMonad.Bind1())(v(a)(v1.value0))(function (a$prime) {
                        return foldM(dictMonad)(v)(a$prime)(v1.value1);
                    });
                };
                throw new Error("Failed pattern match at Data.List line 753, column 1 - line 753, column 72: " + [ v.constructor.name, a.constructor.name, v1.constructor.name ]);
            };
        };
    };
};
var findIndex = function (fn) {
    var go = function ($copy_v) {
        return function ($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v1 instanceof Data_List_Types.Cons) {
                    if (fn(v1.value0)) {
                        $tco_done = true;
                        return new Data_Maybe.Just(v);
                    };
                    if (Data_Boolean.otherwise) {
                        $tco_var_v = v + 1 | 0;
                        $copy_v1 = v1.value1;
                        return;
                    };
                };
                if (v1 instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.List line 301, column 3 - line 301, column 35: " + [ v.constructor.name, v1.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
            };
            return $tco_result;
        };
    };
    return go(0);
};
var findLastIndex = function (fn) {
    return function (xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
            return (length(xs) - 1 | 0) - v | 0;
        })(findIndex(fn)(reverse(xs)));
    };
};
var filterM = function (dictMonad) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Data_List_Types.Nil) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Types.Nil.value);
            };
            if (v1 instanceof Data_List_Types.Cons) {
                return Control_Bind.bind(dictMonad.Bind1())(v(v1.value0))(function (v2) {
                    return Control_Bind.bind(dictMonad.Bind1())(filterM(dictMonad)(v)(v1.value1))(function (v3) {
                        return Control_Applicative.pure(dictMonad.Applicative0())((function () {
                            if (v2) {
                                return new Data_List_Types.Cons(v1.value0, v3);
                            };
                            return v3;
                        })());
                    });
                });
            };
            throw new Error("Failed pattern match at Data.List line 403, column 1 - line 403, column 75: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var filter = function (p) {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return reverse(acc);
                };
                if (v instanceof Data_List_Types.Cons) {
                    if (p(v.value0)) {
                        $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                        $copy_v = v.value1;
                        return;
                    };
                    if (Data_Boolean.otherwise) {
                        $tco_var_acc = acc;
                        $copy_v = v.value1;
                        return;
                    };
                };
                throw new Error("Failed pattern match at Data.List line 390, column 3 - line 390, column 27: " + [ acc.constructor.name, v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
};
var intersectBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v1 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            if (v2 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            return filter(function (x) {
                return Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(v(x))(v2);
            })(v1);
        };
    };
};
var intersect = function (dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var nubBy = function (v) {
    return function (v1) {
        if (v1 instanceof Data_List_Types.Nil) {
            return Data_List_Types.Nil.value;
        };
        if (v1 instanceof Data_List_Types.Cons) {
            return new Data_List_Types.Cons(v1.value0, nubBy(v)(filter(function (y) {
                return !v(v1.value0)(y);
            })(v1.value1)));
        };
        throw new Error("Failed pattern match at Data.List line 634, column 1 - line 634, column 59: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var nub = function (dictEq) {
    return nubBy(Data_Eq.eq(dictEq));
};
var eqPattern = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            return Data_Eq.eq(Data_List_Types.eqList(dictEq))(x)(y);
        };
    });
};
var ordPattern = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqPattern(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            return Data_Ord.compare(Data_List_Types.ordList(dictOrd))(x)(y);
        };
    });
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function (p) {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Types.Cons && p(v.value0)) {
                $copy_v = v.value1;
                return;
            };
            $tco_done = true;
            return v;
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return go;
};
var dropEnd = function (n) {
    return function (xs) {
        return take(length(xs) - n | 0)(xs);
    };
};
var drop = function ($copy_v) {
    return function ($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
            if (v < 1) {
                $tco_done = true;
                return v1;
            };
            if (v1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return Data_List_Types.Nil.value;
            };
            if (v1 instanceof Data_List_Types.Cons) {
                $tco_var_v = v - 1 | 0;
                $copy_v1 = v1.value1;
                return;
            };
            throw new Error("Failed pattern match at Data.List line 543, column 1 - line 543, column 42: " + [ v.constructor.name, v1.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
        };
        return $tco_result;
    };
};
var slice = function (start) {
    return function (end) {
        return function (xs) {
            return take(end - start | 0)(drop(start)(xs));
        };
    };
};
var takeEnd = function (n) {
    return function (xs) {
        return drop(length(xs) - n | 0)(xs);
    };
};
var deleteBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            if (v2 instanceof Data_List_Types.Cons && v(v1)(v2.value0)) {
                return v2.value1;
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return new Data_List_Types.Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
            };
            throw new Error("Failed pattern match at Data.List line 661, column 1 - line 661, column 67: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Data_Semigroup.append(Data_List_Types.semigroupList)(xs)(Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var deleteAt = function (v) {
    return function (v1) {
        if (v === 0 && v1 instanceof Data_List_Types.Cons) {
            return new Data_Maybe.Just(v1.value1);
        };
        if (v1 instanceof Data_List_Types.Cons) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
                return new Data_List_Types.Cons(v1.value0, v2);
            })(deleteAt(v - 1 | 0)(v1.value1));
        };
        return Data_Maybe.Nothing.value;
    };
};
var $$delete = function (dictEq) {
    return deleteBy(Data_Eq.eq(dictEq));
};
var difference = function (dictEq) {
    return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
};
var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindList));
var concat = function (v) {
    return Control_Bind.bind(Data_List_Types.bindList)(v)(Control_Category.id(Control_Category.categoryFn));
};
var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
var alterAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0 && v2 instanceof Data_List_Types.Cons) {
                return Data_Maybe.Just.create((function () {
                    var v3 = v1(v2.value0);
                    if (v3 instanceof Data_Maybe.Nothing) {
                        return v2.value1;
                    };
                    if (v3 instanceof Data_Maybe.Just) {
                        return new Data_List_Types.Cons(v3.value0, v2.value1);
                    };
                    throw new Error("Failed pattern match at Data.List line 352, column 3 - line 354, column 23: " + [ v3.constructor.name ]);
                })());
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                    return new Data_List_Types.Cons(v2.value0, v3);
                })(alterAt(v - 1 | 0)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var modifyAt = function (n) {
    return function (f) {
        return alterAt(n)(function ($335) {
            return Data_Maybe.Just.create(f($335));
        });
    };
};
module.exports = {
    toUnfoldable: toUnfoldable,
    fromFoldable: fromFoldable,
    singleton: singleton,
    range: range,
    some: some,
    someRec: someRec,
    many: many,
    manyRec: manyRec,
    "null": $$null,
    length: length,
    snoc: snoc,
    insert: insert,
    insertBy: insertBy,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    unsnoc: unsnoc,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    deleteAt: deleteAt,
    updateAt: updateAt,
    modifyAt: modifyAt,
    alterAt: alterAt,
    reverse: reverse,
    concat: concat,
    concatMap: concatMap,
    filter: filter,
    filterM: filterM,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    mapWithIndex: mapWithIndex,
    sort: sort,
    sortBy: sortBy,
    Pattern: Pattern,
    stripPrefix: stripPrefix,
    slice: slice,
    take: take,
    takeEnd: takeEnd,
    takeWhile: takeWhile,
    drop: drop,
    dropEnd: dropEnd,
    dropWhile: dropWhile,
    span: span,
    group: group,
    "group'": group$prime,
    groupBy: groupBy,
    partition: partition,
    nub: nub,
    nubBy: nubBy,
    union: union,
    unionBy: unionBy,
    "delete": $$delete,
    deleteBy: deleteBy,
    difference: difference,
    intersect: intersect,
    intersectBy: intersectBy,
    zipWith: zipWith,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    transpose: transpose,
    foldM: foldM,
    eqPattern: eqPattern,
    ordPattern: ordPattern,
    newtypePattern: newtypePattern,
    showPattern: showPattern
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Lazy":17,"../Control.Monad.Rec.Class":51,"../Control.Semigroupoid":66,"../Data.Bifunctor":129,"../Data.Boolean":131,"../Data.Eq":157,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.FunctorWithIndex":182,"../Data.HeytingAlgebra":188,"../Data.List.Types":229,"../Data.Maybe":234,"../Data.Newtype":244,"../Data.NonEmpty":245,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Data.Traversable":296,"../Data.Tuple":298,"../Data.Unfoldable":300,"../Data.Unit":302,"../Prelude":358}],231:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_List = require("../Data.List");
var Data_List_Lazy = require("../Data.List.Lazy");
var Data_List_Lazy_Types = require("../Data.List.Lazy.Types");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Leaf = (function () {
    function Leaf() {

    };
    Leaf.value = new Leaf();
    return Leaf;
})();
var Two = (function () {
    function Two(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Two.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Two(value0, value1, value2, value3);
                };
            };
        };
    };
    return Two;
})();
var Three = (function () {
    function Three(value0, value1, value2, value3, value4, value5, value6) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
    };
    Three.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return function (value6) {
                                return new Three(value0, value1, value2, value3, value4, value5, value6);
                            };
                        };
                    };
                };
            };
        };
    };
    return Three;
})();
var TwoLeft = (function () {
    function TwoLeft(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoLeft(value0, value1, value2);
            };
        };
    };
    return TwoLeft;
})();
var TwoRight = (function () {
    function TwoRight(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoRight(value0, value1, value2);
            };
        };
    };
    return TwoRight;
})();
var ThreeLeft = (function () {
    function ThreeLeft(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeLeft;
})();
var ThreeMiddle = (function () {
    function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeMiddle.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeMiddle;
})();
var ThreeRight = (function () {
    function ThreeRight(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeRight(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeRight;
})();
var KickUp = (function () {
    function KickUp(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    KickUp.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new KickUp(value0, value1, value2, value3);
                };
            };
        };
    };
    return KickUp;
})();
var values = function (v) {
    if (v instanceof Leaf) {
        return Data_List_Types.Nil.value;
    };
    if (v instanceof Two) {
        return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
    };
    if (v instanceof Three) {
        return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
    };
    throw new Error("Failed pattern match at Data.Map line 590, column 1 - line 590, column 40: " + [ v.constructor.name ]);
};
var size = function (v) {
    if (v instanceof Leaf) {
        return 0;
    };
    if (v instanceof Two) {
        return (1 + size(v.value0) | 0) + size(v.value3) | 0;
    };
    if (v instanceof Three) {
        return ((2 + size(v.value0) | 0) + size(v.value3) | 0) + size(v.value6) | 0;
    };
    throw new Error("Failed pattern match at Data.Map line 617, column 1 - line 617, column 35: " + [ v.constructor.name ]);
};
var singleton = function (k) {
    return function (v) {
        return new Two(Leaf.value, k, v, Leaf.value);
    };
};
var toAscUnfoldable = function (dictUnfoldable) {
    return function (m) {
        var go = function ($copy_v) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                if (v instanceof Data_List_Types.Cons) {
                    if (v.value0 instanceof Leaf) {
                        $copy_v = v.value1;
                        return;
                    };
                    if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {
                        $tco_done = true;
                        return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));
                    };
                    if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
                        $tco_done = true;
                        return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                    };
                    if (v.value0 instanceof Two) {
                        $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                        return;
                    };
                    if (v.value0 instanceof Three) {
                        $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));
                        return;
                    };
                    throw new Error("Failed pattern match at Data.Map line 572, column 18 - line 581, column 71: " + [ v.value0.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.Map line 571, column 3 - line 571, column 19: " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($copy_v);
            };
            return $tco_result;
        };
        return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
    };
};
var toAscArray = toAscUnfoldable(Data_Unfoldable.unfoldableArray);
var toUnfoldable = function (dictUnfoldable) {
    return function (m) {
        var go = function ($copy_v) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                if (v instanceof Data_List_Types.Cons) {
                    if (v.value0 instanceof Leaf) {
                        $copy_v = v.value1;
                        return;
                    };
                    if (v.value0 instanceof Two) {
                        $tco_done = true;
                        return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(v.value0.value3, v.value1))));
                    };
                    if (v.value0 instanceof Three) {
                        $tco_done = true;
                        return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(v.value0.value6, v.value1))))));
                    };
                    throw new Error("Failed pattern match at Data.Map line 561, column 18 - line 566, column 77: " + [ v.value0.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.Map line 560, column 3 - line 560, column 19: " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($copy_v);
            };
            return $tco_result;
        };
        return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
    };
};
var showTree = function (dictShow) {
    return function (dictShow1) {
        return function (v) {
            if (v instanceof Leaf) {
                return "Leaf";
            };
            if (v instanceof Two) {
                return "Two (" + (showTree(dictShow)(dictShow1)(v.value0) + (") (" + (Data_Show.show(dictShow)(v.value1) + (") (" + (Data_Show.show(dictShow1)(v.value2) + (") (" + (showTree(dictShow)(dictShow1)(v.value3) + ")")))))));
            };
            if (v instanceof Three) {
                return "Three (" + (showTree(dictShow)(dictShow1)(v.value0) + (") (" + (Data_Show.show(dictShow)(v.value1) + (") (" + (Data_Show.show(dictShow1)(v.value2) + (") (" + (showTree(dictShow)(dictShow1)(v.value3) + (") (" + (Data_Show.show(dictShow)(v.value4) + (") (" + (Data_Show.show(dictShow1)(v.value5) + (") (" + (showTree(dictShow)(dictShow1)(v.value6) + ")")))))))))))));
            };
            throw new Error("Failed pattern match at Data.Map line 148, column 1 - line 148, column 62: " + [ v.constructor.name ]);
        };
    };
};
var showMap = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (m) {
            return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(dictShow)(dictShow1)))(toAscArray(m)) + ")");
        });
    };
};
var mapWithKey = function (v) {
    return function (v1) {
        if (v1 instanceof Leaf) {
            return Leaf.value;
        };
        if (v1 instanceof Two) {
            return new Two(mapWithKey(v)(v1.value0), v1.value1, v(v1.value1)(v1.value2), mapWithKey(v)(v1.value3));
        };
        if (v1 instanceof Three) {
            return new Three(mapWithKey(v)(v1.value0), v1.value1, v(v1.value1)(v1.value2), mapWithKey(v)(v1.value3), v1.value4, v(v1.value4)(v1.value5), mapWithKey(v)(v1.value6));
        };
        throw new Error("Failed pattern match at Data.Map line 623, column 1 - line 623, column 67: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var lookupLE = function (dictOrd) {
    return function (k) {
        var comp = Data_Ord.compare(dictOrd);
        var go = function (v) {
            if (v instanceof Leaf) {
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Two) {
                var v2 = comp(k)(v.value1);
                if (v2 instanceof Data_Ordering.EQ) {
                    return new Data_Maybe.Just({
                        key: v.value1,
                        value: v.value2
                    });
                };
                if (v2 instanceof Data_Ordering.GT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v.value1,
                        value: v.value2
                    })(go(v.value3)));
                };
                if (v2 instanceof Data_Ordering.LT) {
                    return go(v.value0);
                };
                throw new Error("Failed pattern match at Data.Map line 220, column 33 - line 223, column 20: " + [ v2.constructor.name ]);
            };
            if (v instanceof Three) {
                var v3 = comp(k)(v.value4);
                if (v3 instanceof Data_Ordering.EQ) {
                    return new Data_Maybe.Just({
                        key: v.value4,
                        value: v.value5
                    });
                };
                if (v3 instanceof Data_Ordering.GT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v.value4,
                        value: v.value5
                    })(go(v.value6)));
                };
                if (v3 instanceof Data_Ordering.LT) {
                    return go(new Two(v.value0, v.value1, v.value2, v.value3));
                };
                throw new Error("Failed pattern match at Data.Map line 224, column 45 - line 227, column 36: " + [ v3.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Map line 219, column 5 - line 219, column 22: " + [ v.constructor.name ]);
        };
        return go;
    };
};
var lookupGE = function (dictOrd) {
    return function (k) {
        var comp = Data_Ord.compare(dictOrd);
        var go = function (v) {
            if (v instanceof Leaf) {
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Two) {
                var v2 = comp(k)(v.value1);
                if (v2 instanceof Data_Ordering.EQ) {
                    return new Data_Maybe.Just({
                        key: v.value1,
                        value: v.value2
                    });
                };
                if (v2 instanceof Data_Ordering.LT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v.value1,
                        value: v.value2
                    })(go(v.value0)));
                };
                if (v2 instanceof Data_Ordering.GT) {
                    return go(v.value3);
                };
                throw new Error("Failed pattern match at Data.Map line 254, column 33 - line 257, column 21: " + [ v2.constructor.name ]);
            };
            if (v instanceof Three) {
                var v3 = comp(k)(v.value1);
                if (v3 instanceof Data_Ordering.EQ) {
                    return new Data_Maybe.Just({
                        key: v.value1,
                        value: v.value2
                    });
                };
                if (v3 instanceof Data_Ordering.LT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v.value1,
                        value: v.value2
                    })(go(v.value0)));
                };
                if (v3 instanceof Data_Ordering.GT) {
                    return go(new Two(v.value3, v.value4, v.value5, v.value6));
                };
                throw new Error("Failed pattern match at Data.Map line 258, column 45 - line 261, column 37: " + [ v3.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Map line 253, column 5 - line 253, column 22: " + [ v.constructor.name ]);
        };
        return go;
    };
};
var lookup = function (dictOrd) {
    return function (k) {
        var comp = Data_Ord.compare(dictOrd);
        var go = function ($copy_v) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v) {
                if (v instanceof Leaf) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                if (v instanceof Two) {
                    var v2 = comp(k)(v.value1);
                    if (v2 instanceof Data_Ordering.EQ) {
                        $tco_done = true;
                        return new Data_Maybe.Just(v.value2);
                    };
                    if (v2 instanceof Data_Ordering.LT) {
                        $copy_v = v.value0;
                        return;
                    };
                    $copy_v = v.value3;
                    return;
                };
                if (v instanceof Three) {
                    var v3 = comp(k)(v.value1);
                    if (v3 instanceof Data_Ordering.EQ) {
                        $tco_done = true;
                        return new Data_Maybe.Just(v.value2);
                    };
                    var v4 = comp(k)(v.value4);
                    if (v4 instanceof Data_Ordering.EQ) {
                        $tco_done = true;
                        return new Data_Maybe.Just(v.value5);
                    };
                    if (v3 instanceof Data_Ordering.LT) {
                        $copy_v = v.value0;
                        return;
                    };
                    if (v4 instanceof Data_Ordering.GT) {
                        $copy_v = v.value6;
                        return;
                    };
                    $copy_v = v.value3;
                    return;
                };
                throw new Error("Failed pattern match at Data.Map line 195, column 5 - line 195, column 22: " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($copy_v);
            };
            return $tco_result;
        };
        return go;
    };
};
var member = function (dictOrd) {
    return function (k) {
        return function (m) {
            return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
        };
    };
};
var keys = function (v) {
    if (v instanceof Leaf) {
        return Data_List_Types.Nil.value;
    };
    if (v instanceof Two) {
        return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
    };
    if (v instanceof Three) {
        return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
    };
    throw new Error("Failed pattern match at Data.Map line 584, column 1 - line 584, column 38: " + [ v.constructor.name ]);
};
var isSubmap = function (dictOrd) {
    return function (dictEq) {
        return function (m1) {
            return function (m2) {
                var f = function (v) {
                    return Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(lookup(dictOrd)(v.value0)(m2))(new Data_Maybe.Just(v.value1));
                };
                return Data_Foldable.all(Data_List_Lazy_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(f)(toUnfoldable(Data_List_Lazy_Types.unfoldableList)(m1));
            };
        };
    };
};
var isEmpty = function (v) {
    if (v instanceof Leaf) {
        return true;
    };
    return false;
};
var functorMap = new Data_Functor.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Leaf) {
            return Leaf.value;
        };
        if (v1 instanceof Two) {
            return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
        };
        if (v1 instanceof Three) {
            return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
        };
        throw new Error("Failed pattern match at Data.Map line 91, column 1 - line 91, column 39: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var functorWithIndexMap = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorMap;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Leaf) {
            return Leaf.value;
        };
        if (v1 instanceof Two) {
            return new Two(Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value0), v1.value1, v(v1.value1)(v1.value2), Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value3));
        };
        if (v1 instanceof Three) {
            return new Three(Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value0), v1.value1, v(v1.value1)(v1.value2), Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value3), v1.value4, v(v1.value4)(v1.value5), Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value6));
        };
        throw new Error("Failed pattern match at Data.Map line 96, column 1 - line 96, column 59: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var fromZipper = function ($copy_dictOrd) {
    return function ($copy_v) {
        return function ($copy_tree) {
            var $tco_var_dictOrd = $copy_dictOrd;
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(dictOrd, v, tree) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return tree;
                };
                if (v instanceof Data_List_Types.Cons) {
                    if (v.value0 instanceof TwoLeft) {
                        $tco_var_dictOrd = dictOrd;
                        $tco_var_v = v.value1;
                        $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                        return;
                    };
                    if (v.value0 instanceof TwoRight) {
                        $tco_var_dictOrd = dictOrd;
                        $tco_var_v = v.value1;
                        $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                        return;
                    };
                    if (v.value0 instanceof ThreeLeft) {
                        $tco_var_dictOrd = dictOrd;
                        $tco_var_v = v.value1;
                        $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                        return;
                    };
                    if (v.value0 instanceof ThreeMiddle) {
                        $tco_var_dictOrd = dictOrd;
                        $tco_var_v = v.value1;
                        $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                        return;
                    };
                    if (v.value0 instanceof ThreeRight) {
                        $tco_var_dictOrd = dictOrd;
                        $tco_var_v = v.value1;
                        $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                        return;
                    };
                    throw new Error("Failed pattern match at Data.Map line 413, column 3 - line 418, column 88: " + [ v.value0.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.Map line 410, column 1 - line 410, column 80: " + [ v.constructor.name, tree.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
            };
            return $tco_result;
        };
    };
};
var insert = function (dictOrd) {
    return function (k) {
        return function (v) {
            var up = function ($copy_v1) {
                return function ($copy_v2) {
                    var $tco_var_v1 = $copy_v1;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v1, v2) {
                        if (v1 instanceof Data_List_Types.Nil) {
                            $tco_done = true;
                            return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                        };
                        if (v1 instanceof Data_List_Types.Cons) {
                            if (v1.value0 instanceof TwoLeft) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                            };
                            if (v1.value0 instanceof TwoRight) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                            };
                            if (v1.value0 instanceof ThreeLeft) {
                                $tco_var_v1 = v1.value1;
                                $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                return;
                            };
                            if (v1.value0 instanceof ThreeMiddle) {
                                $tco_var_v1 = v1.value1;
                                $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                return;
                            };
                            if (v1.value0 instanceof ThreeRight) {
                                $tco_var_v1 = v1.value1;
                                $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                return;
                            };
                            throw new Error("Failed pattern match at Data.Map line 449, column 5 - line 454, column 108: " + [ v1.value0.constructor.name, v2.constructor.name ]);
                        };
                        throw new Error("Failed pattern match at Data.Map line 446, column 3 - line 446, column 56: " + [ v1.constructor.name, v2.constructor.name ]);
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                    };
                    return $tco_result;
                };
            };
            var comp = Data_Ord.compare(dictOrd);
            var down = function ($copy_ctx) {
                return function ($copy_v1) {
                    var $tco_var_ctx = $copy_ctx;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(ctx, v1) {
                        if (v1 instanceof Leaf) {
                            $tco_done = true;
                            return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                        };
                        if (v1 instanceof Two) {
                            var v2 = comp(k)(v1.value1);
                            if (v2 instanceof Data_Ordering.EQ) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                            };
                            if (v2 instanceof Data_Ordering.LT) {
                                $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                $copy_v1 = v1.value0;
                                return;
                            };
                            $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                            $copy_v1 = v1.value3;
                            return;
                        };
                        if (v1 instanceof Three) {
                            var v3 = comp(k)(v1.value1);
                            if (v3 instanceof Data_Ordering.EQ) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                            };
                            var v4 = comp(k)(v1.value4);
                            if (v4 instanceof Data_Ordering.EQ) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                            };
                            if (v3 instanceof Data_Ordering.LT) {
                                $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                $copy_v1 = v1.value0;
                                return;
                            };
                            if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                $copy_v1 = v1.value3;
                                return;
                            };
                            $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                            $copy_v1 = v1.value6;
                            return;
                        };
                        throw new Error("Failed pattern match at Data.Map line 429, column 3 - line 429, column 55: " + [ ctx.constructor.name, v1.constructor.name ]);
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                    };
                    return $tco_result;
                };
            };
            return down(Data_List_Types.Nil.value);
        };
    };
};
var pop = function (dictOrd) {
    return function (k) {
        var up = function (ctxs) {
            return function (tree) {
                if (ctxs instanceof Data_List_Types.Nil) {
                    return tree;
                };
                if (ctxs instanceof Data_List_Types.Cons) {
                    var __unused = function (dictPartial1) {
                        return function ($dollar57) {
                            return $dollar57;
                        };
                    };
                    return __unused()((function () {
                        if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                        };
                        if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                        };
                        if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                            return up(ctxs.value1)(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3));
                        };
                        if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                            return up(ctxs.value1)(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree));
                        };
                        if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                        };
                        if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                        };
                        if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                        };
                        if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                        };
                        if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                        };
                        if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                        };
                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                        };
                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                        };
                        if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                        };
                        if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                        };
                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                        };
                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                        };
                        if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                        };
                        throw new Error("Failed pattern match at Data.Map line 499, column 9 - line 516, column 136: " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                    })());
                };
                throw new Error("Failed pattern match at Data.Map line 496, column 5 - line 516, column 136: " + [ ctxs.constructor.name ]);
            };
        };
        var removeMaxNode = function (ctx) {
            return function (m) {
                var __unused = function (dictPartial1) {
                    return function ($dollar59) {
                        return $dollar59;
                    };
                };
                return __unused()((function () {
                    if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                        return up(ctx)(Leaf.value);
                    };
                    if (m instanceof Two) {
                        return removeMaxNode(new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx))(m.value3);
                    };
                    if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                        return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                    };
                    if (m instanceof Three) {
                        return removeMaxNode(new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx))(m.value6);
                    };
                    throw new Error("Failed pattern match at Data.Map line 528, column 5 - line 532, column 107: " + [ m.constructor.name ]);
                })());
            };
        };
        var maxNode = function (m) {
            var __unused = function (dictPartial1) {
                return function ($dollar61) {
                    return $dollar61;
                };
            };
            return __unused()((function () {
                if (m instanceof Two && m.value3 instanceof Leaf) {
                    return {
                        key: m.value1,
                        value: m.value2
                    };
                };
                if (m instanceof Two) {
                    return maxNode(m.value3);
                };
                if (m instanceof Three && m.value6 instanceof Leaf) {
                    return {
                        key: m.value4,
                        value: m.value5
                    };
                };
                if (m instanceof Three) {
                    return maxNode(m.value6);
                };
                throw new Error("Failed pattern match at Data.Map line 519, column 33 - line 523, column 45: " + [ m.constructor.name ]);
            })());
        };
        var comp = Data_Ord.compare(dictOrd);
        var down = function ($copy_ctx) {
            return function ($copy_m) {
                var $tco_var_ctx = $copy_ctx;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(ctx, m) {
                    if (m instanceof Leaf) {
                        $tco_done = true;
                        return Data_Maybe.Nothing.value;
                    };
                    if (m instanceof Two) {
                        var v = comp(k)(m.value1);
                        if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                            $tco_done = true;
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                        };
                        if (v instanceof Data_Ordering.EQ) {
                            var max = maxNode(m.value0);
                            $tco_done = true;
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                        };
                        if (v instanceof Data_Ordering.LT) {
                            $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                            $copy_m = m.value0;
                            return;
                        };
                        $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                        $copy_m = m.value3;
                        return;
                    };
                    if (m instanceof Three) {
                        var leaves = (function () {
                            if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                return true;
                            };
                            return false;
                        })();
                        var v = comp(k)(m.value4);
                        var v3 = comp(k)(m.value1);
                        if (leaves && v3 instanceof Data_Ordering.EQ) {
                            $tco_done = true;
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                        };
                        if (leaves && v instanceof Data_Ordering.EQ) {
                            $tco_done = true;
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                        };
                        if (v3 instanceof Data_Ordering.EQ) {
                            var max = maxNode(m.value0);
                            $tco_done = true;
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                        };
                        if (v instanceof Data_Ordering.EQ) {
                            var max = maxNode(m.value3);
                            $tco_done = true;
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                        };
                        if (v3 instanceof Data_Ordering.LT) {
                            $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                            $copy_m = m.value0;
                            return;
                        };
                        if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                            $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                            $copy_m = m.value3;
                            return;
                        };
                        $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                        $copy_m = m.value6;
                        return;
                    };
                    throw new Error("Failed pattern match at Data.Map line 469, column 34 - line 492, column 80: " + [ m.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                };
                return $tco_result;
            };
        };
        return down(Data_List_Types.Nil.value);
    };
};
var foldableMap = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (m) {
            return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
        };
    };
});
var traversableMap = new Data_Traversable.Traversable(function () {
    return foldableMap;
}, function () {
    return functorMap;
}, function (dictApplicative) {
    return Data_Traversable.traverse(traversableMap)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            if (v instanceof Leaf) {
                return Control_Applicative.pure(dictApplicative)(Leaf.value);
            };
            if (v instanceof Two) {
                return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Two.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value3));
            };
            if (v instanceof Three) {
                return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Three.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value3)))(Control_Applicative.pure(dictApplicative)(v.value4)))(f(v.value5)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value6));
            };
            throw new Error("Failed pattern match at Data.Map line 114, column 1 - line 114, column 47: " + [ f.constructor.name, v.constructor.name ]);
        };
    };
});
var foldSubmap = function (dictOrd) {
    return function (dictMonoid) {
        return function (kmin) {
            return function (kmax) {
                return function (f) {
                    var tooSmall = (function () {
                        if (kmin instanceof Data_Maybe.Just) {
                            return function (k) {
                                return Data_Ord.lessThan(dictOrd)(k)(kmin.value0);
                            };
                        };
                        if (kmin instanceof Data_Maybe.Nothing) {
                            return Data_Function["const"](false);
                        };
                        throw new Error("Failed pattern match at Data.Map line 314, column 7 - line 318, column 22: " + [ kmin.constructor.name ]);
                    })();
                    var tooLarge = (function () {
                        if (kmax instanceof Data_Maybe.Just) {
                            return function (k) {
                                return Data_Ord.greaterThan(dictOrd)(k)(kmax.value0);
                            };
                        };
                        if (kmax instanceof Data_Maybe.Nothing) {
                            return Data_Function["const"](false);
                        };
                        throw new Error("Failed pattern match at Data.Map line 321, column 7 - line 325, column 22: " + [ kmax.constructor.name ]);
                    })();
                    var inBounds = (function () {
                        if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Just) {
                            return function (k) {
                                return Data_Ord.lessThanOrEq(dictOrd)(kmin.value0)(k) && Data_Ord.lessThanOrEq(dictOrd)(k)(kmax.value0);
                            };
                        };
                        if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Nothing) {
                            return function (k) {
                                return Data_Ord.lessThanOrEq(dictOrd)(kmin.value0)(k);
                            };
                        };
                        if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Just) {
                            return function (k) {
                                return Data_Ord.lessThanOrEq(dictOrd)(k)(kmax.value0);
                            };
                        };
                        if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Nothing) {
                            return Data_Function["const"](true);
                        };
                        throw new Error("Failed pattern match at Data.Map line 328, column 7 - line 336, column 21: " + [ kmin.constructor.name, kmax.constructor.name ]);
                    })();
                    var go = function (v) {
                        if (v instanceof Leaf) {
                            return Data_Monoid.mempty(dictMonoid);
                        };
                        if (v instanceof Two) {
                            return Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                var $637 = tooSmall(v.value1);
                                if ($637) {
                                    return Data_Monoid.mempty(dictMonoid);
                                };
                                return go(v.value0);
                            })())(Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                var $638 = inBounds(v.value1);
                                if ($638) {
                                    return f(v.value1)(v.value2);
                                };
                                return Data_Monoid.mempty(dictMonoid);
                            })())((function () {
                                var $639 = tooLarge(v.value1);
                                if ($639) {
                                    return Data_Monoid.mempty(dictMonoid);
                                };
                                return go(v.value3);
                            })()));
                        };
                        if (v instanceof Three) {
                            return Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                var $644 = tooSmall(v.value1);
                                if ($644) {
                                    return Data_Monoid.mempty(dictMonoid);
                                };
                                return go(v.value0);
                            })())(Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                var $645 = inBounds(v.value1);
                                if ($645) {
                                    return f(v.value1)(v.value2);
                                };
                                return Data_Monoid.mempty(dictMonoid);
                            })())(Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                var $646 = tooSmall(v.value4) || tooLarge(v.value1);
                                if ($646) {
                                    return Data_Monoid.mempty(dictMonoid);
                                };
                                return go(v.value3);
                            })())(Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                var $647 = inBounds(v.value4);
                                if ($647) {
                                    return f(v.value4)(v.value5);
                                };
                                return Data_Monoid.mempty(dictMonoid);
                            })())((function () {
                                var $648 = tooLarge(v.value4);
                                if ($648) {
                                    return Data_Monoid.mempty(dictMonoid);
                                };
                                return go(v.value6);
                            })()))));
                        };
                        throw new Error("Failed pattern match at Data.Map line 354, column 10 - line 366, column 54: " + [ v.constructor.name ]);
                    };
                    return go;
                };
            };
        };
    };
};
var findMin = (function () {
    var go = function ($copy_v) {
        return function ($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v1 instanceof Leaf) {
                    $tco_done = true;
                    return v;
                };
                if (v1 instanceof Two) {
                    $tco_var_v = new Data_Maybe.Just({
                        key: v1.value1,
                        value: v1.value2
                    });
                    $copy_v1 = v1.value0;
                    return;
                };
                if (v1 instanceof Three) {
                    $tco_var_v = new Data_Maybe.Just({
                        key: v1.value1,
                        value: v1.value2
                    });
                    $copy_v1 = v1.value0;
                    return;
                };
                throw new Error("Failed pattern match at Data.Map line 292, column 5 - line 292, column 22: " + [ v.constructor.name, v1.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
            };
            return $tco_result;
        };
    };
    return go(Data_Maybe.Nothing.value);
})();
var lookupGT = function (dictOrd) {
    return function (k) {
        var comp = Data_Ord.compare(dictOrd);
        var go = function (v) {
            if (v instanceof Leaf) {
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Two) {
                var v2 = comp(k)(v.value1);
                if (v2 instanceof Data_Ordering.EQ) {
                    return findMin(v.value3);
                };
                if (v2 instanceof Data_Ordering.LT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v.value1,
                        value: v.value2
                    })(go(v.value0)));
                };
                if (v2 instanceof Data_Ordering.GT) {
                    return go(v.value3);
                };
                throw new Error("Failed pattern match at Data.Map line 271, column 33 - line 274, column 21: " + [ v2.constructor.name ]);
            };
            if (v instanceof Three) {
                var v3 = comp(k)(v.value1);
                if (v3 instanceof Data_Ordering.EQ) {
                    return findMin(new Two(v.value3, v.value4, v.value5, v.value6));
                };
                if (v3 instanceof Data_Ordering.LT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v.value1,
                        value: v.value2
                    })(go(v.value0)));
                };
                if (v3 instanceof Data_Ordering.GT) {
                    return go(new Two(v.value3, v.value4, v.value5, v.value6));
                };
                throw new Error("Failed pattern match at Data.Map line 275, column 45 - line 278, column 37: " + [ v3.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Map line 270, column 5 - line 270, column 22: " + [ v.constructor.name ]);
        };
        return go;
    };
};
var findMax = (function () {
    var go = function ($copy_v) {
        return function ($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v1 instanceof Leaf) {
                    $tco_done = true;
                    return v;
                };
                if (v1 instanceof Two) {
                    $tco_var_v = new Data_Maybe.Just({
                        key: v1.value1,
                        value: v1.value2
                    });
                    $copy_v1 = v1.value3;
                    return;
                };
                if (v1 instanceof Three) {
                    $tco_var_v = new Data_Maybe.Just({
                        key: v1.value4,
                        value: v1.value5
                    });
                    $copy_v1 = v1.value6;
                    return;
                };
                throw new Error("Failed pattern match at Data.Map line 284, column 5 - line 284, column 22: " + [ v.constructor.name, v1.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
            };
            return $tco_result;
        };
    };
    return go(Data_Maybe.Nothing.value);
})();
var lookupLT = function (dictOrd) {
    return function (k) {
        var comp = Data_Ord.compare(dictOrd);
        var go = function (v) {
            if (v instanceof Leaf) {
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Two) {
                var v2 = comp(k)(v.value1);
                if (v2 instanceof Data_Ordering.EQ) {
                    return findMax(v.value0);
                };
                if (v2 instanceof Data_Ordering.GT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v.value1,
                        value: v.value2
                    })(go(v.value3)));
                };
                if (v2 instanceof Data_Ordering.LT) {
                    return go(v.value0);
                };
                throw new Error("Failed pattern match at Data.Map line 237, column 33 - line 240, column 20: " + [ v2.constructor.name ]);
            };
            if (v instanceof Three) {
                var v3 = comp(k)(v.value4);
                if (v3 instanceof Data_Ordering.EQ) {
                    return findMax(new Two(v.value0, v.value1, v.value2, v.value3));
                };
                if (v3 instanceof Data_Ordering.GT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v.value4,
                        value: v.value5
                    })(go(v.value6)));
                };
                if (v3 instanceof Data_Ordering.LT) {
                    return go(new Two(v.value0, v.value1, v.value2, v.value3));
                };
                throw new Error("Failed pattern match at Data.Map line 241, column 45 - line 244, column 36: " + [ v3.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Map line 236, column 5 - line 236, column 22: " + [ v.constructor.name ]);
        };
        return go;
    };
};
var eqMap = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (m1) {
            return function (m2) {
                return Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(dictEq)(dictEq1)))(toAscArray(m1))(toAscArray(m2));
            };
        });
    };
};
var ordMap = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqMap(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function (m1) {
            return function (m2) {
                return Data_Ord.compare(Data_Ord.ordArray(Data_Tuple.ordTuple(dictOrd)(dictOrd1)))(toAscArray(m1))(toAscArray(m2));
            };
        });
    };
};
var eq1Map = function (dictEq) {
    return new Data_Eq.Eq1(function (dictEq1) {
        return Data_Eq.eq(eqMap(dictEq)(dictEq1));
    });
};
var ord1Map = function (dictOrd) {
    return new Data_Ord.Ord1(function () {
        return eq1Map(dictOrd.Eq0());
    }, function (dictOrd1) {
        return Data_Ord.compare(ordMap(dictOrd)(dictOrd1));
    });
};
var empty = Leaf.value;
var fromFoldable = function (dictOrd) {
    return function (dictFoldable) {
        return Data_Foldable.foldl(dictFoldable)(function (m) {
            return function (v) {
                return insert(dictOrd)(v.value0)(v.value1)(m);
            };
        })(empty);
    };
};
var filterWithKey = function (dictOrd) {
    return function (predicate) {
        return function ($750) {
            return fromFoldable(dictOrd)(Data_List_Lazy_Types.foldableList)(Data_List_Lazy.filter(Data_Tuple.uncurry(predicate))(toUnfoldable(Data_List_Lazy_Types.unfoldableList)($750)));
        };
    };
};
var filter = function (dictOrd) {
    return function (predicate) {
        return filterWithKey(dictOrd)(Data_Function["const"](predicate));
    };
};
var filterKeys = function (dictOrd) {
    return function (predicate) {
        return filterWithKey(dictOrd)(function ($751) {
            return Data_Function["const"](predicate($751));
        });
    };
};
var $$delete = function (dictOrd) {
    return function (k) {
        return function (m) {
            return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
        };
    };
};
var checkValid = function (tree) {
    var allHeights = function (v) {
        if (v instanceof Leaf) {
            return Control_Applicative.pure(Data_List_Types.applicativeList)(0);
        };
        if (v instanceof Two) {
            return Data_Functor.map(Data_List_Types.functorList)(function (n) {
                return n + 1 | 0;
            })(Data_Semigroup.append(Data_List_Types.semigroupList)(allHeights(v.value0))(allHeights(v.value3)));
        };
        if (v instanceof Three) {
            return Data_Functor.map(Data_List_Types.functorList)(function (n) {
                return n + 1 | 0;
            })(Data_Semigroup.append(Data_List_Types.semigroupList)(allHeights(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(allHeights(v.value3))(allHeights(v.value6))));
        };
        throw new Error("Failed pattern match at Data.Map line 183, column 3 - line 183, column 36: " + [ v.constructor.name ]);
    };
    return Data_List.length(Data_List.nub(Data_Eq.eqInt)(allHeights(tree))) === 1;
};
var asList = Control_Category.id(Control_Category.categoryFn);
var foldableWithIndexMap = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableMap;
}, function (dictMonoid) {
    return function (f) {
        return function (m) {
            return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(Data_Tuple.uncurry(f))(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldl(Data_List_Types.foldableList)(function ($752) {
                return Data_Tuple.uncurry(Data_Function.flip(f)($752));
            })(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_Tuple.uncurry(f))(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
        };
    };
});
var traversableWithIndexMap = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexMap;
}, function () {
    return functorWithIndexMap;
}, function () {
    return traversableMap;
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            if (v instanceof Leaf) {
                return Control_Applicative.pure(dictApplicative)(Leaf.value);
            };
            if (v instanceof Two) {
                return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Two.create)(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value1)(v.value2)))(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value3));
            };
            if (v instanceof Three) {
                return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Three.create)(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value1)(v.value2)))(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value3)))(Control_Applicative.pure(dictApplicative)(v.value4)))(f(v.value4)(v.value5)))(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value6));
            };
            throw new Error("Failed pattern match at Data.Map line 131, column 1 - line 131, column 67: " + [ f.constructor.name, v.constructor.name ]);
        };
    };
});
var alter = function (dictOrd) {
    return function (f) {
        return function (k) {
            return function (m) {
                var v = f(lookup(dictOrd)(k)(m));
                if (v instanceof Data_Maybe.Nothing) {
                    return $$delete(dictOrd)(k)(m);
                };
                if (v instanceof Data_Maybe.Just) {
                    return insert(dictOrd)(k)(v.value0)(m);
                };
                throw new Error("Failed pattern match at Data.Map line 537, column 15 - line 539, column 25: " + [ v.constructor.name ]);
            };
        };
    };
};
var fromFoldableWith = function (dictOrd) {
    return function (dictFoldable) {
        return function (f) {
            var combine = function (v) {
                return function (v1) {
                    if (v1 instanceof Data_Maybe.Just) {
                        return Data_Maybe.Just.create(f(v)(v1.value0));
                    };
                    if (v1 instanceof Data_Maybe.Nothing) {
                        return new Data_Maybe.Just(v);
                    };
                    throw new Error("Failed pattern match at Data.Map line 554, column 3 - line 554, column 38: " + [ v.constructor.name, v1.constructor.name ]);
                };
            };
            return Data_Foldable.foldl(dictFoldable)(function (m) {
                return function (v) {
                    return alter(dictOrd)(combine(v.value1))(v.value0)(m);
                };
            })(empty);
        };
    };
};
var unionWith = function (dictOrd) {
    return function (f) {
        return function (m1) {
            return function (m2) {
                var go = function (m) {
                    return function (v) {
                        return alter(dictOrd)(function ($753) {
                            return Data_Maybe.Just.create(Data_Maybe.maybe(v.value1)(f(v.value1))($753));
                        })(v.value0)(m);
                    };
                };
                return Data_Foldable.foldl(Data_List_Types.foldableList)(go)(m2)(toUnfoldable(Data_List_Types.unfoldableList)(m1));
            };
        };
    };
};
var union = function (dictOrd) {
    return unionWith(dictOrd)(Data_Function["const"]);
};
var semigroupMap = function (dictOrd) {
    return new Data_Semigroup.Semigroup(union(dictOrd));
};
var monoidMap = function (dictOrd) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMap(dictOrd);
    }, empty);
};
var submap = function (dictOrd) {
    return function (kmin) {
        return function (kmax) {
            return foldSubmap(dictOrd)(monoidMap(dictOrd))(kmin)(kmax)(singleton);
        };
    };
};
var unions = function (dictOrd) {
    return function (dictFoldable) {
        return Data_Foldable.foldl(dictFoldable)(union(dictOrd))(empty);
    };
};
var update = function (dictOrd) {
    return function (f) {
        return function (k) {
            return function (m) {
                return alter(dictOrd)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
};
module.exports = {
    showTree: showTree,
    empty: empty,
    isEmpty: isEmpty,
    singleton: singleton,
    checkValid: checkValid,
    insert: insert,
    lookup: lookup,
    lookupLE: lookupLE,
    lookupLT: lookupLT,
    lookupGE: lookupGE,
    lookupGT: lookupGT,
    findMin: findMin,
    findMax: findMax,
    foldSubmap: foldSubmap,
    submap: submap,
    fromFoldable: fromFoldable,
    fromFoldableWith: fromFoldableWith,
    toUnfoldable: toUnfoldable,
    toAscUnfoldable: toAscUnfoldable,
    "delete": $$delete,
    pop: pop,
    member: member,
    alter: alter,
    update: update,
    keys: keys,
    values: values,
    union: union,
    unionWith: unionWith,
    unions: unions,
    isSubmap: isSubmap,
    size: size,
    mapWithKey: mapWithKey,
    filterWithKey: filterWithKey,
    filterKeys: filterKeys,
    filter: filter,
    eq1Map: eq1Map,
    eqMap: eqMap,
    ord1Map: ord1Map,
    ordMap: ordMap,
    showMap: showMap,
    semigroupMap: semigroupMap,
    monoidMap: monoidMap,
    functorMap: functorMap,
    functorWithIndexMap: functorWithIndexMap,
    foldableMap: foldableMap,
    foldableWithIndexMap: foldableWithIndexMap,
    traversableMap: traversableMap,
    traversableWithIndexMap: traversableWithIndexMap
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Eq":157,"../Data.Foldable":164,"../Data.FoldableWithIndex":165,"../Data.Function":172,"../Data.Functor":180,"../Data.FunctorWithIndex":182,"../Data.HeytingAlgebra":188,"../Data.List":230,"../Data.List.Lazy":227,"../Data.List.Lazy.Types":226,"../Data.List.Types":229,"../Data.Maybe":234,"../Data.Monoid":242,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Data.Traversable":296,"../Data.TraversableWithIndex":297,"../Data.Tuple":298,"../Data.Unfoldable":300,"../Partial.Unsafe":355,"../Prelude":358}],232:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var First = function (x) {
    return x;
};
var showFirst = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "First (" + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof Data_Maybe.Just) {
            return v;
        };
        return v1;
    };
});
var ordFirst = function (dictOrd) {
    return Data_Maybe.ordMaybe(dictOrd);
};
var ord1First = Data_Maybe.ord1Maybe;
var newtypeFirst = new Data_Newtype.Newtype(function (n) {
    return n;
}, First);
var monoidFirst = new Data_Monoid.Monoid(function () {
    return semigroupFirst;
}, Data_Maybe.Nothing.value);
var monadFirst = Data_Maybe.monadMaybe;
var invariantFirst = Data_Maybe.invariantMaybe;
var functorFirst = Data_Maybe.functorMaybe;
var extendFirst = Data_Maybe.extendMaybe;
var eqFirst = function (dictEq) {
    return Data_Maybe.eqMaybe(dictEq);
};
var eq1First = Data_Maybe.eq1Maybe;
var boundedFirst = function (dictBounded) {
    return Data_Maybe.boundedMaybe(dictBounded);
};
var bindFirst = Data_Maybe.bindMaybe;
var applyFirst = Data_Maybe.applyMaybe;
var applicativeFirst = Data_Maybe.applicativeMaybe;
module.exports = {
    First: First,
    newtypeFirst: newtypeFirst,
    eqFirst: eqFirst,
    eq1First: eq1First,
    ordFirst: ordFirst,
    ord1First: ord1First,
    boundedFirst: boundedFirst,
    functorFirst: functorFirst,
    invariantFirst: invariantFirst,
    applyFirst: applyFirst,
    applicativeFirst: applicativeFirst,
    bindFirst: bindFirst,
    monadFirst: monadFirst,
    extendFirst: extendFirst,
    showFirst: showFirst,
    semigroupFirst: semigroupFirst,
    monoidFirst: monoidFirst
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Extend":16,"../Control.Monad":60,"../Data.Bounded":134,"../Data.Eq":157,"../Data.Functor":180,"../Data.Functor.Invariant":178,"../Data.Maybe":234,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Semigroup":271,"../Data.Show":276,"../Prelude":358}],233:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Last = function (x) {
    return x;
};
var showLast = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Last " + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupLast = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v1 instanceof Data_Maybe.Just) {
            return v1;
        };
        if (v1 instanceof Data_Maybe.Nothing) {
            return v;
        };
        throw new Error("Failed pattern match at Data.Maybe.Last line 53, column 1 - line 53, column 45: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var ordLast = function (dictOrd) {
    return Data_Maybe.ordMaybe(dictOrd);
};
var ord1Last = Data_Maybe.ord1Maybe;
var newtypeLast = new Data_Newtype.Newtype(function (n) {
    return n;
}, Last);
var monoidLast = new Data_Monoid.Monoid(function () {
    return semigroupLast;
}, Data_Maybe.Nothing.value);
var monadLast = Data_Maybe.monadMaybe;
var invariantLast = Data_Maybe.invariantMaybe;
var functorLast = Data_Maybe.functorMaybe;
var extendLast = Data_Maybe.extendMaybe;
var eqLast = function (dictEq) {
    return Data_Maybe.eqMaybe(dictEq);
};
var eq1Last = Data_Maybe.eq1Maybe;
var boundedLast = function (dictBounded) {
    return Data_Maybe.boundedMaybe(dictBounded);
};
var bindLast = Data_Maybe.bindMaybe;
var applyLast = Data_Maybe.applyMaybe;
var applicativeLast = Data_Maybe.applicativeMaybe;
module.exports = {
    Last: Last,
    newtypeLast: newtypeLast,
    eqLast: eqLast,
    eq1Last: eq1Last,
    ordLast: ordLast,
    ord1Last: ord1Last,
    boundedLast: boundedLast,
    functorLast: functorLast,
    invariantLast: invariantLast,
    applyLast: applyLast,
    applicativeLast: applicativeLast,
    bindLast: bindLast,
    monadLast: monadLast,
    extendLast: extendLast,
    showLast: showLast,
    semigroupLast: semigroupLast,
    monoidLast: monoidLast
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Extend":16,"../Control.Monad":60,"../Data.Bounded":134,"../Data.Eq":157,"../Data.Functor":180,"../Data.Functor.Invariant":178,"../Data.Maybe":234,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Semigroup":271,"../Data.Show":276,"../Prelude":358}],234:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Nothing = (function () {
    function Nothing() {

    };
    Nothing.value = new Nothing();
    return Nothing;
})();
var Just = (function () {
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    return Just;
})();
var showMaybe = function (dictShow) {
    return new Data_Show.Show(function (v) {
        if (v instanceof Just) {
            return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
        };
        if (v instanceof Nothing) {
            return "Nothing";
        };
        throw new Error("Failed pattern match at Data.Maybe line 207, column 1 - line 207, column 47: " + [ v.constructor.name ]);
    });
};
var semigroupMaybe = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            if (v instanceof Nothing) {
                return v1;
            };
            if (v1 instanceof Nothing) {
                return v;
            };
            if (v instanceof Just && v1 instanceof Just) {
                return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Maybe line 176, column 1 - line 176, column 62: " + [ v.constructor.name, v1.constructor.name ]);
        };
    });
};
var monoidMaybe = function (dictSemigroup) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMaybe(dictSemigroup);
    }, Nothing.value);
};
var maybe$prime = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nothing) {
                return v(Data_Unit.unit);
            };
            if (v2 instanceof Just) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 232, column 1 - line 232, column 62: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var maybe = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nothing) {
                return v;
            };
            if (v2 instanceof Just) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 219, column 1 - line 219, column 51: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var isNothing = maybe(true)(Data_Function["const"](false));
var isJust = maybe(false)(Data_Function["const"](true));
var functorMaybe = new Data_Functor.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Just) {
            return new Just(v(v1.value0));
        };
        return Nothing.value;
    };
});
var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
var fromMaybe$prime = function (a) {
    return maybe$prime(a)(Control_Category.id(Control_Category.categoryFn));
};
var fromMaybe = function (a) {
    return maybe(a)(Control_Category.id(Control_Category.categoryFn));
};
var fromJust = function (dictPartial) {
    return function (v) {
        var __unused = function (dictPartial1) {
            return function ($dollar34) {
                return $dollar34;
            };
        };
        return __unused(dictPartial)((function () {
            if (v instanceof Just) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Data.Maybe line 270, column 1 - line 270, column 46: " + [ v.constructor.name ]);
        })());
    };
};
var extendMaybe = new Control_Extend.Extend(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Nothing) {
            return Nothing.value;
        };
        return new Just(v(v1));
    };
});
var eqMaybe = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            if (x instanceof Nothing && y instanceof Nothing) {
                return true;
            };
            if (x instanceof Just && y instanceof Just) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0);
            };
            return false;
        };
    });
};
var ordMaybe = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqMaybe(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            if (x instanceof Nothing && y instanceof Nothing) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Nothing) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Nothing) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof Just && y instanceof Just) {
                return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 196, column 8 - line 196, column 51: " + [ x.constructor.name, y.constructor.name ]);
        };
    });
};
var eq1Maybe = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqMaybe(dictEq));
});
var ord1Maybe = new Data_Ord.Ord1(function () {
    return eq1Maybe;
}, function (dictOrd) {
    return Data_Ord.compare(ordMaybe(dictOrd));
});
var boundedMaybe = function (dictBounded) {
    return new Data_Bounded.Bounded(function () {
        return ordMaybe(dictBounded.Ord0());
    }, Nothing.value, new Just(Data_Bounded.top(dictBounded)));
};
var applyMaybe = new Control_Apply.Apply(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Just) {
            return Data_Functor.map(functorMaybe)(v.value0)(v1);
        };
        if (v instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 68, column 1 - line 68, column 35: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindMaybe = new Control_Bind.Bind(function () {
    return applyMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Just) {
            return v1(v.value0);
        };
        if (v instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 127, column 1 - line 127, column 33: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var applicativeMaybe = new Control_Applicative.Applicative(function () {
    return applyMaybe;
}, Just.create);
var monadMaybe = new Control_Monad.Monad(function () {
    return applicativeMaybe;
}, function () {
    return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Nothing) {
            return v1;
        };
        return v;
    };
});
var plusMaybe = new Control_Plus.Plus(function () {
    return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
    return applicativeMaybe;
}, function () {
    return plusMaybe;
});
var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
    return alternativeMaybe;
}, function () {
    return monadMaybe;
});
module.exports = {
    Nothing: Nothing,
    Just: Just,
    maybe: maybe,
    "maybe'": maybe$prime,
    fromMaybe: fromMaybe,
    "fromMaybe'": fromMaybe$prime,
    isJust: isJust,
    isNothing: isNothing,
    fromJust: fromJust,
    functorMaybe: functorMaybe,
    applyMaybe: applyMaybe,
    applicativeMaybe: applicativeMaybe,
    altMaybe: altMaybe,
    plusMaybe: plusMaybe,
    alternativeMaybe: alternativeMaybe,
    bindMaybe: bindMaybe,
    monadMaybe: monadMaybe,
    monadZeroMaybe: monadZeroMaybe,
    extendMaybe: extendMaybe,
    invariantMaybe: invariantMaybe,
    semigroupMaybe: semigroupMaybe,
    monoidMaybe: monoidMaybe,
    eqMaybe: eqMaybe,
    eq1Maybe: eq1Maybe,
    ordMaybe: ordMaybe,
    ord1Maybe: ord1Maybe,
    boundedMaybe: boundedMaybe,
    showMaybe: showMaybe
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Extend":16,"../Control.Monad":60,"../Control.MonadZero":62,"../Control.Plus":65,"../Data.Bounded":134,"../Data.Eq":157,"../Data.Function":172,"../Data.Functor":180,"../Data.Functor.Invariant":178,"../Data.Monoid":242,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Semigroup":271,"../Data.Show":276,"../Data.Unit":302,"../Prelude":358}],235:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Eq = require("../Data.Eq");
var Data_Generic = require("../Data.Generic");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var MediaType = function (x) {
    return x;
};
var showMediaType = new Data_Show.Show(function (v) {
    return "(MediaType " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var newtypeMediaType = new Data_Newtype.Newtype(function (n) {
    return n;
}, MediaType);
var genericMediaType = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.MediaType.MediaType" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(MediaType))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.MediaType.MediaType", [ {
        sigConstructor: "Data.MediaType.MediaType",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.MediaType.MediaType", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v);
    } ]);
});
var eqMediaType = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordMediaType = new Data_Ord.Ord(function () {
    return eqMediaType;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
module.exports = {
    MediaType: MediaType,
    newtypeMediaType: newtypeMediaType,
    eqMediaType: eqMediaType,
    ordMediaType: ordMediaType,
    genericMediaType: genericMediaType,
    showMediaType: showMediaType
};

},{"../Control.Apply":7,"../Data.Eq":157,"../Data.Generic":186,"../Data.Maybe":234,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Semigroup":271,"../Data.Show":276,"../Data.Unit":302,"../Prelude":358}],236:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Additive = function (x) {
    return x;
};
var showAdditive = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Additive " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupAdditive = function (dictSemiring) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semiring.add(dictSemiring)(v)(v1);
        };
    });
};
var ordAdditive = function (dictOrd) {
    return dictOrd;
};
var newtypeAdditive = new Data_Newtype.Newtype(function (n) {
    return n;
}, Additive);
var monoidAdditive = function (dictSemiring) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAdditive(dictSemiring);
    }, Data_Semiring.zero(dictSemiring));
};
var invariantAdditive = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorAdditive = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendAdditive = new Control_Extend.Extend(function () {
    return functorAdditive;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqAdditive = function (dictEq) {
    return dictEq;
};
var comonadAdditive = new Control_Comonad.Comonad(function () {
    return extendAdditive;
}, Data_Newtype.unwrap(newtypeAdditive));
var boundedAdditive = function (dictBounded) {
    return dictBounded;
};
var applyAdditive = new Control_Apply.Apply(function () {
    return functorAdditive;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindAdditive = new Control_Bind.Bind(function () {
    return applyAdditive;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeAdditive = new Control_Applicative.Applicative(function () {
    return applyAdditive;
}, Additive);
var monadAdditive = new Control_Monad.Monad(function () {
    return applicativeAdditive;
}, function () {
    return bindAdditive;
});
module.exports = {
    Additive: Additive,
    newtypeAdditive: newtypeAdditive,
    eqAdditive: eqAdditive,
    ordAdditive: ordAdditive,
    boundedAdditive: boundedAdditive,
    functorAdditive: functorAdditive,
    invariantAdditive: invariantAdditive,
    applyAdditive: applyAdditive,
    applicativeAdditive: applicativeAdditive,
    bindAdditive: bindAdditive,
    monadAdditive: monadAdditive,
    extendAdditive: extendAdditive,
    comonadAdditive: comonadAdditive,
    showAdditive: showAdditive,
    semigroupAdditive: semigroupAdditive,
    monoidAdditive: monoidAdditive
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Comonad":13,"../Control.Extend":16,"../Control.Monad":60,"../Data.Bounded":134,"../Data.Eq":157,"../Data.Functor":180,"../Data.Functor.Invariant":178,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Prelude":358}],237:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Conj = function (x) {
    return x;
};
var showConj = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Conj " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringConj = function (dictHeytingAlgebra) {
    return new Data_Semiring.Semiring(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};
var semigroupConj = function (dictHeytingAlgebra) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    });
};
var ordConj = function (dictOrd) {
    return dictOrd;
};
var newtypeConj = new Data_Newtype.Newtype(function (n) {
    return n;
}, Conj);
var monoidConj = function (dictHeytingAlgebra) {
    return new Data_Monoid.Monoid(function () {
        return semigroupConj(dictHeytingAlgebra);
    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};
var invariantConj = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorConj = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendConj = new Control_Extend.Extend(function () {
    return functorConj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqConj = function (dictEq) {
    return dictEq;
};
var comonadConj = new Control_Comonad.Comonad(function () {
    return extendConj;
}, Data_Newtype.unwrap(newtypeConj));
var boundedConj = function (dictBounded) {
    return dictBounded;
};
var applyConj = new Control_Apply.Apply(function () {
    return functorConj;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindConj = new Control_Bind.Bind(function () {
    return applyConj;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeConj = new Control_Applicative.Applicative(function () {
    return applyConj;
}, Conj);
var monadConj = new Control_Monad.Monad(function () {
    return applicativeConj;
}, function () {
    return bindConj;
});
module.exports = {
    Conj: Conj,
    newtypeConj: newtypeConj,
    eqConj: eqConj,
    ordConj: ordConj,
    boundedConj: boundedConj,
    functorConj: functorConj,
    invariantConj: invariantConj,
    applyConj: applyConj,
    applicativeConj: applicativeConj,
    bindConj: bindConj,
    monadConj: monadConj,
    extendConj: extendConj,
    comonadConj: comonadConj,
    showConj: showConj,
    semigroupConj: semigroupConj,
    monoidConj: monoidConj,
    semiringConj: semiringConj
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Comonad":13,"../Control.Extend":16,"../Control.Monad":60,"../Data.Bounded":134,"../Data.Eq":157,"../Data.Functor":180,"../Data.Functor.Invariant":178,"../Data.HeytingAlgebra":188,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Prelude":358}],238:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Disj = function (x) {
    return x;
};
var showDisj = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Disj " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringDisj = function (dictHeytingAlgebra) {
    return new Data_Semiring.Semiring(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};
var semigroupDisj = function (dictHeytingAlgebra) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    });
};
var ordDisj = function (dictOrd) {
    return dictOrd;
};
var newtypeDisj = new Data_Newtype.Newtype(function (n) {
    return n;
}, Disj);
var monoidDisj = function (dictHeytingAlgebra) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDisj(dictHeytingAlgebra);
    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};
var invariantDisj = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorDisj = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendDisj = new Control_Extend.Extend(function () {
    return functorDisj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDisj = function (dictEq) {
    return dictEq;
};
var comonadDisj = new Control_Comonad.Comonad(function () {
    return extendDisj;
}, Data_Newtype.unwrap(newtypeDisj));
var boundedDisj = function (dictBounded) {
    return dictBounded;
};
var applyDisj = new Control_Apply.Apply(function () {
    return functorDisj;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindDisj = new Control_Bind.Bind(function () {
    return applyDisj;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeDisj = new Control_Applicative.Applicative(function () {
    return applyDisj;
}, Disj);
var monadDisj = new Control_Monad.Monad(function () {
    return applicativeDisj;
}, function () {
    return bindDisj;
});
module.exports = {
    Disj: Disj,
    newtypeDisj: newtypeDisj,
    eqDisj: eqDisj,
    ordDisj: ordDisj,
    boundedDisj: boundedDisj,
    functorDisj: functorDisj,
    invariantDisj: invariantDisj,
    applyDisj: applyDisj,
    applicativeDisj: applicativeDisj,
    bindDisj: bindDisj,
    monadDisj: monadDisj,
    extendDisj: extendDisj,
    comonadDisj: comonadDisj,
    showDisj: showDisj,
    semigroupDisj: semigroupDisj,
    monoidDisj: monoidDisj,
    semiringDisj: semiringDisj
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Comonad":13,"../Control.Extend":16,"../Control.Monad":60,"../Data.Bounded":134,"../Data.Eq":157,"../Data.Functor":180,"../Data.Functor.Invariant":178,"../Data.HeytingAlgebra":188,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Prelude":358}],239:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Dual = function (x) {
    return x;
};
var showDual = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Dual " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupDual = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semigroup.append(dictSemigroup)(v1)(v);
        };
    });
};
var ordDual = function (dictOrd) {
    return dictOrd;
};
var newtypeDual = new Data_Newtype.Newtype(function (n) {
    return n;
}, Dual);
var monoidDual = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDual(dictMonoid.Semigroup0());
    }, Data_Monoid.mempty(dictMonoid));
};
var invariantDual = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorDual = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendDual = new Control_Extend.Extend(function () {
    return functorDual;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDual = function (dictEq) {
    return dictEq;
};
var comonadDual = new Control_Comonad.Comonad(function () {
    return extendDual;
}, Data_Newtype.unwrap(newtypeDual));
var boundedDual = function (dictBounded) {
    return dictBounded;
};
var applyDual = new Control_Apply.Apply(function () {
    return functorDual;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindDual = new Control_Bind.Bind(function () {
    return applyDual;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeDual = new Control_Applicative.Applicative(function () {
    return applyDual;
}, Dual);
var monadDual = new Control_Monad.Monad(function () {
    return applicativeDual;
}, function () {
    return bindDual;
});
module.exports = {
    Dual: Dual,
    newtypeDual: newtypeDual,
    eqDual: eqDual,
    ordDual: ordDual,
    boundedDual: boundedDual,
    functorDual: functorDual,
    invariantDual: invariantDual,
    applyDual: applyDual,
    applicativeDual: applicativeDual,
    bindDual: bindDual,
    monadDual: monadDual,
    extendDual: extendDual,
    comonadDual: comonadDual,
    showDual: showDual,
    semigroupDual: semigroupDual,
    monoidDual: monoidDual
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Comonad":13,"../Control.Extend":16,"../Control.Monad":60,"../Data.Bounded":134,"../Data.Eq":157,"../Data.Functor":180,"../Data.Functor.Invariant":178,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Semigroup":271,"../Data.Show":276,"../Prelude":358}],240:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Prelude = require("../Prelude");
var Endo = function (x) {
    return x;
};
var semigroupEndo = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return function ($11) {
            return v(v1($11));
        };
    };
});
var newtypeEndo = new Data_Newtype.Newtype(function (n) {
    return n;
}, Endo);
var monoidEndo = new Data_Monoid.Monoid(function () {
    return semigroupEndo;
}, Control_Category.id(Control_Category.categoryFn));
var invariantEndo = new Data_Functor_Invariant.Invariant(function (ab) {
    return function (ba) {
        return function (v) {
            return function ($12) {
                return ab(v(ba($12)));
            };
        };
    };
});
module.exports = {
    Endo: Endo,
    newtypeEndo: newtypeEndo,
    invariantEndo: invariantEndo,
    semigroupEndo: semigroupEndo,
    monoidEndo: monoidEndo
};

},{"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Functor.Invariant":178,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Semigroup":271,"../Prelude":358}],241:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Multiplicative = function (x) {
    return x;
};
var showMultiplicative = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Multiplicative " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupMultiplicative = function (dictSemiring) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semiring.mul(dictSemiring)(v)(v1);
        };
    });
};
var ordMultiplicative = function (dictOrd) {
    return dictOrd;
};
var newtypeMultiplicative = new Data_Newtype.Newtype(function (n) {
    return n;
}, Multiplicative);
var monoidMultiplicative = function (dictSemiring) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMultiplicative(dictSemiring);
    }, Data_Semiring.one(dictSemiring));
};
var invariantMultiplicative = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorMultiplicative = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendMultiplicative = new Control_Extend.Extend(function () {
    return functorMultiplicative;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqMultiplicative = function (dictEq) {
    return dictEq;
};
var comonadMultiplicative = new Control_Comonad.Comonad(function () {
    return extendMultiplicative;
}, Data_Newtype.unwrap(newtypeMultiplicative));
var boundedMultiplicative = function (dictBounded) {
    return dictBounded;
};
var applyMultiplicative = new Control_Apply.Apply(function () {
    return functorMultiplicative;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindMultiplicative = new Control_Bind.Bind(function () {
    return applyMultiplicative;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeMultiplicative = new Control_Applicative.Applicative(function () {
    return applyMultiplicative;
}, Multiplicative);
var monadMultiplicative = new Control_Monad.Monad(function () {
    return applicativeMultiplicative;
}, function () {
    return bindMultiplicative;
});
module.exports = {
    Multiplicative: Multiplicative,
    newtypeMultiplicative: newtypeMultiplicative,
    eqMultiplicative: eqMultiplicative,
    ordMultiplicative: ordMultiplicative,
    boundedMultiplicative: boundedMultiplicative,
    functorMultiplicative: functorMultiplicative,
    invariantMultiplicative: invariantMultiplicative,
    applyMultiplicative: applyMultiplicative,
    applicativeMultiplicative: applicativeMultiplicative,
    bindMultiplicative: bindMultiplicative,
    monadMultiplicative: monadMultiplicative,
    extendMultiplicative: extendMultiplicative,
    comonadMultiplicative: comonadMultiplicative,
    showMultiplicative: showMultiplicative,
    semigroupMultiplicative: semigroupMultiplicative,
    monoidMultiplicative: monoidMultiplicative
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Comonad":13,"../Control.Extend":16,"../Control.Monad":60,"../Data.Bounded":134,"../Data.Eq":157,"../Data.Functor":180,"../Data.Functor.Invariant":178,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Prelude":358}],242:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Monoid = function (Semigroup0, mempty) {
    this.Semigroup0 = Semigroup0;
    this.mempty = mempty;
};
var monoidUnit = new Monoid(function () {
    return Data_Semigroup.semigroupUnit;
}, Data_Unit.unit);
var monoidString = new Monoid(function () {
    return Data_Semigroup.semigroupString;
}, "");
var monoidOrdering = new Monoid(function () {
    return Data_Ordering.semigroupOrdering;
}, Data_Ordering.EQ.value);
var monoidArray = new Monoid(function () {
    return Data_Semigroup.semigroupArray;
}, [  ]);
var mempty = function (dict) {
    return dict.mempty;
};
var monoidFn = function (dictMonoid) {
    return new Monoid(function () {
        return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
    }, Data_Function["const"](mempty(dictMonoid)));
};
var power = function (dictMonoid) {
    return function (x) {
        var go = function (p) {
            if (p <= 0) {
                return mempty(dictMonoid);
            };
            if (p === 1) {
                return x;
            };
            if (p % 2 === 0) {
                var x$prime = go(p / 2 | 0);
                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x$prime);
            };
            if (Data_Boolean.otherwise) {
                var x$prime = go(p / 2 | 0);
                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x));
            };
            throw new Error("Failed pattern match at Data.Monoid line 52, column 3 - line 52, column 17: " + [ p.constructor.name ]);
        };
        return go;
    };
};
var guard = function (dictMonoid) {
    return function (v) {
        return function (v1) {
            if (v) {
                return v1;
            };
            if (!v) {
                return mempty(dictMonoid);
            };
            throw new Error("Failed pattern match at Data.Monoid line 60, column 1 - line 60, column 49: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
module.exports = {
    Monoid: Monoid,
    mempty: mempty,
    power: power,
    guard: guard,
    monoidUnit: monoidUnit,
    monoidOrdering: monoidOrdering,
    monoidFn: monoidFn,
    monoidString: monoidString,
    monoidArray: monoidArray
};

},{"../Data.Boolean":131,"../Data.Eq":157,"../Data.EuclideanRing":159,"../Data.Function":172,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Semigroup":271,"../Data.Unit":302,"../Prelude":358}],243:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
module.exports = {};

},{}],244:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Prelude = require("../Prelude");
var Newtype = function (unwrap, wrap) {
    this.unwrap = unwrap;
    this.wrap = wrap;
};
var wrap = function (dict) {
    return dict.wrap;
};
var unwrap = function (dict) {
    return dict.unwrap;
};
var underF2 = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($50) {
                            return function ($51) {
                                return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(Data_Function.on(f)(Data_Functor.map(dictFunctor)(wrap(dictNewtype)))($50)($51));
                            };
                        };
                    };
                };
            };
        };
    };
};
var underF = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($52) {
                            return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($52)));
                        };
                    };
                };
            };
        };
    };
};
var under2 = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($53) {
                    return function ($54) {
                        return unwrap(dictNewtype1)(Data_Function.on(f)(wrap(dictNewtype))($53)($54));
                    };
                };
            };
        };
    };
};
var under = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($55) {
                    return unwrap(dictNewtype1)(f(wrap(dictNewtype)($55)));
                };
            };
        };
    };
};
var un = function (dictNewtype) {
    return function (v) {
        return unwrap(dictNewtype);
    };
};
var traverse = function (dictFunctor) {
    return function (dictNewtype) {
        return function (v) {
            return function (f) {
                return function ($56) {
                    return Data_Functor.map(dictFunctor)(wrap(dictNewtype))(f(unwrap(dictNewtype)($56)));
                };
            };
        };
    };
};
var overF2 = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($57) {
                            return function ($58) {
                                return Data_Functor.map(dictFunctor1)(wrap(dictNewtype1))(Data_Function.on(f)(Data_Functor.map(dictFunctor)(unwrap(dictNewtype)))($57)($58));
                            };
                        };
                    };
                };
            };
        };
    };
};
var overF = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($59) {
                            return Data_Functor.map(dictFunctor1)(wrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(unwrap(dictNewtype))($59)));
                        };
                    };
                };
            };
        };
    };
};
var over2 = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($60) {
                    return function ($61) {
                        return wrap(dictNewtype1)(Data_Function.on(f)(unwrap(dictNewtype))($60)($61));
                    };
                };
            };
        };
    };
};
var over = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($62) {
                    return wrap(dictNewtype1)(f(unwrap(dictNewtype)($62)));
                };
            };
        };
    };
};
var op = function (dictNewtype) {
    return un(dictNewtype);
};
var collect = function (dictFunctor) {
    return function (dictNewtype) {
        return function (v) {
            return function (f) {
                return function ($63) {
                    return wrap(dictNewtype)(f(Data_Functor.map(dictFunctor)(unwrap(dictNewtype))($63)));
                };
            };
        };
    };
};
var alaF = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($64) {
                            return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($64)));
                        };
                    };
                };
            };
        };
    };
};
var ala = function (dictFunctor) {
    return function (dictNewtype) {
        return function (dictNewtype1) {
            return function (v) {
                return function (f) {
                    return Data_Functor.map(dictFunctor)(unwrap(dictNewtype))(f(wrap(dictNewtype1)));
                };
            };
        };
    };
};
module.exports = {
    unwrap: unwrap,
    wrap: wrap,
    Newtype: Newtype,
    un: un,
    op: op,
    ala: ala,
    alaF: alaF,
    over: over,
    overF: overF,
    under: under,
    underF: underF,
    over2: over2,
    overF2: overF2,
    under2: under2,
    underF2: underF2,
    traverse: traverse,
    collect: collect
};

},{"../Control.Semigroupoid":66,"../Data.Function":172,"../Data.Functor":180,"../Prelude":358}],245:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex");
var Data_Functor = require("../Data.Functor");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex");
var Prelude = require("../Prelude");
var NonEmpty = (function () {
    function NonEmpty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    NonEmpty.create = function (value0) {
        return function (value1) {
            return new NonEmpty(value0, value1);
        };
    };
    return NonEmpty;
})();
var tail = function (v) {
    return v.value1;
};
var singleton = function (dictPlus) {
    return function (a) {
        return new NonEmpty(a, Control_Plus.empty(dictPlus));
    };
};
var showNonEmpty = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var oneOf = function (dictAlternative) {
    return function (v) {
        return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Control_Applicative.pure(dictAlternative.Applicative0())(v.value0))(v.value1);
    };
};
var head = function (v) {
    return v.value0;
};
var functorNonEmpty = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return new NonEmpty(f(v.value0), Data_Functor.map(dictFunctor)(f)(v.value1));
        };
    });
};
var functorWithIndex = function (dictFunctorWithIndex) {
    return new Data_FunctorWithIndex.FunctorWithIndex(function () {
        return functorNonEmpty(dictFunctorWithIndex.Functor0());
    }, function (f) {
        return function (v) {
            return new NonEmpty(f(Data_Maybe.Nothing.value)(v.value0), Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex)(function ($136) {
                return f(Data_Maybe.Just.create($136));
            })(v.value1));
        };
    });
};
var fromNonEmpty = function (f) {
    return function (v) {
        return f(v.value0)(v.value1);
    };
};
var foldl1 = function (dictFoldable) {
    return function (f) {
        return function (v) {
            return Data_Foldable.foldl(dictFoldable)(f)(v.value0)(v.value1);
        };
    };
};
var foldableNonEmpty = function (dictFoldable) {
    return new Data_Foldable.Foldable(function (dictMonoid) {
        return function (f) {
            return function (v) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
            };
        };
    });
};
var foldableWithIndexNonEmpty = function (dictFoldableWithIndex) {
    return new Data_FoldableWithIndex.FoldableWithIndex(function () {
        return foldableNonEmpty(dictFoldableWithIndex.Foldable0());
    }, function (dictMonoid) {
        return function (f) {
            return function (v) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(Data_Maybe.Nothing.value)(v.value0))(Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function ($137) {
                    return f(Data_Maybe.Just.create($137));
                })(v.value1));
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function ($138) {
                    return f(Data_Maybe.Just.create($138));
                })(f(Data_Maybe.Nothing.value)(b)(v.value0))(v.value1);
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return f(Data_Maybe.Nothing.value)(v.value0)(Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex)(function ($139) {
                    return f(Data_Maybe.Just.create($139));
                })(b)(v.value1));
            };
        };
    });
};
var traversableNonEmpty = function (dictTraversable) {
    return new Data_Traversable.Traversable(function () {
        return foldableNonEmpty(dictTraversable.Foldable1());
    }, function () {
        return functorNonEmpty(dictTraversable.Functor0());
    }, function (dictApplicative) {
        return function (v) {
            return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmpty.create)(v.value0))(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v.value1));
        };
    }, function (dictApplicative) {
        return function (f) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmpty.create)(f(v.value0)))(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)(v.value1));
            };
        };
    });
};
var traversableWithIndexNonEmpty = function (dictTraversableWithIndex) {
    return new Data_TraversableWithIndex.TraversableWithIndex(function () {
        return foldableWithIndexNonEmpty(dictTraversableWithIndex.FoldableWithIndex1());
    }, function () {
        return functorWithIndex(dictTraversableWithIndex.FunctorWithIndex0());
    }, function () {
        return traversableNonEmpty(dictTraversableWithIndex.Traversable2());
    }, function (dictApplicative) {
        return function (f) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmpty.create)(f(Data_Maybe.Nothing.value)(v.value0)))(Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function ($140) {
                    return f(Data_Maybe.Just.create($140));
                })(v.value1));
            };
        };
    });
};
var foldMap1 = function (dictSemigroup) {
    return function (dictFoldable) {
        return function (f) {
            return function (v) {
                return Data_Foldable.foldl(dictFoldable)(function (s) {
                    return function (a1) {
                        return Data_Semigroup.append(dictSemigroup)(s)(f(a1));
                    };
                })(f(v.value0))(v.value1);
            };
        };
    };
};
var fold1 = function (dictSemigroup) {
    return function (dictFoldable) {
        return foldMap1(dictSemigroup)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
    };
};
var eq1NonEmpty = function (dictEq1) {
    return new Data_Eq.Eq1(function (dictEq) {
        return function (v) {
            return function (v1) {
                return Data_Eq.eq(dictEq)(v.value0)(v1.value0) && Data_Eq.eq1(dictEq1)(dictEq)(v.value1)(v1.value1);
            };
        };
    });
};
var eqNonEmpty = function (dictEq1) {
    return function (dictEq) {
        return new Data_Eq.Eq(Data_Eq.eq1(eq1NonEmpty(dictEq1))(dictEq));
    };
};
var ord1NonEmpty = function (dictOrd1) {
    return new Data_Ord.Ord1(function () {
        return eq1NonEmpty(dictOrd1.Eq10());
    }, function (dictOrd) {
        return function (v) {
            return function (v1) {
                var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
                if (v2 instanceof Data_Ordering.EQ) {
                    return Data_Ord.compare1(dictOrd1)(dictOrd)(v.value1)(v1.value1);
                };
                return v2;
            };
        };
    });
};
var ordNonEmpty = function (dictOrd1) {
    return function (dictOrd) {
        return new Data_Ord.Ord(function () {
            return eqNonEmpty(dictOrd1.Eq10())(dictOrd.Eq0());
        }, Data_Ord.compare1(ord1NonEmpty(dictOrd1))(dictOrd));
    };
};
module.exports = {
    NonEmpty: NonEmpty,
    singleton: singleton,
    foldl1: foldl1,
    foldMap1: foldMap1,
    fold1: fold1,
    fromNonEmpty: fromNonEmpty,
    oneOf: oneOf,
    head: head,
    tail: tail,
    showNonEmpty: showNonEmpty,
    eqNonEmpty: eqNonEmpty,
    eq1NonEmpty: eq1NonEmpty,
    ordNonEmpty: ordNonEmpty,
    ord1NonEmpty: ord1NonEmpty,
    functorNonEmpty: functorNonEmpty,
    functorWithIndex: functorWithIndex,
    foldableNonEmpty: foldableNonEmpty,
    foldableWithIndexNonEmpty: foldableWithIndexNonEmpty,
    traversableNonEmpty: traversableNonEmpty,
    traversableWithIndexNonEmpty: traversableWithIndexNonEmpty
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Category":12,"../Control.Plus":65,"../Control.Semigroupoid":66,"../Data.Eq":157,"../Data.Foldable":164,"../Data.FoldableWithIndex":165,"../Data.Functor":180,"../Data.FunctorWithIndex":182,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Semigroup":271,"../Data.Show":276,"../Data.Traversable":296,"../Data.TraversableWithIndex":297,"../Prelude":358}],246:[function(require,module,exports){
"use strict";

exports["null"] = null;

exports.nullable = function (a, r, f) {
  return a == null ? r : f(a);
};

exports.notNull = function (x) {
  return x;
};

},{}],247:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
var toMaybe = function (n) {
    return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
};
var showNullable = function (dictShow) {
    return new Data_Show.Show(function ($5) {
        return Data_Maybe.maybe("null")(Data_Show.show(dictShow))(toMaybe($5));
    });
};
var eqNullable = function (dictEq) {
    return new Data_Eq.Eq(Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe));
};
var ordNullable = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqNullable(dictOrd.Eq0());
    }, Data_Function.on(Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe));
};
var eq1Nullable = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqNullable(dictEq));
});
var ord1Nullable = new Data_Ord.Ord1(function () {
    return eq1Nullable;
}, function (dictOrd) {
    return Data_Ord.compare(ordNullable(dictOrd));
});
module.exports = {
    toMaybe: toMaybe,
    toNullable: toNullable,
    showNullable: showNullable,
    eqNullable: eqNullable,
    eq1Nullable: eq1Nullable,
    ordNullable: ordNullable,
    ord1Nullable: ord1Nullable
};

},{"../Control.Semigroupoid":66,"../Data.Eq":157,"../Data.Function":172,"../Data.Function.Uncurried":171,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Show":276,"../Prelude":358,"./foreign":246}],248:[function(require,module,exports){
"use strict";

exports.unsafeCompareImpl = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x === y ? eq : gt;
        };
      };
    };
  };
};

},{}],249:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Ordering = require("../Data.Ordering");
var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
module.exports = {
    unsafeCompare: unsafeCompare
};

},{"../Data.Ordering":252,"./foreign":248}],250:[function(require,module,exports){
"use strict";

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

},{}],251:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Ord_Unsafe = require("../Data.Ord.Unsafe");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Ord = function (Eq0, compare) {
    this.Eq0 = Eq0;
    this.compare = compare;
};
var Ord1 = function (Eq10, compare1) {
    this.Eq10 = Eq10;
    this.compare1 = compare1;
};
var ordVoid = new Ord(function () {
    return Data_Eq.eqVoid;
}, function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordUnit = new Ord(function () {
    return Data_Eq.eqUnit;
}, function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordString = new Ord(function () {
    return Data_Eq.eqString;
}, Data_Ord_Unsafe.unsafeCompare);
var ordOrdering = new Ord(function () {
    return Data_Ordering.eqOrdering;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        throw new Error("Failed pattern match at Data.Ord line 68, column 1 - line 68, column 37: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var ordNumber = new Ord(function () {
    return Data_Eq.eqNumber;
}, Data_Ord_Unsafe.unsafeCompare);
var ordInt = new Ord(function () {
    return Data_Eq.eqInt;
}, Data_Ord_Unsafe.unsafeCompare);
var ordChar = new Ord(function () {
    return Data_Eq.eqChar;
}, Data_Ord_Unsafe.unsafeCompare);
var ordBoolean = new Ord(function () {
    return Data_Eq.eqBoolean;
}, Data_Ord_Unsafe.unsafeCompare);
var compare1 = function (dict) {
    return dict.compare1;
};
var compare = function (dict) {
    return dict.compare;
};
var comparing = function (dictOrd) {
    return function (f) {
        return Data_Function.on(compare(dictOrd))(f);
    };
};
var greaterThan = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.GT) {
                return true;
            };
            return false;
        };
    };
};
var greaterThanOrEq = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.LT) {
                return false;
            };
            return true;
        };
    };
};
var signum = function (dictOrd) {
    return function (dictRing) {
        return function (x) {
            var $33 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
            if ($33) {
                return Data_Semiring.one(dictRing.Semiring0());
            };
            return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing.Semiring0()));
        };
    };
};
var lessThan = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.LT) {
                return true;
            };
            return false;
        };
    };
};
var lessThanOrEq = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.GT) {
                return false;
            };
            return true;
        };
    };
};
var max = function (dictOrd) {
    return function (x) {
        return function (y) {
            var v = compare(dictOrd)(x)(y);
            if (v instanceof Data_Ordering.LT) {
                return y;
            };
            if (v instanceof Data_Ordering.EQ) {
                return x;
            };
            if (v instanceof Data_Ordering.GT) {
                return x;
            };
            throw new Error("Failed pattern match at Data.Ord line 123, column 3 - line 126, column 12: " + [ v.constructor.name ]);
        };
    };
};
var min = function (dictOrd) {
    return function (x) {
        return function (y) {
            var v = compare(dictOrd)(x)(y);
            if (v instanceof Data_Ordering.LT) {
                return x;
            };
            if (v instanceof Data_Ordering.EQ) {
                return x;
            };
            if (v instanceof Data_Ordering.GT) {
                return y;
            };
            throw new Error("Failed pattern match at Data.Ord line 114, column 3 - line 117, column 12: " + [ v.constructor.name ]);
        };
    };
};
var ordArray = function (dictOrd) {
    return new Ord(function () {
        return Data_Eq.eqArray(dictOrd.Eq0());
    }, (function () {
        var toDelta = function (x) {
            return function (y) {
                var v = compare(dictOrd)(x)(y);
                if (v instanceof Data_Ordering.EQ) {
                    return 0;
                };
                if (v instanceof Data_Ordering.LT) {
                    return 1;
                };
                if (v instanceof Data_Ordering.GT) {
                    return -1 | 0;
                };
                throw new Error("Failed pattern match at Data.Ord line 61, column 7 - line 66, column 1: " + [ v.constructor.name ]);
            };
        };
        return function (xs) {
            return function (ys) {
                return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
            };
        };
    })());
};
var ord1Array = new Ord1(function () {
    return Data_Eq.eq1Array;
}, function (dictOrd) {
    return compare(ordArray(dictOrd));
});
var clamp = function (dictOrd) {
    return function (low) {
        return function (hi) {
            return function (x) {
                return min(dictOrd)(hi)(max(dictOrd)(low)(x));
            };
        };
    };
};
var between = function (dictOrd) {
    return function (low) {
        return function (hi) {
            return function (x) {
                if (lessThan(dictOrd)(x)(low)) {
                    return false;
                };
                if (greaterThan(dictOrd)(x)(hi)) {
                    return false;
                };
                return true;
            };
        };
    };
};
var abs = function (dictOrd) {
    return function (dictRing) {
        return function (x) {
            var $42 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
            if ($42) {
                return x;
            };
            return Data_Ring.negate(dictRing)(x);
        };
    };
};
module.exports = {
    Ord: Ord,
    compare: compare,
    Ord1: Ord1,
    compare1: compare1,
    lessThan: lessThan,
    lessThanOrEq: lessThanOrEq,
    greaterThan: greaterThan,
    greaterThanOrEq: greaterThanOrEq,
    comparing: comparing,
    min: min,
    max: max,
    clamp: clamp,
    between: between,
    abs: abs,
    signum: signum,
    ordBoolean: ordBoolean,
    ordInt: ordInt,
    ordNumber: ordNumber,
    ordString: ordString,
    ordChar: ordChar,
    ordUnit: ordUnit,
    ordVoid: ordVoid,
    ordArray: ordArray,
    ordOrdering: ordOrdering,
    ord1Array: ord1Array
};

},{"../Data.Eq":157,"../Data.Function":172,"../Data.Ord.Unsafe":249,"../Data.Ordering":252,"../Data.Ring":267,"../Data.Semiring":273,"../Data.Unit":302,"../Data.Void":305,"./foreign":250}],252:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Eq = require("../Data.Eq");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var LT = (function () {
    function LT() {

    };
    LT.value = new LT();
    return LT;
})();
var GT = (function () {
    function GT() {

    };
    GT.value = new GT();
    return GT;
})();
var EQ = (function () {
    function EQ() {

    };
    EQ.value = new EQ();
    return EQ;
})();
var showOrdering = new Data_Show.Show(function (v) {
    if (v instanceof LT) {
        return "LT";
    };
    if (v instanceof GT) {
        return "GT";
    };
    if (v instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match at Data.Ordering line 26, column 1 - line 26, column 39: " + [ v.constructor.name ]);
});
var semigroupOrdering = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof LT) {
            return LT.value;
        };
        if (v instanceof GT) {
            return GT.value;
        };
        if (v instanceof EQ) {
            return v1;
        };
        throw new Error("Failed pattern match at Data.Ordering line 21, column 1 - line 21, column 49: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var invert = function (v) {
    if (v instanceof GT) {
        return LT.value;
    };
    if (v instanceof EQ) {
        return EQ.value;
    };
    if (v instanceof LT) {
        return GT.value;
    };
    throw new Error("Failed pattern match at Data.Ordering line 33, column 1 - line 33, column 31: " + [ v.constructor.name ]);
};
var eqOrdering = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof LT && v1 instanceof LT) {
            return true;
        };
        if (v instanceof GT && v1 instanceof GT) {
            return true;
        };
        if (v instanceof EQ && v1 instanceof EQ) {
            return true;
        };
        return false;
    };
});
module.exports = {
    LT: LT,
    GT: GT,
    EQ: EQ,
    invert: invert,
    eqOrdering: eqOrdering,
    semigroupOrdering: semigroupOrdering,
    showOrdering: showOrdering
};

},{"../Data.Eq":157,"../Data.Semigroup":271,"../Data.Show":276}],253:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Profunctor = require("../Data.Profunctor");
var Prelude = require("../Prelude");
var Choice = function (Profunctor0, left, right) {
    this.Profunctor0 = Profunctor0;
    this.left = left;
    this.right = right;
};
var right = function (dict) {
    return dict.right;
};
var left = function (dict) {
    return dict.left;
};
var splitChoice = function (dictCategory) {
    return function (dictChoice) {
        return function (l) {
            return function (r) {
                return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(left(dictChoice)(l))(right(dictChoice)(r));
            };
        };
    };
};
var fanin = function (dictCategory) {
    return function (dictChoice) {
        return function (l) {
            return function (r) {
                var join = Data_Profunctor.dimap(dictChoice.Profunctor0())(Data_Either.either(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn)))(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(dictCategory));
                return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(splitChoice(dictCategory)(dictChoice)(l)(r))(join);
            };
        };
    };
};
var choiceFn = new Choice(function () {
    return Data_Profunctor.profunctorFn;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Data_Either.Left) {
            return Data_Either.Left.create(v(v1.value0));
        };
        if (v1 instanceof Data_Either.Right) {
            return new Data_Either.Right(v1.value0);
        };
        throw new Error("Failed pattern match at Data.Profunctor.Choice line 32, column 1 - line 32, column 33: " + [ v.constructor.name, v1.constructor.name ]);
    };
}, Data_Functor.map(Data_Either.functorEither));
module.exports = {
    left: left,
    right: right,
    Choice: Choice,
    splitChoice: splitChoice,
    fanin: fanin,
    choiceFn: choiceFn
};

},{"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Either":154,"../Data.Function":172,"../Data.Functor":180,"../Data.Profunctor":260,"../Prelude":358}],254:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Profunctor = require("../Data.Profunctor");
var Prelude = require("../Prelude");
var Closed = function (Profunctor0, closed) {
    this.Profunctor0 = Profunctor0;
    this.closed = closed;
};
var closedFunction = new Closed(function () {
    return Data_Profunctor.profunctorFn;
}, Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
var closed = function (dict) {
    return dict.closed;
};
module.exports = {
    closed: closed,
    Closed: Closed,
    closedFunction: closedFunction
};

},{"../Control.Semigroupoid":66,"../Data.Profunctor":260,"../Prelude":358}],255:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Either = require("../Data.Either");
var Data_Profunctor = require("../Data.Profunctor");
var Cochoice = function (Profunctor0, unleft, unright) {
    this.Profunctor0 = Profunctor0;
    this.unleft = unleft;
    this.unright = unright;
};
var unright = function (dict) {
    return dict.unright;
};
var unleft = function (dict) {
    return dict.unleft;
};
module.exports = {
    unleft: unleft,
    unright: unright,
    Cochoice: Cochoice
};

},{"../Data.Either":154,"../Data.Profunctor":260}],256:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Distributive = require("../Data.Distributive");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Newtype = require("../Data.Newtype");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed");
var Data_Profunctor_Cochoice = require("../Data.Profunctor.Cochoice");
var Data_Profunctor_Costrong = require("../Data.Profunctor.Costrong");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var Costar = function (x) {
    return x;
};
var semigroupoidCostar = function (dictExtend) {
    return new Control_Semigroupoid.Semigroupoid(function (v) {
        return function (v1) {
            return Control_Extend.composeCoKleisliFlipped(dictExtend)(v)(v1);
        };
    });
};
var profunctorCostar = function (dictFunctor) {
    return new Data_Profunctor.Profunctor(function (f) {
        return function (g) {
            return function (v) {
                return function ($54) {
                    return g(v(Data_Functor.map(dictFunctor)(f)($54)));
                };
            };
        };
    });
};
var strongCostar = function (dictComonad) {
    return new Data_Profunctor_Strong.Strong(function () {
        return profunctorCostar((dictComonad.Extend0()).Functor0());
    }, function (v) {
        return function (x) {
            return new Data_Tuple.Tuple(v(Data_Functor.map((dictComonad.Extend0()).Functor0())(Data_Tuple.fst)(x)), Data_Tuple.snd(Control_Comonad.extract(dictComonad)(x)));
        };
    }, function (v) {
        return function (x) {
            return new Data_Tuple.Tuple(Data_Tuple.fst(Control_Comonad.extract(dictComonad)(x)), v(Data_Functor.map((dictComonad.Extend0()).Functor0())(Data_Tuple.snd)(x)));
        };
    });
};
var newtypeCostar = new Data_Newtype.Newtype(function (n) {
    return n;
}, Costar);
var hoistCostar = function (f) {
    return function (v) {
        return Data_Profunctor.lmap(Data_Profunctor.profunctorFn)(f)(v);
    };
};
var functorCostar = new Data_Functor.Functor(function (f) {
    return function (v) {
        return function ($55) {
            return f(v($55));
        };
    };
});
var invariantCostar = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorCostar));
var distributiveCostar = new Data_Distributive.Distributive(function () {
    return functorCostar;
}, function (dictFunctor) {
    return function (f) {
        return function ($56) {
            return Data_Distributive.distribute(distributiveCostar)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($56));
        };
    };
}, function (dictFunctor) {
    return function (f) {
        return function (a) {
            return Data_Functor.map(dictFunctor)(function (v) {
                return v(a);
            })(f);
        };
    };
});
var costrongCostar = function (dictFunctor) {
    return new Data_Profunctor_Costrong.Costrong(function () {
        return profunctorCostar(dictFunctor);
    }, function (v) {
        return function (fb) {
            var bd = v(Data_Functor.map(dictFunctor)(function (a) {
                return new Data_Tuple.Tuple(a, Data_Tuple.snd(bd));
            })(fb));
            return Data_Tuple.fst(bd);
        };
    }, function (v) {
        return function (fb) {
            var db = v(Data_Functor.map(dictFunctor)(function (a) {
                return new Data_Tuple.Tuple(Data_Tuple.fst(db), a);
            })(fb));
            return Data_Tuple.snd(db);
        };
    });
};
var cochoiceCostar = function (dictApplicative) {
    return new Data_Profunctor_Cochoice.Cochoice(function () {
        return profunctorCostar((dictApplicative.Apply0()).Functor0());
    }, function (v) {
        var g = function ($57) {
            return Data_Either.either(Control_Category.id(Control_Category.categoryFn))(function (r) {
                return g(Control_Applicative.pure(dictApplicative)(new Data_Either.Right(r)));
            })(v($57));
        };
        return function ($58) {
            return g(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Either.Left.create)($58));
        };
    }, function (v) {
        var g = function ($59) {
            return Data_Either.either(function (l) {
                return g(Control_Applicative.pure(dictApplicative)(new Data_Either.Left(l)));
            })(Control_Category.id(Control_Category.categoryFn))(v($59));
        };
        return function ($60) {
            return g(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Either.Right.create)($60));
        };
    });
};
var closedCostar = function (dictFunctor) {
    return new Data_Profunctor_Closed.Closed(function () {
        return profunctorCostar(dictFunctor);
    }, function (v) {
        return function (g) {
            return function (x) {
                return v(Data_Functor.map(dictFunctor)(function (v1) {
                    return v1(x);
                })(g));
            };
        };
    });
};
var categoryCostar = function (dictComonad) {
    return new Control_Category.Category(function () {
        return semigroupoidCostar(dictComonad.Extend0());
    }, Control_Comonad.extract(dictComonad));
};
var applyCostar = new Control_Apply.Apply(function () {
    return functorCostar;
}, function (v) {
    return function (v1) {
        return function (a) {
            return v(a)(v1(a));
        };
    };
});
var bindCostar = new Control_Bind.Bind(function () {
    return applyCostar;
}, function (v) {
    return function (f) {
        return function (x) {
            var v1 = f(v(x));
            return v1(x);
        };
    };
});
var applicativeCostar = new Control_Applicative.Applicative(function () {
    return applyCostar;
}, function (a) {
    return function (v) {
        return a;
    };
});
var monadCostar = new Control_Monad.Monad(function () {
    return applicativeCostar;
}, function () {
    return bindCostar;
});
module.exports = {
    Costar: Costar,
    hoistCostar: hoistCostar,
    newtypeCostar: newtypeCostar,
    semigroupoidCostar: semigroupoidCostar,
    categoryCostar: categoryCostar,
    functorCostar: functorCostar,
    invariantCostar: invariantCostar,
    applyCostar: applyCostar,
    applicativeCostar: applicativeCostar,
    bindCostar: bindCostar,
    monadCostar: monadCostar,
    distributiveCostar: distributiveCostar,
    profunctorCostar: profunctorCostar,
    strongCostar: strongCostar,
    costrongCostar: costrongCostar,
    cochoiceCostar: cochoiceCostar,
    closedCostar: closedCostar
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Comonad":13,"../Control.Extend":16,"../Control.Monad":60,"../Control.Semigroupoid":66,"../Data.Distributive":151,"../Data.Either":154,"../Data.Function":172,"../Data.Functor":180,"../Data.Functor.Invariant":178,"../Data.Newtype":244,"../Data.Profunctor":260,"../Data.Profunctor.Closed":254,"../Data.Profunctor.Cochoice":255,"../Data.Profunctor.Costrong":257,"../Data.Profunctor.Strong":259,"../Data.Tuple":298,"../Prelude":358}],257:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Profunctor = require("../Data.Profunctor");
var Data_Tuple = require("../Data.Tuple");
var Costrong = function (Profunctor0, unfirst, unsecond) {
    this.Profunctor0 = Profunctor0;
    this.unfirst = unfirst;
    this.unsecond = unsecond;
};
var unsecond = function (dict) {
    return dict.unsecond;
};
var unfirst = function (dict) {
    return dict.unfirst;
};
module.exports = {
    unfirst: unfirst,
    unsecond: unsecond,
    Costrong: Costrong
};

},{"../Data.Profunctor":260,"../Data.Tuple":298}],258:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Distributive = require("../Data.Distributive");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Newtype = require("../Data.Newtype");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var Star = function (x) {
    return x;
};
var semigroupoidStar = function (dictBind) {
    return new Control_Semigroupoid.Semigroupoid(function (v) {
        return function (v1) {
            return function (x) {
                return Control_Bind.bind(dictBind)(v1(x))(v);
            };
        };
    });
};
var profunctorStar = function (dictFunctor) {
    return new Data_Profunctor.Profunctor(function (f) {
        return function (g) {
            return function (v) {
                return function ($78) {
                    return Data_Functor.map(dictFunctor)(g)(v(f($78)));
                };
            };
        };
    });
};
var strongStar = function (dictFunctor) {
    return new Data_Profunctor_Strong.Strong(function () {
        return profunctorStar(dictFunctor);
    }, function (v) {
        return function (v1) {
            return Data_Functor.map(dictFunctor)(function (v2) {
                return new Data_Tuple.Tuple(v2, v1.value1);
            })(v(v1.value0));
        };
    }, function (v) {
        return function (v1) {
            return Data_Functor.map(dictFunctor)(Data_Tuple.Tuple.create(v1.value0))(v(v1.value1));
        };
    });
};
var newtypeStar = new Data_Newtype.Newtype(function (n) {
    return n;
}, Star);
var invariantStar = function (dictInvariant) {
    return new Data_Functor_Invariant.Invariant(function (f) {
        return function (g) {
            return function (v) {
                return function ($79) {
                    return Data_Functor_Invariant.imap(dictInvariant)(f)(g)(v($79));
                };
            };
        };
    });
};
var hoistStar = function (f) {
    return function (v) {
        return function ($80) {
            return f(v($80));
        };
    };
};
var functorStar = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return function ($81) {
                return Data_Functor.map(dictFunctor)(f)(v($81));
            };
        };
    });
};
var distributiveStar = function (dictDistributive) {
    return new Data_Distributive.Distributive(function () {
        return functorStar(dictDistributive.Functor0());
    }, function (dictFunctor) {
        return function (f) {
            return function ($82) {
                return Data_Distributive.distribute(distributiveStar(dictDistributive))(dictFunctor)(Data_Functor.map(dictFunctor)(f)($82));
            };
        };
    }, function (dictFunctor) {
        return function (f) {
            return function (a) {
                return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (v) {
                    return v(a);
                })(f);
            };
        };
    });
};
var closedStar = function (dictDistributive) {
    return new Data_Profunctor_Closed.Closed(function () {
        return profunctorStar(dictDistributive.Functor0());
    }, function (v) {
        return function (g) {
            return Data_Distributive.distribute(dictDistributive)(Data_Functor.functorFn)(function ($83) {
                return v(g($83));
            });
        };
    });
};
var choiceStar = function (dictApplicative) {
    return new Data_Profunctor_Choice.Choice(function () {
        return profunctorStar((dictApplicative.Apply0()).Functor0());
    }, function (v) {
        return Star(Data_Either.either(function ($84) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Either.Left.create)(v($84));
        })(function ($85) {
            return Control_Applicative.pure(dictApplicative)(Data_Either.Right.create($85));
        }));
    }, function (v) {
        return Star(Data_Either.either(function ($86) {
            return Control_Applicative.pure(dictApplicative)(Data_Either.Left.create($86));
        })(function ($87) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Either.Right.create)(v($87));
        }));
    });
};
var categoryStar = function (dictMonad) {
    return new Control_Category.Category(function () {
        return semigroupoidStar(dictMonad.Bind1());
    }, Control_Applicative.pure(dictMonad.Applicative0()));
};
var applyStar = function (dictApply) {
    return new Control_Apply.Apply(function () {
        return functorStar(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return function (a) {
                return Control_Apply.apply(dictApply)(v(a))(v1(a));
            };
        };
    });
};
var bindStar = function (dictBind) {
    return new Control_Bind.Bind(function () {
        return applyStar(dictBind.Apply0());
    }, function (v) {
        return function (f) {
            return function (x) {
                return Control_Bind.bind(dictBind)(v(x))(function (a) {
                    var v1 = f(a);
                    return v1(x);
                });
            };
        };
    });
};
var applicativeStar = function (dictApplicative) {
    return new Control_Applicative.Applicative(function () {
        return applyStar(dictApplicative.Apply0());
    }, function (a) {
        return function (v) {
            return Control_Applicative.pure(dictApplicative)(a);
        };
    });
};
var monadStar = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeStar(dictMonad.Applicative0());
    }, function () {
        return bindStar(dictMonad.Bind1());
    });
};
var altStar = function (dictAlt) {
    return new Control_Alt.Alt(function () {
        return functorStar(dictAlt.Functor0());
    }, function (v) {
        return function (v1) {
            return function (a) {
                return Control_Alt.alt(dictAlt)(v(a))(v1(a));
            };
        };
    });
};
var plusStar = function (dictPlus) {
    return new Control_Plus.Plus(function () {
        return altStar(dictPlus.Alt0());
    }, function (v) {
        return Control_Plus.empty(dictPlus);
    });
};
var alternativeStar = function (dictAlternative) {
    return new Control_Alternative.Alternative(function () {
        return applicativeStar(dictAlternative.Applicative0());
    }, function () {
        return plusStar(dictAlternative.Plus1());
    });
};
var monadZeroStar = function (dictMonadZero) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeStar(dictMonadZero.Alternative1());
    }, function () {
        return monadStar(dictMonadZero.Monad0());
    });
};
var monadPlusStar = function (dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroStar(dictMonadPlus.MonadZero0());
    });
};
module.exports = {
    Star: Star,
    hoistStar: hoistStar,
    newtypeStar: newtypeStar,
    semigroupoidStar: semigroupoidStar,
    categoryStar: categoryStar,
    functorStar: functorStar,
    invariantStar: invariantStar,
    applyStar: applyStar,
    applicativeStar: applicativeStar,
    bindStar: bindStar,
    monadStar: monadStar,
    altStar: altStar,
    plusStar: plusStar,
    alternativeStar: alternativeStar,
    monadZeroStar: monadZeroStar,
    monadPlusStar: monadPlusStar,
    distributiveStar: distributiveStar,
    profunctorStar: profunctorStar,
    strongStar: strongStar,
    choiceStar: choiceStar,
    closedStar: closedStar
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Monad":60,"../Control.MonadPlus":61,"../Control.MonadZero":62,"../Control.Plus":65,"../Control.Semigroupoid":66,"../Data.Distributive":151,"../Data.Either":154,"../Data.Function":172,"../Data.Functor":180,"../Data.Functor.Invariant":178,"../Data.Newtype":244,"../Data.Profunctor":260,"../Data.Profunctor.Choice":253,"../Data.Profunctor.Closed":254,"../Data.Profunctor.Strong":259,"../Data.Tuple":298,"../Prelude":358}],259:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor = require("../Data.Functor");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var Strong = function (Profunctor0, first, second) {
    this.Profunctor0 = Profunctor0;
    this.first = first;
    this.second = second;
};
var strongFn = new Strong(function () {
    return Data_Profunctor.profunctorFn;
}, function (a2b) {
    return function (v) {
        return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
    };
}, Data_Functor.map(Data_Tuple.functorTuple));
var second = function (dict) {
    return dict.second;
};
var first = function (dict) {
    return dict.first;
};
var splitStrong = function (dictCategory) {
    return function (dictStrong) {
        return function (l) {
            return function (r) {
                return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(first(dictStrong)(l))(second(dictStrong)(r));
            };
        };
    };
};
var fanout = function (dictCategory) {
    return function (dictStrong) {
        return function (l) {
            return function (r) {
                var split = Data_Profunctor.dimap(dictStrong.Profunctor0())(Control_Category.id(Control_Category.categoryFn))(function (a) {
                    return new Data_Tuple.Tuple(a, a);
                })(Control_Category.id(dictCategory));
                return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(split)(splitStrong(dictCategory)(dictStrong)(l)(r));
            };
        };
    };
};
module.exports = {
    first: first,
    second: second,
    Strong: Strong,
    splitStrong: splitStrong,
    fanout: fanout,
    strongFn: strongFn
};

},{"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Functor":180,"../Data.Profunctor":260,"../Data.Tuple":298,"../Prelude":358}],260:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Newtype = require("../Data.Newtype");
var Prelude = require("../Prelude");
var Profunctor = function (dimap) {
    this.dimap = dimap;
};
var profunctorFn = new Profunctor(function (a2b) {
    return function (c2d) {
        return function (b2c) {
            return function ($9) {
                return c2d(b2c(a2b($9)));
            };
        };
    };
});
var dimap = function (dict) {
    return dict.dimap;
};
var lmap = function (dictProfunctor) {
    return function (a2b) {
        return dimap(dictProfunctor)(a2b)(Control_Category.id(Control_Category.categoryFn));
    };
};
var rmap = function (dictProfunctor) {
    return function (b2c) {
        return dimap(dictProfunctor)(Control_Category.id(Control_Category.categoryFn))(b2c);
    };
};
var unwrapIso = function (dictProfunctor) {
    return function (dictNewtype) {
        return dimap(dictProfunctor)(Data_Newtype.wrap(dictNewtype))(Data_Newtype.unwrap(dictNewtype));
    };
};
var wrapIso = function (dictProfunctor) {
    return function (dictNewtype) {
        return function (v) {
            return dimap(dictProfunctor)(Data_Newtype.unwrap(dictNewtype))(Data_Newtype.wrap(dictNewtype));
        };
    };
};
var arr = function (dictCategory) {
    return function (dictProfunctor) {
        return function (f) {
            return rmap(dictProfunctor)(f)(Control_Category.id(dictCategory));
        };
    };
};
module.exports = {
    dimap: dimap,
    Profunctor: Profunctor,
    lmap: lmap,
    rmap: rmap,
    arr: arr,
    unwrapIso: unwrapIso,
    wrapIso: wrapIso,
    profunctorFn: profunctorFn
};

},{"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Newtype":244,"../Prelude":358}],261:[function(require,module,exports){
"use strict";

exports.copyRecord = function(rec) {
  var copy = {};
  for (var key in rec) {
    if ({}.hasOwnProperty.call(rec, key)) {
      copy[key] = rec[key];
    }
  }
  return copy;
};

exports.unsafeInsert = function(l) {
  return function(a) {
    return function(rec) {
      rec[l] = a;
      return rec;
    };
  };
};

exports.unsafeDelete = function(l) {
  return function(rec) {
    delete rec[l];
    return rec;
  };
};

exports.unsafeMerge = function(r1) {
  return function(r2) {
    var copy = {};
    for (var k1 in r2) {
      if ({}.hasOwnProperty.call(r2, k1)) {
        copy[k1] = r2[k1];
      }
    }
    for (var k2 in r1) {
      if ({}.hasOwnProperty.call(r1, k2)) {
        copy[k2] = r1[k2];
      }
    }
    return copy;
  };
};

},{}],262:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Symbol = require("../Data.Symbol");
var Prelude = require("../Prelude");
var Type_Row = require("../Type.Row");
var Builder = function (x) {
    return x;
};
var semigroupoidBuilder = Control_Semigroupoid.semigroupoidFn;
var merge = function (dictUnion) {
    return function (r2) {
        return function (r1) {
            return $foreign.unsafeMerge(r1)(r2);
        };
    };
};
var insert = function (dictRowCons) {
    return function (dictRowLacks) {
        return function (dictIsSymbol) {
            return function (l) {
                return function (a) {
                    return function (r1) {
                        return $foreign.unsafeInsert(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r1);
                    };
                };
            };
        };
    };
};
var $$delete = function (dictIsSymbol) {
    return function (dictRowLacks) {
        return function (dictRowCons) {
            return function (l) {
                return function (r2) {
                    return $foreign.unsafeDelete(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r2);
                };
            };
        };
    };
};
var categoryBuilder = Control_Category.categoryFn;
var build = function (v) {
    return function (r1) {
        return v($foreign.copyRecord(r1));
    };
};
module.exports = {
    build: build,
    insert: insert,
    "delete": $$delete,
    merge: merge,
    semigroupoidBuilder: semigroupoidBuilder,
    categoryBuilder: categoryBuilder
};

},{"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Symbol":289,"../Prelude":358,"../Type.Row":364,"./foreign":261}],263:[function(require,module,exports){
"use strict";

exports.unsafeGetFn = function(label, rec) {
  return rec[label];
};

exports.unsafeSetFn = function(label, value, rec) {
  var copy = {};
  for (var key in rec) {
    if ({}.hasOwnProperty.call(rec, key)) {
      copy[key] = rec[key];
    }
  }
  copy[label] = value;
  return copy;
};

exports.unsafeDeleteFn = function(label, rec) {
  var copy = {};
  for (var key in rec) {
    if (key !== label && {}.hasOwnProperty.call(rec, key)) {
      copy[key] = rec[key];
    }
  }
  return copy;
};

exports.unsafeHasFn = function(label, rec) {
  return {}.hasOwnProperty.call(rec, label);
};

},{}],264:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var unsafeSet = Data_Function_Uncurried.runFn3($foreign.unsafeSetFn);
var unsafeHas = Data_Function_Uncurried.runFn2($foreign.unsafeHasFn);
var unsafeGet = Data_Function_Uncurried.runFn2($foreign.unsafeGetFn);
var unsafeDelete = Data_Function_Uncurried.runFn2($foreign.unsafeDeleteFn);
module.exports = {
    unsafeGet: unsafeGet,
    unsafeSet: unsafeSet,
    unsafeDelete: unsafeDelete,
    unsafeHas: unsafeHas,
    unsafeGetFn: $foreign.unsafeGetFn,
    unsafeSetFn: $foreign.unsafeSetFn,
    unsafeDeleteFn: $foreign.unsafeDeleteFn,
    unsafeHasFn: $foreign.unsafeHasFn
};

},{"../Data.Function.Uncurried":171,"./foreign":263}],265:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Eq = require("../Data.Eq");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Record_Unsafe = require("../Data.Record.Unsafe");
var Data_Symbol = require("../Data.Symbol");
var Prelude = require("../Prelude");
var Type_Row = require("../Type.Row");
var EqualFields = function (equalFields) {
    this.equalFields = equalFields;
};
var set = function (dictIsSymbol) {
    return function (dictRowCons) {
        return function (dictRowCons1) {
            return function (l) {
                return function (b) {
                    return function (r) {
                        return Data_Record_Unsafe.unsafeSetFn(Data_Symbol.reflectSymbol(dictIsSymbol)(l), b, r);
                    };
                };
            };
        };
    };
};
var insert = function (dictIsSymbol) {
    return function (dictRowLacks) {
        return function (dictRowCons) {
            return function (l) {
                return function (a) {
                    return function (r) {
                        return Data_Record_Unsafe.unsafeSetFn(Data_Symbol.reflectSymbol(dictIsSymbol)(l), a, r);
                    };
                };
            };
        };
    };
};
var get = function (dictIsSymbol) {
    return function (dictRowCons) {
        return function (l) {
            return function (r) {
                return Data_Record_Unsafe.unsafeGetFn(Data_Symbol.reflectSymbol(dictIsSymbol)(l), r);
            };
        };
    };
};
var modify = function (dictIsSymbol) {
    return function (dictRowCons) {
        return function (dictRowCons1) {
            return function (l) {
                return function (f) {
                    return function (r) {
                        return set(dictIsSymbol)(dictRowCons)(dictRowCons1)(l)(f(get(dictIsSymbol)(dictRowCons)(l)(r)))(r);
                    };
                };
            };
        };
    };
};
var equalFieldsNil = new EqualFields(function (v) {
    return function (v1) {
        return function (v2) {
            return true;
        };
    };
});
var equalFields = function (dict) {
    return dict.equalFields;
};
var equalFieldsCons = function (dictIsSymbol) {
    return function (dictEq) {
        return function (dictRowCons) {
            return function (dictEqualFields) {
                return new EqualFields(function (v) {
                    return function (a) {
                        return function (b) {
                            var get$prime = get(dictIsSymbol)(dictRowCons)(Data_Symbol.SProxy.value);
                            var equalRest = equalFields(dictEqualFields)(Type_Row.RLProxy.value);
                            return Data_Eq.eq(dictEq)(get$prime(a))(get$prime(b)) && equalRest(a)(b);
                        };
                    };
                });
            };
        };
    };
};
var equal = function (dictRowToList) {
    return function (dictEqualFields) {
        return function (a) {
            return function (b) {
                return equalFields(dictEqualFields)(Type_Row.RLProxy.value)(a)(b);
            };
        };
    };
};
var $$delete = function (dictIsSymbol) {
    return function (dictRowLacks) {
        return function (dictRowCons) {
            return function (l) {
                return function (r) {
                    return Data_Record_Unsafe.unsafeDeleteFn(Data_Symbol.reflectSymbol(dictIsSymbol)(l), r);
                };
            };
        };
    };
};
module.exports = {
    get: get,
    set: set,
    modify: modify,
    insert: insert,
    "delete": $$delete,
    equal: equal,
    EqualFields: EqualFields,
    equalFields: equalFields,
    equalFieldsCons: equalFieldsCons,
    equalFieldsNil: equalFieldsNil
};

},{"../Data.Eq":157,"../Data.Function.Uncurried":171,"../Data.HeytingAlgebra":188,"../Data.Record.Unsafe":264,"../Data.Symbol":289,"../Prelude":358,"../Type.Row":364}],266:[function(require,module,exports){
"use strict";

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};

},{}],267:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var Ring = function (Semiring0, sub) {
    this.Semiring0 = Semiring0;
    this.sub = sub;
};
var sub = function (dict) {
    return dict.sub;
};
var ringUnit = new Ring(function () {
    return Data_Semiring.semiringUnit;
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
});
var ringNumber = new Ring(function () {
    return Data_Semiring.semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
    return Data_Semiring.semiringInt;
}, $foreign.intSub);
var ringFn = function (dictRing) {
    return new Ring(function () {
        return Data_Semiring.semiringFn(dictRing.Semiring0());
    }, function (f) {
        return function (g) {
            return function (x) {
                return sub(dictRing)(f(x))(g(x));
            };
        };
    });
};
var negate = function (dictRing) {
    return function (a) {
        return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
    };
};
module.exports = {
    Ring: Ring,
    sub: sub,
    negate: negate,
    ringInt: ringInt,
    ringNumber: ringNumber,
    ringUnit: ringUnit,
    ringFn: ringFn
};

},{"../Data.Semiring":273,"../Data.Unit":302,"./foreign":266}],268:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Act = function (x) {
    return x;
};
var Foldable1 = function (Foldable0, fold1, foldMap1) {
    this.Foldable0 = Foldable0;
    this.fold1 = fold1;
    this.foldMap1 = foldMap1;
};
var semigroupAct = function (dictApply) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Control_Apply.applySecond(dictApply)(v)(v1);
        };
    });
};
var getAct = function (v) {
    return v;
};
var foldMap1 = function (dict) {
    return dict.foldMap1;
};
var traverse1_ = function (dictFoldable1) {
    return function (dictApply) {
        return function (f) {
            return function (t) {
                return Data_Functor.voidRight(dictApply.Functor0())(Data_Unit.unit)(getAct(foldMap1(dictFoldable1)(semigroupAct(dictApply))(function ($28) {
                    return Act(f($28));
                })(t)));
            };
        };
    };
};
var for1_ = function (dictFoldable1) {
    return function (dictApply) {
        return Data_Function.flip(traverse1_(dictFoldable1)(dictApply));
    };
};
var sequence1_ = function (dictFoldable1) {
    return function (dictApply) {
        return traverse1_(dictFoldable1)(dictApply)(Control_Category.id(Control_Category.categoryFn));
    };
};
var fold1Default = function (dictFoldable1) {
    return function (dictSemigroup) {
        return foldMap1(dictFoldable1)(dictSemigroup)(Control_Category.id(Control_Category.categoryFn));
    };
};
var foldableDual = new Foldable1(function () {
    return Data_Foldable.foldableDual;
}, function (dictSemigroup) {
    return fold1Default(foldableDual)(dictSemigroup);
}, function (dictSemigroup) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
});
var foldableMultiplicative = new Foldable1(function () {
    return Data_Foldable.foldableMultiplicative;
}, function (dictSemigroup) {
    return fold1Default(foldableMultiplicative)(dictSemigroup);
}, function (dictSemigroup) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
});
var fold1 = function (dict) {
    return dict.fold1;
};
var foldMap1Default = function (dictFoldable1) {
    return function (dictFunctor) {
        return function (dictSemigroup) {
            return function (f) {
                return function ($29) {
                    return fold1(dictFoldable1)(dictSemigroup)(Data_Functor.map(dictFunctor)(f)($29));
                };
            };
        };
    };
};
module.exports = {
    Foldable1: Foldable1,
    foldMap1: foldMap1,
    fold1: fold1,
    traverse1_: traverse1_,
    for1_: for1_,
    sequence1_: sequence1_,
    foldMap1Default: foldMap1Default,
    fold1Default: fold1Default,
    foldableDual: foldableDual,
    foldableMultiplicative: foldableMultiplicative
};

},{"../Control.Apply":7,"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.Monoid.Dual":239,"../Data.Monoid.Multiplicative":241,"../Data.Semigroup":271,"../Data.Unit":302,"../Prelude":358}],269:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Data_Functor = require("../Data.Functor");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Traversable1 = function (Foldable10, Traversable1, sequence1, traverse1) {
    this.Foldable10 = Foldable10;
    this.Traversable1 = Traversable1;
    this.sequence1 = sequence1;
    this.traverse1 = traverse1;
};
var traverse1 = function (dict) {
    return dict.traverse1;
};
var sequence1Default = function (dictTraversable1) {
    return function (dictApply) {
        return traverse1(dictTraversable1)(dictApply)(Control_Category.id(Control_Category.categoryFn));
    };
};
var sequence1 = function (dict) {
    return dict.sequence1;
};
var traverse1Default = function (dictTraversable1) {
    return function (dictApply) {
        return function (f) {
            return function (ta) {
                return sequence1(dictTraversable1)(dictApply)(Data_Functor.map((dictTraversable1.Traversable1()).Functor0())(f)(ta));
            };
        };
    };
};
module.exports = {
    sequence1: sequence1,
    traverse1: traverse1,
    Traversable1: Traversable1,
    traverse1Default: traverse1Default,
    sequence1Default: sequence1Default
};

},{"../Control.Category":12,"../Data.Functor":180,"../Data.Semigroup.Foldable":268,"../Data.Traversable":296,"../Prelude":358}],270:[function(require,module,exports){
"use strict";

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    if (xs.length === 0) return ys;
    if (ys.length === 0) return xs;
    return xs.concat(ys);
  };
};

},{}],271:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Semigroup = function (append) {
    this.append = append;
};
var semigroupVoid = new Semigroup(function (v) {
    return Data_Void.absurd;
});
var semigroupUnit = new Semigroup(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupArray = new Semigroup($foreign.concatArray);
var append = function (dict) {
    return dict.append;
};
var semigroupFn = function (dictSemigroup) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return append(dictSemigroup)(f(x))(g(x));
            };
        };
    });
};
module.exports = {
    Semigroup: Semigroup,
    append: append,
    semigroupString: semigroupString,
    semigroupUnit: semigroupUnit,
    semigroupVoid: semigroupVoid,
    semigroupFn: semigroupFn,
    semigroupArray: semigroupArray
};

},{"../Data.Unit":302,"../Data.Void":305,"./foreign":270}],272:[function(require,module,exports){
"use strict";

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};

},{}],273:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var Semiring = function (add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
};
var zero = function (dict) {
    return dict.zero;
};
var semiringUnit = new Semiring(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, Data_Unit.unit, Data_Unit.unit);
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
var one = function (dict) {
    return dict.one;
};
var mul = function (dict) {
    return dict.mul;
};
var add = function (dict) {
    return dict.add;
};
var semiringFn = function (dictSemiring) {
    return new Semiring(function (f) {
        return function (g) {
            return function (x) {
                return add(dictSemiring)(f(x))(g(x));
            };
        };
    }, function (f) {
        return function (g) {
            return function (x) {
                return mul(dictSemiring)(f(x))(g(x));
            };
        };
    }, function (v) {
        return one(dictSemiring);
    }, function (v) {
        return zero(dictSemiring);
    });
};
module.exports = {
    Semiring: Semiring,
    add: add,
    zero: zero,
    mul: mul,
    one: one,
    semiringInt: semiringInt,
    semiringNumber: semiringNumber,
    semiringFn: semiringFn,
    semiringUnit: semiringUnit
};

},{"../Data.Unit":302,"./foreign":272}],274:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Array_ST = require("../Data.Array.ST");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Map = require("../Data.Map");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Unfoldable = require("../Data.Unfoldable");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var $$Set = (function () {
    function $$Set(value0) {
        this.value0 = value0;
    };
    $$Set.create = function (value0) {
        return new $$Set(value0);
    };
    return $$Set;
})();
var union = function (dictOrd) {
    return function (v) {
        return function (v1) {
            return new $$Set(Data_Map.union(dictOrd)(v.value0)(v1.value0));
        };
    };
};
var toList = function (v) {
    return Data_Map.keys(v.value0);
};
var toUnfoldable = function (dictUnfoldable) {
    return function ($70) {
        return Data_List.toUnfoldable(dictUnfoldable)(toList($70));
    };
};
var size = function (v) {
    return Data_Map.size(v.value0);
};
var singleton = function (a) {
    return new $$Set(Data_Map.singleton(a)(Data_Unit.unit));
};
var showSet = function (dictShow) {
    return new Data_Show.Show(function (s) {
        return "(fromFoldable " + (Data_Show.show(Data_List_Types.showList(dictShow))(toList(s)) + ")");
    });
};
var semigroupSet = function (dictOrd) {
    return new Data_Semigroup.Semigroup(union(dictOrd));
};
var member = function (dictOrd) {
    return function (a) {
        return function (v) {
            return Data_Map.member(dictOrd)(a)(v.value0);
        };
    };
};
var isEmpty = function (v) {
    return Data_Map.isEmpty(v.value0);
};
var insert = function (dictOrd) {
    return function (a) {
        return function (v) {
            return new $$Set(Data_Map.insert(dictOrd)(a)(Data_Unit.unit)(v.value0));
        };
    };
};
var foldableSet = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function ($71) {
            return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(toList($71));
        };
    };
}, function (f) {
    return function (x) {
        return function ($72) {
            return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(x)(toList($72));
        };
    };
}, function (f) {
    return function (x) {
        return function ($73) {
            return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(x)(toList($73));
        };
    };
});
var findMin = function (v) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
        return v1.key;
    })(Data_Map.findMin(v.value0));
};
var findMax = function (v) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
        return v1.key;
    })(Data_Map.findMax(v.value0));
};
var eqSet = function (dictEq) {
    return new Data_Eq.Eq(function (v) {
        return function (v1) {
            return Data_Eq.eq(Data_Map.eqMap(dictEq)(Data_Eq.eqUnit))(v.value0)(v1.value0);
        };
    });
};
var ordSet = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqSet(dictOrd.Eq0());
    }, function (s1) {
        return function (s2) {
            return Data_Ord.compare(Data_List_Types.ordList(dictOrd))(toList(s1))(toList(s2));
        };
    });
};
var eq1Set = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqSet(dictEq));
});
var empty = new $$Set(Data_Map.empty);
var fromFoldable = function (dictFoldable) {
    return function (dictOrd) {
        return Data_Foldable.foldl(dictFoldable)(function (m) {
            return function (a) {
                return insert(dictOrd)(a)(m);
            };
        })(empty);
    };
};
var intersection = function (dictOrd) {
    return function (s1) {
        return function (s2) {
            var toArray = function ($74) {
                return Data_Array.fromFoldable(Data_List_Types.foldableList)(toList($74));
            };
            var rs = toArray(s2);
            var rl = Data_Array.length(rs);
            var ls = toArray(s1);
            var ll = Data_Array.length(ls);
            var intersect = function (acc) {
                var go = function (l) {
                    return function (r) {
                        var $63 = l < ll && r < rl;
                        if ($63) {
                            var v = Data_Ord.compare(dictOrd)(ls[l])(rs[r]);
                            if (v instanceof Data_Ordering.EQ) {
                                return function __do() {
                                    var v1 = Data_Array_ST.pushSTArray(acc)(ls[l])();
                                    return new Control_Monad_Rec_Class.Loop({
                                        a: l + 1 | 0,
                                        b: r + 1 | 0
                                    });
                                };
                            };
                            if (v instanceof Data_Ordering.LT) {
                                return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Control_Monad_Rec_Class.Loop({
                                    a: l + 1 | 0,
                                    b: r
                                }));
                            };
                            if (v instanceof Data_Ordering.GT) {
                                return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Control_Monad_Rec_Class.Loop({
                                    a: l,
                                    b: r + 1 | 0
                                }));
                            };
                            throw new Error("Failed pattern match at Data.Set line 172, column 12 - line 177, column 43: " + [ v.constructor.name ]);
                        };
                        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Control_Monad_Rec_Class.Done(acc));
                    };
                };
                return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecEff)(go)(0)(0);
            };
            return fromFoldable(Data_Foldable.foldableArray)(dictOrd)(Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(Control_Bind.bind(Control_Monad_Eff.bindEff)(Data_Array_ST.emptySTArray)(intersect))));
        };
    };
};
var map = function (dictOrd) {
    return function (f) {
        return Data_Foldable.foldl(foldableSet)(function (m) {
            return function (a) {
                return insert(dictOrd)(f(a))(m);
            };
        })(empty);
    };
};
var monoidSet = function (dictOrd) {
    return new Data_Monoid.Monoid(function () {
        return semigroupSet(dictOrd);
    }, empty);
};
var unions = function (dictFoldable) {
    return function (dictOrd) {
        return Data_Foldable.foldl(dictFoldable)(union(dictOrd))(empty);
    };
};
var $$delete = function (dictOrd) {
    return function (a) {
        return function (v) {
            return new $$Set(Data_Map["delete"](dictOrd)(a)(v.value0));
        };
    };
};
var difference = function (dictOrd) {
    return function (s1) {
        return function (s2) {
            return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictOrd)))(s1)(toList(s2));
        };
    };
};
var subset = function (dictOrd) {
    return function (s1) {
        return function (s2) {
            return isEmpty(difference(dictOrd)(s1)(s2));
        };
    };
};
var properSubset = function (dictOrd) {
    return function (s1) {
        return function (s2) {
            return subset(dictOrd)(s1)(s2) && Data_Eq.notEq(eqSet(dictOrd.Eq0()))(s1)(s2);
        };
    };
};
var checkValid = function (v) {
    return Data_Map.checkValid(v.value0);
};
module.exports = {
    fromFoldable: fromFoldable,
    toUnfoldable: toUnfoldable,
    empty: empty,
    isEmpty: isEmpty,
    singleton: singleton,
    map: map,
    checkValid: checkValid,
    insert: insert,
    member: member,
    "delete": $$delete,
    size: size,
    findMin: findMin,
    findMax: findMax,
    union: union,
    unions: unions,
    difference: difference,
    subset: subset,
    properSubset: properSubset,
    intersection: intersection,
    eqSet: eqSet,
    eq1Set: eq1Set,
    showSet: showSet,
    ordSet: ordSet,
    monoidSet: monoidSet,
    semigroupSet: semigroupSet,
    foldableSet: foldableSet
};

},{"../Control.Applicative":5,"../Control.Bind":11,"../Control.Monad.Eff":39,"../Control.Monad.Rec.Class":51,"../Control.Monad.ST":53,"../Control.Semigroupoid":66,"../Data.Array":122,"../Data.Array.ST":120,"../Data.Eq":157,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.HeytingAlgebra":188,"../Data.List":230,"../Data.List.Types":229,"../Data.Map":231,"../Data.Maybe":234,"../Data.Monoid":242,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Data.Unfoldable":300,"../Data.Unit":302,"../Partial.Unsafe":355,"../Prelude":358}],275:[function(require,module,exports){
"use strict";

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  var str = n.toString();
  return isNaN(str + ".0") ? str : str + ".0";
};

exports.showCharImpl = function (c) {
  var code = c.charCodeAt(0);
  if (code < 0x20 || code === 0x7F) {
    switch (c) {
      case "\x07": return "'\\a'";
      case "\b": return "'\\b'";
      case "\f": return "'\\f'";
      case "\n": return "'\\n'";
      case "\r": return "'\\r'";
      case "\t": return "'\\t'";
      case "\v": return "'\\v'";
    }
    return "'\\" + code.toString(10) + "'";
  }
  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  var l = s.length;
  return "\"" + s.replace(
    /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
    function (c, i) {
      switch (c) {
        case "\"":
        case "\\":
          return "\\" + c;
        case "\x07": return "\\a";
        case "\b": return "\\b";
        case "\f": return "\\f";
        case "\n": return "\\n";
        case "\r": return "\\r";
        case "\t": return "\\t";
        case "\v": return "\\v";
      }
      var k = i + 1;
      var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
      return "\\" + c.charCodeAt(0).toString(10) + empty;
    }
  ) + "\"";
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];
    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }
    return "[" + ss.join(",") + "]";
  };
};

},{}],276:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Show = function (show) {
    this.show = show;
};
var showString = new Show($foreign.showStringImpl);
var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (v) {
    if (v) {
        return "true";
    };
    if (!v) {
        return "false";
    };
    throw new Error("Failed pattern match at Data.Show line 12, column 1 - line 12, column 37: " + [ v.constructor.name ]);
});
var show = function (dict) {
    return dict.show;
};
var showArray = function (dictShow) {
    return new Show($foreign.showArrayImpl(show(dictShow)));
};
module.exports = {
    Show: Show,
    show: show,
    showBoolean: showBoolean,
    showInt: showInt,
    showNumber: showNumber,
    showChar: showChar,
    showString: showString,
    showArray: showArray
};

},{"./foreign":275}],277:[function(require,module,exports){
"use strict";

exports["new"] = function () {
  return {};
};

exports.peekImpl = function (just) {
  return function (nothing) {
    return function (m) {
      return function (k) {
        return function () {
          return {}.hasOwnProperty.call(m, k) ? just(m[k]) : nothing;
        };
      };
    };
  };
};

exports.poke = function (m) {
  return function (k) {
    return function (v) {
      return function () {
        m[k] = v;
        return m;
      };
    };
  };
};

exports["delete"] = function (m) {
  return function (k) {
    return function () {
      delete m[k];
      return m;
    };
  };
};

},{}],278:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Data_Maybe = require("../Data.Maybe");
var peek = $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    peek: peek,
    "new": $foreign["new"],
    poke: $foreign.poke,
    "delete": $foreign["delete"]
};

},{"../Control.Monad.Eff":39,"../Control.Monad.ST":53,"../Data.Maybe":234,"./foreign":277}],279:[function(require,module,exports){
"use strict";

exports._copyEff = function (m) {
  return function () {
    var r = {};
    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r[k] = m[k];
      }
    }
    return r;
  };
};

exports.empty = {};

exports.runST = function (f) {
  return f;
};

exports._fmapStrMap = function (m0, f) {
  var m = {};
  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(m0[k]);
    }
  }
  return m;
};

exports._mapWithKey = function (m0, f) {
  var m = {};
  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(k)(m0[k]);
    }
  }
  return m;
};

exports._foldM = function (bind) {
  return function (f) {
    return function (mz) {
      return function (m) {
        var acc = mz;
        function g(k) {
          return function (z) {
            return f(z)(k)(m[k]);
          };
        }
        for (var k in m) {
          if (hasOwnProperty.call(m, k)) {
            acc = bind(acc)(g(k));
          }
        }
        return acc;
      };
    };
  };
};

exports._foldSCStrMap = function (m, z, f, fromMaybe) {
  var acc = z;
  for (var k in m) {
    if (hasOwnProperty.call(m, k)) {
      var maybeR = f(acc)(k)(m[k]);
      var r = fromMaybe(null)(maybeR);
      if (r === null) return acc;
      else acc = r;
    }
  }
  return acc;
};

exports.all = function (f) {
  return function (m) {
    for (var k in m) {
      if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;
    }
    return true;
  };
};

exports.size = function (m) {
  var s = 0;
  for (var k in m) {
    if (hasOwnProperty.call(m, k)) {
      ++s;
    }
  }
  return s;
};

exports._lookup = function (no, yes, k, m) {
  return k in m ? yes(m[k]) : no;
};

exports._unsafeDeleteStrMap = function (m, k) {
  delete m[k];
  return m;
};

exports._lookupST = function (no, yes, k, m) {
  return function () {
    return k in m ? yes(m[k]) : no;
  };
};

function toArrayWithKey(f) {
  return function (m) {
    var r = [];
    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r.push(f(k)(m[k]));
      }
    }
    return r;
  };
}

exports.toArrayWithKey = toArrayWithKey;

exports.keys = Object.keys || toArrayWithKey(function (k) {
  return function () { return k; };
});

},{}],280:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_StrMap_ST = require("../Data.StrMap.ST");
var Data_Traversable = require("../Data.Traversable");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Prelude = require("../Prelude");
var values = $foreign.toArrayWithKey(function (v) {
    return function (v1) {
        return v1;
    };
});
var toUnfoldable = function (dictUnfoldable) {
    return function ($46) {
        return Data_Array.toUnfoldable(dictUnfoldable)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)($46));
    };
};
var toAscUnfoldable = function (dictUnfoldable) {
    return function ($47) {
        return Data_Array.toUnfoldable(dictUnfoldable)(Data_Array.sortWith(Data_Ord.ordString)(Data_Tuple.fst)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)($47)));
    };
};
var toAscArray = toAscUnfoldable(Data_Unfoldable.unfoldableArray);
var toArray = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
var thawST = $foreign._copyEff;
var showStrMap = function (dictShow) {
    return new Data_Show.Show(function (m) {
        return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showString)(dictShow)))(toArray(m)) + ")");
    });
};
var pureST = function (f) {
    return Control_Monad_Eff.runPure($foreign.runST(f));
};
var singleton = function (k) {
    return function (v) {
        return pureST(function __do() {
            var v1 = Data_StrMap_ST["new"]();
            return Data_StrMap_ST.poke(v1)(k)(v)();
        });
    };
};
var mutate = function (f) {
    return function (m) {
        return pureST(function __do() {
            var v = thawST(m)();
            var v1 = f(v)();
            return v;
        });
    };
};
var member = Data_Function_Uncurried.runFn4($foreign._lookup)(false)(Data_Function["const"](true));
var mapWithKey = function (f) {
    return function (m) {
        return $foreign._mapWithKey(m, f);
    };
};
var lookup = Data_Function_Uncurried.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var isSubmap = function (dictEq) {
    return function (m1) {
        return function (m2) {
            var f = function (k) {
                return function (v) {
                    return $foreign._lookup(false, Data_Eq.eq(dictEq)(v), k, m2);
                };
            };
            return $foreign.all(f)(m1);
        };
    };
};
var isEmpty = $foreign.all(function (v) {
    return function (v1) {
        return false;
    };
});
var insert = function (k) {
    return function (v) {
        return mutate(function (s) {
            return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST.poke(s)(k)(v));
        });
    };
};
var functorStrMap = new Data_Functor.Functor(function (f) {
    return function (m) {
        return $foreign._fmapStrMap(m, f);
    };
});
var functorWithIndexStrMap = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorStrMap;
}, mapWithKey);
var fromFoldableWith = function (dictFoldable) {
    return function (f) {
        return function (l) {
            return pureST(function __do() {
                var v = Data_StrMap_ST["new"]();
                Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(dictFoldable)(l)(function (v1) {
                    return Control_Bind.bind(Control_Monad_Eff.bindEff)($foreign._lookupST(v1.value1, f(v1.value1), v1.value0, v))(Data_StrMap_ST.poke(v)(v1.value0));
                })();
                return v;
            });
        };
    };
};
var fromFoldable = function (dictFoldable) {
    return function (l) {
        return pureST(function __do() {
            var v = Data_StrMap_ST["new"]();
            Control_Monad_Eff.foreachE(Data_Array.fromFoldable(dictFoldable)(l))(function (v1) {
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST.poke(v)(v1.value0)(v1.value1));
            })();
            return v;
        });
    };
};
var freezeST = $foreign._copyEff;
var foldMaybe = function (f) {
    return function (z) {
        return function (m) {
            return $foreign._foldSCStrMap(m, z, f, Data_Maybe.fromMaybe);
        };
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (z) {
            return $foreign._foldM(Control_Bind.bind(dictMonad.Bind1()))(f)(Control_Applicative.pure(dictMonad.Applicative0())(z));
        };
    };
};
var semigroupStrMap = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (m1) {
        return function (m2) {
            return mutate(function (s1) {
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(foldM(Control_Monad_Eff.monadEff)(function (s2) {
                    return function (k) {
                        return function (v2) {
                            return Data_StrMap_ST.poke(s2)(k)($foreign._lookup(v2, function (v1) {
                                return Data_Semigroup.append(dictSemigroup)(v1)(v2);
                            }, k, m2));
                        };
                    };
                })(s1)(m1));
            })(m2);
        };
    });
};
var monoidStrMap = function (dictSemigroup) {
    return new Data_Monoid.Monoid(function () {
        return semigroupStrMap(dictSemigroup);
    }, $foreign.empty);
};
var union = function (m) {
    return mutate(function (s) {
        return Data_Functor["void"](Control_Monad_Eff.functorEff)(foldM(Control_Monad_Eff.monadEff)(Data_StrMap_ST.poke)(s)(m));
    });
};
var unions = function (dictFoldable) {
    return Data_Foldable.foldl(dictFoldable)(union)($foreign.empty);
};
var fold = $foreign._foldM(Data_Function.applyFlipped);
var foldMap = function (dictMonoid) {
    return function (f) {
        return fold(function (acc) {
            return function (k) {
                return function (v) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
                };
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
};
var foldableStrMap = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return foldMap(dictMonoid)(Data_Function["const"](f));
    };
}, function (f) {
    return fold(function (z) {
        return function (v) {
            return f(z);
        };
    });
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
});
var foldableWithIndexStrMap = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableStrMap;
}, function (dictMonoid) {
    return foldMap(dictMonoid);
}, function (f) {
    return fold(Data_Function.flip(f));
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Tuple.uncurry(f))(z)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)(m));
        };
    };
});
var traversableWithIndexStrMap = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexStrMap;
}, function () {
    return functorWithIndexStrMap;
}, function () {
    return traversableStrMap;
}, function (dictApplicative) {
    return function (f) {
        return function (ms) {
            return fold(function (acc) {
                return function (k) {
                    return function (v) {
                        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Function.flip(insert(k)))(acc))(f(k)(v));
                    };
                };
            })(Control_Applicative.pure(dictApplicative)($foreign.empty))(ms);
        };
    };
});
var traversableStrMap = new Data_Traversable.Traversable(function () {
    return foldableStrMap;
}, function () {
    return functorStrMap;
}, function (dictApplicative) {
    return Data_Traversable.traverse(traversableStrMap)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
}, function (dictApplicative) {
    return function ($48) {
        return Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexStrMap)(dictApplicative)(Data_Function["const"]($48));
    };
});
var filterWithKey = function (predicate) {
    return function (m) {
        var go = (function () {
            var step = function (acc) {
                return function (k) {
                    return function (v) {
                        var $42 = predicate(k)(v);
                        if ($42) {
                            return Data_StrMap_ST.poke(acc)(k)(v);
                        };
                        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(acc);
                    };
                };
            };
            return function __do() {
                var v = Data_StrMap_ST["new"]();
                return foldM(Control_Monad_Eff.monadEff)(step)(v)(m)();
            };
        })();
        return pureST(go);
    };
};
var filterKeys = function (predicate) {
    return filterWithKey(function ($49) {
        return Data_Function["const"](predicate($49));
    });
};
var filter = function (predicate) {
    return filterWithKey(Data_Function["const"](predicate));
};
var eqStrMap = function (dictEq) {
    return new Data_Eq.Eq(function (m1) {
        return function (m2) {
            return isSubmap(dictEq)(m1)(m2) && isSubmap(dictEq)(m2)(m1);
        };
    });
};
var ordStrMap = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqStrMap(dictOrd.Eq0());
    }, function (m1) {
        return function (m2) {
            return Data_Ord.compare(Data_Ord.ordArray(Data_Tuple.ordTuple(Data_Ord.ordString)(dictOrd)))(toAscArray(m1))(toAscArray(m2));
        };
    });
};
var eq1StrMap = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqStrMap(dictEq));
});
var $$delete = function (k) {
    return mutate(function (s) {
        return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST["delete"](s)(k));
    });
};
var pop = function (k) {
    return function (m) {
        return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(lookup(k)(m))(function (a) {
            return new Data_Tuple.Tuple(a, $$delete(k)(m));
        });
    };
};
var alter = function (f) {
    return function (k) {
        return function (m) {
            var v = f(lookup(k)(m));
            if (v instanceof Data_Maybe.Nothing) {
                return $$delete(k)(m);
            };
            if (v instanceof Data_Maybe.Just) {
                return insert(k)(v.value0)(m);
            };
            throw new Error("Failed pattern match at Data.StrMap line 213, column 15 - line 215, column 25: " + [ v.constructor.name ]);
        };
    };
};
var update = function (f) {
    return function (k) {
        return function (m) {
            return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
        };
    };
};
module.exports = {
    isEmpty: isEmpty,
    singleton: singleton,
    insert: insert,
    lookup: lookup,
    toUnfoldable: toUnfoldable,
    toAscUnfoldable: toAscUnfoldable,
    fromFoldable: fromFoldable,
    fromFoldableWith: fromFoldableWith,
    "delete": $$delete,
    pop: pop,
    member: member,
    alter: alter,
    update: update,
    mapWithKey: mapWithKey,
    filterWithKey: filterWithKey,
    filterKeys: filterKeys,
    filter: filter,
    values: values,
    union: union,
    unions: unions,
    isSubmap: isSubmap,
    fold: fold,
    foldMap: foldMap,
    foldM: foldM,
    foldMaybe: foldMaybe,
    thawST: thawST,
    freezeST: freezeST,
    pureST: pureST,
    functorStrMap: functorStrMap,
    functorWithIndexStrMap: functorWithIndexStrMap,
    foldableStrMap: foldableStrMap,
    foldableWithIndexStrMap: foldableWithIndexStrMap,
    traversableStrMap: traversableStrMap,
    traversableWithIndexStrMap: traversableWithIndexStrMap,
    eqStrMap: eqStrMap,
    eq1StrMap: eq1StrMap,
    ordStrMap: ordStrMap,
    showStrMap: showStrMap,
    semigroupStrMap: semigroupStrMap,
    monoidStrMap: monoidStrMap,
    empty: $foreign.empty,
    size: $foreign.size,
    keys: $foreign.keys,
    all: $foreign.all,
    runST: $foreign.runST,
    toArrayWithKey: $foreign.toArrayWithKey
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Monad.Eff":39,"../Control.Monad.ST":53,"../Control.Semigroupoid":66,"../Data.Array":122,"../Data.Eq":157,"../Data.Foldable":164,"../Data.FoldableWithIndex":165,"../Data.Function":172,"../Data.Function.Uncurried":171,"../Data.Functor":180,"../Data.FunctorWithIndex":182,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.Monoid":242,"../Data.Ord":251,"../Data.Semigroup":271,"../Data.Show":276,"../Data.StrMap.ST":278,"../Data.Traversable":296,"../Data.TraversableWithIndex":297,"../Data.Tuple":298,"../Data.Unfoldable":300,"../Prelude":358,"./foreign":279}],281:[function(require,module,exports){
"use strict";
/* global Symbol */

var hasArrayFrom = typeof Array.from === "function";
var hasStringIterator =
  typeof Symbol !== "undefined" &&
  Symbol != null &&
  typeof Symbol.iterator !== "undefined" &&
  typeof String.prototype[Symbol.iterator] === "function";
var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
var hasCodePointAt = typeof String.prototype.codePointAt === "function";

exports._unsafeCodePointAt0 = function (fallback) {
  return hasCodePointAt
    ? function (str) { return str.codePointAt(0); }
    : fallback;
};

exports._codePointAt = function (fallback) {
  return function (Just) {
    return function (Nothing) {
      return function (unsafeCodePointAt0) {
        return function (index) {
          return function (str) {
            var length = str.length;
            if (index < 0 || index >= length) return Nothing;
            if (hasStringIterator) {
              var iter = str[Symbol.iterator]();
              for (var i = index;; --i) {
                var o = iter.next();
                if (o.done) return Nothing;
                if (i === 0) return Just(unsafeCodePointAt0(o.value));
              }
            }
            return fallback(index)(str);
          };
        };
      };
    };
  };
};

exports._count = function (fallback) {
  return function (unsafeCodePointAt0) {
    if (hasStringIterator) {
      return function (pred) {
        return function (str) {
          var iter = str[Symbol.iterator]();
          for (var cpCount = 0; ; ++cpCount) {
            var o = iter.next();
            if (o.done) return cpCount;
            var cp = unsafeCodePointAt0(o.value);
            if (!pred(cp)) return cpCount;
          }
        };
      };
    }
    return fallback;
  };
};

exports._fromCodePointArray = function (singleton) {
  return hasFromCodePoint
    ? function (cps) {
      // Function.prototype.apply will fail for very large second parameters,
      // so we don't use it for arrays with 10,000 or more entries.
      if (cps.length < 10e3) {
        return String.fromCodePoint.apply(String, cps);
      }
      return cps.map(singleton).join("");
    }
    : function (cps) {
      return cps.map(singleton).join("");
    };
};

exports._singleton = function (fallback) {
  return hasFromCodePoint ? String.fromCodePoint : fallback;
};

exports._take = function (fallback) {
  return function (n) {
    if (hasStringIterator) {
      return function (str) {
        var accum = "";
        var iter = str[Symbol.iterator]();
        for (var i = 0; i < n; ++i) {
          var o = iter.next();
          if (o.done) return accum;
          accum += o.value;
        }
        return accum;
      };
    }
    return fallback(n);
  };
};

exports._toCodePointArray = function (fallback) {
  return function (unsafeCodePointAt0) {
    if (hasArrayFrom) {
      return function (str) {
        return Array.from(str, unsafeCodePointAt0);
      };
    }
    return fallback;
  };
};

},{}],282:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Char = require("../Data.Char");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_String = require("../Data.String");
var Data_String_Unsafe = require("../Data.String.Unsafe");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Prelude = require("../Prelude");
var CodePoint = function (x) {
    return x;
};
var unsurrogate = function (lead) {
    return function (trail) {
        return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
    };
};
var isTrail = function (cu) {
    return 56320 <= cu && cu <= 57343;
};
var isLead = function (cu) {
    return 55296 <= cu && cu <= 56319;
};
var uncons = function (s) {
    var v = Data_String.length(s);
    if (v === 0) {
        return Data_Maybe.Nothing.value;
    };
    if (v === 1) {
        return new Data_Maybe.Just({
            head: Data_String_Unsafe.charCodeAt(0)(s),
            tail: ""
        });
    };
    var cu0 = Data_String_Unsafe.charCodeAt(0)(s);
    var cu1 = Data_String_Unsafe.charCodeAt(1)(s);
    var $19 = isLead(cu0) && isTrail(cu1);
    if ($19) {
        return new Data_Maybe.Just({
            head: unsurrogate(cu0)(cu1),
            tail: Data_String.drop(2)(s)
        });
    };
    return new Data_Maybe.Just({
        head: cu0,
        tail: Data_String.drop(1)(s)
    });
};
var unconsButWithTuple = function (s) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
        return new Data_Tuple.Tuple(v.head, v.tail);
    })(uncons(s));
};
var toCodePointArrayFallback = function (s) {
    return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
};
var unsafeCodePointAt0Fallback = function (s) {
    var cu0 = Data_String_Unsafe.charCodeAt(0)(s);
    var cu1 = Data_String_Unsafe.charCodeAt(1)(s);
    var $23 = isLead(cu0) && isTrail(cu1);
    if ($23) {
        return unsurrogate(cu0)(cu1);
    };
    return cu0;
};
var unsafeCodePointAt0 = $foreign._unsafeCodePointAt0(unsafeCodePointAt0Fallback);
var toCodePointArray = $foreign._toCodePointArray(toCodePointArrayFallback)(unsafeCodePointAt0);
var length = function ($50) {
    return Data_Array.length(toCodePointArray($50));
};
var lastIndexOf = function (p) {
    return function (s) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
            return length(Data_String.take(i)(s));
        })(Data_String.lastIndexOf(p)(s));
    };
};
var indexOf = function (p) {
    return function (s) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
            return length(Data_String.take(i)(s));
        })(Data_String.indexOf(p)(s));
    };
};
var fromCharCode = function ($51) {
    return Data_String.singleton(Data_Char.fromCharCode($51));
};
var singletonFallback = function (v) {
    if (v <= 65535) {
        return fromCharCode(v);
    };
    var lead = ((v - 65536 | 0) / 1024 | 0) + 55296 | 0;
    var trail = (v - 65536 | 0) % 1024 + 56320 | 0;
    return fromCharCode(lead) + fromCharCode(trail);
};
var fromCodePointArray = $foreign._fromCodePointArray(singletonFallback);
var splitAt = function (i) {
    return function (s) {
        var cps = toCodePointArray(s);
        var $25 = i < 0 || Data_Array.length(cps) < i;
        if ($25) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just({
            before: fromCodePointArray(Data_Array.take(i)(cps)),
            after: fromCodePointArray(Data_Array.drop(i)(cps))
        });
    };
};
var singleton = $foreign._singleton(singletonFallback);
var takeFallback = function (n) {
    return function (v) {
        if (n < 1) {
            return "";
        };
        var v1 = uncons(v);
        if (v1 instanceof Data_Maybe.Just) {
            return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
        };
        return v;
    };
};
var take = $foreign._take(takeFallback);
var lastIndexOf$prime = function (p) {
    return function (i) {
        return function (s) {
            var i$prime = Data_String.length(take(i)(s));
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (k) {
                return length(Data_String.take(k)(s));
            })(Data_String["lastIndexOf'"](p)(i$prime)(s));
        };
    };
};
var eqCodePoint = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordCodePoint = new Data_Ord.Ord(function () {
    return eqCodePoint;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
});
var drop = function (n) {
    return function (s) {
        return Data_String.drop(Data_String.length(take(n)(s)))(s);
    };
};
var indexOf$prime = function (p) {
    return function (i) {
        return function (s) {
            var s$prime = drop(i)(s);
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (k) {
                return i + length(Data_String.take(k)(s$prime)) | 0;
            })(Data_String.indexOf(p)(s$prime));
        };
    };
};
var countTail = function ($copy_p) {
    return function ($copy_s) {
        return function ($copy_accum) {
            var $tco_var_p = $copy_p;
            var $tco_var_s = $copy_s;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(p, s, accum) {
                var v = uncons(s);
                if (v instanceof Data_Maybe.Just) {
                    var $37 = p(v.value0.head);
                    if ($37) {
                        $tco_var_p = p;
                        $tco_var_s = v.value0.tail;
                        $copy_accum = accum + 1 | 0;
                        return;
                    };
                    $tco_done = true;
                    return accum;
                };
                $tco_done = true;
                return accum;
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_p, $tco_var_s, $copy_accum);
            };
            return $tco_result;
        };
    };
};
var countFallback = function (p) {
    return function (s) {
        return countTail(p)(s)(0);
    };
};
var count = $foreign._count(countFallback)(unsafeCodePointAt0);
var dropWhile = function (p) {
    return function (s) {
        return drop(count(p)(s))(s);
    };
};
var takeWhile = function (p) {
    return function (s) {
        return take(count(p)(s))(s);
    };
};
var codePointToInt = function (v) {
    return v;
};
var codePointFromInt = function (n) {
    if (0 <= n && n <= 1114111) {
        return new Data_Maybe.Just(n);
    };
    return Data_Maybe.Nothing.value;
};
var codePointAtFallback = function ($copy_n) {
    return function ($copy_s) {
        var $tco_var_n = $copy_n;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(n, s) {
            var v = uncons(s);
            if (v instanceof Data_Maybe.Just) {
                var $44 = n === 0;
                if ($44) {
                    $tco_done = true;
                    return new Data_Maybe.Just(v.value0.head);
                };
                $tco_var_n = n - 1 | 0;
                $copy_s = v.value0.tail;
                return;
            };
            $tco_done = true;
            return Data_Maybe.Nothing.value;
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_n, $copy_s);
        };
        return $tco_result;
    };
};
var codePointAt = function (v) {
    return function (v1) {
        if (v < 0) {
            return Data_Maybe.Nothing.value;
        };
        if (v === 0 && v1 === "") {
            return Data_Maybe.Nothing.value;
        };
        if (v === 0) {
            return new Data_Maybe.Just(unsafeCodePointAt0(v1));
        };
        return $foreign._codePointAt(codePointAtFallback)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value)(unsafeCodePointAt0)(v)(v1);
    };
};
module.exports = {
    codePointAt: codePointAt,
    codePointFromInt: codePointFromInt,
    codePointToInt: codePointToInt,
    count: count,
    drop: drop,
    dropWhile: dropWhile,
    fromCodePointArray: fromCodePointArray,
    indexOf: indexOf,
    "indexOf'": indexOf$prime,
    lastIndexOf: lastIndexOf,
    "lastIndexOf'": lastIndexOf$prime,
    length: length,
    singleton: singleton,
    splitAt: splitAt,
    take: take,
    takeWhile: takeWhile,
    toCodePointArray: toCodePointArray,
    uncons: uncons,
    eqCodePoint: eqCodePoint,
    ordCodePoint: ordCodePoint
};

},{"../Control.Semigroupoid":66,"../Data.Array":122,"../Data.Char":138,"../Data.Eq":157,"../Data.EuclideanRing":159,"../Data.Functor":180,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.String":288,"../Data.String.Unsafe":286,"../Data.Tuple":298,"../Data.Unfoldable":300,"../Prelude":358,"./foreign":281}],283:[function(require,module,exports){
"use strict";

var unorm = require('unorm');


exports.nfd = function nfd (x) {
  return unorm.nfd(x);
};

exports.nfc = function nfc (x) {
  return unorm.nfc(x);
};

exports.nfkd = function nfkd (x) {
  return unorm.nfkd(x);
};

exports.nfkc = function nfkc (x) {
  return unorm.nfkc(x);
};

},{"unorm":1}],284:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    nfd: $foreign.nfd,
    nfc: $foreign.nfc,
    nfkd: $foreign.nfkd,
    nfkc: $foreign.nfkc
};

},{"./foreign":283}],285:[function(require,module,exports){
"use strict";

exports.charCodeAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charCodeAt(i);
    throw new Error("Data.String.Unsafe.charCodeAt: Invalid index.");
  };
};

exports.charAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charAt(i);
    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
  };
};

exports.char = function (s) {
  if (s.length === 1) return s.charAt(0);
  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
};

},{}],286:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    "char": $foreign["char"],
    charAt: $foreign.charAt,
    charCodeAt: $foreign.charCodeAt
};

},{"./foreign":285}],287:[function(require,module,exports){
"use strict";

exports._charAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
      };
    };
  };
};

exports.singleton = function (c) {
  return c;
};

exports._charCodeAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charCodeAt(i)) : nothing;
      };
    };
  };
};

exports._toChar = function (just) {
  return function (nothing) {
    return function (s) {
      return s.length === 1 ? just(s) : nothing;
    };
  };
};

exports.fromCharArray = function (a) {
  return a.join("");
};

exports._indexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.indexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_indexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.indexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports._lastIndexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.lastIndexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_lastIndexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.lastIndexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports.length = function (s) {
  return s.length;
};

exports._localeCompare = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (s1) {
        return function (s2) {
          var result = s1.localeCompare(s2);
          return result < 0 ? lt : result > 0 ? gt : eq;
        };
      };
    };
  };
};

exports.replace = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(s1, s2);
    };
  };
};

exports.replaceAll = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2);
    };
  };
};

exports.take = function (n) {
  return function (s) {
    return s.substr(0, n);
  };
};

exports.drop = function (n) {
  return function (s) {
    return s.substring(n);
  };
};

exports.count = function (p) {
  return function (s) {
    var i = 0;
    while (i < s.length && p(s.charAt(i))) i++;
    return i;
  };
};

exports.split = function (sep) {
  return function (s) {
    return s.split(sep);
  };
};

exports._splitAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ?
               just({ before: s.substring(0, i), after: s.substring(i) }) :
               nothing;
      };
    };
  };
};

exports.toCharArray = function (s) {
  return s.split("");
};

exports.toLower = function (s) {
  return s.toLowerCase();
};

exports.toUpper = function (s) {
  return s.toUpperCase();
};

exports.trim = function (s) {
  return s.trim();
};

exports.joinWith = function (s) {
  return function (xs) {
    return xs.join(s);
  };
};

},{}],288:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_String_Unsafe = require("../Data.String.Unsafe");
var Prelude = require("../Prelude");
var Replacement = function (x) {
    return x;
};
var Pattern = function (x) {
    return x;
};
var uncons = function (v) {
    if (v === "") {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just({
        head: Data_String_Unsafe.charAt(0)(v),
        tail: $foreign.drop(1)(v)
    });
};
var toChar = $foreign._toChar(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var takeWhile = function (p) {
    return function (s) {
        return $foreign.take($foreign.count(p)(s))(s);
    };
};
var splitAt = $foreign._splitAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var showReplacement = new Data_Show.Show(function (v) {
    return "(Replacement " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var showPattern = new Data_Show.Show(function (v) {
    return "(Pattern " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var $$null = function (s) {
    return s === "";
};
var newtypeReplacement = new Data_Newtype.Newtype(function (n) {
    return n;
}, Replacement);
var newtypePattern = new Data_Newtype.Newtype(function (n) {
    return n;
}, Pattern);
var localeCompare = $foreign._localeCompare(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
var lastIndexOf$prime = $foreign["_lastIndexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var lastIndexOf = $foreign._lastIndexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripSuffix = function (v) {
    return function (str) {
        var v1 = lastIndexOf(v)(str);
        if (v1 instanceof Data_Maybe.Just && v1.value0 === ($foreign.length(str) - $foreign.length(v) | 0)) {
            return Data_Maybe.Just.create($foreign.take(v1.value0)(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripPrefix = function (v) {
    return function (str) {
        var v1 = indexOf(v)(str);
        if (v1 instanceof Data_Maybe.Just && v1.value0 === 0) {
            return Data_Maybe.Just.create($foreign.drop($foreign.length(v))(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var eqReplacement = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordReplacement = new Data_Ord.Ord(function () {
    return eqReplacement;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
var eqPattern = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordPattern = new Data_Ord.Ord(function () {
    return eqPattern;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
var dropWhile = function (p) {
    return function (s) {
        return $foreign.drop($foreign.count(p)(s))(s);
    };
};
var contains = function (pat) {
    return function ($48) {
        return Data_Maybe.isJust(indexOf(pat)($48));
    };
};
var charCodeAt = $foreign._charCodeAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    Pattern: Pattern,
    Replacement: Replacement,
    charAt: charAt,
    charCodeAt: charCodeAt,
    toChar: toChar,
    contains: contains,
    indexOf: indexOf,
    "indexOf'": indexOf$prime,
    lastIndexOf: lastIndexOf,
    "lastIndexOf'": lastIndexOf$prime,
    "null": $$null,
    uncons: uncons,
    localeCompare: localeCompare,
    takeWhile: takeWhile,
    dropWhile: dropWhile,
    stripPrefix: stripPrefix,
    stripSuffix: stripSuffix,
    splitAt: splitAt,
    eqPattern: eqPattern,
    ordPattern: ordPattern,
    newtypePattern: newtypePattern,
    showPattern: showPattern,
    eqReplacement: eqReplacement,
    ordReplacement: ordReplacement,
    newtypeReplacement: newtypeReplacement,
    showReplacement: showReplacement,
    fromCharArray: $foreign.fromCharArray,
    length: $foreign.length,
    singleton: $foreign.singleton,
    replace: $foreign.replace,
    replaceAll: $foreign.replaceAll,
    take: $foreign.take,
    drop: $foreign.drop,
    count: $foreign.count,
    split: $foreign.split,
    toCharArray: $foreign.toCharArray,
    toLower: $foreign.toLower,
    toUpper: $foreign.toUpper,
    trim: $foreign.trim,
    joinWith: $foreign.joinWith
};

},{"../Control.Semigroupoid":66,"../Data.Eq":157,"../Data.Function":172,"../Data.Maybe":234,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Data.String.Unsafe":286,"../Prelude":358,"./foreign":287}],289:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Semigroup = require("../Data.Semigroup");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var SProxy = (function () {
    function SProxy() {

    };
    SProxy.value = new SProxy();
    return SProxy;
})();
var IsSymbol = function (reflectSymbol) {
    this.reflectSymbol = reflectSymbol;
};
var reifySymbol = function (s) {
    return function (f) {
        return (function (dictIsSymbol) {
            return f(dictIsSymbol);
        })({
            reflectSymbol: function (v) {
                return s;
            }
        })(SProxy.value);
    };
};
var reflectSymbol = function (dict) {
    return dict.reflectSymbol;
};
var isSymbolTypeConcat = function (dictIsSymbol) {
    return function (dictIsSymbol1) {
        return new IsSymbol(function (v) {
            return reflectSymbol(dictIsSymbol)(SProxy.value) + reflectSymbol(dictIsSymbol1)(SProxy.value);
        });
    };
};
module.exports = {
    IsSymbol: IsSymbol,
    reflectSymbol: reflectSymbol,
    reifySymbol: reifySymbol,
    SProxy: SProxy,
    isSymbolTypeConcat: isSymbolTypeConcat
};

},{"../Data.Semigroup":271,"../Prelude":358,"../Unsafe.Coerce":366}],290:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Second = function (x) {
    return x;
};
var Minute = function (x) {
    return x;
};
var Millisecond = function (x) {
    return x;
};
var Hour = function (x) {
    return x;
};
var showSecond = new Data_Show.Show(function (v) {
    return "(Second " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showMinute = new Data_Show.Show(function (v) {
    return "(Minute " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showMillisecond = new Data_Show.Show(function (v) {
    return "(Millisecond " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showHour = new Data_Show.Show(function (v) {
    return "(Hour " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var ordSecond = Data_Ord.ordInt;
var ordMinute = Data_Ord.ordInt;
var ordMillisecond = Data_Ord.ordInt;
var ordHour = Data_Ord.ordInt;
var genericSecond = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Component.Second" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Second))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Component.Second", [ {
        sigConstructor: "Data.Time.Component.Second",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Component.Second", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var genericMinute = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Component.Minute" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Minute))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Component.Minute", [ {
        sigConstructor: "Data.Time.Component.Minute",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Component.Minute", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var genericMillisecond = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Component.Millisecond" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Millisecond))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Component.Millisecond", [ {
        sigConstructor: "Data.Time.Component.Millisecond",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Component.Millisecond", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var genericHour = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Component.Hour" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Hour))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Component.Hour", [ {
        sigConstructor: "Data.Time.Component.Hour",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Component.Hour", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var eqSecond = Data_Eq.eqInt;
var eqMinute = Data_Eq.eqInt;
var eqMillisecond = Data_Eq.eqInt;
var eqHour = Data_Eq.eqInt;
var boundedSecond = new Data_Bounded.Bounded(function () {
    return ordSecond;
}, 0, 59);
var boundedMinute = new Data_Bounded.Bounded(function () {
    return ordMinute;
}, 0, 59);
var boundedMillisecond = new Data_Bounded.Bounded(function () {
    return ordMillisecond;
}, 0, 999);
var boundedHour = new Data_Bounded.Bounded(function () {
    return ordHour;
}, 0, 23);
var boundedEnumSecond = new Data_Enum.BoundedEnum(function () {
    return boundedSecond;
}, function () {
    return enumSecond;
}, 60, function (v) {
    return v;
}, function (n) {
    if (n >= 0 && n <= 59) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Time.Component line 94, column 1 - line 94, column 49: " + [ n.constructor.name ]);
});
var enumSecond = new Data_Enum.Enum(function () {
    return ordSecond;
}, function ($64) {
    return Data_Enum.toEnum(boundedEnumSecond)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumSecond)($64)));
}, function ($65) {
    return Data_Enum.toEnum(boundedEnumSecond)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumSecond)($65)));
});
var boundedEnumMinute = new Data_Enum.BoundedEnum(function () {
    return boundedMinute;
}, function () {
    return enumMinute;
}, 60, function (v) {
    return v;
}, function (n) {
    if (n >= 0 && n <= 59) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Time.Component line 64, column 1 - line 64, column 49: " + [ n.constructor.name ]);
});
var enumMinute = new Data_Enum.Enum(function () {
    return ordMinute;
}, function ($66) {
    return Data_Enum.toEnum(boundedEnumMinute)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMinute)($66)));
}, function ($67) {
    return Data_Enum.toEnum(boundedEnumMinute)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMinute)($67)));
});
var boundedEnumMillisecond = new Data_Enum.BoundedEnum(function () {
    return boundedMillisecond;
}, function () {
    return enumMillisecond;
}, 1000, function (v) {
    return v;
}, function (n) {
    if (n >= 0 && n <= 999) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Time.Component line 125, column 1 - line 125, column 59: " + [ n.constructor.name ]);
});
var enumMillisecond = new Data_Enum.Enum(function () {
    return ordMillisecond;
}, function ($68) {
    return Data_Enum.toEnum(boundedEnumMillisecond)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMillisecond)($68)));
}, function ($69) {
    return Data_Enum.toEnum(boundedEnumMillisecond)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMillisecond)($69)));
});
var boundedEnumHour = new Data_Enum.BoundedEnum(function () {
    return boundedHour;
}, function () {
    return enumHour;
}, 24, function (v) {
    return v;
}, function (n) {
    if (n >= 0 && n <= 23) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Time.Component line 34, column 1 - line 34, column 45: " + [ n.constructor.name ]);
});
var enumHour = new Data_Enum.Enum(function () {
    return ordHour;
}, function ($70) {
    return Data_Enum.toEnum(boundedEnumHour)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumHour)($70)));
}, function ($71) {
    return Data_Enum.toEnum(boundedEnumHour)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumHour)($71)));
});
module.exports = {
    eqHour: eqHour,
    ordHour: ordHour,
    genericHour: genericHour,
    boundedHour: boundedHour,
    enumHour: enumHour,
    boundedEnumHour: boundedEnumHour,
    showHour: showHour,
    eqMinute: eqMinute,
    ordMinute: ordMinute,
    genericMinute: genericMinute,
    boundedMinute: boundedMinute,
    enumMinute: enumMinute,
    boundedEnumMinute: boundedEnumMinute,
    showMinute: showMinute,
    eqSecond: eqSecond,
    ordSecond: ordSecond,
    genericSecond: genericSecond,
    boundedSecond: boundedSecond,
    enumSecond: enumSecond,
    boundedEnumSecond: boundedEnumSecond,
    showSecond: showSecond,
    eqMillisecond: eqMillisecond,
    ordMillisecond: ordMillisecond,
    genericMillisecond: genericMillisecond,
    boundedMillisecond: boundedMillisecond,
    enumMillisecond: enumMillisecond,
    boundedEnumMillisecond: boundedEnumMillisecond,
    showMillisecond: showMillisecond
};

},{"../Control.Apply":7,"../Control.Semigroupoid":66,"../Data.Boolean":131,"../Data.Bounded":134,"../Data.Enum":155,"../Data.Eq":157,"../Data.Generic":186,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Data.Unit":302,"../Prelude":358}],291:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Generic = require("../Data.Generic");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Seconds = function (x) {
    return x;
};
var Minutes = function (x) {
    return x;
};
var Milliseconds = function (x) {
    return x;
};
var Hours = function (x) {
    return x;
};
var Days = function (x) {
    return x;
};
var Duration = function (fromDuration, toDuration) {
    this.fromDuration = fromDuration;
    this.toDuration = toDuration;
};
var toDuration = function (dict) {
    return dict.toDuration;
};
var showSeconds = new Data_Show.Show(function (v) {
    return "(Seconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showMinutes = new Data_Show.Show(function (v) {
    return "(Minutes " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showMilliseconds = new Data_Show.Show(function (v) {
    return "(Milliseconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showHours = new Data_Show.Show(function (v) {
    return "(Hours " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showDays = new Data_Show.Show(function (v) {
    return "(Days " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var semiringSeconds = Data_Semiring.semiringNumber;
var semiringMinutes = Data_Semiring.semiringNumber;
var semiringMilliseconds = Data_Semiring.semiringNumber;
var semiringHours = Data_Semiring.semiringNumber;
var semiringDays = Data_Semiring.semiringNumber;
var ringSeconds = Data_Ring.ringNumber;
var ringMinutes = Data_Ring.ringNumber;
var ringMilliseconds = Data_Ring.ringNumber;
var ringHours = Data_Ring.ringNumber;
var ringDays = Data_Ring.ringNumber;
var ordSeconds = Data_Ord.ordNumber;
var ordMinutes = Data_Ord.ordNumber;
var ordMilliseconds = Data_Ord.ordNumber;
var ordHours = Data_Ord.ordNumber;
var ordDays = Data_Ord.ordNumber;
var newtypeSeconds = new Data_Newtype.Newtype(function (n) {
    return n;
}, Seconds);
var newtypeMinutes = new Data_Newtype.Newtype(function (n) {
    return n;
}, Minutes);
var newtypeMilliseconds = new Data_Newtype.Newtype(function (n) {
    return n;
}, Milliseconds);
var newtypeHours = new Data_Newtype.Newtype(function (n) {
    return n;
}, Hours);
var newtypeDays = new Data_Newtype.Newtype(function (n) {
    return n;
}, Days);
var genericSeconds = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Seconds" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Seconds))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Seconds", [ {
        sigConstructor: "Data.Time.Duration.Seconds",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Seconds", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var genericMinutes = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Minutes" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Minutes))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Minutes", [ {
        sigConstructor: "Data.Time.Duration.Minutes",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Minutes", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var genericMilliseconds = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Milliseconds" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Milliseconds))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Milliseconds", [ {
        sigConstructor: "Data.Time.Duration.Milliseconds",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Milliseconds", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var genericHours = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Hours" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Hours))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Hours", [ {
        sigConstructor: "Data.Time.Duration.Hours",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Hours", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var genericDays = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Days" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Days))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Days", [ {
        sigConstructor: "Data.Time.Duration.Days",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Days", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var fromDuration = function (dict) {
    return dict.fromDuration;
};
var eqSeconds = Data_Eq.eqNumber;
var eqMinutes = Data_Eq.eqNumber;
var eqMilliseconds = Data_Eq.eqNumber;
var eqHours = Data_Eq.eqNumber;
var eqDays = Data_Eq.eqNumber;
var durationSeconds = new Duration(Data_Newtype.over(newtypeSeconds)(newtypeMilliseconds)(Seconds)(function (v) {
    return v * 1000.0;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeSeconds)(Milliseconds)(function (v) {
    return v / 1000.0;
}));
var durationMinutes = new Duration(Data_Newtype.over(newtypeMinutes)(newtypeMilliseconds)(Minutes)(function (v) {
    return v * 60000.0;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeMinutes)(Milliseconds)(function (v) {
    return v / 60000.0;
}));
var durationMilliseconds = new Duration(Control_Category.id(Control_Category.categoryFn), Control_Category.id(Control_Category.categoryFn));
var durationHours = new Duration(Data_Newtype.over(newtypeHours)(newtypeMilliseconds)(Hours)(function (v) {
    return v * 3600000.0;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeHours)(Milliseconds)(function (v) {
    return v / 3600000.0;
}));
var durationDays = new Duration(Data_Newtype.over(newtypeDays)(newtypeMilliseconds)(Days)(function (v) {
    return v * 8.64e7;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeDays)(Milliseconds)(function (v) {
    return v / 8.64e7;
}));
var convertDuration = function (dictDuration) {
    return function (dictDuration1) {
        return function ($80) {
            return toDuration(dictDuration1)(fromDuration(dictDuration)($80));
        };
    };
};
module.exports = {
    fromDuration: fromDuration,
    toDuration: toDuration,
    Milliseconds: Milliseconds,
    Seconds: Seconds,
    Minutes: Minutes,
    Hours: Hours,
    Days: Days,
    Duration: Duration,
    convertDuration: convertDuration,
    newtypeMilliseconds: newtypeMilliseconds,
    genericMilliseconds: genericMilliseconds,
    eqMilliseconds: eqMilliseconds,
    ordMilliseconds: ordMilliseconds,
    semiringMilliseconds: semiringMilliseconds,
    ringMilliseconds: ringMilliseconds,
    showMilliseconds: showMilliseconds,
    newtypeSeconds: newtypeSeconds,
    genericSeconds: genericSeconds,
    eqSeconds: eqSeconds,
    ordSeconds: ordSeconds,
    semiringSeconds: semiringSeconds,
    ringSeconds: ringSeconds,
    showSeconds: showSeconds,
    newtypeMinutes: newtypeMinutes,
    genericMinutes: genericMinutes,
    eqMinutes: eqMinutes,
    ordMinutes: ordMinutes,
    semiringMinutes: semiringMinutes,
    ringMinutes: ringMinutes,
    showMinutes: showMinutes,
    newtypeHours: newtypeHours,
    genericHours: genericHours,
    eqHours: eqHours,
    ordHours: ordHours,
    semiringHours: semiringHours,
    ringHours: ringHours,
    showHours: showHours,
    newtypeDays: newtypeDays,
    genericDays: genericDays,
    eqDays: eqDays,
    ordDays: ordDays,
    semiringDays: semiringDays,
    ringDays: ringDays,
    showDays: showDays,
    durationMilliseconds: durationMilliseconds,
    durationSeconds: durationSeconds,
    durationMinutes: durationMinutes,
    durationHours: durationHours,
    durationDays: durationDays
};

},{"../Control.Apply":7,"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Eq":157,"../Data.EuclideanRing":159,"../Data.Generic":186,"../Data.Maybe":234,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Data.Unit":302,"../Prelude":358}],292:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Bounded = require("../Data.Bounded");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Int = require("../Data.Int");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Time_Component = require("../Data.Time.Component");
var Data_Time_Duration = require("../Data.Time.Duration");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var $$Math = require("../Math");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Time = (function () {
    function Time(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Time.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Time(value0, value1, value2, value3);
                };
            };
        };
    };
    return Time;
})();
var showTime = new Data_Show.Show(function (v) {
    return "(Time " + (Data_Show.show(Data_Time_Component.showHour)(v.value0) + (" " + (Data_Show.show(Data_Time_Component.showMinute)(v.value1) + (" " + (Data_Show.show(Data_Time_Component.showSecond)(v.value2) + (" " + (Data_Show.show(Data_Time_Component.showMillisecond)(v.value3) + ")")))))));
});
var setSecond = function (s) {
    return function (v) {
        return new Time(v.value0, v.value1, s, v.value3);
    };
};
var setMinute = function (m) {
    return function (v) {
        return new Time(v.value0, m, v.value2, v.value3);
    };
};
var setMillisecond = function (ms) {
    return function (v) {
        return new Time(v.value0, v.value1, v.value2, ms);
    };
};
var setHour = function (h) {
    return function (v) {
        return new Time(h, v.value1, v.value2, v.value3);
    };
};
var second = function (v) {
    return v.value2;
};
var minute = function (v) {
    return v.value1;
};
var millisecond = function (v) {
    return v.value3;
};
var millisToTime = function (v) {
    var hours = $$Math.floor(v / 3600000.0);
    var minutes = $$Math.floor((v - hours * 3600000.0) / 60000.0);
    var seconds = $$Math.floor((v - (hours * 3600000.0 + minutes * 60000.0)) / 1000.0);
    var milliseconds = v - (hours * 3600000.0 + minutes * 60000.0 + seconds * 1000.0);
    return Data_Maybe.fromJust()(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Time.create)(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(Data_Int.floor(hours))))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(Data_Int.floor(minutes))))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(Data_Int.floor(seconds))))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Int.floor(milliseconds))));
};
var hour = function (v) {
    return v.value0;
};
var timeToMillis = function (t) {
    return Data_Time_Duration.Milliseconds(3600000.0 * Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(hour(t))) + 60000.0 * Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(minute(t))) + 1000.0 * Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(second(t))) + Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(millisecond(t))));
};
var genericTime = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Time" && v.value1.length === 4)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Time.create))(Data_Generic.fromSpine(Data_Time_Component.genericHour)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time_Component.genericMinute)(v["value1"][1](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time_Component.genericSecond)(v["value1"][2](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time_Component.genericMillisecond)(v["value1"][3](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Time", [ {
        sigConstructor: "Data.Time.Time",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Time_Component.genericHour)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Time_Component.genericMinute)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Time_Component.genericSecond)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Time_Component.genericMillisecond)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Time", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Time_Component.genericHour)(v.value0);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Time_Component.genericMinute)(v.value1);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Time_Component.genericSecond)(v.value2);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Time_Component.genericMillisecond)(v.value3);
    } ]);
});
var eqTime = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(Data_Time_Component.eqHour)(x.value0)(y.value0) && Data_Eq.eq(Data_Time_Component.eqMinute)(x.value1)(y.value1) && Data_Eq.eq(Data_Time_Component.eqSecond)(x.value2)(y.value2) && Data_Eq.eq(Data_Time_Component.eqMillisecond)(x.value3)(y.value3);
    };
});
var ordTime = new Data_Ord.Ord(function () {
    return eqTime;
}, function (x) {
    return function (y) {
        var v = Data_Ord.compare(Data_Time_Component.ordHour)(x.value0)(y.value0);
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        var v1 = Data_Ord.compare(Data_Time_Component.ordMinute)(x.value1)(y.value1);
        if (v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        var v2 = Data_Ord.compare(Data_Time_Component.ordSecond)(x.value2)(y.value2);
        if (v2 instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v2 instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        return Data_Ord.compare(Data_Time_Component.ordMillisecond)(x.value3)(y.value3);
    };
});
var diff = function (dictDuration) {
    return function (t1) {
        return function (t2) {
            return Data_Time_Duration.toDuration(dictDuration)(Data_Ring.sub(Data_Time_Duration.ringMilliseconds)(timeToMillis(t1))(timeToMillis(t2)));
        };
    };
};
var boundedTime = new Data_Bounded.Bounded(function () {
    return ordTime;
}, new Time(Data_Bounded.bottom(Data_Time_Component.boundedHour), Data_Bounded.bottom(Data_Time_Component.boundedMinute), Data_Bounded.bottom(Data_Time_Component.boundedSecond), Data_Bounded.bottom(Data_Time_Component.boundedMillisecond)), new Time(Data_Bounded.top(Data_Time_Component.boundedHour), Data_Bounded.top(Data_Time_Component.boundedMinute), Data_Bounded.top(Data_Time_Component.boundedSecond), Data_Bounded.top(Data_Time_Component.boundedMillisecond)));
var maxTime = timeToMillis(Data_Bounded.top(boundedTime));
var adjust = function (dictDuration) {
    return function (d) {
        return function (t) {
            var tLength = timeToMillis(t);
            var d$prime = Data_Time_Duration.fromDuration(dictDuration)(d);
            var wholeDays = Data_Time_Duration.Days($$Math.floor(Data_Newtype.unwrap(Data_Time_Duration.newtypeMilliseconds)(d$prime) / 8.64e7));
            var msAdjust = Data_Ring.sub(Data_Time_Duration.ringMilliseconds)(d$prime)(Data_Time_Duration.fromDuration(Data_Time_Duration.durationDays)(wholeDays));
            var msAdjusted = Data_Semiring.add(Data_Time_Duration.semiringMilliseconds)(tLength)(msAdjust);
            var wrap = (function () {
                var $134 = Data_Ord.greaterThan(Data_Time_Duration.ordMilliseconds)(msAdjusted)(maxTime);
                if ($134) {
                    return 1.0;
                };
                var $135 = Data_Ord.lessThan(Data_Time_Duration.ordMilliseconds)(msAdjusted)(Data_Ring.negate(Data_Time_Duration.ringMilliseconds)(maxTime));
                if ($135) {
                    return -1.0;
                };
                return 0.0;
            })();
            return new Data_Tuple.Tuple(Data_Semiring.add(Data_Time_Duration.semiringDays)(wholeDays)(wrap), millisToTime(Data_Ring.sub(Data_Time_Duration.ringMilliseconds)(msAdjusted)(8.64e7 * wrap)));
        };
    };
};
module.exports = {
    Time: Time,
    hour: hour,
    setHour: setHour,
    minute: minute,
    setMinute: setMinute,
    second: second,
    setSecond: setSecond,
    millisecond: millisecond,
    setMillisecond: setMillisecond,
    adjust: adjust,
    diff: diff,
    eqTime: eqTime,
    ordTime: ordTime,
    genericTime: genericTime,
    boundedTime: boundedTime,
    showTime: showTime
};

},{"../Control.Apply":7,"../Data.Bounded":134,"../Data.Enum":155,"../Data.Eq":157,"../Data.EuclideanRing":159,"../Data.Function":172,"../Data.Functor":180,"../Data.Generic":186,"../Data.HeytingAlgebra":188,"../Data.Int":193,"../Data.Maybe":234,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Data.Time.Component":290,"../Data.Time.Duration":291,"../Data.Tuple":298,"../Data.Unit":302,"../Math":353,"../Partial.Unsafe":355,"../Prelude":358}],293:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Data_Functor = require("../Data.Functor");
var Data_Traversable_Accum = require("../Data.Traversable.Accum");
var Prelude = require("../Prelude");
var StateR = function (x) {
    return x;
};
var StateL = function (x) {
    return x;
};
var stateR = function (v) {
    return v;
};
var stateL = function (v) {
    return v;
};
var functorStateR = new Data_Functor.Functor(function (f) {
    return function (k) {
        return function (s) {
            var v = stateR(k)(s);
            return {
                accum: v.accum,
                value: f(v.value)
            };
        };
    };
});
var functorStateL = new Data_Functor.Functor(function (f) {
    return function (k) {
        return function (s) {
            var v = stateL(k)(s);
            return {
                accum: v.accum,
                value: f(v.value)
            };
        };
    };
});
var applyStateR = new Control_Apply.Apply(function () {
    return functorStateR;
}, function (f) {
    return function (x) {
        return function (s) {
            var v = stateR(x)(s);
            var v1 = stateR(f)(v.accum);
            return {
                accum: v1.accum,
                value: v1.value(v.value)
            };
        };
    };
});
var applyStateL = new Control_Apply.Apply(function () {
    return functorStateL;
}, function (f) {
    return function (x) {
        return function (s) {
            var v = stateL(f)(s);
            var v1 = stateL(x)(v.accum);
            return {
                accum: v1.accum,
                value: v.value(v1.value)
            };
        };
    };
});
var applicativeStateR = new Control_Applicative.Applicative(function () {
    return applyStateR;
}, function (a) {
    return function (s) {
        return {
            accum: s,
            value: a
        };
    };
});
var applicativeStateL = new Control_Applicative.Applicative(function () {
    return applyStateL;
}, function (a) {
    return function (s) {
        return {
            accum: s,
            value: a
        };
    };
});
module.exports = {
    StateL: StateL,
    stateL: stateL,
    StateR: StateR,
    stateR: stateR,
    functorStateL: functorStateL,
    applyStateL: applyStateL,
    applicativeStateL: applicativeStateL,
    functorStateR: functorStateR,
    applyStateR: applyStateR,
    applicativeStateR: applicativeStateR
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Data.Functor":180,"../Data.Traversable.Accum":294,"../Prelude":358}],294:[function(require,module,exports){
arguments[4][243][0].apply(exports,arguments)
},{"dup":243}],295:[function(require,module,exports){
"use strict";

// jshint maxparams: 3

exports.traverseArrayImpl = function () {
  function Cont(fn) {
    this.fn = fn;
  }

  var emptyList = {};

  var ConsCell = function (head, tail) {
    this.head = head;
    this.tail = tail;
  };

  function consList(x) {
    return function (xs) {
      return new ConsCell(x, xs);
    };
  }

  function listToArray(list) {
    var arr = [];
    var xs = list;
    while (xs !== emptyList) {
      arr.push(xs.head);
      xs = xs.tail;
    }
    return arr;
  }

  return function (apply) {
    return function (map) {
      return function (pure) {
        return function (f) {
          var buildFrom = function (x, ys) {
            return apply(map(consList)(f(x)))(ys);
          };

          var go = function (acc, currentLen, xs) {
            if (currentLen === 0) {
              return acc;
            } else {
              var last = xs[currentLen - 1];
              return new Cont(function () {
                return go(buildFrom(last, acc), currentLen - 1, xs);
              });
            }
          };

          return function (array) {
            var result = go(pure(emptyList), array.length, array);
            while (result instanceof Cont) {
              result = result.fn();
            }

            return map(listToArray)(result);
          };
        };
      };
    };
  };
}();

},{}],296:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Traversable_Accum = require("../Data.Traversable.Accum");
var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal");
var Prelude = require("../Prelude");
var Traversable = function (Foldable1, Functor0, sequence, traverse) {
    this.Foldable1 = Foldable1;
    this.Functor0 = Functor0;
    this.sequence = sequence;
    this.traverse = traverse;
};
var traverse = function (dict) {
    return dict.traverse;
};
var traversableMultiplicative = new Traversable(function () {
    return Data_Foldable.foldableMultiplicative;
}, function () {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Multiplicative.Multiplicative)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
        };
    };
});
var traversableMaybe = new Traversable(function () {
    return Data_Foldable.foldableMaybe;
}, function () {
    return Data_Maybe.functorMaybe;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
        };
        if (v instanceof Data_Maybe.Just) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Traversable line 86, column 1 - line 86, column 47: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
            };
            if (v1 instanceof Data_Maybe.Just) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Traversable line 86, column 1 - line 86, column 47: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var traversableDual = new Traversable(function () {
    return Data_Foldable.foldableDual;
}, function () {
    return Data_Monoid_Dual.functorDual;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Dual.Dual)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Dual.Dual)(f(v));
        };
    };
});
var traversableDisj = new Traversable(function () {
    return Data_Foldable.foldableDisj;
}, function () {
    return Data_Monoid_Disj.functorDisj;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Disj.Disj)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Disj.Disj)(f(v));
        };
    };
});
var traversableConj = new Traversable(function () {
    return Data_Foldable.foldableConj;
}, function () {
    return Data_Monoid_Conj.functorConj;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Conj.Conj)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Conj.Conj)(f(v));
        };
    };
});
var traversableAdditive = new Traversable(function () {
    return Data_Foldable.foldableAdditive;
}, function () {
    return Data_Monoid_Additive.functorAdditive;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Additive.Additive)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Additive.Additive)(f(v));
        };
    };
});
var sequenceDefault = function (dictTraversable) {
    return function (dictApplicative) {
        return traverse(dictTraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
    };
};
var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
}, function () {
    return Data_Functor.functorArray;
}, function (dictApplicative) {
    return sequenceDefault(traversableArray)(dictApplicative);
}, function (dictApplicative) {
    return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
});
var sequence = function (dict) {
    return dict.sequence;
};
var traversableFirst = new Traversable(function () {
    return Data_Foldable.foldableFirst;
}, function () {
    return Data_Maybe_First.functorFirst;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_First.First)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_First.First)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traversableLast = new Traversable(function () {
    return Data_Foldable.foldableLast;
}, function () {
    return Data_Maybe_Last.functorLast;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traverseDefault = function (dictTraversable) {
    return function (dictApplicative) {
        return function (f) {
            return function (ta) {
                return sequence(dictTraversable)(dictApplicative)(Data_Functor.map(dictTraversable.Functor0())(f)(ta));
            };
        };
    };
};
var mapAccumR = function (dictTraversable) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateR(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateR)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanr = function (dictTraversable) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumR(dictTraversable)(function (b) {
                    return function (a) {
                        var b$prime = f(a)(b);
                        return {
                            accum: b$prime,
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var mapAccumL = function (dictTraversable) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateL(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateL)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanl = function (dictTraversable) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumL(dictTraversable)(function (b) {
                    return function (a) {
                        var b$prime = f(b)(a);
                        return {
                            accum: b$prime,
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var $$for = function (dictApplicative) {
    return function (dictTraversable) {
        return function (x) {
            return function (f) {
                return traverse(dictTraversable)(dictApplicative)(f)(x);
            };
        };
    };
};
module.exports = {
    Traversable: Traversable,
    traverse: traverse,
    sequence: sequence,
    traverseDefault: traverseDefault,
    sequenceDefault: sequenceDefault,
    "for": $$for,
    scanl: scanl,
    scanr: scanr,
    mapAccumL: mapAccumL,
    mapAccumR: mapAccumR,
    traversableArray: traversableArray,
    traversableMaybe: traversableMaybe,
    traversableFirst: traversableFirst,
    traversableLast: traversableLast,
    traversableAdditive: traversableAdditive,
    traversableDual: traversableDual,
    traversableConj: traversableConj,
    traversableDisj: traversableDisj,
    traversableMultiplicative: traversableMultiplicative
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Category":12,"../Data.Foldable":164,"../Data.Functor":180,"../Data.Maybe":234,"../Data.Maybe.First":232,"../Data.Maybe.Last":233,"../Data.Monoid.Additive":236,"../Data.Monoid.Conj":237,"../Data.Monoid.Disj":238,"../Data.Monoid.Dual":239,"../Data.Monoid.Multiplicative":241,"../Data.Traversable.Accum":294,"../Data.Traversable.Accum.Internal":293,"../Prelude":358,"./foreign":295}],297:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex");
var Data_Function = require("../Data.Function");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Traversable = require("../Data.Traversable");
var Data_Traversable_Accum = require("../Data.Traversable.Accum");
var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var TraversableWithIndex = function (FoldableWithIndex1, FunctorWithIndex0, Traversable2, traverseWithIndex) {
    this.FoldableWithIndex1 = FoldableWithIndex1;
    this.FunctorWithIndex0 = FunctorWithIndex0;
    this.Traversable2 = Traversable2;
    this.traverseWithIndex = traverseWithIndex;
};
var traverseWithIndexDefault = function (dictTraversableWithIndex) {
    return function (dictApplicative) {
        return function (f) {
            return function ($17) {
                return Data_Traversable.sequence(dictTraversableWithIndex.Traversable2())(dictApplicative)(Data_FunctorWithIndex.mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0())(f)($17));
            };
        };
    };
};
var traverseWithIndex = function (dict) {
    return dict.traverseWithIndex;
};
var traversableWithIndexMultiplicative = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexMultiplicative;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexMultiplicative;
}, function () {
    return Data_Traversable.traversableMultiplicative;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableMultiplicative)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexMaybe = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexMaybe;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexMaybe;
}, function () {
    return Data_Traversable.traversableMaybe;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableMaybe)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexLast = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexLast;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexLast;
}, function () {
    return Data_Traversable.traversableLast;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableLast)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexFirst = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexFirst;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexFirst;
}, function () {
    return Data_Traversable.traversableFirst;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableFirst)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexDual = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexDual;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexDual;
}, function () {
    return Data_Traversable.traversableDual;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableDual)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexDisj = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexDisj;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexDisj;
}, function () {
    return Data_Traversable.traversableDisj;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableDisj)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexConj = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexConj;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexConj;
}, function () {
    return Data_Traversable.traversableConj;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableConj)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexArray = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexArray;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexArray;
}, function () {
    return Data_Traversable.traversableArray;
}, function (dictApplicative) {
    return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
});
var traversableWithIndexAdditive = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexAdditive;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexAdditive;
}, function () {
    return Data_Traversable.traversableAdditive;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableAdditive)(dictApplicative)(f(Data_Unit.unit));
    };
});
var mapAccumRWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateR(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateR)(function (i) {
                    return function (a) {
                        return function (s) {
                            return f(i)(s)(a);
                        };
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanrWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumRWithIndex(dictTraversableWithIndex)(function (i) {
                    return function (b) {
                        return function (a) {
                            var b$prime = f(i)(a)(b);
                            return {
                                accum: b$prime,
                                value: b$prime
                            };
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var mapAccumLWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateL(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateL)(function (i) {
                    return function (a) {
                        return function (s) {
                            return f(i)(s)(a);
                        };
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanlWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumLWithIndex(dictTraversableWithIndex)(function (i) {
                    return function (b) {
                        return function (a) {
                            var b$prime = f(i)(b)(a);
                            return {
                                accum: b$prime,
                                value: b$prime
                            };
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var forWithIndex = function (dictApplicative) {
    return function (dictTraversableWithIndex) {
        return Data_Function.flip(traverseWithIndex(dictTraversableWithIndex)(dictApplicative));
    };
};
module.exports = {
    TraversableWithIndex: TraversableWithIndex,
    traverseWithIndex: traverseWithIndex,
    traverseWithIndexDefault: traverseWithIndexDefault,
    forWithIndex: forWithIndex,
    scanlWithIndex: scanlWithIndex,
    mapAccumLWithIndex: mapAccumLWithIndex,
    scanrWithIndex: scanrWithIndex,
    mapAccumRWithIndex: mapAccumRWithIndex,
    traversableWithIndexArray: traversableWithIndexArray,
    traversableWithIndexMaybe: traversableWithIndexMaybe,
    traversableWithIndexFirst: traversableWithIndexFirst,
    traversableWithIndexLast: traversableWithIndexLast,
    traversableWithIndexAdditive: traversableWithIndexAdditive,
    traversableWithIndexDual: traversableWithIndexDual,
    traversableWithIndexConj: traversableWithIndexConj,
    traversableWithIndexDisj: traversableWithIndexDisj,
    traversableWithIndexMultiplicative: traversableWithIndexMultiplicative
};

},{"../Control.Semigroupoid":66,"../Data.FoldableWithIndex":165,"../Data.Function":172,"../Data.FunctorWithIndex":182,"../Data.Maybe":234,"../Data.Maybe.First":232,"../Data.Maybe.Last":233,"../Data.Monoid.Additive":236,"../Data.Monoid.Conj":237,"../Data.Monoid.Disj":238,"../Data.Monoid.Dual":239,"../Data.Monoid.Multiplicative":241,"../Data.Traversable":296,"../Data.Traversable.Accum":294,"../Data.Traversable.Accum.Internal":293,"../Data.Unit":302,"../Prelude":358}],298:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Bitraversable = require("../Data.Bitraversable");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Distributive = require("../Data.Distributive");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Type_Equality = require("../Type.Equality");
var Tuple = (function () {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
})();
var uncurry = function (f) {
    return function (v) {
        return f(v.value0)(v.value1);
    };
};
var swap = function (v) {
    return new Tuple(v.value1, v.value0);
};
var snd = function (v) {
    return v.value1;
};
var showTuple = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var semiringTuple = function (dictSemiring) {
    return function (dictSemiring1) {
        return new Data_Semiring.Semiring(function (v) {
            return function (v1) {
                return new Tuple(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0), Data_Semiring.add(dictSemiring1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0), Data_Semiring.mul(dictSemiring1)(v.value1)(v1.value1));
            };
        }, new Tuple(Data_Semiring.one(dictSemiring), Data_Semiring.one(dictSemiring1)), new Tuple(Data_Semiring.zero(dictSemiring), Data_Semiring.zero(dictSemiring1)));
    };
};
var semigroupoidTuple = new Control_Semigroupoid.Semigroupoid(function (v) {
    return function (v1) {
        return new Tuple(v1.value0, v.value1);
    };
});
var semigroupTuple = function (dictSemigroup) {
    return function (dictSemigroup1) {
        return new Data_Semigroup.Semigroup(function (v) {
            return function (v1) {
                return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
            };
        });
    };
};
var ringTuple = function (dictRing) {
    return function (dictRing1) {
        return new Data_Ring.Ring(function () {
            return semiringTuple(dictRing.Semiring0())(dictRing1.Semiring0());
        }, function (v) {
            return function (v1) {
                return new Tuple(Data_Ring.sub(dictRing)(v.value0)(v1.value0), Data_Ring.sub(dictRing1)(v.value1)(v1.value1));
            };
        });
    };
};
var monoidTuple = function (dictMonoid) {
    return function (dictMonoid1) {
        return new Data_Monoid.Monoid(function () {
            return semigroupTuple(dictMonoid.Semigroup0())(dictMonoid1.Semigroup0());
        }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
    };
};
var lookup = function (dictFoldable) {
    return function (dictEq) {
        return function (a) {
            return function ($264) {
                return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
                    var $146 = Data_Eq.eq(dictEq)(a)(v.value0);
                    if ($146) {
                        return new Data_Maybe.Just(v.value1);
                    };
                    return Data_Maybe.Nothing.value;
                })($264));
            };
        };
    };
};
var heytingAlgebraTuple = function (dictHeytingAlgebra) {
    return function (dictHeytingAlgebra1) {
        return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
            return function (v1) {
                return new Tuple(Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.conj(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.disj(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, new Tuple(Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra1)), function (v) {
            return function (v1) {
                return new Tuple(Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.implies(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return new Tuple(Data_HeytingAlgebra.not(dictHeytingAlgebra)(v.value0), Data_HeytingAlgebra.not(dictHeytingAlgebra1)(v.value1));
        }, new Tuple(Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra1)));
    };
};
var functorTuple = new Data_Functor.Functor(function (f) {
    return function (v) {
        return new Tuple(v.value0, f(v.value1));
    };
});
var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));
var fst = function (v) {
    return v.value0;
};
var lazyTuple = function (dictLazy) {
    return function (dictLazy1) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer(dictLazy)(function (v) {
                return fst(f(Data_Unit.unit));
            }), Control_Lazy.defer(dictLazy1)(function (v) {
                return snd(f(Data_Unit.unit));
            }));
        });
    };
};
var foldableTuple = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v.value1)(z);
        };
    };
});
var traversableTuple = new Data_Traversable.Traversable(function () {
    return foldableTuple;
}, function () {
    return functorTuple;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create(v.value0))(v.value1);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create(v.value0))(f(v.value1));
        };
    };
});
var extendTuple = new Control_Extend.Extend(function () {
    return functorTuple;
}, function (f) {
    return function (v) {
        return new Tuple(v.value0, f(v));
    };
});
var eqTuple = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
            };
        });
    };
};
var ordTuple = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function (x) {
            return function (y) {
                var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                if (v instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
            };
        });
    };
};
var eq1Tuple = function (dictEq) {
    return new Data_Eq.Eq1(function (dictEq1) {
        return Data_Eq.eq(eqTuple(dictEq)(dictEq1));
    });
};
var ord1Tuple = function (dictOrd) {
    return new Data_Ord.Ord1(function () {
        return eq1Tuple(dictOrd.Eq0());
    }, function (dictOrd1) {
        return Data_Ord.compare(ordTuple(dictOrd)(dictOrd1));
    });
};
var distributiveTuple = function (dictTypeEquals) {
    return new Data_Distributive.Distributive(function () {
        return functorTuple;
    }, function (dictFunctor) {
        return Data_Distributive.collectDefault(distributiveTuple(dictTypeEquals))(dictFunctor);
    }, function (dictFunctor) {
        return function ($265) {
            return Tuple.create(Type_Equality.from(dictTypeEquals)(Data_Unit.unit))(Data_Functor.map(dictFunctor)(snd)($265));
        };
    });
};
var curry = function (f) {
    return function (a) {
        return function (b) {
            return f(new Tuple(a, b));
        };
    };
};
var comonadTuple = new Control_Comonad.Comonad(function () {
    return extendTuple;
}, snd);
var commutativeRingTuple = function (dictCommutativeRing) {
    return function (dictCommutativeRing1) {
        return new Data_CommutativeRing.CommutativeRing(function () {
            return ringTuple(dictCommutativeRing.Ring0())(dictCommutativeRing1.Ring0());
        });
    };
};
var boundedTuple = function (dictBounded) {
    return function (dictBounded1) {
        return new Data_Bounded.Bounded(function () {
            return ordTuple(dictBounded.Ord0())(dictBounded1.Ord0());
        }, new Tuple(Data_Bounded.bottom(dictBounded), Data_Bounded.bottom(dictBounded1)), new Tuple(Data_Bounded.top(dictBounded), Data_Bounded.top(dictBounded1)));
    };
};
var booleanAlgebraTuple = function (dictBooleanAlgebra) {
    return function (dictBooleanAlgebra1) {
        return new Data_BooleanAlgebra.BooleanAlgebra(function () {
            return heytingAlgebraTuple(dictBooleanAlgebra.HeytingAlgebra0())(dictBooleanAlgebra1.HeytingAlgebra0());
        });
    };
};
var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Tuple(f(v.value0), g(v.value1));
        };
    };
});
var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (f) {
        return function (g) {
            return function (v) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(g(v.value1));
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (v) {
                return g(f(z)(v.value0))(v.value1);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (v) {
                return f(v.value0)(g(v.value1)(z));
            };
        };
    };
});
var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableTuple;
}, function () {
    return bifunctorTuple;
}, function (dictApplicative) {
    return function (v) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create)(v.value0))(v.value1);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (g) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create)(f(v.value0)))(g(v.value1));
            };
        };
    };
});
var biapplyTuple = new Control_Biapply.Biapply(function () {
    return bifunctorTuple;
}, function (v) {
    return function (v1) {
        return new Tuple(v.value0(v1.value0), v.value1(v1.value1));
    };
});
var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
    return biapplyTuple;
}, Tuple.create);
var applyTuple = function (dictSemigroup) {
    return new Control_Apply.Apply(function () {
        return functorTuple;
    }, function (v) {
        return function (v1) {
            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
        };
    });
};
var bindTuple = function (dictSemigroup) {
    return new Control_Bind.Bind(function () {
        return applyTuple(dictSemigroup);
    }, function (v) {
        return function (f) {
            var v1 = f(v.value1);
            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v1.value1);
        };
    });
};
var applicativeTuple = function (dictMonoid) {
    return new Control_Applicative.Applicative(function () {
        return applyTuple(dictMonoid.Semigroup0());
    }, Tuple.create(Data_Monoid.mempty(dictMonoid)));
};
var monadTuple = function (dictMonoid) {
    return new Control_Monad.Monad(function () {
        return applicativeTuple(dictMonoid);
    }, function () {
        return bindTuple(dictMonoid.Semigroup0());
    });
};
module.exports = {
    Tuple: Tuple,
    fst: fst,
    snd: snd,
    curry: curry,
    uncurry: uncurry,
    swap: swap,
    lookup: lookup,
    showTuple: showTuple,
    eqTuple: eqTuple,
    eq1Tuple: eq1Tuple,
    ordTuple: ordTuple,
    ord1Tuple: ord1Tuple,
    boundedTuple: boundedTuple,
    semigroupoidTuple: semigroupoidTuple,
    semigroupTuple: semigroupTuple,
    monoidTuple: monoidTuple,
    semiringTuple: semiringTuple,
    ringTuple: ringTuple,
    commutativeRingTuple: commutativeRingTuple,
    heytingAlgebraTuple: heytingAlgebraTuple,
    booleanAlgebraTuple: booleanAlgebraTuple,
    functorTuple: functorTuple,
    invariantTuple: invariantTuple,
    bifunctorTuple: bifunctorTuple,
    applyTuple: applyTuple,
    biapplyTuple: biapplyTuple,
    applicativeTuple: applicativeTuple,
    biapplicativeTuple: biapplicativeTuple,
    bindTuple: bindTuple,
    monadTuple: monadTuple,
    extendTuple: extendTuple,
    comonadTuple: comonadTuple,
    lazyTuple: lazyTuple,
    foldableTuple: foldableTuple,
    bifoldableTuple: bifoldableTuple,
    traversableTuple: traversableTuple,
    bitraversableTuple: bitraversableTuple,
    distributiveTuple: distributiveTuple
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Biapplicative":8,"../Control.Biapply":9,"../Control.Bind":11,"../Control.Comonad":13,"../Control.Extend":16,"../Control.Lazy":17,"../Control.Monad":60,"../Control.Semigroupoid":66,"../Data.Bifoldable":123,"../Data.Bifunctor":129,"../Data.Bitraversable":130,"../Data.BooleanAlgebra":132,"../Data.Bounded":134,"../Data.CommutativeRing":141,"../Data.Distributive":151,"../Data.Eq":157,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.Functor.Invariant":178,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.Maybe.First":232,"../Data.Monoid":242,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Data.Traversable":296,"../Data.Unit":302,"../Prelude":358,"../Type.Equality":362}],299:[function(require,module,exports){
"use strict";

exports.unfoldrArrayImpl = function (isNothing) {
  return function (fromJust) {
    return function (fst) {
      return function (snd) {
        return function (f) {
          return function (b) {
            var result = [];
            var value = b;
            while (true) { // eslint-disable-line no-constant-condition
              var maybe = f(value);
              if (isNothing(maybe)) return result;
              var tuple = fromJust(maybe);
              result.push(fst(tuple));
              value = snd(tuple);
            }
          };
        };
      };
    };
  };
};

},{}],300:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Unfoldable = function (unfoldr) {
    this.unfoldr = unfoldr;
};
var unfoldr = function (dict) {
    return dict.unfoldr;
};
var unfoldableArray = new Unfoldable($foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
var replicate = function (dictUnfoldable) {
    return function (n) {
        return function (v) {
            var step = function (i) {
                var $9 = i <= 0;
                if ($9) {
                    return Data_Maybe.Nothing.value;
                };
                return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1 | 0));
            };
            return unfoldr(dictUnfoldable)(step)(n);
        };
    };
};
var replicateA = function (dictApplicative) {
    return function (dictUnfoldable) {
        return function (dictTraversable) {
            return function (n) {
                return function (m) {
                    return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
                };
            };
        };
    };
};
var singleton = function (dictUnfoldable) {
    return replicate(dictUnfoldable)(1);
};
var range = function (dictUnfoldable) {
    return function (start) {
        return function (end) {
            return unfoldr(dictUnfoldable)(function (i) {
                var $10 = i <= end;
                if ($10) {
                    return new Data_Maybe.Just(Data_Tuple.Tuple.create(i)(i + 1 | 0));
                };
                return Data_Maybe.Nothing.value;
            })(start);
        };
    };
};
var none = function (dictUnfoldable) {
    return unfoldr(dictUnfoldable)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Unit.unit);
};
var fromMaybe = function (dictUnfoldable) {
    return unfoldr(dictUnfoldable)(function (b) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Maybe.Nothing.value))(b);
    });
};
module.exports = {
    Unfoldable: Unfoldable,
    unfoldr: unfoldr,
    replicate: replicate,
    replicateA: replicateA,
    none: none,
    singleton: singleton,
    range: range,
    fromMaybe: fromMaybe,
    unfoldableArray: unfoldableArray
};

},{"../Data.Function":172,"../Data.Functor":180,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Ring":267,"../Data.Semiring":273,"../Data.Traversable":296,"../Data.Tuple":298,"../Data.Unit":302,"../Partial.Unsafe":355,"../Prelude":358,"./foreign":299}],301:[function(require,module,exports){
"use strict";

exports.unit = {};

},{}],302:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Show = require("../Data.Show");
var showUnit = new Data_Show.Show(function (v) {
    return "unit";
});
module.exports = {
    showUnit: showUnit,
    unit: $foreign.unit
};

},{"../Data.Show":276,"./foreign":301}],303:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Plus = require("../Control.Plus");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Record_Unsafe = require("../Data.Record.Unsafe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Symbol = require("../Data.Symbol");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Type_Equality = require("../Type.Equality");
var Type_Row = require("../Type.Row");
var VariantRep = function (x) {
    return x;
};
var FProxy = (function () {
    function FProxy() {

    };
    FProxy.value = new FProxy();
    return FProxy;
})();
var VariantMatchCases = {};
var VariantFMatchCases = {};
var VariantTags = function (variantTags) {
    this.variantTags = variantTags;
};
var Contractable = function (contractWith) {
    this.contractWith = contractWith;
};
var variantTagsNil = new VariantTags(function (v) {
    return Data_List_Types.Nil.value;
});
var variantTags = function (dict) {
    return dict.variantTags;
};
var variantTagsCons = function (dictVariantTags) {
    return function (dictIsSymbol) {
        return new VariantTags(function (v) {
            return new Data_List_Types.Cons(Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value), variantTags(dictVariantTags)(Type_Row.RLProxy.value));
        });
    };
};
var variantMatchNil = VariantMatchCases;
var variantMatchCons = function (dictVariantMatchCases) {
    return function (dictRowCons) {
        return function (dictTypeEquals) {
            return VariantMatchCases;
        };
    };
};
var variantFMatchNil = VariantFMatchCases;
var variantFMatchCons = function (dictVariantFMatchCases) {
    return function (dictRowCons) {
        return function (dictTypeEquals) {
            return VariantFMatchCases;
        };
    };
};
var lookupTag = function (tag) {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Types.Cons) {
                if (v.value0 === tag) {
                    $tco_done = true;
                    return true;
                };
                if (Data_Boolean.otherwise) {
                    $copy_v = v.value1;
                    return;
                };
            };
            if (v instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return false;
            };
            throw new Error("Failed pattern match at Data.Variant.Internal line 78, column 8 - line 82, column 18: " + [ v.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return go;
};
var lookup = function (name) {
    return function (tag) {
        var go = function ($copy_v) {
            return function ($copy_v1) {
                var $tco_var_v = $copy_v;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(v, v1) {
                    if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                        if (v.value0 === tag) {
                            $tco_done = true;
                            return v1.value0;
                        };
                        if (Data_Boolean.otherwise) {
                            $tco_var_v = v.value1;
                            $copy_v1 = v1.value1;
                            return;
                        };
                    };
                    $tco_done = true;
                    return Partial_Unsafe.unsafeCrashWith("Data.Variant: impossible `" + (name + "`"));
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_v, $copy_v1);
                };
                return $tco_result;
            };
        };
        return go;
    };
};
var lookupEq = function (tags) {
    return function (eqs) {
        return function (v) {
            return function (v1) {
                if (v.type === v1.type) {
                    return lookup("eq")(v.type)(tags)(eqs)(v.value)(v1.value);
                };
                if (Data_Boolean.otherwise) {
                    return false;
                };
                throw new Error("Failed pattern match at Data.Variant.Internal line 84, column 1 - line 89, column 12: " + [ tags.constructor.name, eqs.constructor.name, v.constructor.name, v1.constructor.name ]);
            };
        };
    };
};
var lookupOrd = function (tags) {
    return function (ords) {
        return function (v) {
            return function (v1) {
                var v3 = Data_Ord.compare(Data_Ord.ordString)(v.type)(v1.type);
                if (v3 instanceof Data_Ordering.EQ) {
                    return lookup("compare")(v.type)(tags)(ords)(v.value)(v1.value);
                };
                return v3;
            };
        };
    };
};
var contractWithInstance = function (dictRowToList) {
    return function (dictUnion) {
        return function (dictVariantTags) {
            return new Contractable(function (dictAlternative) {
                return function (v) {
                    return function (v1) {
                        return function (tag) {
                            return function (a) {
                                if (lookupTag(tag)(variantTags(dictVariantTags)(Type_Row.RLProxy.value))) {
                                    return Control_Applicative.pure(dictAlternative.Applicative0())(a);
                                };
                                if (Data_Boolean.otherwise) {
                                    return Control_Plus.empty(dictAlternative.Plus1());
                                };
                                throw new Error("Failed pattern match at Data.Variant.Internal line 124, column 1 - line 129, column 23: " + [ v.constructor.name, v1.constructor.name, tag.constructor.name, a.constructor.name ]);
                            };
                        };
                    };
                };
            });
        };
    };
};
var contractWith = function (dict) {
    return dict.contractWith;
};
module.exports = {
    FProxy: FProxy,
    VariantRep: VariantRep,
    VariantTags: VariantTags,
    variantTags: variantTags,
    Contractable: Contractable,
    contractWith: contractWith,
    VariantMatchCases: VariantMatchCases,
    VariantFMatchCases: VariantFMatchCases,
    lookupTag: lookupTag,
    lookupEq: lookupEq,
    lookupOrd: lookupOrd,
    lookup: lookup,
    variantMatchCons: variantMatchCons,
    variantMatchNil: variantMatchNil,
    variantFMatchCons: variantFMatchCons,
    variantFMatchNil: variantFMatchNil,
    variantTagsNil: variantTagsNil,
    variantTagsCons: variantTagsCons,
    contractWithInstance: contractWithInstance
};

},{"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Plus":65,"../Data.Boolean":131,"../Data.Eq":157,"../Data.Function":172,"../Data.List":230,"../Data.List.Types":229,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Record.Unsafe":264,"../Data.Semigroup":271,"../Data.Symbol":289,"../Partial.Unsafe":355,"../Prelude":358,"../Type.Equality":362,"../Type.Row":364}],304:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Plus = require("../Control.Plus");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Ord = require("../Data.Ord");
var Data_Record_Unsafe = require("../Data.Record.Unsafe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Symbol = require("../Data.Symbol");
var Data_Variant_Internal = require("../Data.Variant.Internal");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Type_Row = require("../Type.Row");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var VariantEqs = function (variantEqs) {
    this.variantEqs = variantEqs;
};
var VariantOrds = function (variantOrds) {
    this.variantOrds = variantOrds;
};
var VariantShows = function (variantShows) {
    this.variantShows = variantShows;
};
var variantShows = function (dict) {
    return dict.variantShows;
};
var variantOrds = function (dict) {
    return dict.variantOrds;
};
var variantEqs = function (dict) {
    return dict.variantEqs;
};
var showVariantNil = new VariantShows(function (v) {
    return Data_List_Types.Nil.value;
});
var showVariantCons = function (dictVariantShows) {
    return function (dictShow) {
        return new VariantShows(function (v) {
            return new Data_List_Types.Cons(Data_Show.show(dictShow), variantShows(dictVariantShows)(Type_Row.RLProxy.value));
        });
    };
};
var showVariant = function (dictRowToList) {
    return function (dictVariantTags) {
        return function (dictVariantShows) {
            return new Data_Show.Show(function (v1) {
                var tags = Data_Variant_Internal.variantTags(dictVariantTags)(Type_Row.RLProxy.value);
                var shows = variantShows(dictVariantShows)(Type_Row.RLProxy.value);
                var body = Data_Variant_Internal.lookup("show")(v1.type)(tags)(shows)(v1.value);
                return "(inj @" + (Data_Show.show(Data_Show.showString)(v1.type) + (" " + (body + ")")));
            });
        };
    };
};
var ordVariantNil = new VariantOrds(function (v) {
    return Data_List_Types.Nil.value;
});
var ordVariantCons = function (dictVariantOrds) {
    return function (dictOrd) {
        return new VariantOrds(function (v) {
            return new Data_List_Types.Cons(Data_Ord.compare(dictOrd), variantOrds(dictVariantOrds)(Type_Row.RLProxy.value));
        });
    };
};
var onMatch = function (dictRowToList) {
    return function (dictVariantMatchCases) {
        return function (dictUnion) {
            return function (r) {
                return function (k) {
                    return function (v) {
                        if (Data_Record_Unsafe.unsafeHas(v.type)(r)) {
                            return Data_Record_Unsafe.unsafeGet(v.type)(r)(v.value);
                        };
                        return k(v);
                    };
                };
            };
        };
    };
};
var on = function (dictRowCons) {
    return function (dictIsSymbol) {
        return function (p) {
            return function (f) {
                return function (g) {
                    return function (r) {
                        if (r.type === Data_Symbol.reflectSymbol(dictIsSymbol)(p)) {
                            return f(r.value);
                        };
                        return g(r);
                    };
                };
            };
        };
    };
};
var prj = function (dictRowCons) {
    return function (dictIsSymbol) {
        return function (dictAlternative) {
            return function (p) {
                return on(dictRowCons)(dictIsSymbol)(p)(Control_Applicative.pure(dictAlternative.Applicative0()))(Data_Function["const"](Control_Plus.empty(dictAlternative.Plus1())));
            };
        };
    };
};
var inj = function (dictRowCons) {
    return function (dictIsSymbol) {
        return function (p) {
            return function (value) {
                return {
                    type: Data_Symbol.reflectSymbol(dictIsSymbol)(p),
                    value: value
                };
            };
        };
    };
};
var expand = function (dictUnion) {
    return Unsafe_Coerce.unsafeCoerce;
};
var eqVariantNil = new VariantEqs(function (v) {
    return Data_List_Types.Nil.value;
});
var eqVariantCons = function (dictVariantEqs) {
    return function (dictEq) {
        return new VariantEqs(function (v) {
            return new Data_List_Types.Cons(Data_Eq.eq(dictEq), variantEqs(dictVariantEqs)(Type_Row.RLProxy.value));
        });
    };
};
var eqVariant = function (dictRowToList) {
    return function (dictVariantTags) {
        return function (dictVariantEqs) {
            return new Data_Eq.Eq(function (v1) {
                return function (v2) {
                    var tags = Data_Variant_Internal.variantTags(dictVariantTags)(Type_Row.RLProxy.value);
                    var eqs = variantEqs(dictVariantEqs)(Type_Row.RLProxy.value);
                    return Data_Variant_Internal.lookupEq(tags)(eqs)(v1)(v2);
                };
            });
        };
    };
};
var ordVariant = function (dictRowToList) {
    return function (dictVariantTags) {
        return function (dictVariantEqs) {
            return function (dictVariantOrds) {
                return new Data_Ord.Ord(function () {
                    return eqVariant(dictRowToList)(dictVariantTags)(dictVariantEqs);
                }, function (v1) {
                    return function (v2) {
                        var tags = Data_Variant_Internal.variantTags(dictVariantTags)(Type_Row.RLProxy.value);
                        var ords = variantOrds(dictVariantOrds)(Type_Row.RLProxy.value);
                        return Data_Variant_Internal.lookupOrd(tags)(ords)(v1)(v2);
                    };
                });
            };
        };
    };
};
var $$default = function (a) {
    return function (v) {
        return a;
    };
};
var contract = function (dictAlternative) {
    return function (dictContractable) {
        return function (v) {
            return Data_Variant_Internal.contractWith(dictContractable)(dictAlternative)(Type_Row.RProxy.value)(Type_Row.RProxy.value)(v.type)(v);
        };
    };
};
var case_ = function (r) {
    return Partial_Unsafe.unsafeCrashWith("Data.Variant: pattern match failure [" + (r.type + "]"));
};
var match = function (dictRowToList) {
    return function (dictVariantMatchCases) {
        return function (dictUnion) {
            return function (r) {
                return onMatch(dictRowToList)(dictVariantMatchCases)(dictUnion)(r)(case_);
            };
        };
    };
};
module.exports = {
    inj: inj,
    prj: prj,
    on: on,
    onMatch: onMatch,
    case_: case_,
    match: match,
    "default": $$default,
    expand: expand,
    contract: contract,
    VariantEqs: VariantEqs,
    variantEqs: variantEqs,
    VariantOrds: VariantOrds,
    variantOrds: variantOrds,
    VariantShows: VariantShows,
    variantShows: variantShows,
    eqVariantNil: eqVariantNil,
    eqVariantCons: eqVariantCons,
    eqVariant: eqVariant,
    ordVariantNil: ordVariantNil,
    ordVariantCons: ordVariantCons,
    ordVariant: ordVariant,
    showVariantNil: showVariantNil,
    showVariantCons: showVariantCons,
    showVariant: showVariant
};

},{"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Plus":65,"../Data.Eq":157,"../Data.Function":172,"../Data.List":230,"../Data.List.Types":229,"../Data.Ord":251,"../Data.Record.Unsafe":264,"../Data.Semigroup":271,"../Data.Show":276,"../Data.Symbol":289,"../Data.Variant.Internal":303,"../Partial.Unsafe":355,"../Prelude":358,"../Type.Row":364,"../Unsafe.Coerce":366}],305:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Show = require("../Data.Show");
var Void = function (x) {
    return x;
};
var absurd = function (a) {
    var spin = function ($copy_v) {
        var $tco_result;
        function $tco_loop(v) {
            $copy_v = v;
            return;
        };
        while (!false) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return spin(a);
};
var showVoid = new Data_Show.Show(absurd);
module.exports = {
    absurd: absurd,
    showVoid: showVoid
};

},{"../Data.Show":276}],306:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Filterable = require("../Data.Filterable");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_Set = require("../Data.Set");
var FRP_Behavior = require("../FRP.Behavior");
var FRP_Event = require("../FRP.Event");
var FRP_Event_Keyboard = require("../FRP.Event.Keyboard");
var Prelude = require("../Prelude");
var Web_UIEvents_Key = require("../Web.UIEvents.Key");
var Web_UIEvents_Key_Internal = require("../Web.UIEvents.Key.Internal");
var Web_UIEvents_Key_Internal_Modifier = require("../Web.UIEvents.Key.Internal.Modifier");
var keys = FRP_Behavior.behavior(function (e) {
    return Data_Functor.map(FRP_Event.functorEvent)(function (v) {
        return v.value(Data_Set.fromFoldable(Data_Foldable.foldableArray)(Web_UIEvents_Key_Internal.ordKey)(v.keys));
    })(FRP_Event_Keyboard.withKeys(e));
});
var modifiers = (function () {
    var filterMapSet = function (f) {
        return function ($4) {
            return Data_Set.fromFoldable(Data_Foldable.foldableArray)(Web_UIEvents_Key_Internal_Modifier.ordModifier)(Data_Filterable.filterMap(Data_Filterable.filterableArray)(f)(Data_Array.fromFoldable(Data_Set.foldableSet)($4)));
        };
    };
    return Data_Functor.mapFlipped(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(keys)(filterMapSet(Web_UIEvents_Key_Internal.toModifier));
})();
var key = function (k) {
    return Data_Functor.map(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(Data_Set.member(Web_UIEvents_Key_Internal.ordKey)(k))(keys);
};
module.exports = {
    keys: keys,
    modifiers: modifiers,
    key: key
};

},{"../Control.Semigroupoid":66,"../Data.Array":122,"../Data.Filterable":162,"../Data.Foldable":164,"../Data.Functor":180,"../Data.Set":274,"../FRP.Behavior":309,"../FRP.Event":318,"../FRP.Event.Keyboard":312,"../Prelude":358,"../Web.UIEvents.Key":374,"../Web.UIEvents.Key.Internal":372,"../Web.UIEvents.Key.Internal.Modifier":371}],307:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Data_Ord = require("../Data.Ord");
var Data_Set = require("../Data.Set");
var FRP_Behavior = require("../FRP.Behavior");
var FRP_Event = require("../FRP.Event");
var FRP_Event_Mouse = require("../FRP.Event.Mouse");
var Prelude = require("../Prelude");
var position = FRP_Behavior.behavior(function (e) {
    return Data_Functor.map(FRP_Event.functorEvent)(function (v) {
        return v.value(Data_Nullable.toMaybe(v.pos));
    })(FRP_Event_Mouse.withPosition(e));
});
var buttons = FRP_Behavior.behavior(function (e) {
    return Data_Functor.map(FRP_Event.functorEvent)(function (v) {
        return v.value(Data_Set.fromFoldable(Data_Foldable.foldableArray)(Data_Ord.ordInt)(v.buttons));
    })(FRP_Event_Mouse.withButtons(e));
});
module.exports = {
    position: position,
    buttons: buttons
};

},{"../Data.Foldable":164,"../Data.Functor":180,"../Data.Maybe":234,"../Data.Nullable":247,"../Data.Ord":251,"../Data.Set":274,"../FRP.Behavior":309,"../FRP.Event":318,"../FRP.Event.Mouse":314,"../Prelude":358}],308:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Functor = require("../Data.Functor");
var FRP_Behavior = require("../FRP.Behavior");
var FRP_Event = require("../FRP.Event");
var FRP_Event_Time = require("../FRP.Event.Time");
var Prelude = require("../Prelude");
var millisSinceEpoch = FRP_Behavior.behavior(function (e) {
    return Data_Functor.map(FRP_Event.functorEvent)(function (v) {
        return v.value(v.time);
    })(FRP_Event_Time.withTime(e));
});
var seconds = Data_Functor.map(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(function (v) {
    return v / 1000.0;
})(millisSinceEpoch);
module.exports = {
    millisSinceEpoch: millisSinceEpoch,
    seconds: seconds
};

},{"../Data.EuclideanRing":159,"../Data.Functor":180,"../FRP.Behavior":309,"../FRP.Event":318,"../FRP.Event.Time":316,"../Prelude":358}],309:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Filterable = require("../Data.Filterable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Tuple = require("../Data.Tuple");
var FRP = require("../FRP");
var FRP_Event = require("../FRP.Event");
var FRP_Event_Class = require("../FRP.Event.Class");
var FRP_Event_Time = require("../FRP.Event.Time");
var Prelude = require("../Prelude");
var ABehavior = function (x) {
    return x;
};
var step = function (dictIsEvent) {
    return function (a) {
        return function (e) {
            return FRP_Event_Class.sampleOn(dictIsEvent)(Control_Alt.alt(((dictIsEvent.Alternative0()).Plus1()).Alt0())(Control_Applicative.pure((dictIsEvent.Alternative0()).Applicative0())(a))(e));
        };
    };
};
var unfold = function (dictIsEvent) {
    return function (f) {
        return function (e) {
            return function (a) {
                return step(dictIsEvent)(a)(FRP_Event_Class.fold(dictIsEvent)(f)(e)(a));
            };
        };
    };
};
var sample = function (v) {
    return function (e) {
        return v(e);
    };
};
var functorABehavior = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return function (e) {
                return v(Data_Functor.map(dictFunctor)(function (v1) {
                    return function ($66) {
                        return v1(f($66));
                    };
                })(e));
            };
        };
    });
};
var sampleBy = function (dictIsEvent) {
    return function (f) {
        return function (b) {
            return function (e) {
                return sample(Data_Functor.map(functorABehavior((dictIsEvent.Filterable1()).Functor0()))(f)(b))(Data_Functor.map((dictIsEvent.Filterable1()).Functor0())(Data_Function.applyFlipped)(e));
            };
        };
    };
};
var gateBy = function (dictIsEvent) {
    return function (f) {
        return function (ps) {
            return function (xs) {
                return Data_Filterable.filtered(dictIsEvent.Filterable1())(sampleBy(dictIsEvent)(function (p) {
                    return function (x) {
                        var $44 = f(p)(x);
                        if ($44) {
                            return new Data_Maybe.Just(x);
                        };
                        return Data_Maybe.Nothing.value;
                    };
                })(ps)(xs));
            };
        };
    };
};
var gate = function (dictIsEvent) {
    return gateBy(dictIsEvent)(Data_Function["const"]);
};
var integral = function (dictIsEvent) {
    return function (dictField) {
        return function (dictSemiring) {
            return function (g) {
                return function (initial) {
                    return function (t) {
                        return function (b) {
                            var two = Data_Semiring.add((((dictField.EuclideanRing0()).CommutativeRing0()).Ring0()).Semiring0())(Data_Semiring.one((((dictField.EuclideanRing0()).CommutativeRing0()).Ring0()).Semiring0()))(Data_Semiring.one((((dictField.EuclideanRing0()).CommutativeRing0()).Ring0()).Semiring0()));
                            var approx = function (v) {
                                return function (s) {
                                    if (v.last instanceof Data_Maybe.Nothing) {
                                        return s;
                                    };
                                    if (v.last instanceof Data_Maybe.Just) {
                                        return Data_Semiring.add(dictSemiring)(s)(g(function (f) {
                                            return Data_EuclideanRing.div(dictField.EuclideanRing0())(Data_Semiring.mul((((dictField.EuclideanRing0()).CommutativeRing0()).Ring0()).Semiring0())(f(Data_Semiring.add(dictSemiring)(v.last.value0.value1)(v.now.value1)))(Data_Ring.sub(((dictField.EuclideanRing0()).CommutativeRing0()).Ring0())(v.now.value0)(v.last.value0.value0)))(two);
                                        }));
                                    };
                                    throw new Error("Failed pattern match at FRP.Behavior line 134, column 5 - line 134, column 35: " + [ v.constructor.name, s.constructor.name ]);
                                };
                            };
                            return function (e) {
                                var x = sample(b)(Data_Functor.voidLeft((dictIsEvent.Filterable1()).Functor0())(e)(Control_Category.id(Control_Category.categoryFn)));
                                var y = FRP_Event_Class.withLast(dictIsEvent)(sampleBy(dictIsEvent)(Data_Tuple.Tuple.create)(t)(x));
                                var z = FRP_Event_Class.fold(dictIsEvent)(approx)(y)(initial);
                                return Control_Apply.apply(((dictIsEvent.Alternative0()).Applicative0()).Apply0())(e)(z);
                            };
                        };
                    };
                };
            };
        };
    };
};
var integral$prime = function (dictIsEvent) {
    return function (dictField) {
        return integral(dictIsEvent)(dictField)((((dictField.EuclideanRing0()).CommutativeRing0()).Ring0()).Semiring0())(function (v) {
            return v(Control_Category.id(Control_Category.categoryFn));
        });
    };
};
var sample_ = function (dictIsEvent) {
    return sampleBy(dictIsEvent)(Data_Function["const"]);
};
var derivative = function (dictIsEvent) {
    return function (dictField) {
        return function (dictRing) {
            return function (g) {
                return function (t) {
                    return function (b) {
                        var approx = function (v) {
                            if (v.last instanceof Data_Maybe.Nothing) {
                                return Data_Semiring.zero(dictRing.Semiring0());
                            };
                            if (v.last instanceof Data_Maybe.Just) {
                                return g(function (f) {
                                    return Data_EuclideanRing.div(dictField.EuclideanRing0())(f(Data_Ring.sub(dictRing)(v.now.value1)(v.last.value0.value1)))(Data_Ring.sub(((dictField.EuclideanRing0()).CommutativeRing0()).Ring0())(v.now.value0)(v.last.value0.value0));
                                });
                            };
                            throw new Error("Failed pattern match at FRP.Behavior line 179, column 5 - line 179, column 36: " + [ v.constructor.name ]);
                        };
                        return function (e) {
                            var x = sample(b)(Data_Functor.voidLeft((dictIsEvent.Filterable1()).Functor0())(e)(Control_Category.id(Control_Category.categoryFn)));
                            var y = FRP_Event_Class.withLast(dictIsEvent)(sampleBy(dictIsEvent)(Data_Tuple.Tuple.create)(t)(x));
                            var z = Data_Functor.map((dictIsEvent.Filterable1()).Functor0())(approx)(y);
                            return Control_Apply.apply(((dictIsEvent.Alternative0()).Applicative0()).Apply0())(e)(z);
                        };
                    };
                };
            };
        };
    };
};
var derivative$prime = function (dictIsEvent) {
    return function (dictField) {
        return derivative(dictIsEvent)(dictField)(((dictField.EuclideanRing0()).CommutativeRing0()).Ring0())(function (v) {
            return v(Control_Category.id(Control_Category.categoryFn));
        });
    };
};
var behavior = ABehavior;
var fixB = function (a) {
    return function (f) {
        return behavior(function (s) {
            return FRP_Event_Class.fix(FRP_Event.eventIsEvent)(function (event) {
                var b = f(step(FRP_Event.eventIsEvent)(a)(event));
                return {
                    input: sample_(FRP_Event.eventIsEvent)(b)(s),
                    output: FRP_Event_Class.sampleOn(FRP_Event.eventIsEvent)(event)(s)
                };
            });
        });
    };
};
var solve = function (dictField) {
    return function (dictSemiring) {
        return function (g) {
            return function (a0) {
                return function (t) {
                    return function (f) {
                        return fixB(a0)(function (b) {
                            return integral(FRP_Event.eventIsEvent)(dictField)(dictSemiring)(g)(a0)(t)(f(b));
                        });
                    };
                };
            };
        };
    };
};
var solve$prime = function (dictField) {
    return solve(dictField)((((dictField.EuclideanRing0()).CommutativeRing0()).Ring0()).Semiring0())(function (v) {
        return v(Control_Category.id(Control_Category.categoryFn));
    });
};
var solve2 = function (dictField) {
    return function (dictSemiring) {
        return function (g) {
            return function (a0) {
                return function (da0) {
                    return function (t) {
                        return function (f) {
                            return fixB(a0)(function (b) {
                                return integral(FRP_Event.eventIsEvent)(dictField)(dictSemiring)(g)(a0)(t)(fixB(da0)(function (db) {
                                    return integral(FRP_Event.eventIsEvent)(dictField)(dictSemiring)(g)(da0)(t)(f(b)(db));
                                }));
                            });
                        };
                    };
                };
            };
        };
    };
};
var solve2$prime = function (dictField) {
    return solve2(dictField)((((dictField.EuclideanRing0()).CommutativeRing0()).Ring0()).Semiring0())(function (v) {
        return v(Control_Category.id(Control_Category.categoryFn));
    });
};
var switcher = function (b0) {
    return function (e) {
        return behavior(function (s) {
            return FRP_Event_Class.keepLatest(FRP_Event.eventIsEvent)(Control_Alt.alt(FRP_Event.altEvent)(Control_Applicative.pure(FRP_Event.applicativeEvent)(sample(b0)(s)))(Data_Functor.map(FRP_Event.functorEvent)(function (b) {
                return sample(b)(s);
            })(e)));
        });
    };
};
var applyABehavior = function (dictFunctor) {
    return new Control_Apply.Apply(function () {
        return functorABehavior(dictFunctor);
    }, function (v) {
        return function (v1) {
            return function (e) {
                return v1(v(Data_Functor.map(dictFunctor)(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn))(e)));
            };
        };
    });
};
var semigroupABehavior = function (dictFunctor) {
    return function (dictSemigroup) {
        return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyABehavior(dictFunctor))(Data_Semigroup.append(dictSemigroup)));
    };
};
var applicativeABehavior = function (dictFunctor) {
    return new Control_Applicative.Applicative(function () {
        return applyABehavior(dictFunctor);
    }, function (a) {
        return function (e) {
            return Data_Functor.map(dictFunctor)(Data_Function.applyFlipped(a))(e);
        };
    });
};
var monoidABehavior = function (dictFunctor) {
    return function (dictMonoid) {
        return new Data_Monoid.Monoid(function () {
            return semigroupABehavior(dictFunctor)(dictMonoid.Semigroup0());
        }, Control_Applicative.pure(applicativeABehavior(dictFunctor))(Data_Monoid.mempty(dictMonoid)));
    };
};
var animate = function (scene) {
    return function (render) {
        return FRP_Event.subscribe(sample_(FRP_Event.eventIsEvent)(scene)(FRP_Event_Time.animationFrame))(render);
    };
};
module.exports = {
    behavior: behavior,
    step: step,
    sample: sample,
    sampleBy: sampleBy,
    sample_: sample_,
    gate: gate,
    gateBy: gateBy,
    unfold: unfold,
    switcher: switcher,
    integral: integral,
    "integral'": integral$prime,
    derivative: derivative,
    "derivative'": derivative$prime,
    solve: solve,
    "solve'": solve$prime,
    solve2: solve2,
    "solve2'": solve2$prime,
    fixB: fixB,
    animate: animate,
    functorABehavior: functorABehavior,
    applyABehavior: applyABehavior,
    applicativeABehavior: applicativeABehavior,
    semigroupABehavior: semigroupABehavior,
    monoidABehavior: monoidABehavior
};

},{"../Control.Alt":2,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Category":12,"../Control.Monad.Eff":39,"../Control.Semigroupoid":66,"../Data.EuclideanRing":159,"../Data.Filterable":162,"../Data.Function":172,"../Data.Functor":180,"../Data.Maybe":234,"../Data.Monoid":242,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Tuple":298,"../FRP":319,"../FRP.Event":318,"../FRP.Event.Class":310,"../FRP.Event.Time":316,"../Prelude":358}],310:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Filterable = require("../Data.Filterable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var IsEvent = function (Alternative0, Filterable1, fix, fold, keepLatest, sampleOn) {
    this.Alternative0 = Alternative0;
    this.Filterable1 = Filterable1;
    this.fix = fix;
    this.fold = fold;
    this.keepLatest = keepLatest;
    this.sampleOn = sampleOn;
};
var sampleOn = function (dict) {
    return dict.sampleOn;
};
var sampleOn_ = function (dictIsEvent) {
    return function (a) {
        return function (b) {
            return sampleOn(dictIsEvent)(a)(Data_Functor.voidLeft((dictIsEvent.Filterable1()).Functor0())(b)(Control_Category.id(Control_Category.categoryFn)));
        };
    };
};
var keepLatest = function (dict) {
    return dict.keepLatest;
};
var gateBy = function (dictIsEvent) {
    return function (f) {
        return function (sampled) {
            return function ($20) {
                return Data_Filterable.filtered(dictIsEvent.Filterable1())(sampleOn(dictIsEvent)(Control_Alt.alt(((dictIsEvent.Alternative0()).Plus1()).Alt0())(Control_Applicative.pure((dictIsEvent.Alternative0()).Applicative0())(Data_Maybe.Nothing.value))(Data_Functor.map((dictIsEvent.Filterable1()).Functor0())(Data_Maybe.Just.create)(sampled)))(Data_Functor.map((dictIsEvent.Filterable1()).Functor0())(function (x) {
                    return function (p) {
                        var $12 = f(p)(x);
                        if ($12) {
                            return new Data_Maybe.Just(x);
                        };
                        return Data_Maybe.Nothing.value;
                    };
                })($20)));
            };
        };
    };
};
var gate = function (dictIsEvent) {
    return gateBy(dictIsEvent)(function (x) {
        return function (v) {
            return Data_Maybe.fromMaybe(false)(x);
        };
    });
};
var fold = function (dict) {
    return dict.fold;
};
var folded = function (dictIsEvent) {
    return function (dictMonoid) {
        return function (s) {
            return fold(dictIsEvent)(Data_Semigroup.append(dictMonoid.Semigroup0()))(s)(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var mapAccum = function (dictIsEvent) {
    return function (f) {
        return function (xs) {
            return function (acc) {
                return Data_Filterable.filterMap(dictIsEvent.Filterable1())(Data_Tuple.snd)(fold(dictIsEvent)(function (a) {
                    return function (v) {
                        return Data_Functor.map(Data_Tuple.functorTuple)(Control_Applicative.pure(Data_Maybe.applicativeMaybe))(f(a)(v.value0));
                    };
                })(xs)(new Data_Tuple.Tuple(acc, Data_Maybe.Nothing.value)));
            };
        };
    };
};
var withLast = function (dictIsEvent) {
    return function (e) {
        var step = function (a) {
            return function (v) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just({
                        now: a,
                        last: Data_Maybe.Nothing.value
                    });
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just({
                        now: a,
                        last: new Data_Maybe.Just(v.value0.now)
                    });
                };
                throw new Error("Failed pattern match at FRP.Event.Class line 52, column 3 - line 52, column 60: " + [ a.constructor.name, v.constructor.name ]);
            };
        };
        return Data_Filterable.filterMap(dictIsEvent.Filterable1())(Control_Category.id(Control_Category.categoryFn))(fold(dictIsEvent)(step)(e)(Data_Maybe.Nothing.value));
    };
};
var fix = function (dict) {
    return dict.fix;
};
var count = function (dictIsEvent) {
    return function (s) {
        return fold(dictIsEvent)(function (v) {
            return function (n) {
                return n + 1 | 0;
            };
        })(s)(0);
    };
};
module.exports = {
    IsEvent: IsEvent,
    fold: fold,
    folded: folded,
    count: count,
    mapAccum: mapAccum,
    withLast: withLast,
    sampleOn: sampleOn,
    sampleOn_: sampleOn_,
    keepLatest: keepLatest,
    fix: fix,
    gate: gate,
    gateBy: gateBy
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Filterable":162,"../Data.Function":172,"../Data.Functor":180,"../Data.Maybe":234,"../Data.Monoid":242,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Tuple":298,"../Prelude":358}],311:[function(require,module,exports){
"use strict";

var currentKeys = [];
addEventListener("keydown", function(e) {
  var index = currentKeys.indexOf(e.key);
  if (index < 0) {
    currentKeys.push(e.key);
  }
});
addEventListener("keyup", function(e) {
  var index = currentKeys.indexOf(e.key);
  if (index >= 0) {
    currentKeys.splice(index, 1);
  }
});

exports.withKeysImpl = function (e) {
  return function(sub) {
    return e(function(a) {
      sub({ keys: currentKeys, value: a });
    });
  };
};

exports.downImpl = function(sub) {
  var cb = function(e) {
    sub(e.key);
  };
  addEventListener("keydown", cb);
  return function() {
    removeEventListener("keydown", cb);
  }
};

exports.upImpl = function(sub) {
  var cb = function(e) {
    sub(e.key);
  };
  addEventListener("keyup", cb);
  return function() {
    removeEventListener("keyup", cb);
  }
};

},{}],312:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Filterable = require("../Data.Filterable");
var Data_Functor = require("../Data.Functor");
var FRP_Event = require("../FRP.Event");
var Prelude = require("../Prelude");
var Web_UIEvents_Key = require("../Web.UIEvents.Key");
var withKeys = function (e) {
    return Data_Functor.mapFlipped(FRP_Event.functorEvent)($foreign.withKeysImpl(e))(function (r) {
        var $1 = {};
        for (var $2 in r) {
            if ({}.hasOwnProperty.call(r, $2)) {
                $1[$2] = r[$2];
            };
        };
        $1.keys = Data_Filterable.filterMap(Data_Filterable.filterableArray)(Web_UIEvents_Key.parse)(r.keys);
        return $1;
    });
};
var up = Data_Filterable.filterMap(FRP_Event.filterableEvent)(Web_UIEvents_Key.parse)($foreign.upImpl);
var down = Data_Filterable.filterMap(FRP_Event.filterableEvent)(Web_UIEvents_Key.parse)($foreign.downImpl);
module.exports = {
    down: down,
    up: up,
    withKeys: withKeys
};

},{"../Data.Filterable":162,"../Data.Functor":180,"../FRP.Event":318,"../Prelude":358,"../Web.UIEvents.Key":374,"./foreign":311}],313:[function(require,module,exports){
"use strict";

var currentPosition;
addEventListener("mousemove", function(e) {
  currentPosition = { x: e.clientX, y: e.clientY };
});

var currentButtons = [];
addEventListener("mousedown", function(e) {
  currentButtons.push(e.button);
});
addEventListener("mouseup", function(e) {
  var index = currentButtons.indexOf(e.button);
  if (index >= 0) {
    currentButtons.splice(index, 1);
  }
});

exports.withPosition = function (e) {
  return function(sub) {
    return e(function(a) {
      sub({ pos: currentPosition, value: a });
    });
  };
};

exports.withButtons = function (e) {
  return function(sub) {
    return e(function(a) {
      sub({ buttons: currentButtons, value: a });
    });
  };
};

exports.move = function(sub) {
  var cb = function(e) {
    sub({ x: e.clientX, y: e.clientY });
  };
  addEventListener("mousemove", cb);
  return function() {
    removeEventListener("mousemove", cb);
  };
};

exports.down = function(sub) {
  var cb = function(e) {
    sub(e.button);
  };
  addEventListener("mousedown", cb);
  return function() {
    removeEventListener("mousedown", cb);
  };
};

exports.up = function(sub) {
  var cb = function(e) {
    sub(e.button);
  };
  addEventListener("mouseup", cb);
  return function() {
    removeEventListener("mouseup", cb);
  };
};

},{}],314:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Nullable = require("../Data.Nullable");
var FRP_Event = require("../FRP.Event");
module.exports = {
    move: $foreign.move,
    down: $foreign.down,
    up: $foreign.up,
    withPosition: $foreign.withPosition,
    withButtons: $foreign.withButtons
};

},{"../Data.Nullable":247,"../FRP.Event":318,"./foreign":313}],315:[function(require,module,exports){
"use strict";

exports.interval = function (n) {
  return function(sub) {
    var interval = setInterval(function() {
      sub(new Date().getTime());
    }, n);
    return function() {
      clearInterval(interval);
    };
  };
};

exports.animationFrame = function(sub) {
  var cancelled = false;
  var loop = function() {
    window.requestAnimationFrame(function() {
      sub();
      if (!cancelled) {
        loop();
      }
    });
  };
  loop();
  return function() {
    cancelled = true;
  }
};

exports.withTime = function (e) {
  return function(sub) {
    return e(function(a) {
      var time = new Date().getTime();
      sub({ time: time, value: a });
    });
  };
};

},{}],316:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var FRP_Event = require("../FRP.Event");
var FRP_Event_Class = require("../FRP.Event.Class");
var Prelude = require("../Prelude");
var debounceWith = function (process) {
    return function (event) {
        var stamped = $foreign.withTime(event);
        return FRP_Event_Class.fix(FRP_Event.eventIsEvent)(function (allowed) {
            var processed = process(allowed);
            var expiries = Data_Functor.map(FRP_Event.functorEvent)(function (v) {
                return v.time + v.value;
            })($foreign.withTime(Data_Functor.map(FRP_Event.functorEvent)(function (v) {
                return v.period;
            })(processed)));
            var comparison = function (a) {
                return function (b) {
                    return Data_Maybe.maybe(true)(function (v) {
                        return v < b.time;
                    })(a);
                };
            };
            var unblocked = FRP_Event_Class.gateBy(FRP_Event.eventIsEvent)(comparison)(expiries)(stamped);
            return {
                input: Data_Functor.map(FRP_Event.functorEvent)(function (v) {
                    return v.value;
                })(unblocked),
                output: Data_Functor.map(FRP_Event.functorEvent)(function (v) {
                    return v.value;
                })(processed)
            };
        });
    };
};
var debounce = function (period) {
    return debounceWith(Data_Functor.map(FRP_Event.functorEvent)(function (v) {
        return {
            period: period,
            value: v
        };
    }));
};
module.exports = {
    debounce: debounce,
    debounceWith: debounceWith,
    interval: $foreign.interval,
    animationFrame: $foreign.animationFrame,
    withTime: $foreign.withTime
};

},{"../Data.Functor":180,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Semiring":273,"../Data.Unit":302,"../FRP.Event":318,"../FRP.Event.Class":310,"../Prelude":358,"./foreign":315}],317:[function(require,module,exports){
"use strict";

exports.pureImpl = function (a) {
  return function(sub) {
    sub(a);
    return function() {};
  }
};

exports.mapImpl = function (f) {
  return function(e) {
    return function (sub) {
      return e(function(a) {
        sub(f(a));
      });
    }
  };
};

exports.never = function (sub) {
  return function() {};
};

exports.applyImpl = function (e1) {
  return function (e2) {
    return function(sub) {
      var a_latest, b_latest;
      var a_fired = false, b_fired = false;

      var cancel1 = e1(function(a) {
        a_latest = a;
        a_fired = true;

        if (b_fired) {
          sub(a_latest(b_latest));
        }
      });

      var cancel2 = e2(function(b) {
        b_latest = b;
        b_fired = true;

        if (a_fired) {
          sub(a_latest(b_latest));
        }
      });

      return function() {
        cancel1();
        cancel2();
      };
    };
  };
};

exports.mergeImpl = function (e1) {
  return function(e2) {
    return function(sub) {
      var cancel1 = e1(sub);
      var cancel2 = e2(sub);

      return function() {
        cancel1();
        cancel2();
      };
    }
  };
};

exports.fold = function (f) {
  return function(e) {
    return function(b) {
      return function(sub) {
        var result = b;

        return e(function(a) {
          sub(result = f(a)(result));
        });
      };
    };
  };
};

exports.filter = function (p) {
  return function(e) {
    return function(sub) {
      return e(function(a) {
        if (p(a)) {
          sub(a);
        }
      });
    };
  };
};

exports.sampleOn = function (e1) {
  return function (e2) {
    return function(sub) {
      var latest;
      var fired = false;

      var cancel1 = e1(function(a) {
        latest = a;
        fired = true;
      });

      var cancel2 = e2(function(f) {
        if (fired) {
          sub(f(latest));
        }
      });

      return function() {
        cancel1();
        cancel2();
      };
    };
  };
};

exports.subscribe = function (e) {
  return function(f) {
    return function() {
      return e(function(a) {
        f(a)();
      });
    };
  };
};

exports.keepLatest = function (e) {
  return function(sub) {
    var cancelInner;

    var cancelOuter = e(function(inner) {
      cancelInner && cancelInner();
      cancelInner = inner(sub);
    });

    return function() {
      cancelInner && cancelInner();
      cancelOuter();
    }
  };
};

exports.create = function () {
  var subs = [];
  return {
    event: function(sub) {
      subs.push(sub);
      return function() {
        var index = subs.indexOf(sub);
        if (index >= 0) {
          subs.splice(index, 1);
        }
      };
    },
    push: function(a) {
      return function() {
        for (var i = 0; i < subs.length; i++) {
          subs[i](a);
        }
      };
    }
  };
};

exports.fix = function(f) {
  var s = exports.create();
  var io = f(s.event);

  return function(sub) {
    var sub1 = function(a) {
      s.push(a)();
    };
    var cancel1 = io.input(sub1);
    var cancel2 = io.output(sub);

    return function() {
      cancel1();
      cancel2();
    };
  };
};

},{}],318:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Filterable = require("../Data.Filterable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Semigroup = require("../Data.Semigroup");
var FRP = require("../FRP");
var FRP_Event_Class = require("../FRP.Event.Class");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var functorEvent = new Data_Functor.Functor($foreign.mapImpl);
var filterableEvent = new Data_Filterable.Filterable(function () {
    return functorEvent;
}, $foreign.filter, function (f) {
    return function ($3) {
        return Data_Functor.map(functorEvent)(Data_Maybe.fromJust())($foreign.filter(Data_Maybe.isJust)(Data_Functor.map(functorEvent)(f)($3)));
    };
}, function (p) {
    return function (xs) {
        return {
            yes: $foreign.filter(p)(xs),
            no: $foreign.filter(function ($4) {
                return !p($4);
            })(xs)
        };
    };
}, function (f) {
    return function (xs) {
        return {
            left: Data_Filterable.filterMap(filterableEvent)(function ($5) {
                return Data_Either.either(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value))(f($5));
            })(xs),
            right: Data_Filterable.filterMap(filterableEvent)(function ($6) {
                return Data_Either.hush(f($6));
            })(xs)
        };
    };
});
var applyEvent = new Control_Apply.Apply(function () {
    return functorEvent;
}, $foreign.applyImpl);
var semigroupEvent = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyEvent)(Data_Semigroup.append(dictSemigroup)));
};
var applicativeEvent = new Control_Applicative.Applicative(function () {
    return applyEvent;
}, $foreign.pureImpl);
var monoidEvent = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupEvent(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeEvent)(Data_Monoid.mempty(dictMonoid)));
};
var altEvent = new Control_Alt.Alt(function () {
    return functorEvent;
}, $foreign.mergeImpl);
var plusEvent = new Control_Plus.Plus(function () {
    return altEvent;
}, $foreign.never);
var alternativeEvent = new Control_Alternative.Alternative(function () {
    return applicativeEvent;
}, function () {
    return plusEvent;
});
var eventIsEvent = new FRP_Event_Class.IsEvent(function () {
    return alternativeEvent;
}, function () {
    return filterableEvent;
}, $foreign.fix, $foreign.fold, $foreign.keepLatest, $foreign.sampleOn);
module.exports = {
    functorEvent: functorEvent,
    filterableEvent: filterableEvent,
    applyEvent: applyEvent,
    applicativeEvent: applicativeEvent,
    altEvent: altEvent,
    plusEvent: plusEvent,
    alternativeEvent: alternativeEvent,
    semigroupEvent: semigroupEvent,
    monoidEvent: monoidEvent,
    eventIsEvent: eventIsEvent,
    create: $foreign.create,
    subscribe: $foreign.subscribe
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Monad.Eff":39,"../Control.Plus":65,"../Control.Semigroupoid":66,"../Data.Either":154,"../Data.Filterable":162,"../Data.Function":172,"../Data.Functor":180,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.Monoid":242,"../Data.Semigroup":271,"../FRP":319,"../FRP.Event.Class":310,"../Partial.Unsafe":355,"../Prelude":358,"./foreign":317}],319:[function(require,module,exports){
arguments[4][117][0].apply(exports,arguments)
},{"../Control.Monad.Eff":39,"dup":117}],320:[function(require,module,exports){
/* globals exports */
"use strict";

// module Global

exports.nan = NaN;

exports.isNaN = isNaN;

exports.infinity = Infinity;

exports.isFinite = isFinite;

exports.readInt = function (radix) {
  return function (n) {
    return parseInt(n, radix);
  };
};

exports.readFloat = parseFloat;

exports.decodeURI = decodeURI;
exports.encodeURI = encodeURI;
exports.decodeURIComponent = decodeURIComponent;
exports.encodeURIComponent = encodeURIComponent;

},{}],321:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    nan: $foreign.nan,
    "isNaN": $foreign["isNaN"],
    infinity: $foreign.infinity,
    "isFinite": $foreign["isFinite"],
    readInt: $foreign.readInt,
    readFloat: $foreign.readFloat,
    "decodeURI": $foreign["decodeURI"],
    "encodeURI": $foreign["encodeURI"],
    "decodeURIComponent": $foreign["decodeURIComponent"],
    "encodeURIComponent": $foreign["encodeURIComponent"]
};

},{"./foreign":320}],322:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Applicative_Free = require("../Control.Applicative.Free");
var Control_Bind = require("../Control.Bind");
var Control_Coroutine = require("../Control.Coroutine");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_Unsafe = require("../Control.Monad.Aff.Unsafe");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Fork_Class = require("../Control.Monad.Fork.Class");
var Control_Monad_Free = require("../Control.Monad.Free");
var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Parallel = require("../Control.Parallel");
var Control_Parallel_Class = require("../Control.Parallel.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Coyoneda = require("../Data.Coyoneda");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Map = require("../Data.Map");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Semiring = require("../Data.Semiring");
var Data_StrMap = require("../Data.StrMap");
var Data_Tuple = require("../Data.Tuple");
var Halogen_Aff_Driver_State = require("../Halogen.Aff.Driver.State");
var Halogen_Aff_Effects = require("../Halogen.Aff.Effects");
var Halogen_Data_OrdBox = require("../Halogen.Data.OrdBox");
var Halogen_Query_EventSource = require("../Halogen.Query.EventSource");
var Halogen_Query_ForkF = require("../Halogen.Query.ForkF");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM");
var Halogen_Query_InputF = require("../Halogen.Query.InputF");
var Prelude = require("../Prelude");
var Unsafe_Reference = require("../Unsafe.Reference");
var queuingHandler = function (handler) {
    return function (ref) {
        return function (message) {
            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v) {
                if (v instanceof Data_Maybe.Nothing) {
                    return handler(message);
                };
                if (v instanceof Data_Maybe.Just) {
                    return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(ref)(new Data_Maybe.Just(new Data_List_Types.Cons(handler(message), v.value0))));
                };
                throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 174, column 3 - line 178, column 57: " + [ v.constructor.name ]);
            });
        };
    };
};
var handleLifecycle = function (lchs) {
    return function (f) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(lchs)({
            initializers: Data_List_Types.Nil.value,
            finalizers: Data_List_Types.Nil.value
        })))(function () {
            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(f))(function (v) {
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(lchs)))(function (v1) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Data_Foldable.traverse_(Control_Monad_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(v1.finalizers))(function () {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Parallel.parSequence_(Control_Monad_Aff.parallelAff)(Data_List_Types.foldableList)(v1.initializers))(function () {
                            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v);
                        });
                    });
                });
            });
        });
    };
};
var $$eval = function (render) {
    return function (r) {
        var go = function (ref) {
            return function (v) {
                if (v instanceof Halogen_Query_HalogenM.State) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v1) {
                        var v2 = v.value0(v1.state);
                        if (Unsafe_Reference.unsafeRefEq(v1.state)(v2.value1)) {
                            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v2.value0);
                        };
                        if (Data_Boolean.otherwise) {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(ref)((function () {
                                var $41 = {};
                                for (var $42 in v1) {
                                    if ({}.hasOwnProperty.call(v1, $42)) {
                                        $41[$42] = v1[$42];
                                    };
                                };
                                $41.state = v2.value1;
                                return $41;
                            })())))(function () {
                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(handleLifecycle(v1.lifecycleHandlers)(render(v1.lifecycleHandlers)(ref)))(function () {
                                    return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v2.value0);
                                });
                            });
                        };
                        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 78, column 7 - line 84, column 21: " + [ v2.constructor.name ]);
                    });
                };
                if (v instanceof Halogen_Query_HalogenM.Subscribe) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v1) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_Query_EventSource.unEventSource(v.value0))(function (v2) {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref["modifyRef'"](v1.fresh)(function (i) {
                                return {
                                    state: i + 1 | 0,
                                    value: i
                                };
                            })))(function (v3) {
                                var done$prime = Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v1.subscriptions)))(function (v4) {
                                    return Control_Applicative.when(Control_Monad_Aff.applicativeAff)(Data_Maybe.maybe(false)(Data_Map.member(Data_Ord.ordInt)(v3))(v4))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(v2.done)(function () {
                                        return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(v1.subscriptions)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map["delete"](Data_Ord.ordInt)(v3))));
                                    }));
                                });
                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(v1.subscriptions)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map.insert(Data_Ord.ordInt)(v3)(done$prime)))))(function () {
                                    var consumer = Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Control_Coroutine["await"](Control_Monad_Aff.monadAff))(function (v4) {
                                        return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Control_Monad_Aff.monadAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v1.subscriptions))))(function (v5) {
                                            return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Data_Maybe.isJust(v5))(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Control_Monad_Aff.monadAff)(evalF(ref)(v4)))(function (v6) {
                                                return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Data_Eq.eq(Halogen_Query_EventSource.eqSubscribeStatus)(v6)(Halogen_Query_EventSource.Listening.value))(consumer);
                                            }));
                                        });
                                    });
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Coroutine.runProcess(Control_Monad_Aff.monadRecAff)(Control_Coroutine.pullFrom(Control_Monad_Aff.monadRecAff)(consumer)(v2.producer)))(function () {
                                        return done$prime;
                                    });
                                });
                            });
                        })))(function (v2) {
                            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1);
                        });
                    });
                };
                if (v instanceof Halogen_Query_HalogenM.Lift) {
                    return v.value0;
                };
                if (v instanceof Halogen_Query_HalogenM.Halt) {
                    return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error(v.value0));
                };
                if (v instanceof Halogen_Query_HalogenM.GetSlots) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v1) {
                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value0(Data_Functor.map(Data_List_Types.functorList)(Halogen_Data_OrdBox.unOrdBox)(Data_Map.keys(v1.children))));
                    });
                };
                if (v instanceof Halogen_Query_HalogenM.CheckSlot) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v1) {
                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1(Data_Map.member(Halogen_Data_OrdBox.ordOrdBox)(v1.component.mkOrdBox(v.value0))(v1.children)));
                    });
                };
                if (v instanceof Halogen_Query_HalogenM.ChildQuery) {
                    return evalChildQuery(ref)(v.value0)(v.value1);
                };
                if (v instanceof Halogen_Query_HalogenM.Raise) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v1) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(queuingHandler(v1.handler)(v1.pendingOuts)(v.value0))(function () {
                            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1);
                        });
                    });
                };
                if (v instanceof Halogen_Query_HalogenM.Par) {
                    return Control_Parallel_Class.sequential(Control_Monad_Aff.parallelAff)(Control_Applicative_Free.retractFreeAp(Control_Monad_Aff.applicativeParAff)(Control_Applicative_Free.hoistFreeAp(function ($109) {
                        return Control_Parallel_Class.parallel(Control_Monad_Aff.parallelAff)(evalM(ref)($109));
                    })(v.value0)));
                };
                if (v instanceof Halogen_Query_HalogenM.Fork) {
                    return Halogen_Query_ForkF.unFork(function (v1) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(evalM(ref)(v1.value0)))(function (v2) {
                            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v1.value1(function ($110) {
                                return Control_Monad_Aff_Unsafe.unsafeCoerceAff(Data_Function.flip(Control_Monad_Aff.killFiber)(v2)($110));
                            }));
                        });
                    })(v.value0);
                };
                if (v instanceof Halogen_Query_HalogenM.GetRef) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v1) {
                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1(Data_StrMap.lookup(v.value0)(v1.refs)));
                    });
                };
                throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 75, column 12 - line 131, column 34: " + [ v.constructor.name ]);
            };
        };
        var evalM = function (ref) {
            return function (v) {
                return Control_Monad_Free.foldFree(Control_Monad_Aff.monadRecAff)(go(ref))(v);
            };
        };
        var evalF = function (ref) {
            return function (q) {
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v) {
                    var v1 = v["component"]["eval"](q);
                    return Control_Monad_Free.foldFree(Control_Monad_Aff.monadRecAff)(go(ref))(v1);
                });
            };
        };
        var evalChildQuery = function (ref) {
            return function (p) {
                return Data_Coyoneda.unCoyoneda(function (k) {
                    return function (q) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v) {
                            var v1 = Data_Map.lookup(Halogen_Data_OrdBox.ordOrdBox)(v.component.mkOrdBox(p))(v.children);
                            if (v1 instanceof Data_Maybe.Just) {
                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v1.value0)))(function (v2) {
                                    return Halogen_Aff_Driver_State.unDriverStateX(function (ds) {
                                        var v3 = ds.prjQuery(q);
                                        if (v3 instanceof Data_Maybe.Just) {
                                            return Data_Functor.map(Control_Monad_Aff.functorAff)(k)(evalF(ds.selfRef)(v3.value0));
                                        };
                                        if (v3 instanceof Data_Maybe.Nothing) {
                                            return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error("Query projection failed for child query"));
                                        };
                                        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 144, column 32 - line 146, column 82: " + [ v3.constructor.name ]);
                                    })(v2);
                                });
                            };
                            if (v1 instanceof Data_Maybe.Nothing) {
                                return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error("Slot lookup failed for child query"));
                            };
                            throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 141, column 5 - line 147, column 73: " + [ v1.constructor.name ]);
                        });
                    };
                });
            };
        };
        return function (v) {
            if (v instanceof Halogen_Query_InputF.RefUpdate) {
                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(r)(function (v1) {
                    var $102 = {};
                    for (var $103 in v1) {
                        if ({}.hasOwnProperty.call(v1, $103)) {
                            $102[$103] = v1[$103];
                        };
                    };
                    $102.refs = Data_StrMap.alter(Data_Function["const"](v.value1))(v.value0)(v1.refs);
                    return $102;
                })))(function () {
                    return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value2);
                });
            };
            if (v instanceof Halogen_Query_InputF.Query) {
                return evalF(r)(v.value0);
            };
            throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 61, column 3 - line 66, column 25: " + [ v.constructor.name ]);
        };
    };
};
module.exports = {
    handleLifecycle: handleLifecycle,
    "eval": $$eval,
    queuingHandler: queuingHandler
};

},{"../Control.Applicative":5,"../Control.Applicative.Free":4,"../Control.Bind":11,"../Control.Coroutine":14,"../Control.Monad.Aff":22,"../Control.Monad.Aff.Unsafe":20,"../Control.Monad.Eff":39,"../Control.Monad.Eff.Class":27,"../Control.Monad.Eff.Exception":31,"../Control.Monad.Eff.Ref":33,"../Control.Monad.Error.Class":40,"../Control.Monad.Fork.Class":43,"../Control.Monad.Free":45,"../Control.Monad.Free.Trans":44,"../Control.Monad.Trans.Class":57,"../Control.Parallel":64,"../Control.Parallel.Class":63,"../Control.Semigroupoid":66,"../Data.Boolean":131,"../Data.Coyoneda":143,"../Data.Eq":157,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.List":230,"../Data.List.Types":229,"../Data.Map":231,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Semiring":273,"../Data.StrMap":280,"../Data.Tuple":298,"../Halogen.Aff.Driver.State":323,"../Halogen.Aff.Effects":325,"../Halogen.Data.OrdBox":331,"../Halogen.Query.EventSource":338,"../Halogen.Query.ForkF":339,"../Halogen.Query.HalogenM":340,"../Halogen.Query.InputF":341,"../Prelude":358,"../Unsafe.Reference":368}],323:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var Data_Foldable = require("../Data.Foldable");
var Data_Foreign = require("../Data.Foreign");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Map = require("../Data.Map");
var Data_Maybe = require("../Data.Maybe");
var Data_StrMap = require("../Data.StrMap");
var Data_Traversable = require("../Data.Traversable");
var Halogen_Aff_Effects = require("../Halogen.Aff.Effects");
var Halogen_Component = require("../Halogen.Component");
var Halogen_Data_OrdBox = require("../Halogen.Data.OrdBox");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var DriverState = function (x) {
    return x;
};
var unRenderStateX = Unsafe_Coerce.unsafeCoerce;
var unDriverStateX = Unsafe_Coerce.unsafeCoerce;
var renderStateX_ = function (dictApplicative) {
    return function (f) {
        return unDriverStateX(function (st) {
            return Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe)(f)(st.rendering);
        });
    };
};
var mkRenderStateX = function (v) {
    return Unsafe_Coerce.unsafeCoerce;
};
var renderStateX = function (dictFunctor) {
    return function (f) {
        return unDriverStateX(function (st) {
            return mkRenderStateX(st.prjQuery)(f(st.rendering));
        });
    };
};
var mkDriverStateXRef = Unsafe_Coerce.unsafeCoerce;
var initDriverState = function (component) {
    return function (input) {
        return function (handler) {
            return function (prjQuery) {
                return function (lchs) {
                    return function __do() {
                        var v = Control_Monad_Eff_Ref.newRef({})();
                        var v1 = Control_Monad_Eff_Ref.newRef(Data_Map.empty)();
                        var v2 = Control_Monad_Eff_Ref.newRef(Data_Map.empty)();
                        var v3 = Control_Monad_Eff_Ref.newRef(Data_Functor.voidLeft(Data_Maybe.functorMaybe)(component.initializer)(Data_List_Types.Nil.value))();
                        var v4 = Control_Monad_Eff_Ref.newRef(new Data_Maybe.Just(Data_List_Types.Nil.value))();
                        var v5 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
                        var v6 = Control_Monad_Eff_Ref.newRef(0)();
                        var v7 = Control_Monad_Eff_Ref.newRef(new Data_Maybe.Just(Data_Map.empty))();
                        var ds = {
                            component: component,
                            state: component.initialState(input),
                            refs: Data_StrMap.empty,
                            children: Data_Map.empty,
                            childrenIn: v1,
                            childrenOut: v2,
                            selfRef: v,
                            handler: handler,
                            pendingQueries: v3,
                            pendingOuts: v4,
                            pendingHandlers: v5,
                            rendering: Data_Maybe.Nothing.value,
                            prjQuery: prjQuery,
                            fresh: v6,
                            subscriptions: v7,
                            lifecycleHandlers: lchs
                        };
                        Control_Monad_Eff_Ref.writeRef(v)(ds)();
                        return mkDriverStateXRef(v);
                    };
                };
            };
        };
    };
};
module.exports = {
    DriverState: DriverState,
    unDriverStateX: unDriverStateX,
    mkDriverStateXRef: mkDriverStateXRef,
    renderStateX: renderStateX,
    renderStateX_: renderStateX_,
    unRenderStateX: unRenderStateX,
    initDriverState: initDriverState
};

},{"../Control.Applicative":5,"../Control.Bind":11,"../Control.Monad.Aff":22,"../Control.Monad.Eff":39,"../Control.Monad.Eff.Ref":33,"../Data.Foldable":164,"../Data.Foreign":169,"../Data.Function":172,"../Data.Functor":180,"../Data.List":230,"../Data.List.Types":229,"../Data.Map":231,"../Data.Maybe":234,"../Data.StrMap":280,"../Data.Traversable":296,"../Halogen.Aff.Effects":325,"../Halogen.Component":330,"../Halogen.Data.OrdBox":331,"../Prelude":358,"../Unsafe.Coerce":366}],324:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Coroutine = require("../Control.Coroutine");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Console = require("../Control.Monad.Eff.Console");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var Control_Monad_Eff_Unsafe = require("../Control.Monad.Eff.Unsafe");
var Control_Monad_Fork_Class = require("../Control.Monad.Fork.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Parallel = require("../Control.Parallel");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Map = require("../Data.Map");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Semiring = require("../Data.Semiring");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Halogen = require("../Halogen");
var Halogen_Aff_Driver_Eval = require("../Halogen.Aff.Driver.Eval");
var Halogen_Aff_Driver_State = require("../Halogen.Aff.Driver.State");
var Halogen_Aff_Effects = require("../Halogen.Aff.Effects");
var Halogen_Component = require("../Halogen.Component");
var Halogen_Data_OrdBox = require("../Halogen.Data.OrdBox");
var Halogen_Query_InputF = require("../Halogen.Query.InputF");
var Prelude = require("../Prelude");
var newLifecycleHandlers = Control_Monad_Eff_Ref.newRef({
    initializers: Data_List_Types.Nil.value,
    finalizers: Data_List_Types.Nil.value
});
var handleAff = Control_Monad_Aff.runAff_(Data_Either.either(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit))));
var runUI = function (renderSpec) {
    return function (component) {
        return function (i) {
            var subscribe = function (fresh) {
                return function (ref) {
                    return function (consumer) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeEmptyVar)(function (v) {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(function __do() {
                                var v1 = Control_Monad_Eff_Ref.readRef(fresh)();
                                Control_Monad_Eff_Ref.modifyRef(fresh)(function (v2) {
                                    return v2 + 1 | 0;
                                })();
                                Control_Monad_Eff_Ref.modifyRef(ref)(Data_Map.insert(Data_Ord.ordInt)(v1)(v))();
                                return v1;
                            }))(function (v1) {
                                var producer = Control_Coroutine.producer(Control_Monad_Aff.monadAff)(Data_Functor.map(Control_Monad_Aff.functorAff)(Data_Either.Left.create)(Control_Monad_Aff_AVar.takeVar(v)));
                                return Data_Functor["void"](Control_Monad_Aff.functorAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Coroutine.runProcess(Control_Monad_Aff.monadRecAff)(Control_Coroutine.connect(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelAff)(producer)(consumer)))(function () {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(ref)(Data_Map["delete"](Data_Ord.ordInt)(v1))))(function () {
                                        return Control_Monad_Aff_AVar.killVar(Control_Monad_Eff_Exception.error("ended"))(v);
                                    });
                                })));
                            });
                        });
                    };
                };
            };
            var rootHandler = function (ref) {
                return function (message) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v) {
                        return Data_Foldable.traverse_(Control_Monad_Aff.applicativeAff)(Data_Map.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_Functor.map(Data_Map.functorMap)(Control_Monad_Aff_AVar.putVar(message))(v));
                    });
                };
            };
            var handlePending = function (ref) {
                return function __do() {
                    var v = Control_Monad_Eff_Ref.readRef(ref)();
                    Control_Monad_Eff_Ref.writeRef(ref)(Data_Maybe.Nothing.value)();
                    return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(v)(function ($63) {
                        return handleAff(Data_Foldable.traverse_(Control_Monad_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_List.reverse($63)));
                    })();
                };
            };
            var cleanupSubscriptions = function (v) {
                return function __do() {
                    Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(function ($64) {
                        return handleAff(Data_Foldable.traverse_(Control_Monad_Aff.applicativeAff)(Data_Map.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))($64));
                    }))(Control_Monad_Eff_Ref.readRef(v.subscriptions))();
                    return Control_Monad_Eff_Ref.writeRef(v.subscriptions)(Data_Maybe.Nothing.value)();
                };
            };
            var squashChildInitializers = function (lchs) {
                return function (preInits) {
                    return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                        var parentInitializer = Data_Functor.map(Data_Maybe.functorMaybe)(function ($65) {
                            return evalF(st.selfRef)(Halogen_Query_InputF.Query.create($65));
                        })(st.component.initializer);
                        return Control_Monad_Eff_Ref.modifyRef(lchs)(function (handlers) {
                            return {
                                initializers: new Data_List_Types.Cons(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Parallel.parSequence_(Control_Monad_Aff.parallelAff)(Data_List_Types.foldableList)(Data_List.reverse(handlers.initializers)))(function () {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Data_Foldable.sequence_(Control_Monad_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(parentInitializer))(function () {
                                        return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(function __do() {
                                            handlePending(st.pendingQueries)();
                                            return handlePending(st.pendingOuts)();
                                        });
                                    });
                                }), preInits),
                                finalizers: handlers.finalizers
                            };
                        });
                    });
                };
            };
            var runComponent = function (lchs) {
                return function (handler) {
                    return function (j) {
                        return function (prjQuery) {
                            return Halogen_Component.unComponent(function (c) {
                                return function __do() {
                                    var v = newLifecycleHandlers();
                                    var v1 = Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(prjQuery)(v)();
                                    var v2 = Control_Monad_Eff_Ref.readRef(lchs)();
                                    Control_Monad_Eff_Ref.writeRef(lchs)({
                                        initializers: Data_List_Types.Nil.value,
                                        finalizers: v2.finalizers
                                    })();
                                    Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Halogen_Aff_Driver_State.unDriverStateX(function ($66) {
                                        return render(lchs)((function (v3) {
                                            return v3.selfRef;
                                        })($66));
                                    }))(Control_Monad_Eff_Ref.readRef(v1))();
                                    Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(squashChildInitializers(lchs)(v2.initializers))(Control_Monad_Eff_Ref.readRef(v1))();
                                    return v1;
                                };
                            });
                        };
                    };
                };
            };
            var renderChild = function (lchs) {
                return function (handler) {
                    return function (mkOrdBox) {
                        return function (childrenInRef) {
                            return function (childrenOutRef) {
                                return Halogen_Component.unComponentSlot(function (p) {
                                    return function (ctor) {
                                        return function (input) {
                                            return function (inputQuery) {
                                                return function (outputQuery) {
                                                    return function (prjQuery) {
                                                        var ordP = mkOrdBox(p);
                                                        return function __do() {
                                                            var v = Control_Monad_Eff_Ref.readRef(childrenInRef)();
                                                            var v1 = (function () {
                                                                var v1 = Data_Map.pop(Halogen_Data_OrdBox.ordOrdBox)(ordP)(v);
                                                                if (v1 instanceof Data_Maybe.Just) {
                                                                    return function __do() {
                                                                        Control_Monad_Eff_Ref.writeRef(childrenInRef)(v1.value0.value1)();
                                                                        Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(inputQuery(input))(function (q) {
                                                                            return function __do() {
                                                                                var v2 = Control_Monad_Eff_Ref.readRef(v1.value0.value0)();
                                                                                return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                                                                                    return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(st.prjQuery(q))(function ($67) {
                                                                                        return handleAff(evalF(st.selfRef)(Halogen_Query_InputF.Query.create($67)));
                                                                                    });
                                                                                })(v2)();
                                                                            };
                                                                        })();
                                                                        return v1.value0.value0;
                                                                    };
                                                                };
                                                                if (v1 instanceof Data_Maybe.Nothing) {
                                                                    return runComponent(lchs)(function ($68) {
                                                                        return Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit))(handler)(outputQuery($68));
                                                                    })(input)(prjQuery)(ctor);
                                                                };
                                                                throw new Error("Failed pattern match at Halogen.Aff.Driver line 260, column 14 - line 268, column 92: " + [ v1.constructor.name ]);
                                                            })()();
                                                            var v2 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Map.member(Halogen_Data_OrdBox.ordOrdBox)(ordP))(Control_Monad_Eff_Ref.readRef(childrenOutRef))();
                                                            Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v2)(Control_Monad_Eff_Unsafe.unsafeCoerceEff(Control_Monad_Eff_Console.warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur")))();
                                                            Control_Monad_Eff_Ref.modifyRef(childrenOutRef)(Data_Map.insert(Halogen_Data_OrdBox.ordOrdBox)(ordP)(v1))();
                                                            return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_Ref.readRef(v1))(Halogen_Aff_Driver_State.renderStateX(Control_Monad_Eff.functorEff)(function (v3) {
                                                                if (v3 instanceof Data_Maybe.Nothing) {
                                                                    return Control_Monad_Eff_Exception["throw"]("Halogen internal error: child was not initialized in renderChild");
                                                                };
                                                                if (v3 instanceof Data_Maybe.Just) {
                                                                    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(renderSpec.renderChild(v3.value0));
                                                                };
                                                                throw new Error("Failed pattern match at Halogen.Aff.Driver line 274, column 36 - line 276, column 50: " + [ v3.constructor.name ]);
                                                            }))();
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                });
                            };
                        };
                    };
                };
            };
            var render = function (lchs) {
                return function ($$var) {
                    return function __do() {
                        var v = Control_Monad_Eff_Ref.readRef($$var)();
                        var v1 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Maybe.isNothing)(Control_Monad_Eff_Ref.readRef(v.pendingHandlers))();
                        Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v1)(Control_Monad_Eff_Ref.writeRef(v.pendingHandlers)(new Data_Maybe.Just(Data_List_Types.Nil.value)))();
                        Control_Monad_Eff_Ref.writeRef(v.childrenOut)(Data_Map.empty)();
                        Control_Monad_Eff_Ref.writeRef(v.childrenIn)(v.children)();
                        var handler = Halogen_Aff_Driver_Eval.queuingHandler(function ($69) {
                            return Data_Functor["void"](Control_Monad_Aff.functorAff)(evalF(v.selfRef)($69));
                        })(v.pendingHandlers);
                        var childHandler = Halogen_Aff_Driver_Eval.queuingHandler(function ($70) {
                            return handler(Halogen_Query_InputF.Query.create($70));
                        })(v.pendingQueries);
                        var v2 = renderSpec.render(function ($71) {
                            return handleAff(handler($71));
                        })(renderChild(lchs)(childHandler)(v.component.mkOrdBox)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
                        var v3 = Control_Monad_Eff_Ref.readRef(v.childrenOut)();
                        Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_Ref.readRef(v.childrenIn))(Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Map.foldableMap)(function (childVar) {
                            return function __do() {
                                var v4 = Control_Monad_Eff_Ref.readRef(childVar)();
                                Halogen_Aff_Driver_State.renderStateX_(Control_Monad_Eff.applicativeEff)(renderSpec.removeChild)(v4)();
                                return finalize(lchs)(v4)();
                            };
                        }))();
                        Control_Monad_Eff_Ref.modifyRef(v.selfRef)(function (v4) {
                            return {
                                rendering: new Data_Maybe.Just(v2),
                                children: v3,
                                component: v4.component,
                                state: v4.state,
                                refs: v4.refs,
                                childrenIn: v4.childrenIn,
                                childrenOut: v4.childrenOut,
                                selfRef: v4.selfRef,
                                handler: v4.handler,
                                pendingQueries: v4.pendingQueries,
                                pendingOuts: v4.pendingOuts,
                                pendingHandlers: v4.pendingHandlers,
                                prjQuery: v4.prjQuery,
                                fresh: v4.fresh,
                                subscriptions: v4.subscriptions,
                                lifecycleHandlers: v4.lifecycleHandlers
                            };
                        })();
                        return Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v1)(Data_Function.flip(Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEff))(Data_Unit.unit)(function (v4) {
                            return function __do() {
                                var v5 = Control_Monad_Eff_Ref.readRef(v.pendingHandlers)();
                                Control_Monad_Eff_Ref.writeRef(v.pendingHandlers)(new Data_Maybe.Just(Data_List_Types.Nil.value))();
                                Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(function ($72) {
                                    return handleAff(Data_Foldable.traverse_(Control_Monad_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_List.reverse($72)));
                                })(v5)();
                                var v6 = Control_Monad_Eff_Ref.readRef(v.pendingHandlers)();
                                var $57 = Data_Maybe.maybe(false)(Data_List["null"])(v6);
                                if ($57) {
                                    return Data_Functor.voidLeft(Control_Monad_Eff.functorEff)(Control_Monad_Eff_Ref.writeRef(v.pendingHandlers)(Data_Maybe.Nothing.value))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))();
                                };
                                return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);
                            };
                        }))();
                    };
                };
            };
            var finalize = function (lchs) {
                return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                    return function __do() {
                        cleanupSubscriptions(st)();
                        Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function ($73) {
                            return evalF(st.selfRef)(Halogen_Query_InputF.Query.create($73));
                        })(st.component.finalizer))(function (f) {
                            return Control_Monad_Eff_Ref.modifyRef(lchs)(function (handlers) {
                                return {
                                    initializers: handlers.initializers,
                                    finalizers: new Data_List_Types.Cons(f, handlers.finalizers)
                                };
                            });
                        })();
                        return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Map.foldableMap)(st.children)(Control_Bind.composeKleisliFlipped(Control_Monad_Eff.bindEff)(finalize(lchs))(Control_Monad_Eff_Ref.readRef))();
                    };
                });
            };
            var evalF = function (ref) {
                return Halogen_Aff_Driver_Eval["eval"](render)(ref);
            };
            var evalDriver = function (ref) {
                return function (prjQuery) {
                    return function (q) {
                        var v = prjQuery(q);
                        if (v instanceof Data_Maybe.Just) {
                            return evalF(ref)(new Halogen_Query_InputF.Query(v.value0));
                        };
                        if (v instanceof Data_Maybe.Nothing) {
                            return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Halogen internal error: query projection failed in runUI'")));
                        };
                        throw new Error("Failed pattern match at Halogen.Aff.Driver line 138, column 5 - line 140, column 110: " + [ v.constructor.name ]);
                    };
                };
            };
            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(newLifecycleHandlers))(function (v) {
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.newRef(0)))(function (v1) {
                    return Halogen_Aff_Driver_Eval.handleLifecycle(v)(function __do() {
                        var v2 = Control_Monad_Eff_Ref.newRef(Data_Map.empty)();
                        return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(runComponent(v)(rootHandler(v2))(i)(Data_Maybe.Just.create)(component))(Control_Monad_Eff_Ref.readRef))(Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                            return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)({
                                query: evalDriver(st.selfRef)(st.prjQuery),
                                subscribe: subscribe(v1)(v2)
                            });
                        }))();
                    });
                });
            });
        };
    };
};
module.exports = {
    runUI: runUI
};

},{"../Control.Applicative":5,"../Control.Bind":11,"../Control.Coroutine":14,"../Control.Monad.Aff":22,"../Control.Monad.Aff.AVar":18,"../Control.Monad.Eff":39,"../Control.Monad.Eff.Class":27,"../Control.Monad.Eff.Console":29,"../Control.Monad.Eff.Exception":31,"../Control.Monad.Eff.Ref":33,"../Control.Monad.Eff.Unsafe":37,"../Control.Monad.Fork.Class":43,"../Control.Monad.Rec.Class":51,"../Control.Parallel":64,"../Control.Semigroupoid":66,"../Data.Either":154,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.List":230,"../Data.List.Types":229,"../Data.Map":231,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Semiring":273,"../Data.Traversable":296,"../Data.Tuple":298,"../Data.Unit":302,"../Halogen":351,"../Halogen.Aff.Driver.Eval":322,"../Halogen.Aff.Driver.State":323,"../Halogen.Aff.Effects":325,"../Halogen.Component":330,"../Halogen.Data.OrdBox":331,"../Halogen.Query.InputF":341,"../Prelude":358}],325:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var DOM = require("../DOM");
module.exports = {};

},{"../Control.Monad.Aff.AVar":18,"../Control.Monad.Eff.Exception":31,"../Control.Monad.Eff.Ref":33,"../DOM":117}],326:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM = require("../DOM");
var DOM_Event_EventTarget = require("../DOM.Event.EventTarget");
var DOM_HTML = require("../DOM.HTML");
var DOM_HTML_Document = require("../DOM.HTML.Document");
var DOM_HTML_Document_ReadyState = require("../DOM.HTML.Document.ReadyState");
var DOM_HTML_Event_EventTypes = require("../DOM.HTML.Event.EventTypes");
var DOM_HTML_Types = require("../DOM.HTML.Types");
var DOM_HTML_Window = require("../DOM.HTML.Window");
var DOM_Node_ParentNode = require("../DOM.Node.ParentNode");
var Data_Either = require("../Data.Either");
var Data_Foreign = require("../Data.Foreign");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Unit = require("../Data.Unit");
var Halogen_Aff_Effects = require("../Halogen.Aff.Effects");
var Prelude = require("../Prelude");
var selectElement = function (query) {
    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Control_Bind.composeKleisliFlipped(Control_Monad_Eff.bindEff)(function ($13) {
        return DOM_Node_ParentNode.querySelector(query)(DOM_HTML_Types.htmlDocumentToParentNode($13));
    })(DOM_HTML_Window.document))(DOM_HTML.window)))(function (v) {
        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)((function () {
            if (v instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Data_Maybe.Just) {
                return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(Control_Monad_Except.runExcept(DOM_HTML_Types.readHTMLElement(Data_Foreign.toForeign(v.value0))));
            };
            throw new Error("Failed pattern match at Halogen.Aff.Util line 58, column 8 - line 60, column 88: " + [ v.constructor.name ]);
        })());
    });
};
var runHalogenAff = Control_Monad_Aff.runAff_(Data_Either.either(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit))));
var awaitLoad = Control_Monad_Aff.makeAff(function (callback) {
    return Control_Monad_Eff_Class.liftEff(Control_Monad_Eff_Class.monadEffEff)(function __do() {
        var v = Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(DOM_HTML_Document.readyState)(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(DOM_HTML_Window.document)(DOM_HTML.window))();
        if (v instanceof DOM_HTML_Document_ReadyState.Complete) {
            callback(new Data_Either.Right(Data_Unit.unit))();
            return Control_Monad_Aff.nonCanceler;
        };
        var v1 = Data_Functor.map(Control_Monad_Eff.functorEff)(DOM_HTML_Types.windowToEventTarget)(DOM_HTML.window)();
        var listener = DOM_Event_EventTarget.eventListener(function (v2) {
            return callback(new Data_Either.Right(Data_Unit.unit));
        });
        DOM_Event_EventTarget.addEventListener(DOM_HTML_Event_EventTypes.load)(listener)(false)(v1)();
        return function (v2) {
            return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(DOM_Event_EventTarget.removeEventListener(DOM_HTML_Event_EventTypes.load)(listener)(false)(v1));
        };
    });
});
var awaitBody = Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(awaitLoad)(function () {
    return Control_Bind.bind(Control_Monad_Aff.bindAff)(selectElement("body"))(function (v) {
        return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error("Could not find body")))(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(v);
    });
});
module.exports = {
    awaitLoad: awaitLoad,
    awaitBody: awaitBody,
    selectElement: selectElement,
    runHalogenAff: runHalogenAff
};

},{"../Control.Applicative":5,"../Control.Bind":11,"../Control.Monad.Aff":22,"../Control.Monad.Eff":39,"../Control.Monad.Eff.Class":27,"../Control.Monad.Eff.Exception":31,"../Control.Monad.Error.Class":40,"../Control.Monad.Except":42,"../Control.Semigroupoid":66,"../DOM":117,"../DOM.Event.EventTarget":73,"../DOM.HTML":107,"../DOM.HTML.Document":79,"../DOM.HTML.Document.ReadyState":77,"../DOM.HTML.Event.EventTypes":82,"../DOM.HTML.Types":103,"../DOM.HTML.Window":105,"../DOM.Node.ParentNode":112,"../Data.Either":154,"../Data.Foreign":169,"../Data.Function":172,"../Data.Functor":180,"../Data.Maybe":234,"../Data.Unit":302,"../Halogen.Aff.Effects":325,"../Prelude":358}],327:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Halogen_Aff_Driver = require("../Halogen.Aff.Driver");
var Halogen_Aff_Effects = require("../Halogen.Aff.Effects");
var Halogen_Aff_Util = require("../Halogen.Aff.Util");
module.exports = {};

},{"../Halogen.Aff.Driver":324,"../Halogen.Aff.Effects":325,"../Halogen.Aff.Util":326}],328:[function(require,module,exports){
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_Class = require("../Control.Monad.Aff.Class");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_AVar = require("../Control.Monad.Eff.AVar");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var Control_Monad_Eff_Uncurried = require("../Control.Monad.Eff.Uncurried");
var Control_Monad_Eff_Unsafe = require("../Control.Monad.Eff.Unsafe");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM = require("../DOM");
var DOM_Event_Event = require("../DOM.Event.Event");
var DOM_Event_Types = require("../DOM.Event.Types");
var DOM_HTML_HTMLInputElement = require("../DOM.HTML.HTMLInputElement");
var DOM_HTML_Types = require("../DOM.HTML.Types");
var DOM_Node_Types = require("../DOM.Node.Types");
var Data_Array_ST = require("../Data.Array.ST");
var Data_Const = require("../Data.Const");
var Data_Either = require("../Data.Either");
var Data_Either_Nested = require("../Data.Either.Nested");
var Data_Foldable = require("../Data.Foldable");
var Data_Foreign = require("../Data.Foreign");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Coproduct_Nested = require("../Data.Functor.Coproduct.Nested");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_Int = require("../Data.Int");
var Data_Lens = require("../Data.Lens");
var Data_Lens_Internal_Tagged = require("../Data.Lens.Internal.Tagged");
var Data_Lens_Prism = require("../Data.Lens.Prism");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Record = require("../Data.Record");
var Data_Record_Builder = require("../Data.Record.Builder");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Set = require("../Data.Set");
var Data_String = require("../Data.String");
var Data_Symbol = require("../Data.Symbol");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Data_Variant = require("../Data.Variant");
var Data_Variant_Internal = require("../Data.Variant.Internal");
var Data_Void = require("../Data.Void");
var FRP = require("../FRP");
var FRP_Behavior = require("../FRP.Behavior");
var FRP_Behavior_Keyboard = require("../FRP.Behavior.Keyboard");
var FRP_Behavior_Mouse = require("../FRP.Behavior.Mouse");
var FRP_Behavior_Time = require("../FRP.Behavior.Time");
var FRP_Event = require("../FRP.Event");
var Halogen = require("../Halogen");
var Halogen_Aff = require("../Halogen.Aff");
var Halogen_Aff_Util = require("../Halogen.Aff.Util");
var Halogen_Component = require("../Halogen.Component");
var Halogen_Component_ChildPath = require("../Halogen.Component.ChildPath");
var Halogen_HTML = require("../Halogen.HTML");
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements");
var Halogen_HTML_Events = require("../Halogen.HTML.Events");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties");
var Halogen_Query = require("../Halogen.Query");
var Halogen_Query_EventSource = require("../Halogen.Query.EventSource");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM");
var Halogen_Query_InputF = require("../Halogen.Query.InputF");
var Halogen_VDom_DOM_Prop = require("../Halogen.VDom.DOM.Prop");
var Halogen_VDom_Driver = require("../Halogen.VDom.Driver");
var Halogen_VDom_Util = require("../Halogen.VDom.Util");
var Prelude = require("../Prelude");
var Type_Equality = require("../Type.Equality");
var Type_Row = require("../Type.Row");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Unsafe_Reference = require("../Unsafe.Reference");
var Web_UIEvents_Key = require("../Web.UIEvents.Key");
var Web_UIEvents_Key_Internal = require("../Web.UIEvents.Key.Internal");
var Web_UIEvents_Key_Internal_Modifier = require("../Web.UIEvents.Key.Internal.Modifier");
var Web_UIEvents_Key_Prisms = require("../Web.UIEvents.Key.Prisms");
var Initialize = (function () {
    function Initialize(value0) {
        this.value0 = value0;
    };
    Initialize.create = function (value0) {
        return new Initialize(value0);
    };
    return Initialize;
})();
var Finalize = (function () {
    function Finalize(value0) {
        this.value0 = value0;
    };
    Finalize.create = function (value0) {
        return new Finalize(value0);
    };
    return Finalize;
})();
var Receive = (function () {
    function Receive(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Receive.create = function (value0) {
        return function (value1) {
            return new Receive(value0, value1);
        };
    };
    return Receive;
})();
var Lift = (function () {
    function Lift(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Lift.create = function (value0) {
        return function (value1) {
            return new Lift(value0, value1);
        };
    };
    return Lift;
})();
var UpdateProp = (function () {
    function UpdateProp(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    UpdateProp.create = function (value0) {
        return function (value1) {
            return new UpdateProp(value0, value1);
        };
    };
    return UpdateProp;
})();
var UpdateBehavior = (function () {
    function UpdateBehavior(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    UpdateBehavior.create = function (value0) {
        return function (value1) {
            return new UpdateBehavior(value0, value1);
        };
    };
    return UpdateBehavior;
})();
var HereFocused = (function () {
    function HereFocused() {

    };
    HereFocused.value = new HereFocused();
    return HereFocused;
})();
var ChildFocused = (function () {
    function ChildFocused() {

    };
    ChildFocused.value = new ChildFocused();
    return ChildFocused;
})();
var Unfocused = (function () {
    function Unfocused() {

    };
    Unfocused.value = new Unfocused();
    return Unfocused;
})();
var Here = (function () {
    function Here() {

    };
    Here.value = new Here();
    return Here;
})();
var Child = (function () {
    function Child() {

    };
    Child.value = new Child();
    return Child;
})();
var None = (function () {
    function None() {

    };
    None.value = new None();
    return None;
})();
var Deletor = function (x) {
    return x;
};

// allow mutation in ref?
var AroundState = function (x) {
    return x;
};
var ElementBehaviors = function (allAttrs, mkBehaviors, update) {
    this.allAttrs = allAttrs;
    this.mkBehaviors = mkBehaviors;
    this.update = update;
};
var ElementBehaviorsRL = function (attrsRL, initializeRL, updateRL) {
    this.attrsRL = attrsRL;
    this.initializeRL = initializeRL;
    this.updateRL = updateRL;
};
var ElementBehavior = function (IsSymbol0, attrs, process) {
    this.IsSymbol0 = IsSymbol0;
    this.attrs = attrs;
    this.process = process;
};
var MultiAttrBehavior = function (Nothings0, handle, shouldUpdate, subscribe, toProps) {
    this.Nothings0 = Nothings0;
    this.handle = handle;
    this.shouldUpdate = shouldUpdate;
    this.subscribe = subscribe;
    this.toProps = toProps;
};
var MultiAttrBehaviorRL = function (ListToRow2, NothingsRL0, RowToList1, RowToList3, handleRL, shouldUpdateRL, subscribeRL, toPropsRL) {
    this.ListToRow2 = ListToRow2;
    this.NothingsRL0 = NothingsRL0;
    this.RowToList1 = RowToList1;
    this.RowToList3 = RowToList3;
    this.handleRL = handleRL;
    this.shouldUpdateRL = shouldUpdateRL;
    this.subscribeRL = subscribeRL;
    this.toPropsRL = toPropsRL;
};
var Nothings = function (aWholeLotOfNothing) {
    this.aWholeLotOfNothing = aWholeLotOfNothing;
};
var NothingsRL = function (ListToRow1, RowToList0, aWholeLotOfNothingRL) {
    this.ListToRow1 = ListToRow1;
    this.RowToList0 = RowToList0;
    this.aWholeLotOfNothingRL = aWholeLotOfNothingRL;
};
var updateRL = function (dict) {
    return dict.updateRL;
};
var update = function (dict) {
    return dict.update;
};
var unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;
var toPropsRL = function (dict) {
    return dict.toPropsRL;
};
var toProps = function (dict) {
    return dict.toProps;
};
var subscribeRL = function (dict) {
    return dict.subscribeRL;
};
var subscribe = function (dict) {
    return dict.subscribe;
};
var subject$prime = (function () {
    var noop = Control_Monad_Eff_Uncurried.mkEffFn1(Control_Applicative.pure(Control_Applicative.applicativeFn)(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)));
    
    // Shh. You see nothing.
var noST = Control_Monad_Eff_Unsafe.unsafeCoerceEff;
    return function __do() {
        var v = noST(Data_Array_ST.emptySTArray)();
        return {
            event: Control_Monad_Eff_Uncurried.mkEffFn1(function (sub) {
                return noST(function __do() {
                    var v1 = Data_Array_ST.pushSTArray(v)(sub)();
                    return Data_Functor["void"](Control_Monad_Eff.functorEff)(noST(Data_Array_ST.pokeSTArray(v)(v1 - 1 | 0)(noop)));
                });
            }),
            push: Control_Monad_Eff_Uncurried.mkEffFn1(function (a) {
                return Control_Bind.bind(Control_Monad_Eff.bindEff)(noST(Data_Array_ST.unsafeFreeze(v)))(Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(Data_Functor.flap(Data_Functor.functorFn)(Control_Monad_Eff_Uncurried.runEffFn1)(a)));
            })
        };
    };
})();
var subject = subject$prime;
var split = function (dictIsSymbol) {
    return function (dictRowCons) {
        return function (dictRowLacks) {
            return function (k) {
                return function (v) {
                    return new Data_Tuple.Tuple(Data_Record.get(dictIsSymbol)(dictRowCons)(k)(v), v);
                };
            };
        };
    };
};
var snapshot = function (v) {
    if (v.outsideState instanceof Data_Maybe.Nothing) {
        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(v);
    };
    if (v.outsideState instanceof Data_Maybe.Just) {
        return Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(Control_Monad_Eff_Ref.readRef(v.outsideState.value0))(function (insideState) {
            return {
                insideState: insideState,
                outsideState: new Data_Maybe.Just(v.outsideState.value0)
            };
        });
    };
    throw new Error("Failed pattern match at Halogen.Behavior line 434, column 1 - line 434, column 102: " + [ v.constructor.name ]);
};
var shouldUpdateRL = function (dict) {
    return dict.shouldUpdateRL;
};
var shouldUpdate = function (dict) {
    return dict.shouldUpdate;
};
var setProperty = Halogen_VDom_Util.unsafeSetAny;
var removeProperty = function (key, el) {
    var v = Data_Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));
    if (v === "string") {
        return Halogen_VDom_Util.unsafeSetAny(key, "", el);
    };
    return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);
};
var process = function (dict) {
    return dict.process;
};
var preciseHoverElementBehavior = new ElementBehavior(function () {
    return new Data_Symbol.IsSymbol(function () {
        return "preciseHover";
    });
}, function (v) {
    return function (q) {
        return [ Halogen_HTML_Events.onMouseOver(q(new Data_Either.Left(true))), Halogen_HTML_Events.onMouseOut(q(new Data_Either.Left(false))), Halogen_HTML_Events.onMouseEnter(q(new Data_Either.Right(true))), Halogen_HTML_Events.onMouseLeave(q(new Data_Either.Right(false))) ];
    };
}, function (v) {
    return function (e) {
        var next = function (v1) {
            return function (v2) {
                if (v1 instanceof Data_Either.Left) {
                    return new Data_Tuple.Tuple(v1.value0, v2.value1);
                };
                if (v1 instanceof Data_Either.Right) {
                    return new Data_Tuple.Tuple(v2.value0, v1.value0);
                };
                throw new Error("Failed pattern match at Halogen.Behavior line 277, column 9 - line 277, column 47: " + [ v1.constructor.name, v2.constructor.name ]);
            };
        };
        return Data_Functor.mapFlipped(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(FRP_Behavior.unfold(FRP_Event.eventIsEvent)(next)(e)(new Data_Tuple.Tuple(false, false)))(function (v1) {
            if (v1.value1) {
                return Child.value;
            };
            if (v1.value0) {
                return Here.value;
            };
            if (!v1.value0 && !v1.value1) {
                return None.value;
            };
            throw new Error("Failed pattern match at Halogen.Behavior line 272, column 57 - line 275, column 32: " + [ v1.constructor.name ]);
        });
    };
});
var preciseFocusElementBehavior = new ElementBehavior(function () {
    return new Data_Symbol.IsSymbol(function () {
        return "preciseFocus";
    });
}, function (v) {
    return function (q) {
        return [ Halogen_HTML_Events.onFocus(q(new Data_Either.Left(true))), Halogen_HTML_Events.onBlur(q(new Data_Either.Left(false))), Halogen_HTML_Events.onFocusIn(q(new Data_Either.Right(true))), Halogen_HTML_Events.onFocusOut(q(new Data_Either.Right(false))) ];
    };
}, function (v) {
    return function (e) {
        var next = function (v1) {
            return function (v2) {
                if (v1 instanceof Data_Either.Left) {
                    return new Data_Tuple.Tuple(v1.value0, v2.value1);
                };
                if (v1 instanceof Data_Either.Right) {
                    return new Data_Tuple.Tuple(v2.value0, v1.value0);
                };
                throw new Error("Failed pattern match at Halogen.Behavior line 249, column 9 - line 249, column 47: " + [ v1.constructor.name, v2.constructor.name ]);
            };
        };
        return Data_Functor.mapFlipped(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(FRP_Behavior.unfold(FRP_Event.eventIsEvent)(next)(e)(new Data_Tuple.Tuple(false, false)))(function (v1) {
            if (v1.value0) {
                return HereFocused.value;
            };
            if (v1.value1) {
                return ChildFocused.value;
            };
            if (!v1.value0 && !v1.value1) {
                return Unfocused.value;
            };
            throw new Error("Failed pattern match at Halogen.Behavior line 244, column 57 - line 247, column 37: " + [ v1.constructor.name ]);
        });
    };
});
var nothingsNil = new NothingsRL(function () {
    return Type_Row.listToRowNil;
}, function () {
    return undefined;
}, function (v) {
    return {};
});
var mkDeletor = Deletor;
var mkBehaviors = function (dict) {
    return dict.mkBehaviors;
};
var mapIProp = function (f) {
    return function (v) {
        return Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_InputF.functorInputF)(f))(v);
    };
};
var mabNil = new MultiAttrBehaviorRL(function () {
    return Type_Row.listToRowNil;
}, function () {
    return nothingsNil;
}, function () {
    return undefined;
}, function () {
    return undefined;
}, function (v) {
    return function (v1) {
        return Data_Variant.case_;
    };
}, function (v) {
    return function (v1) {
        return Data_Variant.case_;
    };
}, function (v) {
    return function (v1) {
        return function (cb) {
            return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit));
        };
    };
}, function (v) {
    return function (v1) {
        return [  ];
    };
});
var initializeRL = function (dict) {
    return dict.initializeRL;
};
var initialize = function (v) {
    return Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(Control_Monad_Eff_Ref.newRef(v.insideState))(function ($280) {
        return AroundState((function (v1) {
            return {
                insideState: v.insideState,
                outsideState: v1
            };
        })(Data_Maybe.Just.create($280)));
    });
};
var hoverElementBehavior = new ElementBehavior(function () {
    return new Data_Symbol.IsSymbol(function () {
        return "hover";
    });
}, function (v) {
    return function (q) {
        return [ Halogen_HTML_Events.onMouseOver(q(true)), Halogen_HTML_Events.onMouseOut(q(false)) ];
    };
}, function (v) {
    return FRP_Behavior.step(FRP_Event.eventIsEvent)(false);
});
var handleRL = function (dict) {
    return dict.handleRL;
};
var handle = function (dict) {
    return dict.handle;
};
var focusElementBehavior = new ElementBehavior(function () {
    return new Data_Symbol.IsSymbol(function () {
        return "focus";
    });
}, function (v) {
    return function (q) {
        return [ Halogen_HTML_Events.onFocus(q(true)), Halogen_HTML_Events.onBlur(q(false)) ];
    };
}, function (v) {
    return FRP_Behavior.step(FRP_Event.eventIsEvent)(false);
});
var expandAttrs = function (dictUnion) {
    return Unsafe_Coerce.unsafeCoerce;
};
var expandAttr = function (dictUnion) {
    return Unsafe_Coerce.unsafeCoerce;
};
var eqProp = function (dictIsProp) {
    return function (a) {
        return function (b) {
            return Unsafe_Reference.unsafeRefEq(Halogen_HTML_Core.toPropValue(dictIsProp)(a))(Halogen_HTML_Core.toPropValue(dictIsProp)(b));
        };
    };
};
var eqMProp = function (dictIsProp) {
    return function (v) {
        return function (v1) {
            if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                return eqProp(dictIsProp)(v.value0)(v1.value0);
            };
            if (v instanceof Data_Maybe.Nothing && v1 instanceof Data_Maybe.Nothing) {
                return true;
            };
            return false;
        };
    };
};
var elementBehaviorsNil = new ElementBehaviorsRL(function (v) {
    return [  ];
}, function (v) {
    return function (v1) {
        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(Control_Category.id(Data_Record_Builder.categoryBuilder), Control_Category.id(Data_Record_Builder.categoryBuilder)));
    };
}, function (v) {
    return function (v1) {
        return function (v2) {
            return function (v3) {
                return Data_Variant.case_(v3);
            };
        };
    };
});
var attrsRL = function (dict) {
    return dict.attrsRL;
};
var elementBehaviors = function (dictRowToList) {
    return function (dictElementBehaviorsRL) {
        return new ElementBehaviors(function (v) {
            return attrsRL(dictElementBehaviorsRL)(Type_Row.RLProxy.value);
        }, function (r) {
            return Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(initializeRL(dictElementBehaviorsRL)(Type_Row.RLProxy.value)(r))(function (v) {
                return new Data_Tuple.Tuple(Data_Record_Builder.build(v.value0)({}), Data_Record_Builder.build(v.value1)({}));
            });
        }, function (v) {
            return function (r) {
                return function (cbs) {
                    return updateRL(dictElementBehaviorsRL)(Type_Row.RLProxy.value)(r)(mkDeletor(cbs));
                };
            };
        });
    };
};
var attrs = function (dict) {
    return dict.attrs;
};
var elementBehaviorsCons = function (dictElementBehavior) {
    return function (dictUnion) {
        return function (dictRowCons) {
            return function (dictRowCons1) {
                return function (dictRowCons2) {
                    return function (dictRowLacks) {
                        return function (dictRowLacks1) {
                            return function (dictRowLacks2) {
                                return function (dictRowToList) {
                                    return function (dictListToRow) {
                                        return function (dictUnion1) {
                                            return function (dictRowToList1) {
                                                return function (dictVariantMatchCases) {
                                                    return function (dictElementBehaviorsRL) {
                                                        return new ElementBehaviorsRL(function (v) {
                                                            var q = function (v1) {
                                                                return function (v2) {
                                                                    return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Variant.inj(dictRowCons2)(dictElementBehavior.IsSymbol0())(Data_Symbol.SProxy.value)(v1));
                                                                };
                                                            };
                                                            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.map(Data_Functor.functorArray)(mapIProp(Data_Variant.expand(dictUnion1)))(attrsRL(dictElementBehaviorsRL)(Type_Row.RLProxy.value)))(expandAttrs(dictUnion)(attrs(dictElementBehavior)(Data_Symbol.SProxy.value)(q)));
                                                        }, function (v) {
                                                            return function (r) {
                                                                return function __do() {
                                                                    var v1 = initializeRL(dictElementBehaviorsRL)(Type_Row.RLProxy.value)(r)();
                                                                    var v2 = subject();
                                                                    var b = process(dictElementBehavior)(Data_Symbol.SProxy.value)(v2.event);
                                                                    return new Data_Tuple.Tuple(Control_Semigroupoid.composeFlipped(Data_Record_Builder.semigroupoidBuilder)(v1.value0)(Data_Record_Builder.insert(dictRowCons)(dictRowLacks)(dictElementBehavior.IsSymbol0())(Data_Symbol.SProxy.value)(b)), Control_Semigroupoid.composeFlipped(Data_Record_Builder.semigroupoidBuilder)(v1.value1)(Data_Record_Builder.insert(dictRowCons1)(dictRowLacks1)(dictElementBehavior.IsSymbol0())(Data_Symbol.SProxy.value)(Control_Monad_Eff_Uncurried.runEffFn1(v2.push))));
                                                                };
                                                            };
                                                        }, function (v) {
                                                            return function (r) {
                                                                return function (cbs) {
                                                                    var v1 = split(dictElementBehavior.IsSymbol0())(dictRowCons1)(dictRowLacks1)(Data_Symbol.SProxy.value)(cbs);
                                                                    return Data_Variant.on(dictRowCons2)(dictElementBehavior.IsSymbol0())(Data_Symbol.SProxy.value)(v1.value0)(updateRL(dictElementBehaviorsRL)(Type_Row.RLProxy.value)(r)(v1.value1));
                                                                };
                                                            };
                                                        });
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var allAttrs = function (dict) {
    return dict.allAttrs;
};
var aWholeLotOfNothingRL = function (dict) {
    return dict.aWholeLotOfNothingRL;
};
var nothingsCons = function (dictIsSymbol) {
    return function (dictRowCons) {
        return function (dictRowLacks) {
            return function (dictRowToList) {
                return function (dictNothingsRL) {
                    return new NothingsRL(function () {
                        return Type_Row.listToRowCons(dictNothingsRL.ListToRow1())(dictRowCons);
                    }, function () {
                        return dictRowToList;
                    }, function (v) {
                        return Data_Record.insert(dictIsSymbol)(dictRowLacks)(dictRowCons)(Data_Symbol.SProxy.value)(Data_Maybe.Nothing.value)(aWholeLotOfNothingRL(dictNothingsRL)(Type_Row.RLProxy.value));
                    });
                };
            };
        };
    };
};
var mabCons = function (dictIsSymbol) {
    return function (dictIsProp) {
        return function (dictRowLacks) {
            return function (dictRowLacks1) {
                return function (dictRowLacks2) {
                    return function (dictRowCons) {
                        return function (dictRowCons1) {
                            return function (dictRowCons2) {
                                return function (dictUnion) {
                                    return function (dictRowToList) {
                                        return function (dictRowToList1) {
                                            return function (dictRowToList2) {
                                                return function (dictMultiAttrBehaviorRL) {
                                                    return new MultiAttrBehaviorRL(function () {
                                                        return Type_Row.listToRowCons(dictMultiAttrBehaviorRL.ListToRow2())(dictRowCons);
                                                    }, function () {
                                                        return nothingsCons(dictIsSymbol)(dictRowCons1)(dictRowLacks1)(dictRowToList1)(dictMultiAttrBehaviorRL.NothingsRL0());
                                                    }, function () {
                                                        return dictRowToList;
                                                    }, function () {
                                                        return dictRowToList2;
                                                    }, function (v) {
                                                        return function (el) {
                                                            var propName = (function (v1) {
                                                                if (v1 === "class") {
                                                                    return "className";
                                                                };
                                                                if (v1 === "for") {
                                                                    return "htmlFor";
                                                                };
                                                                return v1;
                                                            })(Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value));
                                                            return Data_Variant.on(dictRowCons1)(dictIsSymbol)(Data_Symbol.SProxy.value)(function (v1) {
                                                                if (v1 instanceof Data_Maybe.Just) {
                                                                    return setProperty(propName, Halogen_HTML_Core.toPropValue(dictIsProp)(v1.value0), el);
                                                                };
                                                                if (v1 instanceof Data_Maybe.Nothing) {
                                                                    return removeProperty(propName, el);
                                                                };
                                                                throw new Error("Failed pattern match at Halogen.Behavior line 392, column 16 - line 394, column 58: " + [ v1.constructor.name ]);
                                                            })(handleRL(dictMultiAttrBehaviorRL)(Type_Row.RLProxy.value)(el));
                                                        };
                                                    }, function (v) {
                                                        return function (ref) {
                                                            var handleThis = function (v1) {
                                                                return function __do() {
                                                                    var v2 = Control_Monad_Eff_Ref.readRef(ref)();
                                                                    var $219 = eqMProp(dictIsProp)(Data_Record.get(dictIsSymbol)(dictRowCons1)(Data_Symbol.SProxy.value)(v2))(v1);
                                                                    if ($219) {
                                                                        return false;
                                                                    };
                                                                    Control_Monad_Eff_Ref.modifyRef(ref)(Data_Record.set(dictIsSymbol)(dictRowCons1)(dictRowCons1)(Data_Symbol.SProxy.value)(v1))();
                                                                    return true;
                                                                };
                                                            };
                                                            var handleOther = shouldUpdateRL(dictMultiAttrBehaviorRL)(Type_Row.RLProxy.value)(ref);
                                                            return Data_Variant.on(dictRowCons1)(dictIsSymbol)(Data_Symbol.SProxy.value)(handleThis)(handleOther);
                                                        };
                                                    }, function (v) {
                                                        return function (r) {
                                                            return function (cb) {
                                                                return function __do() {
                                                                    var v1 = subscribeRL(dictMultiAttrBehaviorRL)(Type_Row.RLProxy.value)(Data_Record["delete"](dictIsSymbol)(dictRowLacks2)(dictRowCons2)(Data_Symbol.SProxy.value)(r))(function ($281) {
                                                                        return cb(Data_Variant.expand(dictUnion)($281));
                                                                    })();
                                                                    var v2 = FRP_Behavior.animate(Data_Record.get(dictIsSymbol)(dictRowCons2)(Data_Symbol.SProxy.value)(r))(function ($282) {
                                                                        return cb(Data_Variant.inj(dictRowCons1)(dictIsSymbol)(Data_Symbol.SProxy.value)($282));
                                                                    })();
                                                                    return Control_Apply.applySecond(Control_Monad_Eff.applyEff)(v1)(v2);
                                                                };
                                                            };
                                                        };
                                                    }, function (v) {
                                                        return function (r) {
                                                            var other = toPropsRL(dictMultiAttrBehaviorRL)(Type_Row.RLProxy.value)(Data_Record["delete"](dictIsSymbol)(dictRowLacks1)(dictRowCons1)(Data_Symbol.SProxy.value)(r));
                                                            var v1 = Data_Record.get(dictIsSymbol)(dictRowCons1)(Data_Symbol.SProxy.value)(r);
                                                            if (v1 instanceof Data_Maybe.Nothing) {
                                                                return other;
                                                            };
                                                            if (v1 instanceof Data_Maybe.Just) {
                                                                return Data_Semigroup.append(Data_Semigroup.semigroupArray)(other)([ new Halogen_VDom_DOM_Prop.Property(Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value), Halogen_HTML_Core.toPropValue(dictIsProp)(v1.value0)) ]);
                                                            };
                                                            throw new Error("Failed pattern match at Halogen.Behavior line 401, column 23 - line 403, column 80: " + [ v1.constructor.name ]);
                                                        };
                                                    });
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var nothingsImpl = function (dictRowToList) {
    return function (dictListToRow) {
        return function (dictNothingsRL) {
            return new Nothings(aWholeLotOfNothingRL(dictNothingsRL)(Type_Row.RLProxy.value));
        };
    };
};
var mab = function (dictRowToList) {
    return function (dictListToRow) {
        return function (dictRowToList1) {
            return function (dictListToRow1) {
                return function (dictRowToList2) {
                    return function (dictListToRow2) {
                        return function (dictNothingsRL) {
                            return function (dictMultiAttrBehaviorRL) {
                                return new MultiAttrBehavior(function () {
                                    return nothingsImpl(dictRowToList1)(dictListToRow1)(dictNothingsRL);
                                }, handleRL(dictMultiAttrBehaviorRL)(Type_Row.RLProxy.value), shouldUpdateRL(dictMultiAttrBehaviorRL)(Type_Row.RLProxy.value), subscribeRL(dictMultiAttrBehaviorRL)(Type_Row.RLProxy.value), toPropsRL(dictMultiAttrBehaviorRL)(Type_Row.RLProxy.value));
                            };
                        };
                    };
                };
            };
        };
    };
};
var aWholeLotOfNothing = function (dict) {
    return dict.aWholeLotOfNothing;
};
var uninitializedAS = function (dictNothings) {
    return {
        insideState: aWholeLotOfNothing(dictNothings),
        outsideState: Data_Maybe.Nothing.value
    };
};
var initialState = function (dictNothings) {
    return function (v) {
        return {
            value: v,
            as: uninitializedAS(dictNothings),
            pushers: Data_Maybe.Nothing.value
        };
    };
};
var behavioralComponent = function (dictMonadAff) {
    return function (dictMultiAttrBehavior) {
        return function (dictRowToList) {
            return function (dictElementBehaviorsRL) {
                return function (dictUnion) {
                    return function (dictNothings) {
                        return function (node) {
                            return function (renderWith) {
                                return function (behavior) {
                                    var lifting = Data_Functor.map(Data_Functor.functorArray)(mapIProp(Data_Functor.flap(Data_Functor.functorFn)(Lift.create)(Data_Unit.unit)));
                                    var events = Data_Functor.map(Data_Functor.functorArray)(mapIProp(Data_Functor.flap(Data_Functor.functorFn)(UpdateBehavior.create)(Data_Unit.unit)))(attrsRL(dictElementBehaviorsRL)(Type_Row.RLProxy.value));
                                    var $$eval = function (v) {
                                        if (v instanceof Initialize) {
                                            return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value0)(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)($$eval(new Finalize(Data_Unit.unit)))(function () {
                                                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                    return v1.as;
                                                }))(function ($283) {
                                                    return Control_Monad_Eff_Class.liftEff(Halogen_Query_HalogenM.monadEffHalogenM(dictMonadAff.MonadEff0()))(initialize($283));
                                                }))(function (v1) {
                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                                        var $226 = {};
                                                        for (var $227 in v2) {
                                                            if ({}.hasOwnProperty.call(v2, $227)) {
                                                                $226[$227] = v2[$227];
                                                            };
                                                        };
                                                        $226.as = v1;
                                                        return $226;
                                                    }))(function () {
                                                        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Eff_Class.liftEff(Halogen_Query_HalogenM.monadEffHalogenM(dictMonadAff.MonadEff0()))(mkBehaviors(elementBehaviors(dictRowToList)(dictElementBehaviorsRL))(Type_Row.RProxy.value)))(function (v2) {
                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                                                                var $230 = {};
                                                                for (var $231 in v3) {
                                                                    if ({}.hasOwnProperty.call(v3, $231)) {
                                                                        $230[$231] = v3[$231];
                                                                    };
                                                                };
                                                                $230.pushers = new Data_Maybe.Just(v2.value1);
                                                                return $230;
                                                            }))(function () {
                                                                return Halogen_Query_HalogenM.subscribe(Halogen_Query_EventSource["eventSource'"](dictMonadAff)(subscribe(dictMultiAttrBehavior)(behavior(v2.value0)))(function ($284) {
                                                                    return Data_Maybe.Just.create(Data_Functor.flap(Data_Functor.functorFn)(UpdateProp.create)(Halogen_Query_EventSource.Listening.value)($284));
                                                                }));
                                                            });
                                                        });
                                                    });
                                                });
                                            }));
                                        };
                                        if (v instanceof Receive) {
                                            return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                return v1.as;
                                            }))(function ($285) {
                                                return Control_Monad_Eff_Class.liftEff(Halogen_Query_HalogenM.monadEffHalogenM(dictMonadAff.MonadEff0()))(snapshot($285));
                                            }))(function (v1) {
                                                return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                                    var $237 = {};
                                                    for (var $238 in v2) {
                                                        if ({}.hasOwnProperty.call(v2, $238)) {
                                                            $237[$238] = v2[$238];
                                                        };
                                                    };
                                                    $237.value = v.value0;
                                                    $237.as = v1;
                                                    return $237;
                                                });
                                            }));
                                        };
                                        if (v instanceof Finalize) {
                                            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
                                        };
                                        if (v instanceof Lift) {
                                            return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Halogen_Query_HalogenM.raise(v.value0));
                                        };
                                        if (v instanceof UpdateProp) {
                                            return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Monad_Maybe_Trans.runMaybeT(Control_Bind.bind(Control_Monad_Maybe_Trans.bindMaybeT(Halogen_Query_HalogenM.monadHalogenM))(Data_Functor.map(Control_Monad_Maybe_Trans.functorMaybeT(Halogen_Query_HalogenM.functorHalogenM))(DOM_HTML_Types.htmlElementToElement)(Halogen_Query.getHTMLElementRef("behavioral-component")))(function (v1) {
                                                return Control_Bind.bind(Control_Monad_Maybe_Trans.bindMaybeT(Halogen_Query_HalogenM.monadHalogenM))(Control_Monad_Maybe_Trans.MaybeT(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                                    return v2.as.outsideState;
                                                })))(function (v2) {
                                                    return Control_Bind.bind(Control_Monad_Maybe_Trans.bindMaybeT(Halogen_Query_HalogenM.monadHalogenM))(Control_Monad_Eff_Class.liftEff(Control_Monad_Maybe_Trans.monadEffMaybe(Halogen_Query_HalogenM.monadEffHalogenM(dictMonadAff.MonadEff0())))(shouldUpdate(dictMultiAttrBehavior)(v2)(v.value0)))(function (v3) {
                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Maybe_Trans.bindMaybeT(Halogen_Query_HalogenM.monadHalogenM))(Control_MonadZero.guard(Control_Monad_Maybe_Trans.monadZeroMaybeT(Halogen_Query_HalogenM.monadHalogenM))(v3))(function () {
                                                            return Control_Monad_Eff_Class.liftEff(Control_Monad_Maybe_Trans.monadEffMaybe(Halogen_Query_HalogenM.monadEffHalogenM(dictMonadAff.MonadEff0())))(handle(dictMultiAttrBehavior)(v1)(v.value0));
                                                        });
                                                    });
                                                });
                                            })));
                                        };
                                        if (v instanceof UpdateBehavior) {
                                            return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Monad_Maybe_Trans.runMaybeT(Control_Bind.bind(Control_Monad_Maybe_Trans.bindMaybeT(Halogen_Query_HalogenM.monadHalogenM))(Control_Monad_Maybe_Trans.MaybeT(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                return v1.pushers;
                                            })))(function (v1) {
                                                return Control_Monad_Eff_Class.liftEff(Control_Monad_Maybe_Trans.monadEffMaybe(Halogen_Query_HalogenM.monadEffHalogenM(dictMonadAff.MonadEff0())))(update(elementBehaviors(dictRowToList)(dictElementBehaviorsRL))(Type_Row.RProxy.value)(Type_Row.RProxy.value)(v1)(v.value0));
                                            })));
                                        };
                                        throw new Error("Failed pattern match at Halogen.Behavior line 551, column 5 - line 551, column 134: " + [ v.constructor.name ]);
                                    };
                                    var addRefProps = function (v) {
                                        return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Properties.ref("behavioral-component") ])(v);
                                    };
                                    
                                    // Render the component. Delegates to the passed in renderer,
                                    // lifts all communication from it.
var render = function (v) {
                                        var props = addRefProps(toProps(dictMultiAttrBehavior)(v.as.insideState));
                                        var renderer = function (attrs1) {
                                            return function (children) {
                                                return node(Data_Semigroup.append(Data_Semigroup.semigroupArray)(events)(lifting(Data_Semigroup.append(Data_Semigroup.semigroupArray)(attrs1)(props))))(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_HTML_Core.functorHTML)(Data_Functor.flap(Data_Functor.functorFn)(Lift.create)(Data_Unit.unit)))(children));
                                            };
                                        };
                                        return renderWith(renderer)(v.value);
                                    };
                                    return Halogen_Component.lifecycleComponent(Halogen_HTML_Core.bifunctorHTML)({
                                        initialState: initialState(dictNothings),
                                        receiver: Halogen_HTML_Events.input(Receive.create),
                                        initializer: Halogen_HTML_Events.input_(Initialize.create)(Data_Unit.unit),
                                        finalizer: Halogen_HTML_Events.input_(Finalize.create)(Data_Unit.unit),
                                        render: render,
                                        "eval": $$eval
                                    });
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var main = (function () {
    var spacebar = FRP_Behavior_Keyboard.key(Data_Lens_Prism.review(Web_UIEvents_Key_Prisms._space(Data_Lens_Internal_Tagged.taggedChoice))(Data_Unit.unit));
    var pressed = Data_Functor.mapFlipped(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(FRP_Behavior_Mouse.buttons)(function ($286) {
        return (function (v) {
            return v > 0;
        })(Data_Set.size($286));
    });
    var mods = [ Web_UIEvents_Key_Internal_Modifier.Shift.value, Web_UIEvents_Key_Internal_Modifier.Control.value, Web_UIEvents_Key_Internal_Modifier.Alt.value, Web_UIEvents_Key_Internal_Modifier.Meta.value ];
    var mkModifier = function (m) {
        return function (v) {
            return {
                style: Data_Functor.mapFlipped(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(FRP_Behavior_Keyboard.modifiers)(function ($287) {
                    return Control_Applicative.pure(Data_Maybe.applicativeMaybe)((function (v1) {
                        if (v1) {
                            return "background-color: pink; width: 20em";
                        };
                        return "width: 20em";
                    })(Data_Foldable.elem(Data_Set.foldableSet)(Web_UIEvents_Key_Internal_Modifier.eqModifier)(m)($287)));
                })
            };
        };
    };
    var modifierComponent = function (m) {
        return Data_Functor.flap(Data_Functor.functorFn)(behavioralComponent(Control_Monad_Aff_Class.monadAffAff)(mab()(Type_Row.listToRowCons(Type_Row.listToRowNil)())()(Type_Row.listToRowCons(Type_Row.listToRowNil)())()(Type_Row.listToRowCons(Type_Row.listToRowNil)())(nothingsCons(new Data_Symbol.IsSymbol(function () {
            return "style";
        }))()(Type_Row.rowLacks()()()(Type_Row.rowLacking))()(nothingsNil))(mabCons(new Data_Symbol.IsSymbol(function () {
            return "style";
        }))(Halogen_HTML_Core.stringIsProp)(Type_Row.rowLacks()()()(Type_Row.rowLacking))(Type_Row.rowLacks()()()(Type_Row.rowLacking))(Type_Row.rowLacks()()()(Type_Row.rowLacking))()()()()()()()(mabNil)))()(elementBehaviorsNil)()(nothingsImpl()(Type_Row.listToRowCons(Type_Row.listToRowNil)())(nothingsCons(new Data_Symbol.IsSymbol(function () {
            return "style";
        }))()(Type_Row.rowLacks()()()(Type_Row.rowLacking))()(nothingsNil)))(Halogen_HTML_Elements.div))(mkModifier(m))(function (el) {
            return function (t) {
                return el([  ])([ Halogen_HTML_Core.text(Web_UIEvents_Key_Internal.unparse(Web_UIEvents_Key_Internal.fromModifier(m))) ]);
            };
        });
    };
    var italic = Data_Functor.mapFlipped(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(pressed)(function (v) {
        if (v) {
            return "italic";
        };
        return "normal";
    });
    var inputColor = function (v) {
        return (function (v1) {
            return {
                style: v1
            };
        })(Data_Functor.map(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(Data_Maybe.Just.create)(Control_Apply.apply(FRP_Behavior.applyABehavior(FRP_Event.functorEvent))(Data_Functor.map(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(function (f) {
            return function (h) {
                return "color: " + (function () {
                    if (f) {
                        if (h) {
                            return "purple";
                        };
                        return "blue";
                    };
                    if (h) {
                        return "red";
                    };
                    return "black";
                })();
            };
        })(v.focus))(v.hover)));
    };
    var component2 = Data_Functor.flap(Data_Functor.functorFn)(behavioralComponent(Control_Monad_Aff_Class.monadAffAff)(mab()(Type_Row.listToRowCons(Type_Row.listToRowNil)())()(Type_Row.listToRowCons(Type_Row.listToRowNil)())()(Type_Row.listToRowCons(Type_Row.listToRowNil)())(nothingsCons(new Data_Symbol.IsSymbol(function () {
        return "style";
    }))()(Type_Row.rowLacks()()()(Type_Row.rowLacking))()(nothingsNil))(mabCons(new Data_Symbol.IsSymbol(function () {
        return "style";
    }))(Halogen_HTML_Core.stringIsProp)(Type_Row.rowLacks()()()(Type_Row.rowLacking))(Type_Row.rowLacks()()()(Type_Row.rowLacking))(Type_Row.rowLacks()()()(Type_Row.rowLacking))()()()()()()()(mabNil)))()(elementBehaviorsCons(focusElementBehavior)()()()()(Type_Row.rowLacks()()()(Type_Row.rowLacking))(Type_Row.rowLacks()()()(Type_Row.rowLacking))(Type_Row.rowLacks()()()(Type_Row.rowLacking))()(Type_Row.listToRowCons(Type_Row.listToRowCons(Type_Row.listToRowNil)())())()()(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchNil)()(Type_Equality.refl))()(Type_Equality.refl))(elementBehaviorsCons(hoverElementBehavior)()()()()(Type_Row.rowLacks()()()(Type_Row.rowLacking))(Type_Row.rowLacks()()()(Type_Row.rowLacking))(Type_Row.rowLacks()()()(Type_Row.rowLacking))()(Type_Row.listToRowCons(Type_Row.listToRowNil)())()()(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchNil)()(Type_Equality.refl))(elementBehaviorsNil)))()(nothingsImpl()(Type_Row.listToRowCons(Type_Row.listToRowNil)())(nothingsCons(new Data_Symbol.IsSymbol(function () {
        return "style";
    }))()(Type_Row.rowLacks()()()(Type_Row.rowLacking))()(nothingsNil)))(function (a) {
        return function (v) {
            return Halogen_HTML_Elements.input(a);
        };
    }))(inputColor)(function (el) {
        return function (v) {
            return el([ Halogen_HTML_Properties.value(v), Halogen_HTML_Events.onInput(Halogen_HTML_Events.input(Data_Tuple.Tuple.create)) ])([  ]);
        };
    });
    var combine = function (focusedWhere) {
        return function (coleur) {
            return function (italicite) {
                return Data_String.joinWith("; ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ "color: " + coleur, "font-style: " + italicite ])((function () {
                    if (focusedWhere instanceof Here) {
                        return [ "font-weight: normal" ];
                    };
                    if (focusedWhere instanceof Child) {
                        return [ "font-decoration: underline" ];
                    };
                    if (focusedWhere instanceof None) {
                        return [ "text-transform: capitalize" ];
                    };
                    throw new Error("Failed pattern match at Halogen.Behavior line 617, column 12 - line 620, column 49: " + [ focusedWhere.constructor.name ]);
                })()));
            };
        };
    };
    var blink = Data_Functor.mapFlipped(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(FRP_Behavior_Time.seconds)(function ($288) {
        return Data_Int.even(Data_Int.round($288));
    });
    var colorName = Data_Functor.mapFlipped(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(blink)(function (v) {
        if (v) {
            return "orange";
        };
        return "rebeccapurple";
    });
    var b = function (v) {
        return {
            style: Data_Functor.map(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(Data_Maybe.Just.create)(Control_Apply.apply(FRP_Behavior.applyABehavior(FRP_Event.functorEvent))(Control_Apply.apply(FRP_Behavior.applyABehavior(FRP_Event.functorEvent))(Data_Functor.map(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(combine)(v.preciseHover))(colorName))(italic)),
            "class": Data_Functor.mapFlipped(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(spacebar)(function (v1) {
                if (v1) {
                    return new Data_Maybe.Just("align-right");
                };
                return Data_Maybe.Nothing.value;
            })
        };
    };
    var component1 = Data_Functor.flap(Data_Functor.functorFn)(behavioralComponent(Control_Monad_Aff_Class.monadAffAff)(mab()(Type_Row.listToRowCons(Type_Row.listToRowCons(Type_Row.listToRowNil)())())()(Type_Row.listToRowCons(Type_Row.listToRowCons(Type_Row.listToRowNil)())())()(Type_Row.listToRowCons(Type_Row.listToRowCons(Type_Row.listToRowNil)())())(nothingsCons(new Data_Symbol.IsSymbol(function () {
        return "class";
    }))()(Type_Row.rowLacks()()()(Type_Row.rowLacking))()(nothingsCons(new Data_Symbol.IsSymbol(function () {
        return "style";
    }))()(Type_Row.rowLacks()()()(Type_Row.rowLacking))()(nothingsNil)))(mabCons(new Data_Symbol.IsSymbol(function () {
        return "class";
    }))(Halogen_HTML_Core.stringIsProp)(Type_Row.rowLacks()()()(Type_Row.rowLacking))(Type_Row.rowLacks()()()(Type_Row.rowLacking))(Type_Row.rowLacks()()()(Type_Row.rowLacking))()()()()()()()(mabCons(new Data_Symbol.IsSymbol(function () {
        return "style";
    }))(Halogen_HTML_Core.stringIsProp)(Type_Row.rowLacks()()()(Type_Row.rowLacking))(Type_Row.rowLacks()()()(Type_Row.rowLacking))(Type_Row.rowLacks()()()(Type_Row.rowLacking))()()()()()()()(mabNil))))()(elementBehaviorsCons(hoverElementBehavior)()()()()(Type_Row.rowLacks()()()(Type_Row.rowLacking))(Type_Row.rowLacks()()()(Type_Row.rowLacking))(Type_Row.rowLacks()()()(Type_Row.rowLacking))()(Type_Row.listToRowCons(Type_Row.listToRowCons(Type_Row.listToRowNil)())())()()(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchNil)()(Type_Equality.refl))()(Type_Equality.refl))(elementBehaviorsCons(preciseHoverElementBehavior)()()()()(Type_Row.rowLacks()()()(Type_Row.rowLacking))(Type_Row.rowLacks()()()(Type_Row.rowLacking))(Type_Row.rowLacks()()()(Type_Row.rowLacking))()(Type_Row.listToRowCons(Type_Row.listToRowNil)())()()(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchNil)()(Type_Equality.refl))(elementBehaviorsNil)))()(nothingsImpl()(Type_Row.listToRowCons(Type_Row.listToRowCons(Type_Row.listToRowNil)())())(nothingsCons(new Data_Symbol.IsSymbol(function () {
        return "class";
    }))()(Type_Row.rowLacks()()()(Type_Row.rowLacking))()(nothingsCons(new Data_Symbol.IsSymbol(function () {
        return "style";
    }))()(Type_Row.rowLacks()()()(Type_Row.rowLacking))()(nothingsNil))))(Halogen_HTML_Elements.h1))(b)(function (el) {
        return function (t) {
            return el([  ])([ Halogen_HTML_Core.text(t), Halogen_HTML_Elements.span_([ Halogen_HTML_Core.text(" my span") ]) ]);
        };
    });
    var parent = (function () {
        
        // Give a finite type to the slot
var cp_cp3 = Halogen_Component_ChildPath.cp3;
        return Halogen_Component.parentComponent(Data_Either.ordEither(Data_Ord.ordInt)(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Ord.ordVoid))))({
            render: function (v) {
                return Halogen_HTML_Elements.div_(Control_Alt.alt(Control_Alt.altArray)([ Halogen_HTML["slot'"](cp_cp3)(Data_Unit.unit)(component2)(v)(Control_Applicative.pure(Data_Maybe.applicativeMaybe)), Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp2)(Data_Unit.unit)(component1)(v)(Data_Void.absurd) ])(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(function (i) {
                    return function ($289) {
                        return (function (c) {
                            return Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp1)(i)(c)(Data_Unit.unit)(Data_Void.absurd);
                        })(modifierComponent($289));
                    };
                })(mods)));
            },
            "eval": function (v) {
                return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Either.foldableEither)(Control_Monad_Except.runExcept(DOM_HTML_Types.readHTMLInputElement(Data_Foreign.toForeign(DOM_Event_Event.target(v.value0)))))(Control_Bind.composeKleisli(Halogen_Query_HalogenM.bindHalogenM)(function ($290) {
                    return Control_Monad_Eff_Class.liftEff(Halogen_Query_HalogenM.monadEffHalogenM(Control_Monad_Aff.monadEffAff))(DOM_HTML_HTMLInputElement.value($290));
                })(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM))));
            },
            initialState: Data_Function["const"]("Hold a mouse button down anywhere on the page to make this text italic!"),
            receiver: Data_Function["const"](Data_Maybe.Nothing.value)
        });
    })();
    return Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_Aff_Util.awaitBody)(Halogen_VDom_Driver.runUI(parent)(Data_Unit.unit)));
})();
module.exports = {
    aWholeLotOfNothing: aWholeLotOfNothing,
    aWholeLotOfNothingRL: aWholeLotOfNothingRL,
    allAttrs: allAttrs,
    attrs: attrs,
    attrsRL: attrsRL,
    handle: handle,
    handleRL: handleRL,
    initializeRL: initializeRL,
    mkBehaviors: mkBehaviors,
    process: process,
    shouldUpdate: shouldUpdate,
    shouldUpdateRL: shouldUpdateRL,
    subscribe: subscribe,
    subscribeRL: subscribeRL,
    toProps: toProps,
    toPropsRL: toPropsRL,
    update: update,
    updateRL: updateRL,
    expandAttr: expandAttr,
    expandAttrs: expandAttrs,
    ElementBehaviors: ElementBehaviors,
    Deletor: Deletor,
    mkDeletor: mkDeletor,
    split: split,
    mapIProp: mapIProp,
    ElementBehaviorsRL: ElementBehaviorsRL,
    ElementBehavior: ElementBehavior,
    HereFocused: HereFocused,
    ChildFocused: ChildFocused,
    Unfocused: Unfocused,
    Here: Here,
    Child: Child,
    None: None,
    initialState: initialState,
    Initialize: Initialize,
    Finalize: Finalize,
    Receive: Receive,
    Lift: Lift,
    UpdateProp: UpdateProp,
    UpdateBehavior: UpdateBehavior,
    MultiAttrBehavior: MultiAttrBehavior,
    MultiAttrBehaviorRL: MultiAttrBehaviorRL,
    AroundState: AroundState,
    uninitializedAS: uninitializedAS,
    initialize: initialize,
    snapshot: snapshot,
    eqProp: eqProp,
    eqMProp: eqMProp,
    Nothings: Nothings,
    NothingsRL: NothingsRL,
    subject: subject,
    "subject'": subject$prime,
    behavioralComponent: behavioralComponent,
    setProperty: setProperty,
    unsafeGetProperty: unsafeGetProperty,
    removeProperty: removeProperty,
    main: main,
    elementBehaviors: elementBehaviors,
    elementBehaviorsNil: elementBehaviorsNil,
    elementBehaviorsCons: elementBehaviorsCons,
    focusElementBehavior: focusElementBehavior,
    hoverElementBehavior: hoverElementBehavior,
    preciseFocusElementBehavior: preciseFocusElementBehavior,
    preciseHoverElementBehavior: preciseHoverElementBehavior,
    mab: mab,
    mabNil: mabNil,
    mabCons: mabCons,
    nothingsImpl: nothingsImpl,
    nothingsNil: nothingsNil,
    nothingsCons: nothingsCons
};

},{"../Control.Alt":2,"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Monad.Aff":22,"../Control.Monad.Aff.Class":19,"../Control.Monad.Eff":39,"../Control.Monad.Eff.AVar":26,"../Control.Monad.Eff.Class":27,"../Control.Monad.Eff.Exception":31,"../Control.Monad.Eff.Ref":33,"../Control.Monad.Eff.Uncurried":35,"../Control.Monad.Eff.Unsafe":37,"../Control.Monad.Except":42,"../Control.Monad.Maybe.Trans":47,"../Control.Monad.ST":53,"../Control.Monad.State.Class":54,"../Control.MonadZero":62,"../Control.Semigroupoid":66,"../DOM":117,"../DOM.Event.Event":70,"../DOM.Event.Types":75,"../DOM.HTML.HTMLInputElement":85,"../DOM.HTML.Types":103,"../DOM.Node.Types":113,"../Data.Array.ST":120,"../Data.Const":142,"../Data.Either":154,"../Data.Either.Nested":153,"../Data.Foldable":164,"../Data.Foreign":169,"../Data.Function":172,"../Data.Function.Uncurried":171,"../Data.Functor":180,"../Data.Functor.Coproduct.Nested":176,"../Data.FunctorWithIndex":182,"../Data.Int":193,"../Data.Lens":225,"../Data.Lens.Internal.Tagged":210,"../Data.Lens.Prism":221,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Record":265,"../Data.Record.Builder":262,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Set":274,"../Data.String":288,"../Data.Symbol":289,"../Data.Tuple":298,"../Data.Unit":302,"../Data.Variant":304,"../Data.Variant.Internal":303,"../Data.Void":305,"../FRP":319,"../FRP.Behavior":309,"../FRP.Behavior.Keyboard":306,"../FRP.Behavior.Mouse":307,"../FRP.Behavior.Time":308,"../FRP.Event":318,"../Halogen":351,"../Halogen.Aff":327,"../Halogen.Aff.Util":326,"../Halogen.Component":330,"../Halogen.Component.ChildPath":329,"../Halogen.HTML":337,"../Halogen.HTML.Core":333,"../Halogen.HTML.Elements":334,"../Halogen.HTML.Events":335,"../Halogen.HTML.Properties":336,"../Halogen.Query":342,"../Halogen.Query.EventSource":338,"../Halogen.Query.HalogenM":340,"../Halogen.Query.InputF":341,"../Halogen.VDom.DOM.Prop":343,"../Halogen.VDom.Driver":345,"../Halogen.VDom.Util":349,"../Prelude":358,"../Type.Equality":362,"../Type.Row":364,"../Unsafe.Coerce":366,"../Unsafe.Reference":368,"../Web.UIEvents.Key":374,"../Web.UIEvents.Key.Internal":372,"../Web.UIEvents.Key.Internal.Modifier":371,"../Web.UIEvents.Key.Prisms":373}],329:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Lens = require("../Data.Lens");
var Data_Lens_Fold = require("../Data.Lens.Fold");
var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget");
var Data_Lens_Internal_Tagged = require("../Data.Lens.Internal.Tagged");
var Data_Lens_Prism = require("../Data.Lens.Prism");
var Data_Lens_Prism_Coproduct = require("../Data.Lens.Prism.Coproduct");
var Data_Lens_Prism_Either = require("../Data.Lens.Prism.Either");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Halogen_Data_Prism = require("../Halogen.Data.Prism");
var Prelude = require("../Prelude");
var ChildPath = (function () {
    function ChildPath(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ChildPath.create = function (value0) {
        return function (value1) {
            return new ChildPath(value0, value1);
        };
    };
    return ChildPath;
})();
var prjSlot = function (v) {
    return Data_Lens_Fold.preview(v.value1(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst)));
};
var prjQuery = function (v) {
    return Data_Lens_Fold.preview(v.value0(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst)));
};
var injSlot = function (v) {
    return Data_Lens_Prism.review(v.value1(Data_Lens_Internal_Tagged.taggedChoice));
};
var injQuery = function (v) {
    return Data_Lens_Prism.review(v.value0(Data_Lens_Internal_Tagged.taggedChoice));
};
var cpR = new ChildPath(function (dictChoice) {
    return Data_Lens_Prism_Coproduct._Right(dictChoice);
}, function (dictChoice) {
    return Data_Lens_Prism_Either._Right(dictChoice);
});
var cpL = new ChildPath(function (dictChoice) {
    return Data_Lens_Prism_Coproduct._Left(dictChoice);
}, function (dictChoice) {
    return Data_Lens_Prism_Either._Left(dictChoice);
});
var cpI = new ChildPath(function (dictChoice) {
    return Control_Category.id(Control_Category.categoryFn);
}, function (dictChoice) {
    return Control_Category.id(Control_Category.categoryFn);
});
var cp9 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism._Coproduct9(dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism._Either9(dictChoice);
});
var cp8 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism._Coproduct8(dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism._Either8(dictChoice);
});
var cp7 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism._Coproduct7(dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism._Either7(dictChoice);
});
var cp6 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism._Coproduct6(dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism._Either6(dictChoice);
});
var cp5 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism._Coproduct5(dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism._Either5(dictChoice);
});
var cp4 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism._Coproduct4(dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism._Either4(dictChoice);
});
var cp3 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism._Coproduct3(dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism._Either3(dictChoice);
});
var cp2 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism._Coproduct2(dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism._Either2(dictChoice);
});
var cp10 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism._Coproduct10(dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism._Either10(dictChoice);
});
var cp1 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism._Coproduct1(dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism._Either1(dictChoice);
});
var compose = function (v) {
    return function (v1) {
        return new ChildPath(function (dictChoice) {
            return function ($52) {
                return v.value0(dictChoice)(v1.value0(dictChoice)($52));
            };
        }, function (dictChoice) {
            return function ($53) {
                return v.value1(dictChoice)(v1.value1(dictChoice)($53));
            };
        });
    };
};
module.exports = {
    ChildPath: ChildPath,
    compose: compose,
    cp1: cp1,
    cp10: cp10,
    cp2: cp2,
    cp3: cp3,
    cp4: cp4,
    cp5: cp5,
    cp6: cp6,
    cp7: cp7,
    cp8: cp8,
    cp9: cp9,
    cpI: cpI,
    cpL: cpL,
    cpR: cpR,
    injQuery: injQuery,
    injSlot: injSlot,
    prjQuery: prjQuery,
    prjSlot: prjSlot
};

},{"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Lens":225,"../Data.Lens.Fold":199,"../Data.Lens.Internal.Forget":204,"../Data.Lens.Internal.Tagged":210,"../Data.Lens.Prism":221,"../Data.Lens.Prism.Coproduct":218,"../Data.Lens.Prism.Either":219,"../Data.Maybe":234,"../Data.Maybe.First":232,"../Halogen.Data.Prism":332,"../Prelude":358}],330:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Const = require("../Data.Const");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Halogen_Data_OrdBox = require("../Halogen.Data.OrdBox");
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var ComponentSlot = (function () {
    function ComponentSlot(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ComponentSlot.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ComponentSlot(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ComponentSlot;
})();
var unComponentSlot = function (f) {
    return function (cs) {
        return f(cs.value0)(cs.value1)(cs.value2)(cs.value3)(cs.value4)(cs.value5);
    };
};
var unComponent = Unsafe_Coerce.unsafeCoerce;
var mkComponentSlot = ComponentSlot.create;
var mkComponent = Unsafe_Coerce.unsafeCoerce;
var parentComponent = function (dictOrd) {
    return function (spec) {
        return mkComponent({
            initialState: spec.initialState,
            render: spec.render,
            "eval": spec["eval"],
            receiver: spec.receiver,
            initializer: Data_Maybe.Nothing.value,
            finalizer: Data_Maybe.Nothing.value,
            mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(dictOrd)
        });
    };
};
var lifecycleParentComponent = function (dictOrd) {
    return function (spec) {
        return mkComponent({
            initialState: spec.initialState,
            render: spec.render,
            "eval": spec["eval"],
            receiver: spec.receiver,
            initializer: spec.initializer,
            finalizer: spec.finalizer,
            mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(dictOrd)
        });
    };
};
var lifecycleComponent = function (dictBifunctor) {
    return function (spec) {
        return mkComponent({
            initialState: spec.initialState,
            render: spec.render,
            "eval": spec["eval"],
            receiver: spec.receiver,
            initializer: spec.initializer,
            finalizer: spec.finalizer,
            mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(Data_Ord.ordVoid)
        });
    };
};
var hoistSlot = function (dictBifunctor) {
    return function (dictFunctor) {
        return function (nat) {
            return unComponentSlot(function (p) {
                return function (ctor) {
                    return function (input) {
                        return function (inputQuery) {
                            return function (outputQuery) {
                                return function (projQuery) {
                                    return mkComponentSlot(p)(hoist(dictBifunctor)(dictFunctor)(nat)(ctor))(input)(inputQuery)(outputQuery)(projQuery);
                                };
                            };
                        };
                    };
                };
            });
        };
    };
};
var hoist = function (dictBifunctor) {
    return function (dictFunctor) {
        return function (nat) {
            return unComponent(function (c) {
                return mkComponent({
                    initialState: c.initialState,
                    render: function ($16) {
                        return Data_Bifunctor.lmap(dictBifunctor)(hoistSlot(dictBifunctor)(dictFunctor)(nat))(c.render($16));
                    },
                    "eval": function ($17) {
                        return Halogen_Query_HalogenM.hoist(dictFunctor)(nat)(c["eval"]($17));
                    },
                    receiver: c.receiver,
                    initializer: c.initializer,
                    finalizer: c.finalizer,
                    mkOrdBox: c.mkOrdBox
                });
            });
        };
    };
};
var functorSlotF = new Data_Functor.Functor(function (f) {
    return unComponentSlot(function (p) {
        return function (ctor) {
            return function (j) {
                return function (g) {
                    return function (h) {
                        return function (i) {
                            return mkComponentSlot(p)(ctor)(j)(g)(function ($18) {
                                return Data_Functor.map(Data_Maybe.functorMaybe)(f)(h($18));
                            })(i);
                        };
                    };
                };
            };
        };
    });
});
var component = function (dictBifunctor) {
    return function (spec) {
        return lifecycleComponent(dictBifunctor)({
            initialState: spec.initialState,
            render: spec.render,
            "eval": spec["eval"],
            receiver: spec.receiver,
            initializer: Data_Maybe.Nothing.value,
            finalizer: Data_Maybe.Nothing.value
        });
    };
};
var bifunctorSlotF = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return unComponentSlot(function (p) {
            return function (ctor) {
                return function (input) {
                    return function (inputQuery) {
                        return function (outputQuery) {
                            return function (projQuery) {
                                return mkComponentSlot(f(p))(ctor)(input)(inputQuery)(function ($19) {
                                    return Data_Functor.map(Data_Maybe.functorMaybe)(g)(outputQuery($19));
                                })(projQuery);
                            };
                        };
                    };
                };
            };
        });
    };
});
module.exports = {
    mkComponent: mkComponent,
    unComponent: unComponent,
    component: component,
    lifecycleComponent: lifecycleComponent,
    parentComponent: parentComponent,
    lifecycleParentComponent: lifecycleParentComponent,
    hoist: hoist,
    mkComponentSlot: mkComponentSlot,
    unComponentSlot: unComponentSlot,
    hoistSlot: hoistSlot,
    bifunctorSlotF: bifunctorSlotF,
    functorSlotF: functorSlotF
};

},{"../Control.Semigroupoid":66,"../Data.Bifunctor":129,"../Data.Const":142,"../Data.Functor":180,"../Data.Maybe":234,"../Data.Ord":251,"../Halogen.Data.OrdBox":331,"../Halogen.HTML.Core":333,"../Halogen.Query.HalogenM":340,"../Prelude":358,"../Unsafe.Coerce":366}],331:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Prelude = require("../Prelude");
var OrdBox = (function () {
    function OrdBox(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    OrdBox.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new OrdBox(value0, value1, value2);
            };
        };
    };
    return OrdBox;
})();
var unOrdBox = function (v) {
    return v.value2;
};
var mkOrdBox = function (dictOrd) {
    return OrdBox.create(Data_Eq.eq(dictOrd.Eq0()))(Data_Ord.compare(dictOrd));
};
var eqOrdBox = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return v.value0(v.value2)(v1.value2);
    };
});
var ordOrdBox = new Data_Ord.Ord(function () {
    return eqOrdBox;
}, function (v) {
    return function (v1) {
        return v.value1(v.value2)(v1.value2);
    };
});
module.exports = {
    mkOrdBox: mkOrdBox,
    unOrdBox: unOrdBox,
    eqOrdBox: eqOrdBox,
    ordOrdBox: ordOrdBox
};

},{"../Data.Eq":157,"../Data.Ord":251,"../Prelude":358}],332:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Either = require("../Data.Either");
var Data_Either_Nested = require("../Data.Either.Nested");
var Data_Functor_Coproduct = require("../Data.Functor.Coproduct");
var Data_Functor_Coproduct_Nested = require("../Data.Functor.Coproduct.Nested");
var Data_Lens = require("../Data.Lens");
var Data_Lens_Prism = require("../Data.Lens.Prism");
var Data_Maybe = require("../Data.Maybe");
var _Either9 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in9)(Data_Either_Nested.at9(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Either8 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in8)(Data_Either_Nested.at8(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Either7 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in7)(Data_Either_Nested.at7(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Either6 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in6)(Data_Either_Nested.at6(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Either5 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in5)(Data_Either_Nested.at5(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Either4 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in4)(Data_Either_Nested.at4(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Either3 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in3)(Data_Either_Nested.at3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Either2 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in2)(Data_Either_Nested.at2(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Either10 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in10)(Data_Either_Nested.at10(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Either1 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in1)(Data_Either_Nested.at1(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct9 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in9)(Data_Functor_Coproduct_Nested.at9(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct8 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in8)(Data_Functor_Coproduct_Nested.at8(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct7 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in7)(Data_Functor_Coproduct_Nested.at7(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct6 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in6)(Data_Functor_Coproduct_Nested.at6(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct5 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in5)(Data_Functor_Coproduct_Nested.at5(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct4 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in4)(Data_Functor_Coproduct_Nested.at4(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct3 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in3)(Data_Functor_Coproduct_Nested.at3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct2 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in2)(Data_Functor_Coproduct_Nested.at2(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct10 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in10)(Data_Functor_Coproduct_Nested.at10(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct1 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in1)(Data_Functor_Coproduct_Nested.at1(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
module.exports = {
    _Either1: _Either1,
    _Coproduct1: _Coproduct1,
    _Either2: _Either2,
    _Coproduct2: _Coproduct2,
    _Either3: _Either3,
    _Coproduct3: _Coproduct3,
    _Either4: _Either4,
    _Coproduct4: _Coproduct4,
    _Either5: _Either5,
    _Coproduct5: _Coproduct5,
    _Either6: _Either6,
    _Coproduct6: _Coproduct6,
    _Either7: _Either7,
    _Coproduct7: _Coproduct7,
    _Either8: _Either8,
    _Coproduct8: _Coproduct8,
    _Either9: _Either9,
    _Coproduct9: _Coproduct9,
    _Either10: _Either10,
    _Coproduct10: _Coproduct10
};

},{"../Data.Either":154,"../Data.Either.Nested":153,"../Data.Functor.Coproduct":177,"../Data.Functor.Coproduct.Nested":176,"../Data.Lens":225,"../Data.Lens.Prism":221,"../Data.Maybe":234}],333:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM_Event_Types = require("../DOM.Event.Types");
var DOM_HTML_Indexed_ButtonType = require("../DOM.HTML.Indexed.ButtonType");
var DOM_HTML_Indexed_CrossOriginValue = require("../DOM.HTML.Indexed.CrossOriginValue");
var DOM_HTML_Indexed_DirValue = require("../DOM.HTML.Indexed.DirValue");
var DOM_HTML_Indexed_FormMethod = require("../DOM.HTML.Indexed.FormMethod");
var DOM_HTML_Indexed_InputType = require("../DOM.HTML.Indexed.InputType");
var DOM_HTML_Indexed_KindValue = require("../DOM.HTML.Indexed.KindValue");
var DOM_HTML_Indexed_MenuType = require("../DOM.HTML.Indexed.MenuType");
var DOM_HTML_Indexed_MenuitemType = require("../DOM.HTML.Indexed.MenuitemType");
var DOM_HTML_Indexed_OnOff = require("../DOM.HTML.Indexed.OnOff");
var DOM_HTML_Indexed_OrderedListType = require("../DOM.HTML.Indexed.OrderedListType");
var DOM_HTML_Indexed_PreloadValue = require("../DOM.HTML.Indexed.PreloadValue");
var DOM_HTML_Indexed_ScopeValue = require("../DOM.HTML.Indexed.ScopeValue");
var DOM_HTML_Indexed_StepValue = require("../DOM.HTML.Indexed.StepValue");
var DOM_HTML_Indexed_WrapValue = require("../DOM.HTML.Indexed.WrapValue");
var DOM_Node_Types = require("../DOM.Node.Types");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Generic = require("../Data.Generic");
var Data_Maybe = require("../Data.Maybe");
var Data_MediaType = require("../Data.MediaType");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Halogen_Query_InputF = require("../Halogen.Query.InputF");
var Halogen_VDom = require("../Halogen.VDom");
var Halogen_VDom_DOM_Prop = require("../Halogen.VDom.DOM.Prop");
var Halogen_VDom_Types = require("../Halogen.VDom.Types");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var PropName = function (x) {
    return x;
};
var HTML = function (x) {
    return x;
};
var ClassName = function (x) {
    return x;
};
var AttrName = function (x) {
    return x;
};
var IsProp = function (toPropValue) {
    this.toPropValue = toPropValue;
};
var wrapValueIsProp = new IsProp(function ($53) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_WrapValue.renderWrapValue($53));
});
var toPropValue = function (dict) {
    return dict.toPropValue;
};
var text = function ($54) {
    return HTML(Halogen_VDom_Types.Text.create($54));
};
var stringIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromString);
var stepValueIsProp = new IsProp(function ($55) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_StepValue.renderStepValue($55));
});
var slot = function ($56) {
    return HTML(Halogen_VDom_Types.Widget.create($56));
};
var semigroupClassName = Data_Semigroup.semigroupString;
var scopeValueIsProp = new IsProp(function ($57) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_ScopeValue.renderScopeValue($57));
});
var ref = function (f) {
    return Halogen_VDom_DOM_Prop.Ref.create(function ($58) {
        return f((function (v) {
            if (v instanceof Halogen_VDom_DOM_Prop.Created) {
                return new Data_Maybe.Just(v.value0);
            };
            if (v instanceof Halogen_VDom_DOM_Prop.Removed) {
                return Data_Maybe.Nothing.value;
            };
            throw new Error("Failed pattern match at Halogen.HTML.Core line 104, column 21 - line 106, column 23: " + [ v.constructor.name ]);
        })($58));
    });
};
var prop = function (dictIsProp) {
    return function (v) {
        return function ($59) {
            return Halogen_VDom_DOM_Prop.Property.create(v)(toPropValue(dictIsProp)($59));
        };
    };
};
var preloadValueIsProp = new IsProp(function ($60) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_PreloadValue.renderPreloadValue($60));
});
var orderedListTypeIsProp = new IsProp(function ($61) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_OrderedListType.renderOrderedListType($61));
});
var ordPropName = Data_Ord.ordString;
var ordClassName = Data_Ord.ordString;
var ordAttrName = Data_Ord.ordString;
var onOffIsProp = new IsProp(function ($62) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_OnOff.renderOnOff($62));
});
var numberIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromNumber);
var newtypePropName = new Data_Newtype.Newtype(function (n) {
    return n;
}, PropName);
var newtypeHTML = new Data_Newtype.Newtype(function (n) {
    return n;
}, HTML);
var newtypeClassName = new Data_Newtype.Newtype(function (n) {
    return n;
}, ClassName);
var newtypeAttrName = new Data_Newtype.Newtype(function (n) {
    return n;
}, AttrName);
var menuitemTypeIsProp = new IsProp(function ($63) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_MenuitemType.renderMenuitemType($63));
});
var menuTypeIsProp = new IsProp(function ($64) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_MenuType.renderMenuType($64));
});
var mediaTypeIsProp = new IsProp(function ($65) {
    return Halogen_VDom_DOM_Prop.propFromString(Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)($65));
});
var kindValueIsProp = new IsProp(function ($66) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_KindValue.renderKindValue($66));
});
var keyed = function (ns) {
    return function (name) {
        return function (props) {
            return function (children) {
                return new Halogen_VDom_Types.Keyed(new Halogen_VDom_Types.ElemSpec(ns, name, props), children);
            };
        };
    };
};
var intIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromInt);
var inputTypeIsProp = new IsProp(function ($67) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputType.renderInputType($67));
});
var handler = Halogen_VDom_DOM_Prop.Handler.create;
var genericPropName = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Halogen.HTML.Core.PropName" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(PropName))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Halogen.HTML.Core.PropName", [ {
        sigConstructor: "Halogen.HTML.Core.PropName",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Halogen.HTML.Core.PropName", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v);
    } ]);
});
var genericClassName = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Halogen.HTML.Core.ClassName" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(ClassName))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Halogen.HTML.Core.ClassName", [ {
        sigConstructor: "Halogen.HTML.Core.ClassName",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Halogen.HTML.Core.ClassName", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v);
    } ]);
});
var genericAttrName = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Halogen.HTML.Core.AttrName" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(AttrName))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Halogen.HTML.Core.AttrName", [ {
        sigConstructor: "Halogen.HTML.Core.AttrName",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Halogen.HTML.Core.AttrName", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v);
    } ]);
});
var formMethodIsProp = new IsProp(function ($68) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_FormMethod.renderFormMethod($68));
});
var eqPropName = Data_Eq.eqString;
var eqClassName = Data_Eq.eqString;
var eqAttrName = Data_Eq.eqString;
var element = function (ns) {
    return function (name) {
        return function (props) {
            return function (children) {
                return new Halogen_VDom_Types.Elem(new Halogen_VDom_Types.ElemSpec(ns, name, props), children);
            };
        };
    };
};
var dirValueIsProp = new IsProp(function ($69) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_DirValue.renderDirValue($69));
});
var crossOriginValueIsProp = new IsProp(function ($70) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_CrossOriginValue.renderCrossOriginValue($70));
});
var buttonTypeIsProp = new IsProp(function ($71) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_ButtonType.renderButtonType($71));
});
var booleanIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromBoolean);
var bifunctorHTML = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return Data_Bifunctor.bimap(Halogen_VDom_Types.bifunctorVDom)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_InputF.functorInputF)(g))))(f)(v);
        };
    };
});
var functorHTML = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorHTML));
var attr = function (ns) {
    return function (v) {
        return Halogen_VDom_DOM_Prop.Attribute.create(ns)(v);
    };
};
module.exports = {
    HTML: HTML,
    slot: slot,
    text: text,
    element: element,
    keyed: keyed,
    prop: prop,
    attr: attr,
    handler: handler,
    ref: ref,
    IsProp: IsProp,
    toPropValue: toPropValue,
    PropName: PropName,
    AttrName: AttrName,
    ClassName: ClassName,
    newtypeHTML: newtypeHTML,
    bifunctorHTML: bifunctorHTML,
    functorHTML: functorHTML,
    stringIsProp: stringIsProp,
    intIsProp: intIsProp,
    numberIsProp: numberIsProp,
    booleanIsProp: booleanIsProp,
    mediaTypeIsProp: mediaTypeIsProp,
    buttonTypeIsProp: buttonTypeIsProp,
    crossOriginValueIsProp: crossOriginValueIsProp,
    dirValueIsProp: dirValueIsProp,
    formMethodIsProp: formMethodIsProp,
    inputTypeIsProp: inputTypeIsProp,
    kindValueIsProp: kindValueIsProp,
    menuitemTypeIsProp: menuitemTypeIsProp,
    menuTypeIsProp: menuTypeIsProp,
    onOffIsProp: onOffIsProp,
    orderedListTypeIsProp: orderedListTypeIsProp,
    preloadValueIsProp: preloadValueIsProp,
    scopeValueIsProp: scopeValueIsProp,
    stepValueIsProp: stepValueIsProp,
    wrapValueIsProp: wrapValueIsProp,
    newtypePropName: newtypePropName,
    eqPropName: eqPropName,
    ordPropName: ordPropName,
    genericPropName: genericPropName,
    newtypeAttrName: newtypeAttrName,
    eqAttrName: eqAttrName,
    ordAttrName: ordAttrName,
    genericAttrName: genericAttrName,
    newtypeClassName: newtypeClassName,
    eqClassName: eqClassName,
    ordClassName: ordClassName,
    semigroupClassName: semigroupClassName,
    genericClassName: genericClassName
};

},{"../Control.Apply":7,"../Control.Semigroupoid":66,"../DOM.Event.Types":75,"../DOM.HTML.Indexed.ButtonType":86,"../DOM.HTML.Indexed.CrossOriginValue":87,"../DOM.HTML.Indexed.DirValue":88,"../DOM.HTML.Indexed.FormMethod":89,"../DOM.HTML.Indexed.InputType":90,"../DOM.HTML.Indexed.KindValue":91,"../DOM.HTML.Indexed.MenuType":92,"../DOM.HTML.Indexed.MenuitemType":93,"../DOM.HTML.Indexed.OnOff":94,"../DOM.HTML.Indexed.OrderedListType":95,"../DOM.HTML.Indexed.PreloadValue":96,"../DOM.HTML.Indexed.ScopeValue":97,"../DOM.HTML.Indexed.StepValue":98,"../DOM.HTML.Indexed.WrapValue":99,"../DOM.Node.Types":113,"../Data.Bifunctor":129,"../Data.Eq":157,"../Data.Function":172,"../Data.Functor":180,"../Data.Generic":186,"../Data.Maybe":234,"../Data.MediaType":235,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Semigroup":271,"../Data.Tuple":298,"../Data.Unit":302,"../Halogen.Query.InputF":341,"../Halogen.VDom":350,"../Halogen.VDom.DOM.Prop":343,"../Halogen.VDom.Types":347,"../Prelude":358,"../Unsafe.Coerce":366}],334:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM_HTML_Indexed = require("../DOM.HTML.Indexed");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_Tuple = require("../Data.Tuple");
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties");
var Halogen_Query_InputF = require("../Halogen.Query.InputF");
var Halogen_VDom = require("../Halogen.VDom");
var Halogen_VDom_Types = require("../Halogen.VDom.Types");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var withKeys_ = function (ctor) {
    return function (children) {
        var v = ctor([  ]);
        if (v instanceof Halogen_VDom_Types.Elem) {
            return new Halogen_VDom_Types.Keyed(v.value0, children);
        };
        return v;
    };
};
var withKeys = function (ctor) {
    return function (props) {
        return function (children) {
            var v = ctor(props)([  ]);
            if (v instanceof Halogen_VDom_Types.Elem) {
                return new Halogen_VDom_Types.Keyed(v.value0, children);
            };
            return v;
        };
    };
};
var keyedNS = function ($8) {
    return Halogen_HTML_Core.keyed(Control_Applicative.pure(Data_Maybe.applicativeMaybe)($8));
};
var keyed = Halogen_HTML_Core.keyed(Data_Maybe.Nothing.value);
var elementNS = function ($9) {
    return Halogen_HTML_Core.element(Control_Applicative.pure(Data_Maybe.applicativeMaybe)($9));
};
var element = Halogen_HTML_Core.element(Data_Maybe.Nothing.value);
var em = element("em");
var em_ = em([  ]);
var embed = element("embed");
var embed_ = embed([  ]);
var fieldset = element("fieldset");
var fieldset_ = fieldset([  ]);
var figcaption = element("figcaption");
var figcaption_ = figcaption([  ]);
var figure = element("figure");
var figure_ = figure([  ]);
var footer = element("footer");
var footer_ = footer([  ]);
var form = element("form");
var form_ = form([  ]);
var h1 = element("h1");
var h1_ = h1([  ]);
var h2 = element("h2");
var h2_ = h2([  ]);
var h3 = element("h3");
var h3_ = h3([  ]);
var h4 = element("h4");
var h4_ = h4([  ]);
var h5 = element("h5");
var h5_ = h5([  ]);
var h6 = element("h6");
var h6_ = h6([  ]);
var head = element("head");
var head_ = head([  ]);
var header = element("header");
var header_ = header([  ]);
var hr = function (props) {
    return element("hr")(props)([  ]);
};
var hr_ = hr([  ]);
var html = element("html");
var html_ = html([  ]);
var i = element("i");
var i_ = i([  ]);
var iframe = function (props) {
    return element("iframe")(props)([  ]);
};
var img = function (props) {
    return element("img")(props)([  ]);
};
var input = function (props) {
    return element("input")(props)([  ]);
};
var ins = element("ins");
var ins_ = ins([  ]);
var kbd = element("kbd");
var kbd_ = kbd([  ]);
var label = element("label");
var label_ = label([  ]);
var legend = element("legend");
var legend_ = legend([  ]);
var li = element("li");
var li_ = li([  ]);
var link = function (props) {
    return element("link")(props)([  ]);
};
var main = element("main");
var main_ = main([  ]);
var map = element("map");
var map_ = map([  ]);
var mark = element("mark");
var mark_ = mark([  ]);
var menu = element("menu");
var menu_ = menu([  ]);
var menuitem = element("menuitem");
var menuitem_ = menuitem([  ]);
var meta = function (props) {
    return element("meta")(props)([  ]);
};
var meter = element("meter");
var meter_ = meter([  ]);
var nav = element("nav");
var nav_ = nav([  ]);
var noscript = element("noscript");
var noscript_ = noscript([  ]);
var object = element("object");
var object_ = object([  ]);
var ol = element("ol");
var ol_ = ol([  ]);
var optgroup = element("optgroup");
var optgroup_ = optgroup([  ]);
var option = element("option");
var option_ = option([  ]);
var output = element("output");
var output_ = output([  ]);
var p = element("p");
var p_ = p([  ]);
var param = function (props) {
    return element("param")(props)([  ]);
};
var pre = element("pre");
var pre_ = pre([  ]);
var progress = element("progress");
var progress_ = progress([  ]);
var q = element("q");
var q_ = q([  ]);
var rp = element("rp");
var rp_ = rp([  ]);
var rt = element("rt");
var rt_ = rt([  ]);
var ruby = element("ruby");
var ruby_ = ruby([  ]);
var samp = element("samp");
var samp_ = samp([  ]);
var script = element("script");
var script_ = script([  ]);
var section = element("section");
var section_ = section([  ]);
var select = element("select");
var select_ = select([  ]);
var small = element("small");
var small_ = small([  ]);
var source = function (props) {
    return element("source")(props)([  ]);
};
var span = element("span");
var span_ = span([  ]);
var strong = element("strong");
var strong_ = strong([  ]);
var style = element("style");
var style_ = style([  ]);
var sub = element("sub");
var sub_ = sub([  ]);
var summary = element("summary");
var summary_ = summary([  ]);
var sup = element("sup");
var sup_ = sup([  ]);
var table = element("table");
var table_ = table([  ]);
var tbody = element("tbody");
var tbody_ = tbody([  ]);
var td = element("td");
var td_ = td([  ]);
var textarea = function (es) {
    return element("textarea")(es)([  ]);
};
var tfoot = element("tfoot");
var tfoot_ = tfoot([  ]);
var th = element("th");
var th_ = th([  ]);
var thead = element("thead");
var thead_ = thead([  ]);
var time = element("time");
var time_ = time([  ]);
var title = element("title");
var title_ = title([  ]);
var tr = element("tr");
var tr_ = tr([  ]);
var track = function (props) {
    return element("track")(props)([  ]);
};
var u = element("u");
var u_ = u([  ]);
var ul = element("ul");
var ul_ = ul([  ]);
var $$var = element("var");
var var_ = $$var([  ]);
var video = element("video");
var video_ = video([  ]);
var wbr = function (props) {
    return element("wbr")(props)([  ]);
};
var dt = element("dt");
var dt_ = dt([  ]);
var dl = element("dl");
var dl_ = dl([  ]);
var div = element("div");
var div_ = div([  ]);
var dialog = element("dialog");
var dialog_ = dialog([  ]);
var dfn = element("dfn");
var dfn_ = dfn([  ]);
var details = element("details");
var details_ = details([  ]);
var del = element("del");
var del_ = del([  ]);
var dd = element("dd");
var dd_ = dd([  ]);
var datalist = element("datalist");
var datalist_ = datalist([  ]);
var command = function (props) {
    return element("command")(props)([  ]);
};
var colgroup = element("colgroup");
var colgroup_ = colgroup([  ]);
var col = function (props) {
    return element("col")(props)([  ]);
};
var code = element("code");
var code_ = code([  ]);
var cite = element("cite");
var cite_ = cite([  ]);
var caption = element("caption");
var caption_ = caption([  ]);
var canvas = function (props) {
    return element("canvas")(props)([  ]);
};
var button = element("button");
var button_ = button([  ]);
var br = function (props) {
    return element("br")(props)([  ]);
};
var br_ = br([  ]);
var body = element("body");
var body_ = body([  ]);
var blockquote = element("blockquote");
var blockquote_ = blockquote([  ]);
var bdo = element("bdo");
var bdo_ = bdo([  ]);
var bdi = element("bdi");
var bdi_ = bdi([  ]);
var base = function (props) {
    return element("base")(props)([  ]);
};
var b = element("b");
var b_ = b([  ]);
var audio = element("audio");
var audio_ = audio([  ]);
var aside = element("aside");
var aside_ = aside([  ]);
var article = element("article");
var article_ = article([  ]);
var area = function (props) {
    return element("area")(props)([  ]);
};
var address = element("address");
var address_ = address([  ]);
var abbr = element("abbr");
var abbr_ = abbr([  ]);
var a = element("a");
var a_ = a([  ]);
module.exports = {
    element: element,
    elementNS: elementNS,
    keyed: keyed,
    keyedNS: keyedNS,
    withKeys: withKeys,
    withKeys_: withKeys_,
    a: a,
    a_: a_,
    abbr: abbr,
    abbr_: abbr_,
    address: address,
    address_: address_,
    area: area,
    article: article,
    article_: article_,
    aside: aside,
    aside_: aside_,
    audio: audio,
    audio_: audio_,
    b: b,
    b_: b_,
    base: base,
    bdi: bdi,
    bdi_: bdi_,
    bdo: bdo,
    bdo_: bdo_,
    blockquote: blockquote,
    blockquote_: blockquote_,
    body: body,
    body_: body_,
    br: br,
    br_: br_,
    button: button,
    button_: button_,
    canvas: canvas,
    caption: caption,
    caption_: caption_,
    cite: cite,
    cite_: cite_,
    code: code,
    code_: code_,
    col: col,
    colgroup: colgroup,
    colgroup_: colgroup_,
    command: command,
    datalist: datalist,
    datalist_: datalist_,
    dd: dd,
    dd_: dd_,
    del: del,
    del_: del_,
    details: details,
    details_: details_,
    dfn: dfn,
    dfn_: dfn_,
    dialog: dialog,
    dialog_: dialog_,
    div: div,
    div_: div_,
    dl: dl,
    dl_: dl_,
    dt: dt,
    dt_: dt_,
    em: em,
    em_: em_,
    embed: embed,
    embed_: embed_,
    fieldset: fieldset,
    fieldset_: fieldset_,
    figcaption: figcaption,
    figcaption_: figcaption_,
    figure: figure,
    figure_: figure_,
    footer: footer,
    footer_: footer_,
    form: form,
    form_: form_,
    h1: h1,
    h1_: h1_,
    h2: h2,
    h2_: h2_,
    h3: h3,
    h3_: h3_,
    h4: h4,
    h4_: h4_,
    h5: h5,
    h5_: h5_,
    h6: h6,
    h6_: h6_,
    head: head,
    head_: head_,
    header: header,
    header_: header_,
    hr: hr,
    hr_: hr_,
    html: html,
    html_: html_,
    i: i,
    i_: i_,
    iframe: iframe,
    img: img,
    input: input,
    ins: ins,
    ins_: ins_,
    kbd: kbd,
    kbd_: kbd_,
    label: label,
    label_: label_,
    legend: legend,
    legend_: legend_,
    li: li,
    li_: li_,
    link: link,
    main: main,
    main_: main_,
    map: map,
    map_: map_,
    mark: mark,
    mark_: mark_,
    menu: menu,
    menu_: menu_,
    menuitem: menuitem,
    menuitem_: menuitem_,
    meta: meta,
    meter: meter,
    meter_: meter_,
    nav: nav,
    nav_: nav_,
    noscript: noscript,
    noscript_: noscript_,
    object: object,
    object_: object_,
    ol: ol,
    ol_: ol_,
    optgroup: optgroup,
    optgroup_: optgroup_,
    option: option,
    option_: option_,
    output: output,
    output_: output_,
    p: p,
    p_: p_,
    param: param,
    pre: pre,
    pre_: pre_,
    progress: progress,
    progress_: progress_,
    q: q,
    q_: q_,
    rp: rp,
    rp_: rp_,
    rt: rt,
    rt_: rt_,
    ruby: ruby,
    ruby_: ruby_,
    samp: samp,
    samp_: samp_,
    script: script,
    script_: script_,
    section: section,
    section_: section_,
    select: select,
    select_: select_,
    small: small,
    small_: small_,
    source: source,
    span: span,
    span_: span_,
    strong: strong,
    strong_: strong_,
    style: style,
    style_: style_,
    sub: sub,
    sub_: sub_,
    summary: summary,
    summary_: summary_,
    sup: sup,
    sup_: sup_,
    table: table,
    table_: table_,
    tbody: tbody,
    tbody_: tbody_,
    td: td,
    td_: td_,
    textarea: textarea,
    tfoot: tfoot,
    tfoot_: tfoot_,
    th: th,
    th_: th_,
    thead: thead,
    thead_: thead_,
    time: time,
    time_: time_,
    title: title,
    title_: title_,
    tr: tr,
    tr_: tr_,
    track: track,
    u: u,
    u_: u_,
    ul: ul,
    ul_: ul_,
    "var": $$var,
    var_: var_,
    video: video,
    video_: video_,
    wbr: wbr
};

},{"../Control.Applicative":5,"../Control.Semigroupoid":66,"../DOM.HTML.Indexed":100,"../Data.Function":172,"../Data.Maybe":234,"../Data.Tuple":298,"../Halogen.HTML.Core":333,"../Halogen.HTML.Properties":336,"../Halogen.Query.InputF":341,"../Halogen.VDom":350,"../Halogen.VDom.Types":347,"../Prelude":358,"../Unsafe.Coerce":366}],335:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Bind = require("../Control.Bind");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM_Event_Event = require("../DOM.Event.Event");
var DOM_Event_Types = require("../DOM.Event.Types");
var DOM_HTML_Event_EventTypes = require("../DOM.HTML.Event.EventTypes");
var DOM_HTML_Event_Types = require("../DOM.HTML.Event.Types");
var Data_Either = require("../Data.Either");
var Data_Foreign = require("../Data.Foreign");
var Data_Foreign_Index = require("../Data.Foreign.Index");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Data_Maybe = require("../Data.Maybe");
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties");
var Halogen_Query = require("../Halogen.Query");
var Halogen_Query_InputF = require("../Halogen.Query.InputF");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var wheelHandler = Unsafe_Coerce.unsafeCoerce;
var touchHandler = Unsafe_Coerce.unsafeCoerce;
var mouseHandler = Unsafe_Coerce.unsafeCoerce;
var keyHandler = Unsafe_Coerce.unsafeCoerce;
var input_ = function (f) {
    return function (v) {
        return Data_Maybe.Just.create(Halogen_Query.action(f));
    };
};
var input = function (f) {
    return function (x) {
        return Data_Maybe.Just.create(Halogen_Query.action(f(x)));
    };
};
var handler = function (et) {
    return function ($1) {
        return Halogen_HTML_Core.handler(et)(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Query_InputF.Query.create))($1));
    };
};
var onAbort = handler(DOM_HTML_Event_EventTypes.abort);
var onChange = handler(DOM_HTML_Event_EventTypes.change);
var onClick = function ($2) {
    return handler(DOM_HTML_Event_EventTypes.click)(mouseHandler($2));
};
var onContextMenu = function ($3) {
    return handler(DOM_HTML_Event_EventTypes.contextmenu)(mouseHandler($3));
};
var onDoubleClick = function ($4) {
    return handler(DOM_HTML_Event_EventTypes.dblclick)(mouseHandler($4));
};
var onError = handler(DOM_HTML_Event_EventTypes.error);
var onInput = handler(DOM_HTML_Event_EventTypes.input);
var onInvalid = handler(DOM_HTML_Event_EventTypes.invalid);
var onKeyDown = function ($5) {
    return handler(DOM_HTML_Event_EventTypes.keydown)(keyHandler($5));
};
var onKeyPress = function ($6) {
    return handler(DOM_HTML_Event_EventTypes.keypress)(keyHandler($6));
};
var onKeyUp = function ($7) {
    return handler(DOM_HTML_Event_EventTypes.keyup)(keyHandler($7));
};
var onLoad = handler(DOM_HTML_Event_EventTypes.load);
var onMouseDown = function ($8) {
    return handler(DOM_HTML_Event_EventTypes.mousedown)(mouseHandler($8));
};
var onMouseEnter = function ($9) {
    return handler(DOM_HTML_Event_EventTypes.mouseenter)(mouseHandler($9));
};
var onMouseLeave = function ($10) {
    return handler(DOM_HTML_Event_EventTypes.mouseleave)(mouseHandler($10));
};
var onMouseMove = function ($11) {
    return handler(DOM_HTML_Event_EventTypes.mousemove)(mouseHandler($11));
};
var onMouseOut = function ($12) {
    return handler(DOM_HTML_Event_EventTypes.mouseout)(mouseHandler($12));
};
var onMouseOver = function ($13) {
    return handler(DOM_HTML_Event_EventTypes.mouseover)(mouseHandler($13));
};
var onMouseUp = function ($14) {
    return handler(DOM_HTML_Event_EventTypes.mouseup)(mouseHandler($14));
};
var onReset = handler(DOM_HTML_Event_EventTypes.reset);
var onResize = handler(DOM_HTML_Event_EventTypes.resize);
var onScroll = handler(DOM_HTML_Event_EventTypes.scroll);
var onSelect = handler(DOM_HTML_Event_EventTypes.select);
var onSubmit = handler(DOM_HTML_Event_EventTypes.submit);
var onTouchCancel = function ($15) {
    return handler(DOM_HTML_Event_EventTypes.touchcancel)(touchHandler($15));
};
var onTouchEnd = function ($16) {
    return handler(DOM_HTML_Event_EventTypes.touchend)(touchHandler($16));
};
var onTouchEnter = function ($17) {
    return handler(DOM_HTML_Event_EventTypes.touchenter)(touchHandler($17));
};
var onTouchLeave = function ($18) {
    return handler(DOM_HTML_Event_EventTypes.touchleave)(touchHandler($18));
};
var onTouchMove = function ($19) {
    return handler(DOM_HTML_Event_EventTypes.touchmove)(touchHandler($19));
};
var onTouchStart = function ($20) {
    return handler(DOM_HTML_Event_EventTypes.touchstart)(touchHandler($20));
};
var onTransitionEnd = handler(DOM_HTML_Event_EventTypes.transitionend);
var onWheel = function ($21) {
    return handler(DOM_HTML_Event_EventTypes.wheel)(wheelHandler($21));
};
var focusHandler = Unsafe_Coerce.unsafeCoerce;
var onBlur = function ($22) {
    return handler(DOM_HTML_Event_EventTypes.blur)(focusHandler($22));
};
var onFocus = function ($23) {
    return handler(DOM_HTML_Event_EventTypes.focus)(focusHandler($23));
};
var onFocusIn = function ($24) {
    return handler(DOM_HTML_Event_EventTypes.focusin)(focusHandler($24));
};
var onFocusOut = function ($25) {
    return handler(DOM_HTML_Event_EventTypes.focusout)(focusHandler($25));
};
var dragHandler = Unsafe_Coerce.unsafeCoerce;
var onDrag = function ($26) {
    return handler(DOM_HTML_Event_EventTypes.drag)(dragHandler($26));
};
var onDragEnd = function ($27) {
    return handler(DOM_HTML_Event_EventTypes.dragend)(dragHandler($27));
};
var onDragEnter = function ($28) {
    return handler(DOM_HTML_Event_EventTypes.dragenter)(dragHandler($28));
};
var onDragExit = function ($29) {
    return handler(DOM_HTML_Event_EventTypes.dragexit)(dragHandler($29));
};
var onDragLeave = function ($30) {
    return handler(DOM_HTML_Event_EventTypes.dragleave)(dragHandler($30));
};
var onDragOver = function ($31) {
    return handler(DOM_HTML_Event_EventTypes.dragover)(dragHandler($31));
};
var onDragStart = function ($32) {
    return handler(DOM_HTML_Event_EventTypes.dragstart)(dragHandler($32));
};
var onDrop = function ($33) {
    return handler(DOM_HTML_Event_EventTypes.drop)(dragHandler($33));
};
var clipboardHandler = Unsafe_Coerce.unsafeCoerce;
var onCopy = function ($34) {
    return handler(DOM_HTML_Event_EventTypes.copy)(clipboardHandler($34));
};
var onCut = function ($35) {
    return handler(DOM_HTML_Event_EventTypes.cut)(clipboardHandler($35));
};
var onPaste = function ($36) {
    return handler(DOM_HTML_Event_EventTypes.paste)(clipboardHandler($36));
};
var addForeignPropHandler = function (key) {
    return function (prop) {
        return function (reader) {
            return function (f) {
                return handler(key)(function ($37) {
                    return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(f)(Control_Monad_Except.runExcept(Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(reader)(Data_Foreign_Index.readProp(prop))(Data_Foreign.toForeign(DOM_Event_Event.currentTarget($37)))));
                });
            };
        };
    };
};
var onChecked = addForeignPropHandler(DOM_HTML_Event_EventTypes.change)("checked")(Data_Foreign.readBoolean);
var onSelectedIndexChange = addForeignPropHandler(DOM_HTML_Event_EventTypes.change)("selectedIndex")(Data_Foreign.readInt);
var onValueChange = addForeignPropHandler(DOM_HTML_Event_EventTypes.change)("value")(Data_Foreign.readString);
var onValueInput = addForeignPropHandler(DOM_HTML_Event_EventTypes.input)("value")(Data_Foreign.readString);
module.exports = {
    input: input,
    input_: input_,
    handler: handler,
    onAbort: onAbort,
    onError: onError,
    onLoad: onLoad,
    onScroll: onScroll,
    onChange: onChange,
    onInput: onInput,
    onInvalid: onInvalid,
    onReset: onReset,
    onSelect: onSelect,
    onSubmit: onSubmit,
    onTransitionEnd: onTransitionEnd,
    onCopy: onCopy,
    onPaste: onPaste,
    onCut: onCut,
    onClick: onClick,
    onContextMenu: onContextMenu,
    onDoubleClick: onDoubleClick,
    onMouseDown: onMouseDown,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    onMouseMove: onMouseMove,
    onMouseOver: onMouseOver,
    onMouseOut: onMouseOut,
    onMouseUp: onMouseUp,
    onWheel: onWheel,
    onKeyDown: onKeyDown,
    onKeyPress: onKeyPress,
    onKeyUp: onKeyUp,
    onBlur: onBlur,
    onFocus: onFocus,
    onFocusIn: onFocusIn,
    onFocusOut: onFocusOut,
    onDrag: onDrag,
    onDragEnd: onDragEnd,
    onDragExit: onDragExit,
    onDragEnter: onDragEnter,
    onDragLeave: onDragLeave,
    onDragOver: onDragOver,
    onDragStart: onDragStart,
    onDrop: onDrop,
    onTouchCancel: onTouchCancel,
    onTouchEnd: onTouchEnd,
    onTouchEnter: onTouchEnter,
    onTouchLeave: onTouchLeave,
    onTouchMove: onTouchMove,
    onTouchStart: onTouchStart,
    onResize: onResize,
    onValueChange: onValueChange,
    onValueInput: onValueInput,
    onSelectedIndexChange: onSelectedIndexChange,
    onChecked: onChecked
};

},{"../Control.Bind":11,"../Control.Monad.Except":42,"../Control.Monad.Except.Trans":41,"../Control.Semigroupoid":66,"../DOM.Event.Event":70,"../DOM.Event.Types":75,"../DOM.HTML.Event.EventTypes":82,"../DOM.HTML.Event.Types":83,"../Data.Either":154,"../Data.Foreign":169,"../Data.Foreign.Index":167,"../Data.Function":172,"../Data.Functor":180,"../Data.Identity":189,"../Data.Maybe":234,"../Halogen.HTML.Core":333,"../Halogen.HTML.Properties":336,"../Halogen.Query":342,"../Halogen.Query.InputF":341,"../Prelude":358,"../Unsafe.Coerce":366}],336:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM_HTML_Indexed = require("../DOM.HTML.Indexed");
var DOM_HTML_Indexed_ButtonType = require("../DOM.HTML.Indexed.ButtonType");
var DOM_HTML_Indexed_FormMethod = require("../DOM.HTML.Indexed.FormMethod");
var DOM_HTML_Indexed_InputType = require("../DOM.HTML.Indexed.InputType");
var DOM_HTML_Indexed_MenuType = require("../DOM.HTML.Indexed.MenuType");
var DOM_HTML_Indexed_MenuitemType = require("../DOM.HTML.Indexed.MenuitemType");
var DOM_HTML_Indexed_OnOff = require("../DOM.HTML.Indexed.OnOff");
var DOM_HTML_Indexed_OrderedListType = require("../DOM.HTML.Indexed.OrderedListType");
var DOM_HTML_Indexed_PreloadValue = require("../DOM.HTML.Indexed.PreloadValue");
var DOM_HTML_Indexed_StepValue = require("../DOM.HTML.Indexed.StepValue");
var DOM_Node_Types = require("../DOM.Node.Types");
var Data_Foreign = require("../Data.Foreign");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_MediaType = require("../Data.MediaType");
var Data_Newtype = require("../Data.Newtype");
var Data_String = require("../Data.String");
var Data_Unit = require("../Data.Unit");
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Halogen_Query_InputF = require("../Halogen.Query.InputF");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var IProp = function (x) {
    return x;
};
var ref = (function () {
    var go = function (p) {
        return function (mel) {
            return Data_Maybe.Just.create(new Halogen_Query_InputF.RefUpdate(p, Data_Functor.map(Data_Maybe.functorMaybe)(Data_Foreign.toForeign)(mel), Data_Unit.unit));
        };
    };
    return function ($6) {
        return Halogen_HTML_Core.ref(go($6));
    };
})();
var prop = function (dictIsProp) {
    return Halogen_HTML_Core.prop(dictIsProp);
};
var readOnly = prop(Halogen_HTML_Core.booleanIsProp)("readOnly");
var rel = prop(Halogen_HTML_Core.stringIsProp)("rel");
var required = prop(Halogen_HTML_Core.booleanIsProp)("required");
var rowSpan = prop(Halogen_HTML_Core.intIsProp)("rowSpan");
var rows = prop(Halogen_HTML_Core.intIsProp)("rows");
var selected = prop(Halogen_HTML_Core.booleanIsProp)("selected");
var spellcheck = prop(Halogen_HTML_Core.booleanIsProp)("spellcheck");
var src = prop(Halogen_HTML_Core.stringIsProp)("src");
var step = prop(Halogen_HTML_Core.stepValueIsProp)("step");
var tabIndex = prop(Halogen_HTML_Core.intIsProp)("tabIndex");
var target = prop(Halogen_HTML_Core.stringIsProp)("target");
var title = prop(Halogen_HTML_Core.stringIsProp)("title");
var type_ = function (dictIsProp) {
    return prop(dictIsProp)("type");
};
var value = prop(Halogen_HTML_Core.stringIsProp)("value");
var width = prop(Halogen_HTML_Core.intIsProp)("width");
var preload = prop(Halogen_HTML_Core.preloadValueIsProp)("preload");
var poster = prop(Halogen_HTML_Core.stringIsProp)("poster");
var placeholder = prop(Halogen_HTML_Core.stringIsProp)("placeholder");
var pattern = prop(Halogen_HTML_Core.stringIsProp)("pattern");
var noValidate = prop(Halogen_HTML_Core.booleanIsProp)("noValidate");
var newtypeIProp = new Data_Newtype.Newtype(function (n) {
    return n;
}, IProp);
var name = prop(Halogen_HTML_Core.stringIsProp)("name");
var muted = prop(Halogen_HTML_Core.booleanIsProp)("muted");
var multiple = prop(Halogen_HTML_Core.booleanIsProp)("multiple");
var min = prop(Halogen_HTML_Core.numberIsProp)("min");
var method = prop(Halogen_HTML_Core.formMethodIsProp)("method");
var max = prop(Halogen_HTML_Core.numberIsProp)("max");
var loop = prop(Halogen_HTML_Core.booleanIsProp)("loop");
var list = prop(Halogen_HTML_Core.stringIsProp)("list");
var id_ = prop(Halogen_HTML_Core.stringIsProp)("id");
var href = prop(Halogen_HTML_Core.stringIsProp)("href");
var height = prop(Halogen_HTML_Core.intIsProp)("height");
var $$for = prop(Halogen_HTML_Core.stringIsProp)("htmlFor");
var enctype = prop(Halogen_HTML_Core.mediaTypeIsProp)("enctype");
var draggable = prop(Halogen_HTML_Core.booleanIsProp)("draggable");
var disabled = prop(Halogen_HTML_Core.booleanIsProp)("disabled");
var enabled = function ($7) {
    return disabled(!$7);
};
var controls = prop(Halogen_HTML_Core.booleanIsProp)("controls");
var cols = prop(Halogen_HTML_Core.intIsProp)("cols");
var colSpan = prop(Halogen_HTML_Core.intIsProp)("colSpan");
var classes = function ($8) {
    return prop(Halogen_HTML_Core.stringIsProp)("className")(Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName))($8)));
};
var class_ = function ($9) {
    return prop(Halogen_HTML_Core.stringIsProp)("className")(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName)($9));
};
var checked = prop(Halogen_HTML_Core.booleanIsProp)("checked");
var charset = prop(Halogen_HTML_Core.stringIsProp)("charset");
var autoplay = prop(Halogen_HTML_Core.booleanIsProp)("autoplay");
var autofocus = prop(Halogen_HTML_Core.booleanIsProp)("autofocus");
var autocomplete = function ($10) {
    return prop(Halogen_HTML_Core.onOffIsProp)("autocomplete")((function (b) {
        if (b) {
            return DOM_HTML_Indexed_OnOff.On.value;
        };
        return DOM_HTML_Indexed_OnOff.Off.value;
    })($10));
};
var attrNS = function ($11) {
    return Halogen_HTML_Core.attr(Control_Applicative.pure(Data_Maybe.applicativeMaybe)($11));
};
var attr = Halogen_HTML_Core.attr(Data_Maybe.Nothing.value);
var alt = prop(Halogen_HTML_Core.stringIsProp)("alt");
var action = prop(Halogen_HTML_Core.stringIsProp)("action");
var accept = prop(Halogen_HTML_Core.mediaTypeIsProp)("accept");
module.exports = {
    IProp: IProp,
    prop: prop,
    attr: attr,
    attrNS: attrNS,
    ref: ref,
    alt: alt,
    charset: charset,
    class_: class_,
    classes: classes,
    cols: cols,
    rows: rows,
    colSpan: colSpan,
    rowSpan: rowSpan,
    "for": $$for,
    height: height,
    width: width,
    href: href,
    id_: id_,
    name: name,
    rel: rel,
    src: src,
    target: target,
    title: title,
    method: method,
    action: action,
    enctype: enctype,
    noValidate: noValidate,
    type_: type_,
    value: value,
    min: min,
    max: max,
    step: step,
    disabled: disabled,
    enabled: enabled,
    required: required,
    readOnly: readOnly,
    spellcheck: spellcheck,
    checked: checked,
    selected: selected,
    placeholder: placeholder,
    autocomplete: autocomplete,
    list: list,
    autofocus: autofocus,
    multiple: multiple,
    pattern: pattern,
    accept: accept,
    autoplay: autoplay,
    controls: controls,
    loop: loop,
    muted: muted,
    poster: poster,
    preload: preload,
    draggable: draggable,
    tabIndex: tabIndex,
    newtypeIProp: newtypeIProp
};

},{"../Control.Applicative":5,"../Control.Semigroupoid":66,"../DOM.HTML.Indexed":100,"../DOM.HTML.Indexed.ButtonType":86,"../DOM.HTML.Indexed.FormMethod":89,"../DOM.HTML.Indexed.InputType":90,"../DOM.HTML.Indexed.MenuType":92,"../DOM.HTML.Indexed.MenuitemType":93,"../DOM.HTML.Indexed.OnOff":94,"../DOM.HTML.Indexed.OrderedListType":95,"../DOM.HTML.Indexed.PreloadValue":96,"../DOM.HTML.Indexed.StepValue":98,"../DOM.Node.Types":113,"../Data.Foreign":169,"../Data.Function":172,"../Data.Functor":180,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.MediaType":235,"../Data.Newtype":244,"../Data.String":288,"../Data.Unit":302,"../Halogen.HTML.Core":333,"../Halogen.Query.InputF":341,"../Prelude":358,"../Unsafe.Coerce":366}],337:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Halogen_Component = require("../Halogen.Component");
var Halogen_Component_ChildPath = require("../Halogen.Component.ChildPath");
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties");
var Prelude = require("../Prelude");
var slot$prime = function (i) {
    return function (p) {
        return function (component) {
            return function (input) {
                return function (outputQuery) {
                    var pq = Halogen_Component_ChildPath.prjQuery(i);
                    var f = function ($2) {
                        return Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Component_ChildPath.injQuery(i))(Halogen_Component.unComponent(function (v) {
                            return v.receiver;
                        })(component)($2));
                    };
                    return Halogen_HTML_Core.slot(Halogen_Component.mkComponentSlot(Halogen_Component_ChildPath.injSlot(i)(p))(component)(input)(f)(outputQuery)(pq));
                };
            };
        };
    };
};
var slot = function (p) {
    return function (component) {
        return function (input) {
            return function (outputQuery) {
                var f = Halogen_Component.unComponent(function (v) {
                    return v.receiver;
                })(component);
                return Halogen_HTML_Core.slot(Halogen_Component.mkComponentSlot(p)(component)(input)(f)(outputQuery)(Data_Maybe.Just.create));
            };
        };
    };
};
module.exports = {
    slot: slot,
    "slot'": slot$prime
};

},{"../Control.Semigroupoid":66,"../Data.Functor":180,"../Data.Maybe":234,"../Halogen.Component":330,"../Halogen.Component.ChildPath":329,"../Halogen.HTML.Core":333,"../Halogen.HTML.Elements":334,"../Halogen.HTML.Properties":336,"../Prelude":358}],338:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Coroutine = require("../Control.Coroutine");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Aff_Class = require("../Control.Monad.Aff.Class");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Listening = (function () {
    function Listening() {

    };
    Listening.value = new Listening();
    return Listening;
})();
var Done = (function () {
    function Done() {

    };
    Done.value = new Done();
    return Done;
})();
var EventSource = function (x) {
    return x;
};
var unEventSource = function (v) {
    return v;
};
var runAff$prime = Control_Monad_Aff.runAff_(Data_Either.either(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)));
var produceAff$prime = function (recv) {
    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeEmptyVar)(function (v) {
        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeEmptyVar)(function (v1) {
            var producer = Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(Control_Monad_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(Control_Monad_Aff.monadAff)(Control_Bind.bindFlipped(Control_Monad_Aff.bindAff)(Data_Function.flip(Control_Monad_Aff_AVar.putVar)(v1))(recv(Data_Function.flip(Control_Monad_Aff_AVar.putVar)(v)))))(function () {
                return Control_Coroutine.producer(Control_Monad_Aff.monadAff)(Control_Monad_Aff_AVar.takeVar(v));
            });
            var cancel = function (r) {
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.attempt(Control_Monad_Aff_AVar.takeVar(v1)))(function (v2) {
                    if (v2 instanceof Data_Either.Left) {
                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(false);
                    };
                    if (v2 instanceof Data_Either.Right) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.killVar(Control_Monad_Eff_Exception.error("finalized"))(v1))(function () {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(v2.value0)(function () {
                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(true);
                            });
                        });
                    };
                    throw new Error("Failed pattern match at Halogen.Query.EventSource line 181, column 44 - line 186, column 20: " + [ v2.constructor.name ]);
                });
            };
            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)({
                producer: producer,
                cancel: cancel
            });
        });
    });
};
var produceAff = function (dictMonadAff) {
    return function (recv) {
        return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)((dictMonadAff.MonadEff0()).Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))((dictMonadAff.MonadEff0()).Monad0())(Control_Monad_Aff_Class.liftAff(dictMonadAff)(Control_Monad_Aff_AVar.makeEmptyVar)))(function (v) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)((dictMonadAff.MonadEff0()).Monad0()))(Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorEmit)(((((dictMonadAff.MonadEff0()).Monad0()).Bind1()).Apply0()).Functor0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))((dictMonadAff.MonadEff0()).Monad0())(Control_Monad_Aff_Class.liftAff(dictMonadAff)(Control_Monad_Aff.forkAff(recv(Data_Function.flip(Control_Monad_Aff_AVar.putVar)(v)))))))(function () {
                return Control_Coroutine.producer((dictMonadAff.MonadEff0()).Monad0())(Control_Monad_Aff_Class.liftAff(dictMonadAff)(Control_Monad_Aff_AVar.takeVar(v)));
            });
        });
    };
};
var produce$prime = function (recv) {
    return produceAff$prime(function (send) {
        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(recv(function ($50) {
            return Data_Functor["void"](Control_Monad_Eff.functorEff)(runAff$prime(send($50)));
        })))(function (v) {
            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(v));
        });
    });
};
var produce = function (recv) {
    return produceAff(Control_Monad_Aff_Class.monadAffAff)(function (send) {
        return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(recv(function ($51) {
            return Data_Functor["void"](Control_Monad_Eff.functorEff)(runAff$prime(send($51)));
        }));
    });
};
var interpret = function (dictFunctor) {
    return function (nat) {
        return function (v) {
            return EventSource(Data_Functor.map(dictFunctor)(function (e) {
                return {
                    producer: Control_Monad_Free_Trans.interpret(Control_Coroutine.functorEmit)(dictFunctor)(Data_Bifunctor.lmap(Control_Coroutine.bifunctorEmit)(nat))(e.producer),
                    done: e.done
                };
            })(v));
        };
    };
};
var hoist = function (dictFunctor) {
    return function (nat) {
        return function (v) {
            return EventSource(Data_Functor.map(dictFunctor)(function (e) {
                return {
                    producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(dictFunctor)(nat)(e.producer),
                    done: nat(e.done)
                };
            })(nat(v)));
        };
    };
};
var eventSource_$prime = function (dictMonadAff) {
    return function (attach) {
        return function (query) {
            return Control_Bind.bind(((dictMonadAff.MonadEff0()).Monad0()).Bind1())(Control_Monad_Aff_Class.liftAff(dictMonadAff)(produce$prime(function (emit) {
                return attach(emit(new Data_Either.Left(query)));
            })))(function (v) {
                return Control_Applicative.pure(((dictMonadAff.MonadEff0()).Monad0()).Applicative0())({
                    producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(((((dictMonadAff.MonadEff0()).Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Aff_Class.liftAff(dictMonadAff))(v.producer),
                    done: Control_Monad_Aff_Class.liftAff(dictMonadAff)(Data_Functor["void"](Control_Monad_Aff.functorAff)(v.cancel(Data_Unit.unit)))
                });
            });
        };
    };
};
var eventSource_ = function (dictMonadAff) {
    return function (attach) {
        return function (query) {
            var producer = produce(function (emit) {
                return attach(emit(new Data_Either.Left(query)));
            });
            return Control_Applicative.pure(((dictMonadAff.MonadEff0()).Monad0()).Applicative0())({
                producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(((((dictMonadAff.MonadEff0()).Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Aff_Class.liftAff(dictMonadAff))(producer),
                done: Control_Applicative.pure(((dictMonadAff.MonadEff0()).Monad0()).Applicative0())(Data_Unit.unit)
            });
        };
    };
};
var eqSubscribeStatus = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Listening && y instanceof Listening) {
            return true;
        };
        if (x instanceof Done && y instanceof Done) {
            return true;
        };
        return false;
    };
});
var ordSubscribeStatus = new Data_Ord.Ord(function () {
    return eqSubscribeStatus;
}, function (x) {
    return function (y) {
        if (x instanceof Listening && y instanceof Listening) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Listening) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Listening) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Done && y instanceof Done) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Halogen.Query.EventSource line 62, column 8 - line 62, column 58: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var catMaybes = function (dictMonadRec) {
    return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorEmit)(dictMonadRec.Monad0()))(Control_Bind.composeKleisli(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(dictMonadRec.Monad0()))(function ($52) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(dictMonadRec.Monad0())(Control_Monad_Free_Trans.resume(Control_Coroutine.functorEmit)(dictMonadRec)($52));
    })(function (v) {
        if (v instanceof Data_Either.Left) {
            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Done(v.value0));
        };
        if (v instanceof Data_Either.Right) {
            return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorEmit)((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0()))(Data_Foldable.for_(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorEmit)(dictMonadRec.Monad0()))(Data_Foldable.foldableMaybe)(v.value0.value0)(Control_Coroutine.emit(dictMonadRec.Monad0())))(new Control_Monad_Rec_Class.Loop(v.value0.value1));
        };
        throw new Error("Failed pattern match at Halogen.Query.EventSource line 136, column 41 - line 138, column 64: " + [ v.constructor.name ]);
    }));
};
var eventSource = function (dictMonadAff) {
    return function (attach) {
        return function (handler) {
            var producer = produce(function (emit) {
                return attach(function ($53) {
                    return emit(Data_Either.Left.create(handler($53)));
                });
            });
            return Control_Applicative.pure(((dictMonadAff.MonadEff0()).Monad0()).Applicative0())({
                producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(((((dictMonadAff.MonadEff0()).Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Aff_Class.liftAff(dictMonadAff))(catMaybes(Control_Monad_Aff.monadRecAff)(producer)),
                done: Control_Applicative.pure(((dictMonadAff.MonadEff0()).Monad0()).Applicative0())(Data_Unit.unit)
            });
        };
    };
};
var eventSource$prime = function (dictMonadAff) {
    return function (attach) {
        return function (handler) {
            return Control_Bind.bind(((dictMonadAff.MonadEff0()).Monad0()).Bind1())(Control_Monad_Aff_Class.liftAff(dictMonadAff)(produce$prime(function (emit) {
                return attach(function ($54) {
                    return emit(Data_Either.Left.create(handler($54)));
                });
            })))(function (v) {
                return Control_Applicative.pure(((dictMonadAff.MonadEff0()).Monad0()).Applicative0())({
                    producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(((((dictMonadAff.MonadEff0()).Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Aff_Class.liftAff(dictMonadAff))(catMaybes(Control_Monad_Aff.monadRecAff)(v.producer)),
                    done: Control_Monad_Aff_Class.liftAff(dictMonadAff)(Data_Functor["void"](Control_Monad_Aff.functorAff)(v.cancel(Data_Unit.unit)))
                });
            });
        };
    };
};
module.exports = {
    EventSource: EventSource,
    Listening: Listening,
    Done: Done,
    unEventSource: unEventSource,
    interpret: interpret,
    hoist: hoist,
    eventSource: eventSource,
    "eventSource'": eventSource$prime,
    eventSource_: eventSource_,
    "eventSource_'": eventSource_$prime,
    catMaybes: catMaybes,
    produce: produce,
    "produce'": produce$prime,
    produceAff: produceAff,
    "produceAff'": produceAff$prime,
    eqSubscribeStatus: eqSubscribeStatus,
    ordSubscribeStatus: ordSubscribeStatus
};

},{"../Control.Applicative":5,"../Control.Bind":11,"../Control.Coroutine":14,"../Control.Monad.Aff":22,"../Control.Monad.Aff.AVar":18,"../Control.Monad.Aff.Class":19,"../Control.Monad.Eff":39,"../Control.Monad.Eff.Class":27,"../Control.Monad.Eff.Exception":31,"../Control.Monad.Free.Trans":44,"../Control.Monad.Rec.Class":51,"../Control.Monad.Trans.Class":57,"../Control.Semigroupoid":66,"../Data.Bifunctor":129,"../Data.Either":154,"../Data.Eq":157,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Unit":302,"../Prelude":358}],339:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var ForkF = (function () {
    function ForkF(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ForkF.create = function (value0) {
        return function (value1) {
            return new ForkF(value0, value1);
        };
    };
    return ForkF;
})();
var unFork = Unsafe_Coerce.unsafeCoerce;
var mkFork = Unsafe_Coerce.unsafeCoerce;
var hoistFork = function (nat) {
    return unFork(function (v) {
        return mkFork(new ForkF(nat(v.value0), v.value1));
    });
};
var functorFork = new Data_Functor.Functor(function (f) {
    return unFork(function (v) {
        return mkFork(new ForkF(v.value0, Data_Functor.map(Data_Functor.functorFn)(f)(v.value1)));
    });
});
var fork = function (fx) {
    return mkFork(new ForkF(fx, Control_Category.id(Control_Category.categoryFn)));
};
module.exports = {
    ForkF: ForkF,
    fork: fork,
    mkFork: mkFork,
    unFork: unFork,
    hoistFork: hoistFork,
    functorFork: functorFork
};

},{"../Control.Category":12,"../Control.Monad.Aff":22,"../Control.Monad.Eff.Exception":31,"../Data.Function":172,"../Data.Functor":180,"../Prelude":358,"../Unsafe.Coerce":366}],340:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Applicative_Free = require("../Control.Applicative.Free");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Aff_Class = require("../Control.Monad.Aff.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Free = require("../Control.Monad.Free");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_Parallel_Class = require("../Control.Parallel.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Coyoneda = require("../Data.Coyoneda");
var Data_Foreign = require("../Data.Foreign");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Halogen_Query_EventSource = require("../Halogen.Query.EventSource");
var Halogen_Query_ForkF = require("../Halogen.Query.ForkF");
var Halogen_Query_InputF = require("../Halogen.Query.InputF");
var Prelude = require("../Prelude");
var HalogenAp = function (x) {
    return x;
};
var HalogenM = function (x) {
    return x;
};
var State = (function () {
    function State(value0) {
        this.value0 = value0;
    };
    State.create = function (value0) {
        return new State(value0);
    };
    return State;
})();
var Subscribe = (function () {
    function Subscribe(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Subscribe.create = function (value0) {
        return function (value1) {
            return new Subscribe(value0, value1);
        };
    };
    return Subscribe;
})();
var Lift = (function () {
    function Lift(value0) {
        this.value0 = value0;
    };
    Lift.create = function (value0) {
        return new Lift(value0);
    };
    return Lift;
})();
var Halt = (function () {
    function Halt(value0) {
        this.value0 = value0;
    };
    Halt.create = function (value0) {
        return new Halt(value0);
    };
    return Halt;
})();
var GetSlots = (function () {
    function GetSlots(value0) {
        this.value0 = value0;
    };
    GetSlots.create = function (value0) {
        return new GetSlots(value0);
    };
    return GetSlots;
})();
var CheckSlot = (function () {
    function CheckSlot(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CheckSlot.create = function (value0) {
        return function (value1) {
            return new CheckSlot(value0, value1);
        };
    };
    return CheckSlot;
})();
var ChildQuery = (function () {
    function ChildQuery(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ChildQuery.create = function (value0) {
        return function (value1) {
            return new ChildQuery(value0, value1);
        };
    };
    return ChildQuery;
})();
var Raise = (function () {
    function Raise(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Raise.create = function (value0) {
        return function (value1) {
            return new Raise(value0, value1);
        };
    };
    return Raise;
})();
var Par = (function () {
    function Par(value0) {
        this.value0 = value0;
    };
    Par.create = function (value0) {
        return new Par(value0);
    };
    return Par;
})();
var Fork = (function () {
    function Fork(value0) {
        this.value0 = value0;
    };
    Fork.create = function (value0) {
        return new Fork(value0);
    };
    return Fork;
})();
var GetRef = (function () {
    function GetRef(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    GetRef.create = function (value0) {
        return function (value1) {
            return new GetRef(value0, value1);
        };
    };
    return GetRef;
})();
var subscribe = function (es) {
    return HalogenM(Control_Monad_Free.liftF(new Subscribe(es, Data_Unit.unit)));
};
var raise = function (o) {
    return HalogenM(Control_Monad_Free.liftF(new Raise(o, Data_Unit.unit)));
};
var newtypeHalogenAp = new Data_Newtype.Newtype(function (n) {
    return n;
}, HalogenAp);
var monadTransHalogenM = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
        return HalogenM(Control_Monad_Free.liftF(new Lift(m)));
    };
});
var mkQuery = function (dictEq) {
    return function (p) {
        return function ($176) {
            return HalogenM(Control_Monad_Free.liftF(ChildQuery.create(p)(Data_Coyoneda.coyoneda(Control_Category.id(Control_Category.categoryFn))($176))));
        };
    };
};
var mapQuery = function (dictFunctor) {
    return function (nat) {
        return function (v) {
            var go = function (v1) {
                if (v1 instanceof State) {
                    return new State(v1.value0);
                };
                if (v1 instanceof Subscribe) {
                    return new Subscribe(Halogen_Query_EventSource.interpret(dictFunctor)(nat)(v1.value0), v1.value1);
                };
                if (v1 instanceof Lift) {
                    return new Lift(v1.value0);
                };
                if (v1 instanceof Halt) {
                    return new Halt(v1.value0);
                };
                if (v1 instanceof GetSlots) {
                    return new GetSlots(v1.value0);
                };
                if (v1 instanceof CheckSlot) {
                    return new CheckSlot(v1.value0, v1.value1);
                };
                if (v1 instanceof ChildQuery) {
                    return new ChildQuery(v1.value0, v1.value1);
                };
                if (v1 instanceof Raise) {
                    return new Raise(v1.value0, v1.value1);
                };
                if (v1 instanceof Par) {
                    return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(mapQuery(dictFunctor)(nat)))(v1.value0));
                };
                if (v1 instanceof Fork) {
                    return new Fork(Halogen_Query_ForkF.hoistFork(mapQuery(dictFunctor)(nat))(v1.value0));
                };
                if (v1 instanceof GetRef) {
                    return new GetRef(v1.value0, v1.value1);
                };
                throw new Error("Failed pattern match at Halogen.Query.HalogenM line 171, column 8 - line 182, column 29: " + [ v1.constructor.name ]);
            };
            return Control_Monad_Free.hoistFree(go)(v);
        };
    };
};
var mapOutput = function (f) {
    return function (v) {
        var go = function (v1) {
            if (v1 instanceof State) {
                return new State(v1.value0);
            };
            if (v1 instanceof Subscribe) {
                return new Subscribe(v1.value0, v1.value1);
            };
            if (v1 instanceof Lift) {
                return new Lift(v1.value0);
            };
            if (v1 instanceof Halt) {
                return new Halt(v1.value0);
            };
            if (v1 instanceof GetSlots) {
                return new GetSlots(v1.value0);
            };
            if (v1 instanceof CheckSlot) {
                return new CheckSlot(v1.value0, v1.value1);
            };
            if (v1 instanceof ChildQuery) {
                return new ChildQuery(v1.value0, v1.value1);
            };
            if (v1 instanceof Raise) {
                return new Raise(f(v1.value0), v1.value1);
            };
            if (v1 instanceof Par) {
                return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(mapOutput(f)))(v1.value0));
            };
            if (v1 instanceof Fork) {
                return new Fork(Halogen_Query_ForkF.hoistFork(mapOutput(f))(v1.value0));
            };
            if (v1 instanceof GetRef) {
                return new GetRef(v1.value0, v1.value1);
            };
            throw new Error("Failed pattern match at Halogen.Query.HalogenM line 235, column 8 - line 246, column 29: " + [ v1.constructor.name ]);
        };
        return Control_Monad_Free.hoistFree(go)(v);
    };
};
var mapChildQuery = function (nat) {
    return function (v) {
        var go = function (v1) {
            if (v1 instanceof State) {
                return new State(v1.value0);
            };
            if (v1 instanceof Subscribe) {
                return new Subscribe(v1.value0, v1.value1);
            };
            if (v1 instanceof Lift) {
                return new Lift(v1.value0);
            };
            if (v1 instanceof Halt) {
                return new Halt(v1.value0);
            };
            if (v1 instanceof GetSlots) {
                return new GetSlots(v1.value0);
            };
            if (v1 instanceof CheckSlot) {
                return new CheckSlot(v1.value0, v1.value1);
            };
            if (v1 instanceof ChildQuery) {
                return new ChildQuery(v1.value0, Data_Coyoneda.hoistCoyoneda(nat)(v1.value1));
            };
            if (v1 instanceof Raise) {
                return new Raise(v1.value0, v1.value1);
            };
            if (v1 instanceof Par) {
                return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(mapChildQuery(nat)))(v1.value0));
            };
            if (v1 instanceof Fork) {
                return new Fork(Halogen_Query_ForkF.hoistFork(mapChildQuery(nat))(v1.value0));
            };
            if (v1 instanceof GetRef) {
                return new GetRef(v1.value0, v1.value1);
            };
            throw new Error("Failed pattern match at Halogen.Query.HalogenM line 192, column 8 - line 203, column 29: " + [ v1.constructor.name ]);
        };
        return Control_Monad_Free.hoistFree(go)(v);
    };
};
var imapState = function (f) {
    return function (f$prime) {
        return function (v) {
            var go = function (v1) {
                if (v1 instanceof State) {
                    return new State(function ($177) {
                        return Data_Functor.map(Data_Tuple.functorTuple)(f)(v1.value0(f$prime($177)));
                    });
                };
                if (v1 instanceof Subscribe) {
                    return new Subscribe(v1.value0, v1.value1);
                };
                if (v1 instanceof Lift) {
                    return new Lift(v1.value0);
                };
                if (v1 instanceof Halt) {
                    return new Halt(v1.value0);
                };
                if (v1 instanceof GetSlots) {
                    return new GetSlots(v1.value0);
                };
                if (v1 instanceof CheckSlot) {
                    return new CheckSlot(v1.value0, v1.value1);
                };
                if (v1 instanceof ChildQuery) {
                    return new ChildQuery(v1.value0, v1.value1);
                };
                if (v1 instanceof Raise) {
                    return new Raise(v1.value0, v1.value1);
                };
                if (v1 instanceof Par) {
                    return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(imapState(f)(f$prime)))(v1.value0));
                };
                if (v1 instanceof Fork) {
                    return new Fork(Halogen_Query_ForkF.hoistFork(imapState(f)(f$prime))(v1.value0));
                };
                if (v1 instanceof GetRef) {
                    return new GetRef(v1.value0, v1.value1);
                };
                throw new Error("Failed pattern match at Halogen.Query.HalogenM line 149, column 8 - line 160, column 29: " + [ v1.constructor.name ]);
            };
            return Control_Monad_Free.hoistFree(go)(v);
        };
    };
};
var imapSlots = function (f) {
    return function (f$prime) {
        return function (v) {
            var go = function (v1) {
                if (v1 instanceof State) {
                    return new State(v1.value0);
                };
                if (v1 instanceof Subscribe) {
                    return new Subscribe(v1.value0, v1.value1);
                };
                if (v1 instanceof Lift) {
                    return new Lift(v1.value0);
                };
                if (v1 instanceof Halt) {
                    return new Halt(v1.value0);
                };
                if (v1 instanceof GetSlots) {
                    return new GetSlots(function ($178) {
                        return v1.value0(Data_Functor.map(Data_List_Types.functorList)(f$prime)($178));
                    });
                };
                if (v1 instanceof CheckSlot) {
                    return new CheckSlot(f(v1.value0), v1.value1);
                };
                if (v1 instanceof ChildQuery) {
                    return new ChildQuery(f(v1.value0), v1.value1);
                };
                if (v1 instanceof Raise) {
                    return new Raise(v1.value0, v1.value1);
                };
                if (v1 instanceof Par) {
                    return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(imapSlots(f)(f$prime)))(v1.value0));
                };
                if (v1 instanceof Fork) {
                    return new Fork(Halogen_Query_ForkF.hoistFork(imapSlots(f)(f$prime))(v1.value0));
                };
                if (v1 instanceof GetRef) {
                    return new GetRef(v1.value0, v1.value1);
                };
                throw new Error("Failed pattern match at Halogen.Query.HalogenM line 214, column 8 - line 225, column 29: " + [ v1.constructor.name ]);
            };
            return Control_Monad_Free.hoistFree(go)(v);
        };
    };
};
var hoist = function (dictFunctor) {
    return function (nat) {
        return function (v) {
            var go = function (v1) {
                if (v1 instanceof State) {
                    return new State(v1.value0);
                };
                if (v1 instanceof Subscribe) {
                    return new Subscribe(Halogen_Query_EventSource.hoist(dictFunctor)(nat)(v1.value0), v1.value1);
                };
                if (v1 instanceof Lift) {
                    return new Lift(nat(v1.value0));
                };
                if (v1 instanceof Halt) {
                    return new Halt(v1.value0);
                };
                if (v1 instanceof GetSlots) {
                    return new GetSlots(v1.value0);
                };
                if (v1 instanceof CheckSlot) {
                    return new CheckSlot(v1.value0, v1.value1);
                };
                if (v1 instanceof ChildQuery) {
                    return new ChildQuery(v1.value0, v1.value1);
                };
                if (v1 instanceof Raise) {
                    return new Raise(v1.value0, v1.value1);
                };
                if (v1 instanceof Par) {
                    return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(hoist(dictFunctor)(nat)))(v1.value0));
                };
                if (v1 instanceof Fork) {
                    return new Fork(Halogen_Query_ForkF.hoistFork(hoist(dictFunctor)(nat))(v1.value0));
                };
                if (v1 instanceof GetRef) {
                    return new GetRef(v1.value0, v1.value1);
                };
                throw new Error("Failed pattern match at Halogen.Query.HalogenM line 257, column 8 - line 268, column 28: " + [ v1.constructor.name ]);
            };
            return Control_Monad_Free.hoistFree(go)(v);
        };
    };
};
var halt = function (msg) {
    return HalogenM(Control_Monad_Free.liftF(new Halt(msg)));
};
var getSlots = HalogenM(Control_Monad_Free.liftF(new GetSlots(Control_Category.id(Control_Category.categoryFn))));
var getRef = function (p) {
    return HalogenM(Control_Monad_Free.liftF(new GetRef(p, Control_Category.id(Control_Category.categoryFn))));
};
var functorHalogenM = new Data_Functor.Functor(function (f) {
    return function (v) {
        return Data_Functor.map(Control_Monad_Free.freeFunctor)(f)(v);
    };
});
var functorHalogenAp = Control_Applicative_Free.functorFreeAp;
var functorHalogenF = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            if (v instanceof State) {
                return new State(function ($179) {
                    return Data_Bifunctor.lmap(Data_Tuple.bifunctorTuple)(f)(v.value0($179));
                });
            };
            if (v instanceof Subscribe) {
                return new Subscribe(v.value0, f(v.value1));
            };
            if (v instanceof Lift) {
                return new Lift(Data_Functor.map(dictFunctor)(f)(v.value0));
            };
            if (v instanceof Halt) {
                return new Halt(v.value0);
            };
            if (v instanceof CheckSlot) {
                return new CheckSlot(v.value0, Data_Functor.map(Data_Functor.functorFn)(f)(v.value1));
            };
            if (v instanceof GetSlots) {
                return new GetSlots(Data_Functor.map(Data_Functor.functorFn)(f)(v.value0));
            };
            if (v instanceof ChildQuery) {
                return new ChildQuery(v.value0, Data_Functor.map(Data_Coyoneda.functorCoyoneda)(f)(v.value1));
            };
            if (v instanceof Raise) {
                return new Raise(v.value0, f(v.value1));
            };
            if (v instanceof Par) {
                return new Par(Data_Functor.map(functorHalogenAp)(f)(v.value0));
            };
            if (v instanceof Fork) {
                return new Fork(Data_Functor.map(Halogen_Query_ForkF.functorFork)(f)(v.value0));
            };
            if (v instanceof GetRef) {
                return new GetRef(v.value0, Data_Functor.map(Data_Functor.functorFn)(f)(v.value1));
            };
            throw new Error("Failed pattern match at Halogen.Query.HalogenM line 44, column 11 - line 55, column 37: " + [ v.constructor.name ]);
        };
    });
};
var fork = function (dictMonadAff) {
    return function (a) {
        return Data_Functor.map(functorHalogenM)(Data_Functor.map(Data_Functor.functorFn)(Control_Monad_Aff_Class.liftAff(dictMonadAff)))(Control_Monad_Free.liftF(Fork.create(Halogen_Query_ForkF.fork(a))));
    };
};
var checkSlot = function (p) {
    return HalogenM(Control_Monad_Free.liftF(new CheckSlot(p, Control_Category.id(Control_Category.categoryFn))));
};
var applyHalogenM = new Control_Apply.Apply(function () {
    return functorHalogenM;
}, function (v) {
    return function (v1) {
        return Control_Apply.apply(Control_Monad_Free.freeApply)(v)(v1);
    };
});
var bindHalogenM = new Control_Bind.Bind(function () {
    return applyHalogenM;
}, function (v) {
    return function (f) {
        return Control_Bind.bind(Control_Monad_Free.freeBind)(v)(function (x) {
            var v1 = f(x);
            return v1;
        });
    };
});
var applyHalogenAp = Control_Applicative_Free.applyFreeAp;
var applicativeHalogenM = new Control_Applicative.Applicative(function () {
    return applyHalogenM;
}, function (a) {
    return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(a);
});
var monadHalogenM = new Control_Monad.Monad(function () {
    return applicativeHalogenM;
}, function () {
    return bindHalogenM;
});
var monadAskHalogenM = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadHalogenM;
    }, HalogenM(Control_Monad_Free.liftF(Lift.create(Control_Monad_Reader_Class.ask(dictMonadAsk)))));
};
var monadEffHalogenM = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadHalogenM;
    }, function (eff) {
        return HalogenM(Control_Monad_Free.liftF(Lift.create(Control_Monad_Eff_Class.liftEff(dictMonadEff)(eff))));
    });
};
var monadAffHalogenM = function (dictMonadAff) {
    return new Control_Monad_Aff_Class.MonadAff(function () {
        return monadEffHalogenM(dictMonadAff.MonadEff0());
    }, function (aff) {
        return HalogenM(Control_Monad_Free.liftF(Lift.create(Control_Monad_Aff_Class.liftAff(dictMonadAff)(aff))));
    });
};
var monadStateHalogenM = new Control_Monad_State_Class.MonadState(function () {
    return monadHalogenM;
}, function ($180) {
    return HalogenM(Control_Monad_Free.liftF(State.create($180)));
});
var monadTellHalogenM = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadHalogenM;
    }, function ($181) {
        return HalogenM(Control_Monad_Free.liftF(Lift.create(Control_Monad_Writer_Class.tell(dictMonadTell)($181))));
    });
};
var monadRecHalogenM = new Control_Monad_Rec_Class.MonadRec(function () {
    return monadHalogenM;
}, function (k) {
    return function (a) {
        var go = function (v) {
            if (v instanceof Control_Monad_Rec_Class.Loop) {
                return Control_Monad_Rec_Class.tailRecM(monadRecHalogenM)(k)(v.value0);
            };
            if (v instanceof Control_Monad_Rec_Class.Done) {
                return Control_Applicative.pure(applicativeHalogenM)(v.value0);
            };
            throw new Error("Failed pattern match at Halogen.Query.HalogenM line 96, column 5 - line 96, column 31: " + [ v.constructor.name ]);
        };
        return Control_Bind.bind(bindHalogenM)(k(a))(go);
    };
});
var applicativeHalogenAp = Control_Applicative_Free.applicativeFreeAp;
var parallelHalogenM = new Control_Parallel_Class.Parallel(function () {
    return applicativeHalogenAp;
}, function () {
    return monadHalogenM;
}, function ($182) {
    return HalogenAp(Control_Applicative_Free.liftFreeAp($182));
}, function ($183) {
    return HalogenM(Control_Monad_Free.liftF(Par.create($183)));
});
module.exports = {
    State: State,
    Subscribe: Subscribe,
    Lift: Lift,
    Halt: Halt,
    GetSlots: GetSlots,
    CheckSlot: CheckSlot,
    ChildQuery: ChildQuery,
    Raise: Raise,
    Par: Par,
    Fork: Fork,
    GetRef: GetRef,
    HalogenAp: HalogenAp,
    HalogenM: HalogenM,
    halt: halt,
    mkQuery: mkQuery,
    getSlots: getSlots,
    checkSlot: checkSlot,
    getRef: getRef,
    subscribe: subscribe,
    raise: raise,
    fork: fork,
    imapState: imapState,
    mapQuery: mapQuery,
    mapChildQuery: mapChildQuery,
    imapSlots: imapSlots,
    mapOutput: mapOutput,
    hoist: hoist,
    functorHalogenF: functorHalogenF,
    newtypeHalogenAp: newtypeHalogenAp,
    functorHalogenAp: functorHalogenAp,
    applyHalogenAp: applyHalogenAp,
    applicativeHalogenAp: applicativeHalogenAp,
    functorHalogenM: functorHalogenM,
    applyHalogenM: applyHalogenM,
    applicativeHalogenM: applicativeHalogenM,
    bindHalogenM: bindHalogenM,
    monadHalogenM: monadHalogenM,
    monadEffHalogenM: monadEffHalogenM,
    monadAffHalogenM: monadAffHalogenM,
    parallelHalogenM: parallelHalogenM,
    monadTransHalogenM: monadTransHalogenM,
    monadRecHalogenM: monadRecHalogenM,
    monadStateHalogenM: monadStateHalogenM,
    monadAskHalogenM: monadAskHalogenM,
    monadTellHalogenM: monadTellHalogenM
};

},{"../Control.Applicative":5,"../Control.Applicative.Free":4,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Monad":60,"../Control.Monad.Aff.Class":19,"../Control.Monad.Eff.Class":27,"../Control.Monad.Eff.Exception":31,"../Control.Monad.Free":45,"../Control.Monad.Reader.Class":49,"../Control.Monad.Rec.Class":51,"../Control.Monad.State.Class":54,"../Control.Monad.Trans.Class":57,"../Control.Monad.Writer.Class":58,"../Control.Parallel.Class":63,"../Control.Semigroupoid":66,"../Data.Bifunctor":129,"../Data.Coyoneda":143,"../Data.Foreign":169,"../Data.Function":172,"../Data.Functor":180,"../Data.List":230,"../Data.List.Types":229,"../Data.Maybe":234,"../Data.Newtype":244,"../Data.Tuple":298,"../Data.Unit":302,"../Halogen.Query.EventSource":338,"../Halogen.Query.ForkF":339,"../Halogen.Query.InputF":341,"../Prelude":358}],341:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Foreign = require("../Data.Foreign");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Prelude = require("../Prelude");
var RefLabel = function (x) {
    return x;
};
var RefUpdate = (function () {
    function RefUpdate(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    RefUpdate.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new RefUpdate(value0, value1, value2);
            };
        };
    };
    return RefUpdate;
})();
var Query = (function () {
    function Query(value0) {
        this.value0 = value0;
    };
    Query.create = function (value0) {
        return new Query(value0);
    };
    return Query;
})();
var ordRefLabel = Data_Ord.ordString;
var newtypeRefLabel = new Data_Newtype.Newtype(function (n) {
    return n;
}, RefLabel);
var eqRefLabel = Data_Eq.eqString;
var bifunctorInputF = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            if (v instanceof RefUpdate) {
                return new RefUpdate(v.value0, v.value1, f(v.value2));
            };
            if (v instanceof Query) {
                return new Query(g(v.value0));
            };
            throw new Error("Failed pattern match at Halogen.Query.InputF line 21, column 15 - line 23, column 27: " + [ v.constructor.name ]);
        };
    };
});
var functorInputF = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorInputF));
module.exports = {
    RefLabel: RefLabel,
    RefUpdate: RefUpdate,
    Query: Query,
    newtypeRefLabel: newtypeRefLabel,
    eqRefLabel: eqRefLabel,
    ordRefLabel: ordRefLabel,
    bifunctorInputF: bifunctorInputF,
    functorInputF: functorInputF
};

},{"../Data.Bifunctor":129,"../Data.Eq":157,"../Data.Foreign":169,"../Data.Functor":180,"../Data.Maybe":234,"../Data.Newtype":244,"../Data.Ord":251,"../Prelude":358}],342:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad_Aff_Class = require("../Control.Monad.Aff.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Parallel = require("../Control.Parallel");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM_HTML_Types = require("../DOM.HTML.Types");
var Data_Either = require("../Data.Either");
var Data_Foreign = require("../Data.Foreign");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Map = require("../Data.Map");
var Data_Maybe = require("../Data.Maybe");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Halogen_Component_ChildPath = require("../Halogen.Component.ChildPath");
var Halogen_Query_EventSource = require("../Halogen.Query.EventSource");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM");
var Halogen_Query_InputF = require("../Halogen.Query.InputF");
var Prelude = require("../Prelude");
var request = function (req) {
    return req(Control_Category.id(Control_Category.categoryFn));
};
var queryAll$prime = function (dictOrd) {
    return function (dictEq) {
        return function (path) {
            return function (q) {
                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_List.mapMaybe(Halogen_Component_ChildPath.prjSlot(path)))(Halogen_Query_HalogenM.getSlots))(function (v) {
                    return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Map.fromFoldable(dictOrd)(Data_List_Types.foldableList))(Control_Parallel.parTraverse(Halogen_Query_HalogenM.parallelHalogenM)(Data_List_Types.traversableList)(function (p) {
                        return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Tuple.Tuple.create(p))(Halogen_Query_HalogenM.mkQuery(dictEq)(Halogen_Component_ChildPath.injSlot(path)(p))(Halogen_Component_ChildPath.injQuery(path)(q)));
                    })(v));
                });
            };
        };
    };
};
var queryAll = function (dictOrd) {
    return queryAll$prime(dictOrd)(dictOrd.Eq0())(Halogen_Component_ChildPath.cpI);
};
var query = function (dictEq) {
    return function (p) {
        return function (q) {
            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.checkSlot(p))(function (v) {
                if (v) {
                    return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Maybe.Just.create)(Halogen_Query_HalogenM.mkQuery(dictEq)(p)(q));
                };
                return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value);
            });
        };
    };
};
var query$prime = function (dictEq) {
    return function (path) {
        return function (p) {
            return function (q) {
                return query(dictEq)(Halogen_Component_ChildPath.injSlot(path)(p))(Halogen_Component_ChildPath.injQuery(path)(q));
            };
        };
    };
};
var getHTMLElementRef = (function () {
    var go = function ($10) {
        return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(Control_Monad_Except.runExcept(DOM_HTML_Types.readHTMLElement($10)));
    };
    return function ($11) {
        return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(function (v) {
            return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(go)(v);
        })(Halogen_Query_HalogenM.getRef($11));
    };
})();
var action = function (act) {
    return act(Data_Unit.unit);
};
module.exports = {
    action: action,
    request: request,
    query: query,
    "query'": query$prime,
    queryAll: queryAll,
    "queryAll'": queryAll$prime,
    getHTMLElementRef: getHTMLElementRef
};

},{"../Control.Applicative":5,"../Control.Bind":11,"../Control.Category":12,"../Control.Monad.Aff.Class":19,"../Control.Monad.Eff.Class":27,"../Control.Monad.Except":42,"../Control.Monad.State.Class":54,"../Control.Monad.Trans.Class":57,"../Control.Parallel":64,"../Control.Semigroupoid":66,"../DOM.HTML.Types":103,"../Data.Either":154,"../Data.Foreign":169,"../Data.Function":172,"../Data.Functor":180,"../Data.List":230,"../Data.List.Types":229,"../Data.Map":231,"../Data.Maybe":234,"../Data.Tuple":298,"../Data.Unit":302,"../Halogen.Component.ChildPath":329,"../Halogen.Query.EventSource":338,"../Halogen.Query.HalogenM":340,"../Halogen.Query.InputF":341,"../Prelude":358}],343:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var DOM = require("../DOM");
var DOM_Event_EventTarget = require("../DOM.Event.EventTarget");
var DOM_Event_Types = require("../DOM.Event.Types");
var DOM_Node_Types = require("../DOM.Node.Types");
var Data_Eq = require("../Data.Eq");
var Data_Foreign = require("../Data.Foreign");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Data_Semigroup = require("../Data.Semigroup");
var Data_StrMap = require("../Data.StrMap");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Halogen_VDom = require("../Halogen.VDom");
var Halogen_VDom_Machine = require("../Halogen.VDom.Machine");
var Halogen_VDom_Types = require("../Halogen.VDom.Types");
var Halogen_VDom_Util = require("../Halogen.VDom.Util");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Created = (function () {
    function Created(value0) {
        this.value0 = value0;
    };
    Created.create = function (value0) {
        return new Created(value0);
    };
    return Created;
})();
var Removed = (function () {
    function Removed(value0) {
        this.value0 = value0;
    };
    Removed.create = function (value0) {
        return new Removed(value0);
    };
    return Removed;
})();
var Attribute = (function () {
    function Attribute(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Attribute.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Attribute(value0, value1, value2);
            };
        };
    };
    return Attribute;
})();
var Property = (function () {
    function Property(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Property.create = function (value0) {
        return function (value1) {
            return new Property(value0, value1);
        };
    };
    return Property;
})();
var Handler = (function () {
    function Handler(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Handler.create = function (value0) {
        return function (value1) {
            return new Handler(value0, value1);
        };
    };
    return Handler;
})();
var Ref = (function () {
    function Ref(value0) {
        this.value0 = value0;
    };
    Ref.create = function (value0) {
        return new Ref(value0);
    };
    return Ref;
})();
var unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;
var setProperty = Halogen_VDom_Util.unsafeSetAny;
var removeProperty = function (key, el) {
    var v = Data_Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));
    if (v === "string") {
        return Halogen_VDom_Util.unsafeSetAny(key, "", el);
    };
    if (key === "rowSpan") {
        return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
    };
    if (key === "colSpan") {
        return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
    };
    return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);
};
var propToStrKey = function (v) {
    if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) {
        return "attr/" + (v.value0.value0 + (":" + v.value1));
    };
    if (v instanceof Attribute) {
        return "attr/:" + v.value1;
    };
    if (v instanceof Property) {
        return "prop/" + v.value0;
    };
    if (v instanceof Handler) {
        return "handler/" + v.value0;
    };
    if (v instanceof Ref) {
        return "ref";
    };
    throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop line 179, column 16 - line 186, column 1: " + [ v.constructor.name ]);
};
var propFromString = Unsafe_Coerce.unsafeCoerce;
var propFromNumber = Unsafe_Coerce.unsafeCoerce;
var propFromInt = Unsafe_Coerce.unsafeCoerce;
var propFromBoolean = Unsafe_Coerce.unsafeCoerce;
var functorProp = new Data_Functor.Functor(function (f) {
    return function (v) {
        if (v instanceof Handler) {
            return new Handler(v.value0, Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value1));
        };
        if (v instanceof Ref) {
            return new Ref(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value0));
        };
        return v;
    };
});
var functorElemRef = new Data_Functor.Functor(function (f) {
    return function (v) {
        if (v instanceof Created) {
            return new Created(f(v.value0));
        };
        if (v instanceof Removed) {
            return new Removed(f(v.value0));
        };
        throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop line 48, column 1 - line 48, column 42: " + [ f.constructor.name, v.constructor.name ]);
    };
});
var buildProp = function (emit) {
    return function (el) {
        var removeProp = function (prevEvents) {
            return function (v, v1) {
                if (v1 instanceof Attribute) {
                    return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);
                };
                if (v1 instanceof Property) {
                    return removeProperty(v1.value0, el);
                };
                if (v1 instanceof Handler) {
                    var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);
                    return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);
                };
                if (v1 instanceof Ref) {
                    return Halogen_VDom_Util.effUnit;
                };
                throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop line 166, column 5 - line 176, column 21: " + [ v1.constructor.name ]);
            };
        };
        var mbEmit = Data_Maybe.maybe(Halogen_VDom_Util.effUnit)(emit);
        var done = function (ps) {
            var v = Data_StrMap.lookup("ref")(ps);
            if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref) {
                return mbEmit(v.value0.value0(new Removed(el)));
            };
            return Halogen_VDom_Util.effUnit;
        };
        var diffProp = function (prevEvents, events) {
            return function (v, v1, v11, v2) {
                if (v11 instanceof Attribute && v2 instanceof Attribute) {
                    var v3 = v11.value2 !== v2.value2;
                    if (v3) {
                        return function __do() {
                            Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el)();
                            return v2;
                        };
                    };
                    return Halogen_VDom_Util.effPure(v2);
                };
                if (v11 instanceof Property && v2 instanceof Property) {
                    var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);
                    if (v4) {
                        return Halogen_VDom_Util.effPure(v2);
                    };
                    if (v2.value0 === "value") {
                        var elVal = unsafeGetProperty("value", el);
                        var v5 = !Halogen_VDom_Util.refEq(elVal, v2.value1);
                        if (v5) {
                            return function __do() {
                                setProperty(v2.value0, v2.value1, el)();
                                return v2;
                            };
                        };
                        return Halogen_VDom_Util.effPure(v2);
                    };
                    return function __do() {
                        setProperty(v2.value0, v2.value1, el)();
                        return v2;
                    };
                };
                if (v11 instanceof Handler && v2 instanceof Handler) {
                    var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);
                    return function __do() {
                        Control_Monad_Eff_Ref.writeRef(Data_Tuple.snd(handler))(v2.value1)();
                        Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events)();
                        return v2;
                    };
                };
                return Halogen_VDom_Util.effPure(v2);
            };
        };
        var applyProp = function (events) {
            return function (v, v1, v2) {
                if (v2 instanceof Attribute) {
                    return function __do() {
                        Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el)();
                        return v2;
                    };
                };
                if (v2 instanceof Property) {
                    return function __do() {
                        setProperty(v2.value0, v2.value1, el)();
                        return v2;
                    };
                };
                if (v2 instanceof Handler) {
                    var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);
                    if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {
                        return function __do() {
                            Control_Monad_Eff_Ref.writeRef(Data_Tuple.snd(v3))(v2.value1)();
                            return v2;
                        };
                    };
                    return function __do() {
                        var v4 = Control_Monad_Eff_Ref.newRef(v2.value1)();
                        var listener = DOM_Event_EventTarget.eventListener(function (ev) {
                            return function __do() {
                                var v5 = Control_Monad_Eff_Ref.readRef(v4)();
                                return mbEmit(v5(ev))();
                            };
                        });
                        Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(listener, v4), events)();
                        Halogen_VDom_Util.addEventListener(v2.value0, listener, el)();
                        return v2;
                    };
                };
                if (v2 instanceof Ref) {
                    return function __do() {
                        mbEmit(v2.value0(new Created(el)))();
                        return v2;
                    };
                };
                throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop line 107, column 5 - line 130, column 15: " + [ v2.constructor.name ]);
            };
        };
        var patch = function (prevEvents, ps1) {
            return function (ps2) {
                return function __do() {
                    var v = Halogen_VDom_Util.newMutMap();
                    var onThis = removeProp(prevEvents);
                    var onThese = diffProp(prevEvents, v);
                    var onThat = applyProp(v);
                    var v1 = Halogen_VDom_Util.diffWithKeyAndIxE(ps1, ps2, propToStrKey, onThese, onThis, onThat)();
                    return new Halogen_VDom_Machine.Step(Data_Unit.unit, patch(Halogen_VDom_Util.unsafeFreeze(v), v1), done(v1));
                };
            };
        };
        var render = function (ps1) {
            return function __do() {
                var v = Halogen_VDom_Util.newMutMap();
                var v1 = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(v))();
                return new Halogen_VDom_Machine.Step(Data_Unit.unit, patch(Halogen_VDom_Util.unsafeFreeze(v), v1), done(v1));
            };
        };
        return render;
    };
};
module.exports = {
    Attribute: Attribute,
    Property: Property,
    Handler: Handler,
    Ref: Ref,
    Created: Created,
    Removed: Removed,
    propFromString: propFromString,
    propFromBoolean: propFromBoolean,
    propFromInt: propFromInt,
    propFromNumber: propFromNumber,
    buildProp: buildProp,
    functorProp: functorProp,
    functorElemRef: functorElemRef
};

},{"../Control.Applicative":5,"../Control.Bind":11,"../Control.Monad.Eff":39,"../Control.Monad.Eff.Ref":33,"../DOM":117,"../DOM.Event.EventTarget":73,"../DOM.Event.Types":75,"../DOM.Node.Types":113,"../Data.Eq":157,"../Data.Foreign":169,"../Data.Function.Uncurried":171,"../Data.Functor":180,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.Nullable":247,"../Data.Semigroup":271,"../Data.StrMap":280,"../Data.Tuple":298,"../Data.Unit":302,"../Halogen.VDom":350,"../Halogen.VDom.Machine":346,"../Halogen.VDom.Types":347,"../Halogen.VDom.Util":349,"../Prelude":358,"../Unsafe.Coerce":366}],344:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var DOM = require("../DOM");
var DOM_Node_Types = require("../DOM.Node.Types");
var Data_Array = require("../Data.Array");
var Data_Eq = require("../Data.Eq");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Data_Tuple = require("../Data.Tuple");
var Halogen_VDom_Machine = require("../Halogen.VDom.Machine");
var Halogen_VDom_Types = require("../Halogen.VDom.Types");
var Halogen_VDom_Util = require("../Halogen.VDom.Util");
var Prelude = require("../Prelude");
var VDomSpec = function (x) {
    return x;
};
var eqElemSpec = function (a, b) {
    if (Data_Eq.eq(Halogen_VDom_Types.eqElemName)(a.value1)(b.value1)) {
        if (a.value0 instanceof Data_Maybe.Just && (b.value0 instanceof Data_Maybe.Just && a.value0.value0 === b.value0.value0)) {
            return true;
        };
        if (a.value0 instanceof Data_Maybe.Nothing && b.value0 instanceof Data_Maybe.Nothing) {
            return true;
        };
        return false;
    };
    return false;
};
var buildWidget = function (v) {
    var patch = function (v1) {
        return function (v2) {
            if (v2 instanceof Halogen_VDom_Types.Grafted) {
                return patch(v1)(Halogen_VDom_Types.runGraft(v2.value0));
            };
            if (v2 instanceof Halogen_VDom_Types.Widget) {
                return function __do() {
                    var v3 = v1.value1(v2.value0)();
                    return new Halogen_VDom_Machine.Step(v3.value0, patch(v3), v3.value2);
                };
            };
            return function __do() {
                v1.value2();
                return buildVDom(v)(v2)();
            };
        };
    };
    var render = function (w) {
        return function __do() {
            var v1 = v.buildWidget(v)(w)();
            return new Halogen_VDom_Machine.Step(v1.value0, patch(v1), v1.value2);
        };
    };
    return render;
};
var buildVDom = function (spec) {
    var render = function (v) {
        if (v instanceof Halogen_VDom_Types.Text) {
            return buildText(spec)(v.value0);
        };
        if (v instanceof Halogen_VDom_Types.Elem) {
            return buildElem(spec)(v.value0)(v.value1);
        };
        if (v instanceof Halogen_VDom_Types.Keyed) {
            return buildKeyed(spec)(v.value0)(v.value1);
        };
        if (v instanceof Halogen_VDom_Types.Widget) {
            return buildWidget(spec)(v.value0);
        };
        if (v instanceof Halogen_VDom_Types.Grafted) {
            return buildVDom(spec)(Halogen_VDom_Types.runGraft(v.value0));
        };
        throw new Error("Failed pattern match at Halogen.VDom.DOM line 58, column 12 - line 63, column 44: " + [ v.constructor.name ]);
    };
    return render;
};
var buildText = function (v) {
    var done = function (node) {
        return function __do() {
            var v1 = Halogen_VDom_Util.unsafeParent(node);
            return Halogen_VDom_Util.removeChild(node, v1)();
        };
    };
    var patch = function (node, s1) {
        return function (v1) {
            if (v1 instanceof Halogen_VDom_Types.Grafted) {
                return patch(node, s1)(Halogen_VDom_Types.runGraft(v1.value0));
            };
            if (v1 instanceof Halogen_VDom_Types.Text) {
                var res = new Halogen_VDom_Machine.Step(node, patch(node, v1.value0), done(node));
                var v2 = s1 === v1.value0;
                if (v2) {
                    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(res);
                };
                return function __do() {
                    Halogen_VDom_Util.setTextContent(v1.value0, node)();
                    return res;
                };
            };
            return function __do() {
                done(node)();
                return buildVDom(v)(v1)();
            };
        };
    };
    var render = function (s) {
        return function __do() {
            var v1 = Halogen_VDom_Util.createTextNode(s, v.document)();
            return new Halogen_VDom_Machine.Step(v1, patch(v1, s), done(v1));
        };
    };
    return render;
};
var buildKeyed = function (v) {
    var done = function (node, attrs, steps) {
        return function __do() {
            var v1 = Halogen_VDom_Util.unsafeParent(node);
            Halogen_VDom_Util.removeChild(node, v1)();
            Halogen_VDom_Util.forInE(steps, function (v2, v3) {
                return v3.value2;
            })();
            return Halogen_VDom_Machine.halt(attrs)();
        };
    };
    var patch = function (node, attrs, v1, ch1, len1) {
        return function (v2) {
            if (v2 instanceof Halogen_VDom_Types.Grafted) {
                return patch(node, attrs, v1, ch1, len1)(Halogen_VDom_Types.runGraft(v2.value0));
            };
            if (v2 instanceof Halogen_VDom_Types.Keyed && eqElemSpec(v1, v2.value0)) {
                var v3 = Data_Array.length(v2.value1);
                if (len1 === 0 && v3 === 0) {
                    return function __do() {
                        var v5 = Halogen_VDom_Machine.step(attrs)(v2.value0.value2)();
                        return new Halogen_VDom_Machine.Step(node, patch(node, v5, v2.value0, ch1, 0), done(node, v5, ch1));
                    };
                };
                var onThis = function (k, v5) {
                    return v5.value2;
                };
                var onThese = function (k, ix$prime, v5, v6) {
                    return function __do() {
                        var v7 = v5.value1(v6.value1)();
                        Halogen_VDom_Util.insertChildIx(ix$prime, v7.value0, node)();
                        return v7;
                    };
                };
                var onThat = function (k, ix, v5) {
                    return function __do() {
                        var v6 = buildVDom(v)(v5.value1)();
                        Halogen_VDom_Util.insertChildIx(ix, v6.value0, node)();
                        return v6;
                    };
                };
                return function __do() {
                    var v5 = Halogen_VDom_Util.diffWithKeyAndIxE(ch1, v2.value1, Data_Tuple.fst, onThese, onThis, onThat)();
                    var v6 = Halogen_VDom_Machine.step(attrs)(v2.value0.value2)();
                    return new Halogen_VDom_Machine.Step(node, patch(node, v6, v2.value0, v5, v3), done(node, v6, v5));
                };
            };
            return function __do() {
                done(node, attrs, ch1)();
                return buildVDom(v)(v2)();
            };
        };
    };
    var render = function (v1) {
        return function (ch1) {
            return function __do() {
                var v2 = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(v1.value0), v1.value1, v.document)();
                var node = DOM_Node_Types.elementToNode(v2);
                var onChild = function (k, ix, v3) {
                    return function __do() {
                        var v4 = buildVDom(v)(v3.value1)();
                        Halogen_VDom_Util.insertChildIx(ix, v4.value0, node)();
                        return v4;
                    };
                };
                var v3 = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild)();
                var v4 = v.buildAttributes(v2)(v1.value2)();
                return new Halogen_VDom_Machine.Step(node, patch(node, v4, v1, v3, Data_Array.length(ch1)), done(node, v4, v3));
            };
        };
    };
    return render;
};
var buildElem = function (v) {
    var done = function (node, attrs, steps) {
        return function __do() {
            var v1 = Halogen_VDom_Util.unsafeParent(node);
            Halogen_VDom_Util.removeChild(node, v1)();
            Control_Monad_Eff.foreachE(steps)(Halogen_VDom_Machine.halt)();
            return Halogen_VDom_Machine.halt(attrs)();
        };
    };
    var patch = function (node, attrs, v1, ch1) {
        return function (v2) {
            if (v2 instanceof Halogen_VDom_Types.Grafted) {
                return patch(node, attrs, v1, ch1)(Halogen_VDom_Types.runGraft(v2.value0));
            };
            if (v2 instanceof Halogen_VDom_Types.Elem && eqElemSpec(v1, v2.value0)) {
                var v3 = Data_Array.length(v2.value1);
                var v4 = Data_Array.length(ch1);
                if (v4 === 0 && v3 === 0) {
                    return function __do() {
                        var v5 = Halogen_VDom_Machine.step(attrs)(v2.value0.value2)();
                        return new Halogen_VDom_Machine.Step(node, patch(node, v5, v2.value0, ch1), done(node, v5, ch1));
                    };
                };
                var onThis = function (ix, v5) {
                    return v5.value2;
                };
                var onThese = function (ix, v5, vdom) {
                    return function __do() {
                        var v6 = v5.value1(vdom)();
                        Halogen_VDom_Util.insertChildIx(ix, v6.value0, node)();
                        return v6;
                    };
                };
                var onThat = function (ix, vdom) {
                    return function __do() {
                        var v5 = buildVDom(v)(vdom)();
                        Halogen_VDom_Util.insertChildIx(ix, v5.value0, node)();
                        return v5;
                    };
                };
                return function __do() {
                    var v5 = Halogen_VDom_Util.diffWithIxE(ch1, v2.value1, onThese, onThis, onThat)();
                    var v6 = Halogen_VDom_Machine.step(attrs)(v2.value0.value2)();
                    return new Halogen_VDom_Machine.Step(node, patch(node, v6, v2.value0, v5), done(node, v6, v5));
                };
            };
            return function __do() {
                done(node, attrs, ch1)();
                return buildVDom(v)(v2)();
            };
        };
    };
    var render = function (v1) {
        return function (ch1) {
            return function __do() {
                var v2 = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(v1.value0), v1.value1, v.document)();
                var node = DOM_Node_Types.elementToNode(v2);
                var onChild = function (ix, child) {
                    return function __do() {
                        var v3 = buildVDom(v)(child)();
                        Halogen_VDom_Util.insertChildIx(ix, v3.value0, node)();
                        return v3;
                    };
                };
                var v3 = Halogen_VDom_Util.forE(ch1, onChild)();
                var v4 = v.buildAttributes(v2)(v1.value2)();
                return new Halogen_VDom_Machine.Step(node, patch(node, v4, v1, v3), done(node, v4, v3));
            };
        };
    };
    return render;
};
module.exports = {
    VDomSpec: VDomSpec,
    buildVDom: buildVDom,
    buildText: buildText,
    buildElem: buildElem,
    buildKeyed: buildKeyed,
    buildWidget: buildWidget
};

},{"../Control.Applicative":5,"../Control.Bind":11,"../Control.Monad.Eff":39,"../DOM":117,"../DOM.Node.Types":113,"../Data.Array":122,"../Data.Eq":157,"../Data.Function.Uncurried":171,"../Data.Maybe":234,"../Data.Nullable":247,"../Data.Tuple":298,"../Halogen.VDom.Machine":346,"../Halogen.VDom.Types":347,"../Halogen.VDom.Util":349,"../Prelude":358}],345:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var DOM = require("../DOM");
var DOM_HTML = require("../DOM.HTML");
var DOM_HTML_Types = require("../DOM.HTML.Types");
var DOM_HTML_Window = require("../DOM.HTML.Window");
var DOM_Node_Node = require("../DOM.Node.Node");
var DOM_Node_Types = require("../DOM.Node.Types");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Unit = require("../Data.Unit");
var Halogen_Aff_Driver = require("../Halogen.Aff.Driver");
var Halogen_Aff_Driver_State = require("../Halogen.Aff.Driver.State");
var Halogen_Aff_Effects = require("../Halogen.Aff.Effects");
var Halogen_Component = require("../Halogen.Component");
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Halogen_Query_InputF = require("../Halogen.Query.InputF");
var Halogen_VDom = require("../Halogen.VDom");
var Halogen_VDom_DOM = require("../Halogen.VDom.DOM");
var Halogen_VDom_DOM_Prop = require("../Halogen.VDom.DOM.Prop");
var Halogen_VDom_Machine = require("../Halogen.VDom.Machine");
var Prelude = require("../Prelude");
var Unsafe_Reference = require("../Unsafe.Reference");
var RenderState = function (x) {
    return x;
};
var substInParent = function (v) {
    return function (v1) {
        return function (v2) {
            if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(DOM_Node_Node.insertBefore(v)(v1.value0)(v2.value0));
            };
            if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) {
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(DOM_Node_Node.appendChild(v)(v2.value0));
            };
            return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
        };
    };
};
var removeChild = function (v) {
    return function __do() {
        var v1 = DOM_Node_Node.parentNode(v.node)();
        return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(function (pn) {
            return DOM_Node_Node.removeChild(v.node)(pn);
        })(v1)();
    };
};
var mkSpec = function (handler) {
    return function (renderChildRef) {
        return function (document) {
            var getNode = Halogen_Aff_Driver_State.unRenderStateX(function (v) {
                return v.node;
            });
            var done = Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
            var patch = function (slot) {
                return function __do() {
                    var v = Control_Monad_Eff_Ref.readRef(renderChildRef)();
                    var v1 = v(slot)();
                    var node = getNode(v1);
                    return new Halogen_VDom_Machine.Step(node, patch, done);
                };
            };
            var buildWidget = function (spec) {
                return function (slot) {
                    return function __do() {
                        var v = Control_Monad_Eff_Ref.readRef(renderChildRef)();
                        var v1 = v(slot)();
                        var node = getNode(v1);
                        return new Halogen_VDom_Machine.Step(node, patch, done);
                    };
                };
            };
            var buildAttributes = Halogen_VDom_DOM_Prop.buildProp(handler);
            return {
                buildWidget: buildWidget,
                buildAttributes: buildAttributes,
                document: document
            };
        };
    };
};
var renderSpec = function (document) {
    return function (container) {
        var render = function (handler) {
            return function (child) {
                return function (v) {
                    return function (v1) {
                        if (v1 instanceof Data_Maybe.Nothing) {
                            return function __do() {
                                var v2 = Control_Monad_Eff_Ref.newRef(child)();
                                var spec = mkSpec(handler)(v2)(document);
                                var v3 = Halogen_VDom_DOM.buildVDom(spec)(v)();
                                var node = Halogen_VDom_Machine.extract(v3);
                                Data_Functor["void"](Control_Monad_Eff.functorEff)(DOM_Node_Node.appendChild(node)(DOM_HTML_Types.htmlElementToNode(container)))();
                                return {
                                    machine: v3,
                                    node: node,
                                    renderChildRef: v2
                                };
                            };
                        };
                        if (v1 instanceof Data_Maybe.Just) {
                            return function __do() {
                                Control_Monad_Eff_Ref.writeRef(v1.value0.renderChildRef)(child)();
                                var v2 = DOM_Node_Node.parentNode(v1.value0.node)();
                                var v3 = DOM_Node_Node.nextSibling(v1.value0.node)();
                                var v4 = Halogen_VDom_Machine.step(v1.value0.machine)(v)();
                                var newNode = Halogen_VDom_Machine.extract(v4);
                                Control_Applicative.when(Control_Monad_Eff.applicativeEff)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(v3)(v2))();
                                return {
                                    machine: v4,
                                    node: newNode,
                                    renderChildRef: v1.value0.renderChildRef
                                };
                            };
                        };
                        throw new Error("Failed pattern match at Halogen.VDom.Driver line 121, column 5 - line 137, column 80: " + [ v1.constructor.name ]);
                    };
                };
            };
        };
        return {
            render: render,
            renderChild: Control_Category.id(Control_Category.categoryFn),
            removeChild: removeChild
        };
    };
};
var runUI = function (component) {
    return function (i) {
        return function (element) {
            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Data_Functor.map(Control_Monad_Eff.functorEff)(DOM_HTML_Types.htmlDocumentToDocument)(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(DOM_HTML_Window.document)(DOM_HTML.window))))(function (v) {
                return Halogen_Aff_Driver.runUI(renderSpec(v)(element))(component)(i);
            });
        };
    };
};
module.exports = {
    runUI: runUI
};

},{"../Control.Applicative":5,"../Control.Bind":11,"../Control.Category":12,"../Control.Monad.Aff":22,"../Control.Monad.Eff":39,"../Control.Monad.Eff.Class":27,"../Control.Monad.Eff.Ref":33,"../DOM":117,"../DOM.HTML":107,"../DOM.HTML.Types":103,"../DOM.HTML.Window":105,"../DOM.Node.Node":109,"../DOM.Node.Types":113,"../Data.Foldable":164,"../Data.Function":172,"../Data.Functor":180,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.Unit":302,"../Halogen.Aff.Driver":324,"../Halogen.Aff.Driver.State":323,"../Halogen.Aff.Effects":325,"../Halogen.Component":330,"../Halogen.HTML.Core":333,"../Halogen.Query.InputF":341,"../Halogen.VDom":350,"../Halogen.VDom.DOM":344,"../Halogen.VDom.DOM.Prop":343,"../Halogen.VDom.Machine":346,"../Prelude":358,"../Unsafe.Reference":368}],346:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor = require("../Data.Functor");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Prelude = require("../Prelude");
var Step = (function () {
    function Step(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Step.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Step(value0, value1, value2);
            };
        };
    };
    return Step;
})();
var stepper = function (dictFunctor) {
    return function (f) {
        return function (h) {
            return function (a) {
                var next = function (b) {
                    return new Step(b, stepper(dictFunctor)(f)(h), h);
                };
                return Data_Functor.map(dictFunctor)(next)(f(a));
            };
        };
    };
};
var step = function (v) {
    return v.value1;
};
var never = function (dictApplicative) {
    return function (a) {
        return Control_Applicative.pure(dictApplicative)(new Step(Data_Void.absurd(a), never(dictApplicative), Control_Applicative.pure(dictApplicative)(Data_Unit.unit)));
    };
};
var loop = function (dictApplicative) {
    return function (f) {
        return function (g) {
            return function (s) {
                return function (a) {
                    var next = function (s$prime) {
                        return new Step(Data_Unit.unit, loop(dictApplicative)(f)(g)(s$prime), g(s$prime));
                    };
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(next)(f(s)(a));
                };
            };
        };
    };
};
var halt = function (v) {
    return v.value2;
};
var functorStep = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return new Step(f(v.value0), function ($32) {
                return Data_Functor.map(dictFunctor)(Data_Functor.map(functorStep(dictFunctor))(f))(v.value1($32));
            }, v.value2);
        };
    });
};
var fold = function (dictApplicative) {
    return function (f) {
        return function (g) {
            return function (s) {
                return function (a) {
                    var next = function (v) {
                        return new Step(v.value1, fold(dictApplicative)(f)(g)(v.value0), g(v.value0));
                    };
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(next)(f(s)(a));
                };
            };
        };
    };
};
var extract = function (v) {
    return v.value0;
};
var constantly = function (dictApplicative) {
    return function (x) {
        return function (v) {
            return Control_Applicative.pure(dictApplicative)(new Step(x, constantly(dictApplicative)(x), Control_Applicative.pure(dictApplicative)(Data_Unit.unit)));
        };
    };
};
module.exports = {
    Step: Step,
    extract: extract,
    step: step,
    halt: halt,
    fold: fold,
    loop: loop,
    stepper: stepper,
    constantly: constantly,
    never: never,
    functorStep: functorStep
};

},{"../Control.Applicative":5,"../Control.Semigroupoid":66,"../Data.Functor":180,"../Data.Tuple":298,"../Data.Unit":302,"../Data.Void":305,"../Prelude":358}],347:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Namespace = function (x) {
    return x;
};
var ElemName = function (x) {
    return x;
};
var ElemSpec = (function () {
    function ElemSpec(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    ElemSpec.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new ElemSpec(value0, value1, value2);
            };
        };
    };
    return ElemSpec;
})();
var Text = (function () {
    function Text(value0) {
        this.value0 = value0;
    };
    Text.create = function (value0) {
        return new Text(value0);
    };
    return Text;
})();
var Elem = (function () {
    function Elem(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Elem.create = function (value0) {
        return function (value1) {
            return new Elem(value0, value1);
        };
    };
    return Elem;
})();
var Keyed = (function () {
    function Keyed(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Keyed.create = function (value0) {
        return function (value1) {
            return new Keyed(value0, value1);
        };
    };
    return Keyed;
})();
var Widget = (function () {
    function Widget(value0) {
        this.value0 = value0;
    };
    Widget.create = function (value0) {
        return new Widget(value0);
    };
    return Widget;
})();
var Grafted = (function () {
    function Grafted(value0) {
        this.value0 = value0;
    };
    Grafted.create = function (value0) {
        return new Grafted(value0);
    };
    return Grafted;
})();
var Graft = (function () {
    function Graft(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Graft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Graft(value0, value1, value2);
            };
        };
    };
    return Graft;
})();
var unGraft = function (f) {
    return function ($124) {
        return f($124);
    };
};
var ordNamespace = Data_Ord.ordString;
var ordElemName = Data_Ord.ordString;
var newtypeNamespace = new Data_Newtype.Newtype(function (n) {
    return n;
}, Namespace);
var newtypeElemName = new Data_Newtype.Newtype(function (n) {
    return n;
}, ElemName);
var graft = Unsafe_Coerce.unsafeCoerce;
var genericNamespace = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Halogen.VDom.Types.Namespace" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Namespace))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Halogen.VDom.Types.Namespace", [ {
        sigConstructor: "Halogen.VDom.Types.Namespace",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Halogen.VDom.Types.Namespace", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v);
    } ]);
});
var genericElemName = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Halogen.VDom.Types.ElemName" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(ElemName))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Halogen.VDom.Types.ElemName", [ {
        sigConstructor: "Halogen.VDom.Types.ElemName",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Halogen.VDom.Types.ElemName", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v);
    } ]);
});
var genericElemSpec = function (dictGeneric) {
    return new Data_Generic.Generic(function (v) {
        if (v instanceof Data_Generic.SProd && (v.value0 === "Halogen.VDom.Types.ElemSpec" && v.value1.length === 3)) {
            return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(ElemSpec.create))(Data_Generic.fromSpine(Data_Generic.genericMaybe(genericNamespace))(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(genericElemName)(v["value1"][1](Data_Unit.unit))))(Data_Generic.fromSpine(dictGeneric)(v["value1"][2](Data_Unit.unit)));
        };
        return Data_Maybe.Nothing.value;
    }, function ($dollarq) {
        return new Data_Generic.SigProd("Halogen.VDom.Types.ElemSpec", [ {
            sigConstructor: "Halogen.VDom.Types.ElemSpec",
            sigValues: [ function ($dollarq1) {
                return Data_Generic.toSignature(Data_Generic.genericMaybe(genericNamespace))(Data_Generic.anyProxy);
            }, function ($dollarq1) {
                return Data_Generic.toSignature(genericElemName)(Data_Generic.anyProxy);
            }, function ($dollarq1) {
                return Data_Generic.toSignature(dictGeneric)(Data_Generic.anyProxy);
            } ]
        } ]);
    }, function (v) {
        return new Data_Generic.SProd("Halogen.VDom.Types.ElemSpec", [ function ($dollarq) {
            return Data_Generic.toSpine(Data_Generic.genericMaybe(genericNamespace))(v.value0);
        }, function ($dollarq) {
            return Data_Generic.toSpine(genericElemName)(v.value1);
        }, function ($dollarq) {
            return Data_Generic.toSpine(dictGeneric)(v.value2);
        } ]);
    });
};
var functorGraft = new Data_Functor.Functor(function (g) {
    return unGraft(function (v) {
        return graft(new Graft(v.value0, function ($125) {
            return g(v.value1($125));
        }, v.value2));
    });
});
var functorVDom = new Data_Functor.Functor(function (g) {
    return function (v) {
        if (v instanceof Text) {
            return new Text(v.value0);
        };
        if (v instanceof Grafted) {
            return new Grafted(Data_Functor.map(functorGraft)(g)(v.value0));
        };
        return new Grafted(graft(new Graft(Control_Category.id(Control_Category.categoryFn), g, v)));
    };
});
var functorElemSpec = new Data_Functor.Functor(function (f) {
    return function (v) {
        return new ElemSpec(v.value0, v.value1, f(v.value2));
    };
});
var eqNamespace = Data_Eq.eqString;
var eqElemName = Data_Eq.eqString;
var eqElemSpec = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            return Data_Eq.eq(Data_Maybe.eqMaybe(eqNamespace))(x.value0)(y.value0) && Data_Eq.eq(eqElemName)(x.value1)(y.value1) && Data_Eq.eq(dictEq)(x.value2)(y.value2);
        };
    });
};
var ordElemSpec = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqElemSpec(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            var v = Data_Ord.compare(Data_Maybe.ordMaybe(ordNamespace))(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            var v1 = Data_Ord.compare(ordElemName)(x.value1)(y.value1);
            if (v1 instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v1 instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(dictOrd)(x.value2)(y.value2);
        };
    });
};
var bifunctorGraft = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return unGraft(function (v) {
            return graft(new Graft(function ($126) {
                return f(v.value0($126));
            }, function ($127) {
                return g(v.value1($127));
            }, v.value2));
        });
    };
});
var bifunctorVDom = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            if (v instanceof Text) {
                return new Text(v.value0);
            };
            if (v instanceof Grafted) {
                return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(f)(g)(v.value0));
            };
            return new Grafted(graft(new Graft(f, g, v)));
        };
    };
});
var runGraft = unGraft(function (v) {
    var go = function (v2) {
        if (v2 instanceof Text) {
            return new Text(v2.value0);
        };
        if (v2 instanceof Elem) {
            return new Elem(Data_Functor.map(functorElemSpec)(v.value0)(v2.value0), Data_Functor.map(Data_Functor.functorArray)(go)(v2.value1));
        };
        if (v2 instanceof Keyed) {
            return new Keyed(Data_Functor.map(functorElemSpec)(v.value0)(v2.value0), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value1));
        };
        if (v2 instanceof Widget) {
            return new Widget(v.value1(v2.value0));
        };
        if (v2 instanceof Grafted) {
            return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));
        };
        throw new Error("Failed pattern match at Halogen.VDom.Types line 75, column 7 - line 75, column 27: " + [ v2.constructor.name ]);
    };
    return go(v.value2);
});
module.exports = {
    Text: Text,
    Elem: Elem,
    Keyed: Keyed,
    Widget: Widget,
    Grafted: Grafted,
    Graft: Graft,
    graft: graft,
    unGraft: unGraft,
    runGraft: runGraft,
    ElemSpec: ElemSpec,
    ElemName: ElemName,
    Namespace: Namespace,
    functorVDom: functorVDom,
    bifunctorVDom: bifunctorVDom,
    functorGraft: functorGraft,
    bifunctorGraft: bifunctorGraft,
    eqElemSpec: eqElemSpec,
    ordElemSpec: ordElemSpec,
    genericElemSpec: genericElemSpec,
    functorElemSpec: functorElemSpec,
    newtypeElemName: newtypeElemName,
    eqElemName: eqElemName,
    ordElemName: ordElemName,
    genericElemName: genericElemName,
    newtypeNamespace: newtypeNamespace,
    eqNamespace: eqNamespace,
    ordNamespace: ordNamespace,
    genericNamespace: genericNamespace
};

},{"../Control.Apply":7,"../Control.Category":12,"../Control.Semigroupoid":66,"../Data.Bifunctor":129,"../Data.Eq":157,"../Data.Functor":180,"../Data.Generic":186,"../Data.HeytingAlgebra":188,"../Data.Maybe":234,"../Data.Newtype":244,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Tuple":298,"../Data.Unit":302,"../Prelude":358,"../Unsafe.Coerce":366}],348:[function(require,module,exports){
"use strict";

exports.unsafeGetAny = function (key, obj) {
  return obj[key];
};

exports.unsafeHasAny = function (key, obj) {
  return obj.hasOwnProperty(key);
};

exports.unsafeSetAny = function (key, val, obj) {
  return function () {
    obj[key] = val;
  };
};

exports.unsafeDeleteAny = function (key, obj) {
  return function () {
    delete obj[key];
  };
};

exports.forE = function (a, f) {
  return function () {
    var b = [];
    for (var i = 0; i < a.length; i++) {
      b.push(f(i, a[i])());
    }
    return b;
  };
};

exports.forInE = function (o, f) {
  return function () {
    var ks = Object.keys(o);
    for (var i = 0; i < ks.length; i++) {
      var k = ks[i];
      f(k, o[k])();
    }
  };
};

exports.replicateE = function (n, f) {
  return function () {
    for (var i = 0; i < n; i++) {
      f();
    }
  };
};

exports.diffWithIxE = function (a1, a2, f1, f2, f3) {
  return function () {
    var a3 = [];
    var l1 = a1.length;
    var l2 = a2.length;
    var i  = 0;
    while (1) {
      if (i < l1) {
        if (i < l2) {
          a3.push(f1(i, a1[i], a2[i])());
        } else {
          f2(i, a1[i])();
        }
      } else if (i < l2) {
        a3.push(f3(i, a2[i])());
      } else {
        break;
      }
      i++;
    }
    return a3;
  };
};

exports.strMapWithIxE = function (as, fk, f) {
  return function () {
    var o = {};
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      o[k] = f(k, i, a)();
    }
    return o;
  };
};

exports.diffWithKeyAndIxE = function (o1, as, fk, f1, f2, f3) {
  return function () {
    var o2 = {};
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      if (o1.hasOwnProperty(k)) {
        o2[k] = f1(k, i, o1[k], a)();
      } else {
        o2[k] = f3(k, i, a)();
      }
    }
    for (var k in o1) {
      if (k in o2) {
        continue;
      }
      f2(k, o1[k])();
    }
    return o2;
  };
};

exports.refEq = function (a, b) {
  return a === b;
};

exports.createTextNode = function (s, doc) {
  return function () {
    return doc.createTextNode(s);
  };
};

exports.setTextContent = function (s, n) {
  return function () {
    n.textContent = s;
  };
};

exports.createElement = function (ns, name, doc) {
  return function () {
    if (ns != null) {
      return doc.createElementNS(ns, name);
    } else {
      return doc.createElement(name)
    }
  };
};

exports.insertChildIx = function (i, a, b) {
  return function () {
    var n = b.childNodes.item(i) || null;
    if (n !== a) {
      b.insertBefore(a, n);
    }
  };
};

exports.removeChild = function (a, b) {
  return function () {
    if (b && a.parentNode === b) {
      b.removeChild(a);
    }
  };
};

exports.unsafeParent = function (a) {
  return a.parentNode;
};

exports.setAttribute = function (ns, attr, val, el) {
  return function () {
    if (ns != null) {
      el.setAttributeNS(ns, attr, val);
    } else {
      el.setAttribute(attr, val);
    }
  };
};

exports.removeAttribute = function (ns, attr, el) {
  return function () {
    if (ns != null) {
      el.removeAttributeNS(ns, attr);
    } else {
      el.removeAttribute(attr);
    }
  };
};

exports.addEventListener = function (ev, listener, el) {
  return function () {
    el.addEventListener(ev, listener, false);
  };
};

exports.removeEventListener = function (ev, listener, el) {
  return function () {
    el.removeEventListener(ev, listener, false);
  };
};

exports.jsUndefined = void 0;

},{}],349:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var DOM = require("../DOM");
var DOM_Event_EventTarget = require("../DOM.Event.EventTarget");
var DOM_Node_Types = require("../DOM.Node.Types");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Nullable = require("../Data.Nullable");
var Data_StrMap = require("../Data.StrMap");
var Data_StrMap_ST = require("../Data.StrMap.ST");
var Data_Unit = require("../Data.Unit");
var Halogen_VDom_Types = require("../Halogen.VDom.Types");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var unsafeLookup = $foreign.unsafeGetAny;
var unsafeFreeze = Unsafe_Coerce.unsafeCoerce;
var pokeMutMap = $foreign.unsafeSetAny;
var newMutMap = Data_StrMap_ST["new"];
var effUnit = Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
var effPure = Control_Applicative.pure(Control_Monad_Eff.applicativeEff);
var deleteMutMap = $foreign.unsafeDeleteAny;
module.exports = {
    effPure: effPure,
    effUnit: effUnit,
    newMutMap: newMutMap,
    pokeMutMap: pokeMutMap,
    deleteMutMap: deleteMutMap,
    unsafeFreeze: unsafeFreeze,
    unsafeLookup: unsafeLookup,
    unsafeGetAny: $foreign.unsafeGetAny,
    unsafeHasAny: $foreign.unsafeHasAny,
    unsafeSetAny: $foreign.unsafeSetAny,
    unsafeDeleteAny: $foreign.unsafeDeleteAny,
    forE: $foreign.forE,
    forInE: $foreign.forInE,
    replicateE: $foreign.replicateE,
    diffWithIxE: $foreign.diffWithIxE,
    diffWithKeyAndIxE: $foreign.diffWithKeyAndIxE,
    strMapWithIxE: $foreign.strMapWithIxE,
    refEq: $foreign.refEq,
    createTextNode: $foreign.createTextNode,
    setTextContent: $foreign.setTextContent,
    createElement: $foreign.createElement,
    insertChildIx: $foreign.insertChildIx,
    removeChild: $foreign.removeChild,
    unsafeParent: $foreign.unsafeParent,
    setAttribute: $foreign.setAttribute,
    removeAttribute: $foreign.removeAttribute,
    addEventListener: $foreign.addEventListener,
    removeEventListener: $foreign.removeEventListener,
    jsUndefined: $foreign.jsUndefined
};

},{"../Control.Applicative":5,"../Control.Monad.Eff":39,"../Control.Monad.Eff.Ref":33,"../DOM":117,"../DOM.Event.EventTarget":73,"../DOM.Node.Types":113,"../Data.Function.Uncurried":171,"../Data.Nullable":247,"../Data.StrMap":280,"../Data.StrMap.ST":278,"../Data.Unit":302,"../Halogen.VDom.Types":347,"../Prelude":358,"../Unsafe.Coerce":366,"./foreign":348}],350:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Halogen_VDom_DOM = require("../Halogen.VDom.DOM");
var Halogen_VDom_Machine = require("../Halogen.VDom.Machine");
var Halogen_VDom_Types = require("../Halogen.VDom.Types");
module.exports = {};

},{"../Halogen.VDom.DOM":344,"../Halogen.VDom.Machine":346,"../Halogen.VDom.Types":347}],351:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Coroutine = require("../Control.Coroutine");
var Data_Lazy = require("../Data.Lazy");
var Halogen_Component = require("../Halogen.Component");
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties");
var Halogen_Query = require("../Halogen.Query");
var Prelude = require("../Prelude");
module.exports = {};

},{"../Control.Coroutine":14,"../Data.Lazy":197,"../Halogen.Component":330,"../Halogen.HTML.Core":333,"../Halogen.HTML.Properties":336,"../Halogen.Query":342,"../Prelude":358}],352:[function(require,module,exports){
"use strict";

// module Math

exports.abs = Math.abs;

exports.acos = Math.acos;

exports.asin = Math.asin;

exports.atan = Math.atan;

exports.atan2 = function (y) {
  return function (x) {
    return Math.atan2(y, x);
  };
};

exports.ceil = Math.ceil;

exports.cos = Math.cos;

exports.exp = Math.exp;

exports.floor = Math.floor;

exports.trunc = Math.trunc || function (n) {
  return n < 0 ? Math.ceil(n) : Math.floor(n);
};

exports.log = Math.log;

exports.max = function (n1) {
  return function (n2) {
    return Math.max(n1, n2);
  };
};

exports.min = function (n1) {
  return function (n2) {
    return Math.min(n1, n2);
  };
};

exports.pow = function (n) {
  return function (p) {
    return Math.pow(n, p);
  };
};

exports.remainder = function (n) {
  return function (m) {
    return n % m;
  };
};

exports.round = Math.round;

exports.sin = Math.sin;

exports.sqrt = Math.sqrt;

exports.tan = Math.tan;

exports.e = Math.E;

exports.ln2 = Math.LN2;

exports.ln10 = Math.LN10;

exports.log2e = Math.LOG2E;

exports.log10e = Math.LOG10E;

exports.pi = Math.PI;

exports.tau = 2 * Math.PI;

exports.sqrt1_2 = Math.SQRT1_2;

exports.sqrt2 = Math.SQRT2;

},{}],353:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    abs: $foreign.abs,
    acos: $foreign.acos,
    asin: $foreign.asin,
    atan: $foreign.atan,
    atan2: $foreign.atan2,
    ceil: $foreign.ceil,
    cos: $foreign.cos,
    exp: $foreign.exp,
    floor: $foreign.floor,
    log: $foreign.log,
    max: $foreign.max,
    min: $foreign.min,
    pow: $foreign.pow,
    round: $foreign.round,
    sin: $foreign.sin,
    sqrt: $foreign.sqrt,
    tan: $foreign.tan,
    trunc: $foreign.trunc,
    remainder: $foreign.remainder,
    e: $foreign.e,
    ln2: $foreign.ln2,
    ln10: $foreign.ln10,
    log2e: $foreign.log2e,
    log10e: $foreign.log10e,
    pi: $foreign.pi,
    tau: $foreign.tau,
    sqrt1_2: $foreign.sqrt1_2,
    sqrt2: $foreign.sqrt2
};

},{"./foreign":352}],354:[function(require,module,exports){
"use strict";

// module Partial.Unsafe

exports.unsafePartial = function (f) {
  return f();
};

},{}],355:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Partial = require("../Partial");
var unsafePartialBecause = function (v) {
    return function (x) {
        return $foreign.unsafePartial(function (dictPartial) {
            return x(dictPartial);
        });
    };
};
var unsafeCrashWith = function (msg) {
    return $foreign.unsafePartial(function (dictPartial) {
        return Partial.crashWith(dictPartial)(msg);
    });
};
module.exports = {
    unsafePartialBecause: unsafePartialBecause,
    unsafeCrashWith: unsafeCrashWith,
    unsafePartial: $foreign.unsafePartial
};

},{"../Partial":357,"./foreign":354}],356:[function(require,module,exports){
"use strict";

// module Partial

exports.crashWith = function () {
  return function (msg) {
    throw new Error(msg);
  };
};

},{}],357:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var crash = function (dictPartial) {
    return $foreign.crashWith(dictPartial)("Partial.crash: partial function");
};
module.exports = {
    crash: crash,
    crashWith: $foreign.crashWith
};

},{"./foreign":356}],358:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_DivisionRing = require("../Data.DivisionRing");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Field = require("../Data.Field");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_NaturalTransformation = require("../Data.NaturalTransformation");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
module.exports = {};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Category":12,"../Control.Monad":60,"../Control.Semigroupoid":66,"../Data.Boolean":131,"../Data.BooleanAlgebra":132,"../Data.Bounded":134,"../Data.CommutativeRing":141,"../Data.DivisionRing":152,"../Data.Eq":157,"../Data.EuclideanRing":159,"../Data.Field":161,"../Data.Function":172,"../Data.Functor":180,"../Data.HeytingAlgebra":188,"../Data.NaturalTransformation":243,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Data.Unit":302,"../Data.Void":305}],359:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Type_Proxy = require("../Type.Proxy");
var BProxy = (function () {
    function BProxy() {

    };
    BProxy.value = new BProxy();
    return BProxy;
})();
var IsBoolean = function (reflectBoolean) {
    this.reflectBoolean = reflectBoolean;
};
var And = {};
var Or = {};
var Not = {};
var If = {};
var reflectBoolean = function (dict) {
    return dict.reflectBoolean;
};
var orTrue = Or;
var orFalse = Or;
var or = function (dictOr) {
    return function (v) {
        return function (v1) {
            return BProxy.value;
        };
    };
};
var notTrue = Not;
var notFalse = Not;
var not = function (dictNot) {
    return function (v) {
        return BProxy.value;
    };
};
var isBooleanTrue = new IsBoolean(function (v) {
    return true;
});
var isBooleanFalse = new IsBoolean(function (v) {
    return false;
});
var reifyBoolean = function (v) {
    return function (f) {
        if (v) {
            return f(isBooleanTrue)(BProxy.value);
        };
        if (!v) {
            return f(isBooleanFalse)(BProxy.value);
        };
        throw new Error("Failed pattern match at Type.Data.Boolean line 36, column 1 - line 36, column 83: " + [ v.constructor.name, f.constructor.name ]);
    };
};
var if_ = function (dictIf) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                return Type_Proxy["Proxy"].value;
            };
        };
    };
};
var ifTrue = If;
var ifFalse = If;
var andTrue = And;
var andFalse = And;
var and = function (dictAnd) {
    return function (v) {
        return function (v1) {
            return BProxy.value;
        };
    };
};
module.exports = {
    BProxy: BProxy,
    IsBoolean: IsBoolean,
    reflectBoolean: reflectBoolean,
    reifyBoolean: reifyBoolean,
    And: And,
    and: and,
    Or: Or,
    or: or,
    Not: Not,
    not: not,
    If: If,
    if_: if_,
    isBooleanTrue: isBooleanTrue,
    isBooleanFalse: isBooleanFalse,
    andTrue: andTrue,
    andFalse: andFalse,
    orTrue: orTrue,
    orFalse: orFalse,
    notTrue: notTrue,
    notFalse: notFalse,
    ifTrue: ifTrue,
    ifFalse: ifFalse
};

},{"../Type.Proxy":363}],360:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Ordering = require("../Data.Ordering");
var Type_Data_Boolean = require("../Type.Data.Boolean");
var OProxy = (function () {
    function OProxy() {

    };
    OProxy.value = new OProxy();
    return OProxy;
})();
var IsOrdering = function (reflectOrdering) {
    this.reflectOrdering = reflectOrdering;
};
var AppendOrdering = {};
var InvertOrdering = {};
var Equals = {};
var reflectOrdering = function (dict) {
    return dict.reflectOrdering;
};
var isOrderingLT = new IsOrdering(function (v) {
    return Data_Ordering.LT.value;
});
var isOrderingGT = new IsOrdering(function (v) {
    return Data_Ordering.GT.value;
});
var isOrderingEQ = new IsOrdering(function (v) {
    return Data_Ordering.EQ.value;
});
var reifyOrdering = function (v) {
    return function (f) {
        if (v instanceof Data_Ordering.LT) {
            return f(isOrderingLT)(OProxy.value);
        };
        if (v instanceof Data_Ordering.EQ) {
            return f(isOrderingEQ)(OProxy.value);
        };
        if (v instanceof Data_Ordering.GT) {
            return f(isOrderingGT)(OProxy.value);
        };
        throw new Error("Failed pattern match at Type.Data.Ordering line 38, column 1 - line 38, column 86: " + [ v.constructor.name, f.constructor.name ]);
    };
};
var invertOrderingLT = InvertOrdering;
var invertOrderingGT = InvertOrdering;
var invertOrderingEQ = InvertOrdering;
var invertOrdering = function (dictInvertOrdering) {
    return function (v) {
        return OProxy.value;
    };
};
var equalsLTLT = Equals;
var equalsLTGT = Equals;
var equalsLTEQ = Equals;
var equalsGTLT = Equals;
var equalsGTGT = Equals;
var equalsGTEQ = Equals;
var equalsEQLT = Equals;
var equalsEQGT = Equals;
var equalsEQEQ = Equals;
var equals = function (dictEquals) {
    return function (v) {
        return function (v1) {
            return Type_Data_Boolean.BProxy.value;
        };
    };
};
var appendOrderingLT = AppendOrdering;
var appendOrderingGT = AppendOrdering;
var appendOrderingEQ = AppendOrdering;
var appendOrdering = function (dictAppendOrdering) {
    return function (v) {
        return function (v1) {
            return OProxy.value;
        };
    };
};
module.exports = {
    OProxy: OProxy,
    IsOrdering: IsOrdering,
    reflectOrdering: reflectOrdering,
    reifyOrdering: reifyOrdering,
    AppendOrdering: AppendOrdering,
    appendOrdering: appendOrdering,
    InvertOrdering: InvertOrdering,
    invertOrdering: invertOrdering,
    Equals: Equals,
    equals: equals,
    isOrderingLT: isOrderingLT,
    isOrderingEQ: isOrderingEQ,
    isOrderingGT: isOrderingGT,
    appendOrderingLT: appendOrderingLT,
    appendOrderingEQ: appendOrderingEQ,
    appendOrderingGT: appendOrderingGT,
    invertOrderingLT: invertOrderingLT,
    invertOrderingEQ: invertOrderingEQ,
    invertOrderingGT: invertOrderingGT,
    equalsEQEQ: equalsEQEQ,
    equalsLTLT: equalsLTLT,
    equalsGTGT: equalsGTGT,
    equalsEQLT: equalsEQLT,
    equalsEQGT: equalsEQGT,
    equalsLTEQ: equalsLTEQ,
    equalsLTGT: equalsLTGT,
    equalsGTLT: equalsGTLT,
    equalsGTEQ: equalsGTEQ
};

},{"../Data.Ordering":252,"../Type.Data.Boolean":359}],361:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Symbol = require("../Data.Symbol");
var Type_Data_Boolean = require("../Type.Data.Boolean");
var Type_Data_Ordering = require("../Type.Data.Ordering");
var CompareSymbol = {};
var AppendSymbol = {};
var Equals = {};
var equalsSymbol = function (dictCompareSymbol) {
    return function (dictEquals) {
        return Equals;
    };
};
var equals = function (dictEquals) {
    return function (v) {
        return function (v1) {
            return Type_Data_Boolean.BProxy.value;
        };
    };
};
var compareSymbol = function (dictCompareSymbol) {
    return function (v) {
        return function (v1) {
            return Type_Data_Ordering.OProxy.value;
        };
    };
};
var appendSymbol = function (dictAppendSymbol) {
    return function (v) {
        return function (v1) {
            return Data_Symbol.SProxy.value;
        };
    };
};
module.exports = {
    CompareSymbol: CompareSymbol,
    compareSymbol: compareSymbol,
    AppendSymbol: AppendSymbol,
    appendSymbol: appendSymbol,
    Equals: Equals,
    equals: equals,
    equalsSymbol: equalsSymbol
};

},{"../Data.Symbol":289,"../Type.Data.Boolean":359,"../Type.Data.Ordering":360}],362:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var TypeEquals = function (from, to) {
    this.from = from;
    this.to = to;
};
var to = function (dict) {
    return dict.to;
};
var refl = new TypeEquals(function (a) {
    return a;
}, function (a) {
    return a;
});
var from = function (dict) {
    return dict.from;
};
module.exports = {
    TypeEquals: TypeEquals,
    to: to,
    from: from,
    refl: refl
};

},{}],363:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Proxy3 = (function () {
    function Proxy3() {

    };
    Proxy3.value = new Proxy3();
    return Proxy3;
})();
var Proxy2 = (function () {
    function Proxy2() {

    };
    Proxy2.value = new Proxy2();
    return Proxy2;
})();
var $$Proxy = (function () {
    function $$Proxy() {

    };
    $$Proxy.value = new $$Proxy();
    return $$Proxy;
})();
var showProxy3 = new Data_Show.Show(function (v) {
    return "Proxy3";
});
var showProxy2 = new Data_Show.Show(function (v) {
    return "Proxy2";
});
var showProxy = new Data_Show.Show(function (v) {
    return "Proxy";
});
var semiringProxy3 = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, Proxy3.value, Proxy3.value);
var semiringProxy2 = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, Proxy2.value, Proxy2.value);
var semiringProxy = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, $$Proxy.value, $$Proxy.value);
var semigroupProxy3 = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return Proxy3.value;
    };
});
var semigroupProxy2 = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return Proxy2.value;
    };
});
var semigroupProxy = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
});
var ringProxy3 = new Data_Ring.Ring(function () {
    return semiringProxy3;
}, function (v) {
    return function (v1) {
        return Proxy3.value;
    };
});
var ringProxy2 = new Data_Ring.Ring(function () {
    return semiringProxy2;
}, function (v) {
    return function (v1) {
        return Proxy2.value;
    };
});
var ringProxy = new Data_Ring.Ring(function () {
    return semiringProxy;
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
});
var heytingAlgebraProxy3 = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, Proxy3.value, function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, function (v) {
    return Proxy3.value;
}, Proxy3.value);
var heytingAlgebraProxy2 = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, Proxy2.value, function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, function (v) {
    return Proxy2.value;
}, Proxy2.value);
var heytingAlgebraProxy = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, $$Proxy.value, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, function (v) {
    return $$Proxy.value;
}, $$Proxy.value);
var functorProxy = new Data_Functor.Functor(function (f) {
    return function (m) {
        return $$Proxy.value;
    };
});
var eqProxy3 = new Data_Eq.Eq(function (x) {
    return function (y) {
        return true;
    };
});
var ordProxy3 = new Data_Ord.Ord(function () {
    return eqProxy3;
}, function (x) {
    return function (y) {
        return Data_Ordering.EQ.value;
    };
});
var eqProxy2 = new Data_Eq.Eq(function (x) {
    return function (y) {
        return true;
    };
});
var ordProxy2 = new Data_Ord.Ord(function () {
    return eqProxy2;
}, function (x) {
    return function (y) {
        return Data_Ordering.EQ.value;
    };
});
var eqProxy = new Data_Eq.Eq(function (x) {
    return function (y) {
        return true;
    };
});
var ordProxy = new Data_Ord.Ord(function () {
    return eqProxy;
}, function (x) {
    return function (y) {
        return Data_Ordering.EQ.value;
    };
});
var discardProxy3 = new Control_Bind.Discard(function (dictBind) {
    return Control_Bind.bind(dictBind);
});
var discardProxy2 = new Control_Bind.Discard(function (dictBind) {
    return Control_Bind.bind(dictBind);
});
var discardProxy = new Control_Bind.Discard(function (dictBind) {
    return Control_Bind.bind(dictBind);
});
var commutativeRingProxy3 = new Data_CommutativeRing.CommutativeRing(function () {
    return ringProxy3;
});
var commutativeRingProxy2 = new Data_CommutativeRing.CommutativeRing(function () {
    return ringProxy2;
});
var commutativeRingProxy = new Data_CommutativeRing.CommutativeRing(function () {
    return ringProxy;
});
var boundedProxy3 = new Data_Bounded.Bounded(function () {
    return ordProxy3;
}, Proxy3.value, Proxy3.value);
var boundedProxy2 = new Data_Bounded.Bounded(function () {
    return ordProxy2;
}, Proxy2.value, Proxy2.value);
var boundedProxy = new Data_Bounded.Bounded(function () {
    return ordProxy;
}, $$Proxy.value, $$Proxy.value);
var booleanAlgebraProxy3 = new Data_BooleanAlgebra.BooleanAlgebra(function () {
    return heytingAlgebraProxy3;
});
var booleanAlgebraProxy2 = new Data_BooleanAlgebra.BooleanAlgebra(function () {
    return heytingAlgebraProxy2;
});
var booleanAlgebraProxy = new Data_BooleanAlgebra.BooleanAlgebra(function () {
    return heytingAlgebraProxy;
});
var applyProxy = new Control_Apply.Apply(function () {
    return functorProxy;
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
});
var bindProxy = new Control_Bind.Bind(function () {
    return applyProxy;
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
});
var applicativeProxy = new Control_Applicative.Applicative(function () {
    return applyProxy;
}, function (v) {
    return $$Proxy.value;
});
var monadProxy = new Control_Monad.Monad(function () {
    return applicativeProxy;
}, function () {
    return bindProxy;
});
module.exports = {
    "Proxy": $$Proxy,
    Proxy2: Proxy2,
    Proxy3: Proxy3,
    eqProxy: eqProxy,
    functorProxy: functorProxy,
    ordProxy: ordProxy,
    applicativeProxy: applicativeProxy,
    applyProxy: applyProxy,
    bindProxy: bindProxy,
    booleanAlgebraProxy: booleanAlgebraProxy,
    boundedProxy: boundedProxy,
    commutativeRingProxy: commutativeRingProxy,
    discardProxy: discardProxy,
    heytingAlgebraProxy: heytingAlgebraProxy,
    monadProxy: monadProxy,
    ringProxy: ringProxy,
    semigroupProxy: semigroupProxy,
    semiringProxy: semiringProxy,
    showProxy: showProxy,
    eqProxy2: eqProxy2,
    ordProxy2: ordProxy2,
    booleanAlgebraProxy2: booleanAlgebraProxy2,
    boundedProxy2: boundedProxy2,
    commutativeRingProxy2: commutativeRingProxy2,
    discardProxy2: discardProxy2,
    heytingAlgebraProxy2: heytingAlgebraProxy2,
    ringProxy2: ringProxy2,
    semigroupProxy2: semigroupProxy2,
    semiringProxy2: semiringProxy2,
    showProxy2: showProxy2,
    eqProxy3: eqProxy3,
    ordProxy3: ordProxy3,
    booleanAlgebraProxy3: booleanAlgebraProxy3,
    boundedProxy3: boundedProxy3,
    commutativeRingProxy3: commutativeRingProxy3,
    discardProxy3: discardProxy3,
    heytingAlgebraProxy3: heytingAlgebraProxy3,
    ringProxy3: ringProxy3,
    semigroupProxy3: semigroupProxy3,
    semiringProxy3: semiringProxy3,
    showProxy3: showProxy3
};

},{"../Control.Applicative":5,"../Control.Apply":7,"../Control.Bind":11,"../Control.Monad":60,"../Data.BooleanAlgebra":132,"../Data.Bounded":134,"../Data.CommutativeRing":141,"../Data.Eq":157,"../Data.Functor":180,"../Data.HeytingAlgebra":188,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Ring":267,"../Data.Semigroup":271,"../Data.Semiring":273,"../Data.Show":276,"../Prelude":358}],364:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Type_Data_Boolean = require("../Type.Data.Boolean");
var Type_Data_Symbol = require("../Type.Data.Symbol");
var Type_Equality = require("../Type.Equality");
var RProxy = (function () {
    function RProxy() {

    };
    RProxy.value = new RProxy();
    return RProxy;
})();
var RLProxy = (function () {
    function RLProxy() {

    };
    RLProxy.value = new RLProxy();
    return RLProxy;
})();
var RowLacking = {};
var RowLacks = {};
var RowToList = {};
var ListToRow = {};
var RowListRemove = {};
var RowListSet = {};
var RowListNub = {};
var RowListAppend = {};
var rowListSetImpl = function (dictTypeEquals) {
    return function (dictTypeEquals1) {
        return function (dictRowListRemove) {
            return RowListSet;
        };
    };
};
var rowListRemoveNil = RowListRemove;
var rowListRemoveCons = function (dictRowListRemove) {
    return function (dictEquals) {
        return function (dictIf) {
            return RowListRemove;
        };
    };
};
var rowListNubNil = RowListNub;
var rowListNubCons = function (dictTypeEquals) {
    return function (dictTypeEquals1) {
        return function (dictTypeEquals2) {
            return function (dictRowListRemove) {
                return function (dictRowListNub) {
                    return RowListNub;
                };
            };
        };
    };
};
var rowListAppendNil = function (dictTypeEquals) {
    return RowListAppend;
};
var rowListAppendCons = function (dictRowListAppend) {
    return function (dictTypeEquals) {
        return RowListAppend;
    };
};
var rowLacks = function (dictRowCons) {
    return function (dictUnion) {
        return function (dictRowCons1) {
            return function (dictRowLacking) {
                return RowLacks;
            };
        };
    };
};
var rowLacking = RowLacking;
var listToRowNil = ListToRow;
var listToRowCons = function (dictListToRow) {
    return function (dictRowCons) {
        return ListToRow;
    };
};
module.exports = {
    RProxy: RProxy,
    RowLacks: RowLacks,
    RowLacking: RowLacking,
    RLProxy: RLProxy,
    RowToList: RowToList,
    ListToRow: ListToRow,
    RowListRemove: RowListRemove,
    RowListSet: RowListSet,
    RowListNub: RowListNub,
    RowListAppend: RowListAppend,
    rowLacking: rowLacking,
    rowLacks: rowLacks,
    listToRowNil: listToRowNil,
    listToRowCons: listToRowCons,
    rowListRemoveNil: rowListRemoveNil,
    rowListRemoveCons: rowListRemoveCons,
    rowListSetImpl: rowListSetImpl,
    rowListNubNil: rowListNubNil,
    rowListNubCons: rowListNubCons,
    rowListAppendNil: rowListAppendNil,
    rowListAppendCons: rowListAppendCons
};

},{"../Type.Data.Boolean":359,"../Type.Data.Symbol":361,"../Type.Equality":362}],365:[function(require,module,exports){
"use strict";

// module Unsafe.Coerce

exports.unsafeCoerce = function (x) {
  return x;
};

},{}],366:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    unsafeCoerce: $foreign.unsafeCoerce
};

},{"./foreign":365}],367:[function(require,module,exports){
"use strict";

exports.reallyUnsafeRefEq = function (a) {
  return function (b) {
    return a === b;
  };
};

},{}],368:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var unsafeRefEq = $foreign.reallyUnsafeRefEq;
module.exports = {
    unsafeRefEq: unsafeRefEq,
    reallyUnsafeRefEq: $foreign.reallyUnsafeRefEq
};

},{"./foreign":367}],369:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_CodePoint_Unicode = require("../Data.CodePoint.Unicode");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Map = require("../Data.Map");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_String_CodePoints = require("../Data.String.CodePoints");
var Data_String_Normalize = require("../Data.String.Normalize");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var Web_UIEvents_Key_Internal = require("../Web.UIEvents.Key.Internal");
var verifyKeyString = function ($12) {
    return (function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return true;
        };
        if (v instanceof Data_Maybe.Just) {
            var isCombining = function (c) {
                if (Data_CodePoint_Unicode.isCombining(c)) {
                    return true;
                };
                return Data_Maybe.maybe(false)(Data_Eq.eq(Data_CodePoint_Unicode.eqGeneralCategory)(Data_CodePoint_Unicode.SpacingCombiningMark.value))(Data_CodePoint_Unicode.generalCategory(c));
            };
            return Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(Data_CodePoint_Unicode.isControl)(v.value0.head) && Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(isCombining)(v.value0.tail);
        };
        throw new Error("Failed pattern match at Web.UIEvents.Key.Details line 25, column 53 - line 32, column 54: " + [ v.constructor.name ]);
    })(Data_Array.uncons(Data_String_CodePoints.toCodePointArray($12)));
};
var toPrinting = function (v) {
    if (v instanceof Web_UIEvents_Key_Internal.Enter) {
        return "\x0a";
    };
    if (v instanceof Web_UIEvents_Key_Internal.Tab) {
        return "\x09";
    };
    if (v instanceof Web_UIEvents_Key_Internal.Unicode) {
        return v.value0;
    };
    return "";
};
var otherPrinting = Data_Map.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("\x0a", Web_UIEvents_Key_Internal.Enter.value), new Data_Tuple.Tuple("\x09", Web_UIEvents_Key_Internal.Tab.value), new Data_Tuple.Tuple("\x08", Web_UIEvents_Key_Internal.Backspace.value), new Data_Tuple.Tuple("\x1b", Web_UIEvents_Key_Internal.Escape.value), new Data_Tuple.Tuple("\x7f", Web_UIEvents_Key_Internal.Delete.value) ]);
var normalizeKeyString = function (s) {
    var n = Data_String_Normalize.nfc(s);
    var v = Data_Map.lookup(Data_Ord.ordString)(n)(otherPrinting);
    if (v instanceof Data_Maybe.Just) {
        return new Data_Maybe.Just(v.value0);
    };
    if (v instanceof Data_Maybe.Nothing) {
        if (verifyKeyString(n)) {
            return new Data_Maybe.Just(new Web_UIEvents_Key_Internal.Unicode(n));
        };
        if (Data_Boolean.otherwise) {
            return Data_Maybe.Nothing.value;
        };
    };
    throw new Error("Failed pattern match at Web.UIEvents.Key.Details line 43, column 6 - line 46, column 28: " + [ v.constructor.name ]);
};
module.exports = {
    otherPrinting: otherPrinting,
    verifyKeyString: verifyKeyString,
    toPrinting: toPrinting,
    normalizeKeyString: normalizeKeyString
};

},{"../Control.Semigroupoid":66,"../Data.Array":122,"../Data.Boolean":131,"../Data.CodePoint.Unicode":140,"../Data.Eq":157,"../Data.Foldable":164,"../Data.Function":172,"../Data.HeytingAlgebra":188,"../Data.Map":231,"../Data.Maybe":234,"../Data.Ord":251,"../Data.String.CodePoints":282,"../Data.String.Normalize":284,"../Data.Tuple":298,"../Prelude":358,"../Web.UIEvents.Key.Internal":372}],370:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Eq = require("../Data.Eq");
var Data_Generic_Rep = require("../Data.Generic.Rep");
var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Show = require("../Data.Show");
var Data_Symbol = require("../Data.Symbol");
var Prelude = require("../Prelude");
var Character = (function () {
    function Character() {

    };
    Character.value = new Character();
    return Character;
})();
var Special = (function () {
    function Special() {

    };
    Special.value = new Special();
    return Special;
})();
var Modifier = (function () {
    function Modifier() {

    };
    Modifier.value = new Modifier();
    return Modifier;
})();
var Whitespace = (function () {
    function Whitespace() {

    };
    Whitespace.value = new Whitespace();
    return Whitespace;
})();
var Navigation = (function () {
    function Navigation() {

    };
    Navigation.value = new Navigation();
    return Navigation;
})();
var Editing = (function () {
    function Editing() {

    };
    Editing.value = new Editing();
    return Editing;
})();
var UI = (function () {
    function UI() {

    };
    UI.value = new UI();
    return UI;
})();
var Device = (function () {
    function Device() {

    };
    Device.value = new Device();
    return Device;
})();
var Composition = (function () {
    function Composition() {

    };
    Composition.value = new Composition();
    return Composition;
})();
var $$Function = (function () {
    function $$Function() {

    };
    $$Function.value = new $$Function();
    return $$Function;
})();
var Multimedia = (function () {
    function Multimedia() {

    };
    Multimedia.value = new Multimedia();
    return Multimedia;
})();
var MultimediaNumpad = (function () {
    function MultimediaNumpad() {

    };
    MultimediaNumpad.value = new MultimediaNumpad();
    return MultimediaNumpad;
})();
var Audio = (function () {
    function Audio() {

    };
    Audio.value = new Audio();
    return Audio;
})();
var Speech = (function () {
    function Speech() {

    };
    Speech.value = new Speech();
    return Speech;
})();
var Application = (function () {
    function Application() {

    };
    Application.value = new Application();
    return Application;
})();
var Browser = (function () {
    function Browser() {

    };
    Browser.value = new Browser();
    return Browser;
})();
var MobilePhone = (function () {
    function MobilePhone() {

    };
    MobilePhone.value = new MobilePhone();
    return MobilePhone;
})();
var TV = (function () {
    function TV() {

    };
    TV.value = new TV();
    return TV;
})();
var MediaController = (function () {
    function MediaController() {

    };
    MediaController.value = new MediaController();
    return MediaController;
})();
var genericCategory = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof Character) {
        return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
    };
    if (x instanceof Special) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
    };
    if (x instanceof Modifier) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
    };
    if (x instanceof Whitespace) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));
    };
    if (x instanceof Navigation) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))));
    };
    if (x instanceof Editing) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))));
    };
    if (x instanceof UI) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))));
    };
    if (x instanceof Device) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))));
    };
    if (x instanceof Composition) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))));
    };
    if (x instanceof $$Function) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))));
    };
    if (x instanceof Multimedia) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))));
    };
    if (x instanceof MultimediaNumpad) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))));
    };
    if (x instanceof Audio) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))))));
    };
    if (x instanceof Speech) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))))));
    };
    if (x instanceof Application) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))))))));
    };
    if (x instanceof Browser) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))))))));
    };
    if (x instanceof MobilePhone) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))))))))));
    };
    if (x instanceof TV) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))))))))));
    };
    if (x instanceof MediaController) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value))))))))))))))))));
    };
    throw new Error("Failed pattern match at Web.UIEvents.Key.Internal.Category line 29, column 8 - line 29, column 54: " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return Character.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
        return Special.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
        return Modifier.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
        return Whitespace.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
        return Navigation.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
        return Editing.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))) {
        return UI.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))) {
        return Device.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))) {
        return Composition.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))) {
        return $$Function.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))) {
        return Multimedia.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))) {
        return MultimediaNumpad.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))) {
        return Audio.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))) {
        return Speech.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))) {
        return Application.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))) {
        return Browser.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))))) {
        return MobilePhone.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))))) {
        return TV.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr))))))))))))))))) {
        return MediaController.value;
    };
    throw new Error("Failed pattern match at Web.UIEvents.Key.Internal.Category line 29, column 8 - line 29, column 54: " + [ x.constructor.name ]);
});
var showCategory = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericCategory)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Character";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Special";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Modifier";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Whitespace";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Navigation";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Editing";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "UI";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Device";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Composition";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Function";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Multimedia";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "MultimediaNumpad";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Audio";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Speech";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Application";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Browser";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "MobilePhone";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "TV";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "MediaController";
}))))))))))))))))))))));
var eqCategory = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Character && y instanceof Character) {
            return true;
        };
        if (x instanceof Special && y instanceof Special) {
            return true;
        };
        if (x instanceof Modifier && y instanceof Modifier) {
            return true;
        };
        if (x instanceof Whitespace && y instanceof Whitespace) {
            return true;
        };
        if (x instanceof Navigation && y instanceof Navigation) {
            return true;
        };
        if (x instanceof Editing && y instanceof Editing) {
            return true;
        };
        if (x instanceof UI && y instanceof UI) {
            return true;
        };
        if (x instanceof Device && y instanceof Device) {
            return true;
        };
        if (x instanceof Composition && y instanceof Composition) {
            return true;
        };
        if (x instanceof $$Function && y instanceof $$Function) {
            return true;
        };
        if (x instanceof Multimedia && y instanceof Multimedia) {
            return true;
        };
        if (x instanceof MultimediaNumpad && y instanceof MultimediaNumpad) {
            return true;
        };
        if (x instanceof Audio && y instanceof Audio) {
            return true;
        };
        if (x instanceof Speech && y instanceof Speech) {
            return true;
        };
        if (x instanceof Application && y instanceof Application) {
            return true;
        };
        if (x instanceof Browser && y instanceof Browser) {
            return true;
        };
        if (x instanceof MobilePhone && y instanceof MobilePhone) {
            return true;
        };
        if (x instanceof TV && y instanceof TV) {
            return true;
        };
        if (x instanceof MediaController && y instanceof MediaController) {
            return true;
        };
        return false;
    };
});
var ordCategory = new Data_Ord.Ord(function () {
    return eqCategory;
}, function (x) {
    return function (y) {
        if (x instanceof Character && y instanceof Character) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Character) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Character) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Special && y instanceof Special) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Special) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Special) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Modifier && y instanceof Modifier) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Modifier) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Modifier) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Whitespace && y instanceof Whitespace) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Whitespace) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Whitespace) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Navigation && y instanceof Navigation) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Navigation) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Navigation) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Editing && y instanceof Editing) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Editing) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Editing) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof UI && y instanceof UI) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof UI) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof UI) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Device && y instanceof Device) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Device) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Device) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Composition && y instanceof Composition) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Composition) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Composition) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof $$Function && y instanceof $$Function) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof $$Function) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof $$Function) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Multimedia && y instanceof Multimedia) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Multimedia) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Multimedia) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MultimediaNumpad && y instanceof MultimediaNumpad) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MultimediaNumpad) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MultimediaNumpad) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Audio && y instanceof Audio) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Audio) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Audio) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Speech && y instanceof Speech) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Speech) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Speech) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Application && y instanceof Application) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Application) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Application) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Browser && y instanceof Browser) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Browser) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Browser) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MobilePhone && y instanceof MobilePhone) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MobilePhone) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MobilePhone) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TV && y instanceof TV) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TV) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TV) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaController && y instanceof MediaController) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Web.UIEvents.Key.Internal.Category line 28, column 8 - line 28, column 44: " + [ x.constructor.name, y.constructor.name ]);
    };
});
module.exports = {
    Character: Character,
    Special: Special,
    Modifier: Modifier,
    Whitespace: Whitespace,
    Navigation: Navigation,
    Editing: Editing,
    UI: UI,
    Device: Device,
    Composition: Composition,
    "Function": $$Function,
    Multimedia: Multimedia,
    MultimediaNumpad: MultimediaNumpad,
    Audio: Audio,
    Speech: Speech,
    Application: Application,
    Browser: Browser,
    MobilePhone: MobilePhone,
    TV: TV,
    MediaController: MediaController,
    eqCategory: eqCategory,
    ordCategory: ordCategory,
    genericCategory: genericCategory,
    showCategory: showCategory
};

},{"../Data.Eq":157,"../Data.Generic.Rep":184,"../Data.Generic.Rep.Show":183,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Show":276,"../Data.Symbol":289,"../Prelude":358}],371:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Eq = require("../Data.Eq");
var Data_Generic_Rep = require("../Data.Generic.Rep");
var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Show = require("../Data.Show");
var Data_Symbol = require("../Data.Symbol");
var Prelude = require("../Prelude");
var Alt = (function () {
    function Alt() {

    };
    Alt.value = new Alt();
    return Alt;
})();
var AltGraph = (function () {
    function AltGraph() {

    };
    AltGraph.value = new AltGraph();
    return AltGraph;
})();
var CapsLock = (function () {
    function CapsLock() {

    };
    CapsLock.value = new CapsLock();
    return CapsLock;
})();
var Control = (function () {
    function Control() {

    };
    Control.value = new Control();
    return Control;
})();
var Fn = (function () {
    function Fn() {

    };
    Fn.value = new Fn();
    return Fn;
})();
var FnLock = (function () {
    function FnLock() {

    };
    FnLock.value = new FnLock();
    return FnLock;
})();
var Meta = (function () {
    function Meta() {

    };
    Meta.value = new Meta();
    return Meta;
})();
var NumLock = (function () {
    function NumLock() {

    };
    NumLock.value = new NumLock();
    return NumLock;
})();
var ScrollLock = (function () {
    function ScrollLock() {

    };
    ScrollLock.value = new ScrollLock();
    return ScrollLock;
})();
var Shift = (function () {
    function Shift() {

    };
    Shift.value = new Shift();
    return Shift;
})();
var $$Symbol = (function () {
    function $$Symbol() {

    };
    $$Symbol.value = new $$Symbol();
    return $$Symbol;
})();
var SymbolLock = (function () {
    function SymbolLock() {

    };
    SymbolLock.value = new SymbolLock();
    return SymbolLock;
})();
var Hyper = (function () {
    function Hyper() {

    };
    Hyper.value = new Hyper();
    return Hyper;
})();
var Super = (function () {
    function Super() {

    };
    Super.value = new Super();
    return Super;
})();
var genericModifier = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof Alt) {
        return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
    };
    if (x instanceof AltGraph) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
    };
    if (x instanceof CapsLock) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
    };
    if (x instanceof Control) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));
    };
    if (x instanceof Fn) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))));
    };
    if (x instanceof FnLock) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))));
    };
    if (x instanceof Meta) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))));
    };
    if (x instanceof NumLock) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))));
    };
    if (x instanceof ScrollLock) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))));
    };
    if (x instanceof Shift) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))));
    };
    if (x instanceof $$Symbol) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))));
    };
    if (x instanceof SymbolLock) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))));
    };
    if (x instanceof Hyper) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))))));
    };
    if (x instanceof Super) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)))))))))))));
    };
    throw new Error("Failed pattern match at Web.UIEvents.Key.Internal.Modifier line 24, column 8 - line 24, column 54: " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return Alt.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
        return AltGraph.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
        return CapsLock.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
        return Control.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
        return Fn.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
        return FnLock.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))) {
        return Meta.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))) {
        return NumLock.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))) {
        return ScrollLock.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))) {
        return Shift.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))) {
        return $$Symbol.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))) {
        return SymbolLock.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))) {
        return Hyper.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))))))))))) {
        return Super.value;
    };
    throw new Error("Failed pattern match at Web.UIEvents.Key.Internal.Modifier line 24, column 8 - line 24, column 54: " + [ x.constructor.name ]);
});
var showModifier = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericModifier)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Alt";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "AltGraph";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "CapsLock";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Control";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Fn";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "FnLock";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Meta";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "NumLock";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "ScrollLock";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Shift";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Symbol";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "SymbolLock";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Hyper";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Super";
})))))))))))))))));
var eqModifier = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Alt && y instanceof Alt) {
            return true;
        };
        if (x instanceof AltGraph && y instanceof AltGraph) {
            return true;
        };
        if (x instanceof CapsLock && y instanceof CapsLock) {
            return true;
        };
        if (x instanceof Control && y instanceof Control) {
            return true;
        };
        if (x instanceof Fn && y instanceof Fn) {
            return true;
        };
        if (x instanceof FnLock && y instanceof FnLock) {
            return true;
        };
        if (x instanceof Meta && y instanceof Meta) {
            return true;
        };
        if (x instanceof NumLock && y instanceof NumLock) {
            return true;
        };
        if (x instanceof ScrollLock && y instanceof ScrollLock) {
            return true;
        };
        if (x instanceof Shift && y instanceof Shift) {
            return true;
        };
        if (x instanceof $$Symbol && y instanceof $$Symbol) {
            return true;
        };
        if (x instanceof SymbolLock && y instanceof SymbolLock) {
            return true;
        };
        if (x instanceof Hyper && y instanceof Hyper) {
            return true;
        };
        if (x instanceof Super && y instanceof Super) {
            return true;
        };
        return false;
    };
});
var ordModifier = new Data_Ord.Ord(function () {
    return eqModifier;
}, function (x) {
    return function (y) {
        if (x instanceof Alt && y instanceof Alt) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Alt) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Alt) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AltGraph && y instanceof AltGraph) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AltGraph) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AltGraph) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof CapsLock && y instanceof CapsLock) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof CapsLock) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof CapsLock) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Control && y instanceof Control) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Control) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Control) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Fn && y instanceof Fn) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Fn) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Fn) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof FnLock && y instanceof FnLock) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof FnLock) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof FnLock) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Meta && y instanceof Meta) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Meta) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Meta) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof NumLock && y instanceof NumLock) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof NumLock) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof NumLock) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ScrollLock && y instanceof ScrollLock) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ScrollLock) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ScrollLock) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Shift && y instanceof Shift) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Shift) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Shift) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof $$Symbol && y instanceof $$Symbol) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof $$Symbol) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof $$Symbol) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof SymbolLock && y instanceof SymbolLock) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof SymbolLock) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof SymbolLock) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Hyper && y instanceof Hyper) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Hyper) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Hyper) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Super && y instanceof Super) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Web.UIEvents.Key.Internal.Modifier line 23, column 8 - line 23, column 44: " + [ x.constructor.name, y.constructor.name ]);
    };
});
module.exports = {
    Alt: Alt,
    AltGraph: AltGraph,
    CapsLock: CapsLock,
    Control: Control,
    Fn: Fn,
    FnLock: FnLock,
    Meta: Meta,
    NumLock: NumLock,
    ScrollLock: ScrollLock,
    Shift: Shift,
    "Symbol": $$Symbol,
    SymbolLock: SymbolLock,
    Hyper: Hyper,
    Super: Super,
    eqModifier: eqModifier,
    ordModifier: ordModifier,
    genericModifier: genericModifier,
    showModifier: showModifier
};

},{"../Data.Eq":157,"../Data.Generic.Rep":184,"../Data.Generic.Rep.Show":183,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Show":276,"../Data.Symbol":289,"../Prelude":358}],372:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Bind = require("../Control.Bind");
var Data_Eq = require("../Data.Eq");
var Data_Int = require("../Data.Int");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Prelude = require("../Prelude");
var Web_UIEvents_Key_Internal_Category = require("../Web.UIEvents.Key.Internal.Category");
var Web_UIEvents_Key_Internal_Modifier = require("../Web.UIEvents.Key.Internal.Modifier");
var Unicode = (function () {
    function Unicode(value0) {
        this.value0 = value0;
    };
    Unicode.create = function (value0) {
        return new Unicode(value0);
    };
    return Unicode;
})();
var Unidentified = (function () {
    function Unidentified() {

    };
    Unidentified.value = new Unidentified();
    return Unidentified;
})();
var Alt = (function () {
    function Alt() {

    };
    Alt.value = new Alt();
    return Alt;
})();
var AltGraph = (function () {
    function AltGraph() {

    };
    AltGraph.value = new AltGraph();
    return AltGraph;
})();
var CapsLock = (function () {
    function CapsLock() {

    };
    CapsLock.value = new CapsLock();
    return CapsLock;
})();
var Control = (function () {
    function Control() {

    };
    Control.value = new Control();
    return Control;
})();
var Fn = (function () {
    function Fn() {

    };
    Fn.value = new Fn();
    return Fn;
})();
var FnLock = (function () {
    function FnLock() {

    };
    FnLock.value = new FnLock();
    return FnLock;
})();
var Meta = (function () {
    function Meta() {

    };
    Meta.value = new Meta();
    return Meta;
})();
var NumLock = (function () {
    function NumLock() {

    };
    NumLock.value = new NumLock();
    return NumLock;
})();
var ScrollLock = (function () {
    function ScrollLock() {

    };
    ScrollLock.value = new ScrollLock();
    return ScrollLock;
})();
var Shift = (function () {
    function Shift() {

    };
    Shift.value = new Shift();
    return Shift;
})();
var $$Symbol = (function () {
    function $$Symbol() {

    };
    $$Symbol.value = new $$Symbol();
    return $$Symbol;
})();
var SymbolLock = (function () {
    function SymbolLock() {

    };
    SymbolLock.value = new SymbolLock();
    return SymbolLock;
})();
var Hyper = (function () {
    function Hyper() {

    };
    Hyper.value = new Hyper();
    return Hyper;
})();
var Super = (function () {
    function Super() {

    };
    Super.value = new Super();
    return Super;
})();
var Enter = (function () {
    function Enter() {

    };
    Enter.value = new Enter();
    return Enter;
})();
var Tab = (function () {
    function Tab() {

    };
    Tab.value = new Tab();
    return Tab;
})();
var ArrowDown = (function () {
    function ArrowDown() {

    };
    ArrowDown.value = new ArrowDown();
    return ArrowDown;
})();
var ArrowLeft = (function () {
    function ArrowLeft() {

    };
    ArrowLeft.value = new ArrowLeft();
    return ArrowLeft;
})();
var ArrowRight = (function () {
    function ArrowRight() {

    };
    ArrowRight.value = new ArrowRight();
    return ArrowRight;
})();
var ArrowUp = (function () {
    function ArrowUp() {

    };
    ArrowUp.value = new ArrowUp();
    return ArrowUp;
})();
var End = (function () {
    function End() {

    };
    End.value = new End();
    return End;
})();
var Home = (function () {
    function Home() {

    };
    Home.value = new Home();
    return Home;
})();
var PageDown = (function () {
    function PageDown() {

    };
    PageDown.value = new PageDown();
    return PageDown;
})();
var PageUp = (function () {
    function PageUp() {

    };
    PageUp.value = new PageUp();
    return PageUp;
})();
var Backspace = (function () {
    function Backspace() {

    };
    Backspace.value = new Backspace();
    return Backspace;
})();
var Clear = (function () {
    function Clear() {

    };
    Clear.value = new Clear();
    return Clear;
})();
var Copy = (function () {
    function Copy() {

    };
    Copy.value = new Copy();
    return Copy;
})();
var CrSel = (function () {
    function CrSel() {

    };
    CrSel.value = new CrSel();
    return CrSel;
})();
var Cut = (function () {
    function Cut() {

    };
    Cut.value = new Cut();
    return Cut;
})();
var Delete = (function () {
    function Delete() {

    };
    Delete.value = new Delete();
    return Delete;
})();
var EraseEof = (function () {
    function EraseEof() {

    };
    EraseEof.value = new EraseEof();
    return EraseEof;
})();
var ExSel = (function () {
    function ExSel() {

    };
    ExSel.value = new ExSel();
    return ExSel;
})();
var Insert = (function () {
    function Insert() {

    };
    Insert.value = new Insert();
    return Insert;
})();
var Paste = (function () {
    function Paste() {

    };
    Paste.value = new Paste();
    return Paste;
})();
var Redo = (function () {
    function Redo() {

    };
    Redo.value = new Redo();
    return Redo;
})();
var Undo = (function () {
    function Undo() {

    };
    Undo.value = new Undo();
    return Undo;
})();
var Accept = (function () {
    function Accept() {

    };
    Accept.value = new Accept();
    return Accept;
})();
var Again = (function () {
    function Again() {

    };
    Again.value = new Again();
    return Again;
})();
var Attn = (function () {
    function Attn() {

    };
    Attn.value = new Attn();
    return Attn;
})();
var Cancel = (function () {
    function Cancel() {

    };
    Cancel.value = new Cancel();
    return Cancel;
})();
var ContextMenu = (function () {
    function ContextMenu() {

    };
    ContextMenu.value = new ContextMenu();
    return ContextMenu;
})();
var Escape = (function () {
    function Escape() {

    };
    Escape.value = new Escape();
    return Escape;
})();
var Execute = (function () {
    function Execute() {

    };
    Execute.value = new Execute();
    return Execute;
})();
var Find = (function () {
    function Find() {

    };
    Find.value = new Find();
    return Find;
})();
var Help = (function () {
    function Help() {

    };
    Help.value = new Help();
    return Help;
})();
var Pause = (function () {
    function Pause() {

    };
    Pause.value = new Pause();
    return Pause;
})();
var Play = (function () {
    function Play() {

    };
    Play.value = new Play();
    return Play;
})();
var Props = (function () {
    function Props() {

    };
    Props.value = new Props();
    return Props;
})();
var Select = (function () {
    function Select() {

    };
    Select.value = new Select();
    return Select;
})();
var ZoomIn = (function () {
    function ZoomIn() {

    };
    ZoomIn.value = new ZoomIn();
    return ZoomIn;
})();
var ZoomOut = (function () {
    function ZoomOut() {

    };
    ZoomOut.value = new ZoomOut();
    return ZoomOut;
})();
var BrightnessDown = (function () {
    function BrightnessDown() {

    };
    BrightnessDown.value = new BrightnessDown();
    return BrightnessDown;
})();
var BrightnessUp = (function () {
    function BrightnessUp() {

    };
    BrightnessUp.value = new BrightnessUp();
    return BrightnessUp;
})();
var Eject = (function () {
    function Eject() {

    };
    Eject.value = new Eject();
    return Eject;
})();
var LogOff = (function () {
    function LogOff() {

    };
    LogOff.value = new LogOff();
    return LogOff;
})();
var Power = (function () {
    function Power() {

    };
    Power.value = new Power();
    return Power;
})();
var PowerOff = (function () {
    function PowerOff() {

    };
    PowerOff.value = new PowerOff();
    return PowerOff;
})();
var PrintScreen = (function () {
    function PrintScreen() {

    };
    PrintScreen.value = new PrintScreen();
    return PrintScreen;
})();
var Hibernate = (function () {
    function Hibernate() {

    };
    Hibernate.value = new Hibernate();
    return Hibernate;
})();
var Standby = (function () {
    function Standby() {

    };
    Standby.value = new Standby();
    return Standby;
})();
var WakeUp = (function () {
    function WakeUp() {

    };
    WakeUp.value = new WakeUp();
    return WakeUp;
})();
var AllCandidates = (function () {
    function AllCandidates() {

    };
    AllCandidates.value = new AllCandidates();
    return AllCandidates;
})();
var Alphanumeric = (function () {
    function Alphanumeric() {

    };
    Alphanumeric.value = new Alphanumeric();
    return Alphanumeric;
})();
var CodeInput = (function () {
    function CodeInput() {

    };
    CodeInput.value = new CodeInput();
    return CodeInput;
})();
var Compose = (function () {
    function Compose() {

    };
    Compose.value = new Compose();
    return Compose;
})();
var Convert = (function () {
    function Convert() {

    };
    Convert.value = new Convert();
    return Convert;
})();
var Dead = (function () {
    function Dead() {

    };
    Dead.value = new Dead();
    return Dead;
})();
var FinalMode = (function () {
    function FinalMode() {

    };
    FinalMode.value = new FinalMode();
    return FinalMode;
})();
var GroupFirst = (function () {
    function GroupFirst() {

    };
    GroupFirst.value = new GroupFirst();
    return GroupFirst;
})();
var GroupLast = (function () {
    function GroupLast() {

    };
    GroupLast.value = new GroupLast();
    return GroupLast;
})();
var GroupNext = (function () {
    function GroupNext() {

    };
    GroupNext.value = new GroupNext();
    return GroupNext;
})();
var GroupPrevious = (function () {
    function GroupPrevious() {

    };
    GroupPrevious.value = new GroupPrevious();
    return GroupPrevious;
})();
var ModeChange = (function () {
    function ModeChange() {

    };
    ModeChange.value = new ModeChange();
    return ModeChange;
})();
var NextCandidate = (function () {
    function NextCandidate() {

    };
    NextCandidate.value = new NextCandidate();
    return NextCandidate;
})();
var NonConvert = (function () {
    function NonConvert() {

    };
    NonConvert.value = new NonConvert();
    return NonConvert;
})();
var PreviousCandidate = (function () {
    function PreviousCandidate() {

    };
    PreviousCandidate.value = new PreviousCandidate();
    return PreviousCandidate;
})();
var Process = (function () {
    function Process() {

    };
    Process.value = new Process();
    return Process;
})();
var SingleCandidate = (function () {
    function SingleCandidate() {

    };
    SingleCandidate.value = new SingleCandidate();
    return SingleCandidate;
})();
var HangulMode = (function () {
    function HangulMode() {

    };
    HangulMode.value = new HangulMode();
    return HangulMode;
})();
var HanjaMode = (function () {
    function HanjaMode() {

    };
    HanjaMode.value = new HanjaMode();
    return HanjaMode;
})();
var JunjaMode = (function () {
    function JunjaMode() {

    };
    JunjaMode.value = new JunjaMode();
    return JunjaMode;
})();
var Eisu = (function () {
    function Eisu() {

    };
    Eisu.value = new Eisu();
    return Eisu;
})();
var Hankaku = (function () {
    function Hankaku() {

    };
    Hankaku.value = new Hankaku();
    return Hankaku;
})();
var Hiragana = (function () {
    function Hiragana() {

    };
    Hiragana.value = new Hiragana();
    return Hiragana;
})();
var HiraganaKatakana = (function () {
    function HiraganaKatakana() {

    };
    HiraganaKatakana.value = new HiraganaKatakana();
    return HiraganaKatakana;
})();
var KanaMode = (function () {
    function KanaMode() {

    };
    KanaMode.value = new KanaMode();
    return KanaMode;
})();
var KanjiMode = (function () {
    function KanjiMode() {

    };
    KanjiMode.value = new KanjiMode();
    return KanjiMode;
})();
var Katakana = (function () {
    function Katakana() {

    };
    Katakana.value = new Katakana();
    return Katakana;
})();
var Romaji = (function () {
    function Romaji() {

    };
    Romaji.value = new Romaji();
    return Romaji;
})();
var Zenkaku = (function () {
    function Zenkaku() {

    };
    Zenkaku.value = new Zenkaku();
    return Zenkaku;
})();
var ZenkakuHankaku = (function () {
    function ZenkakuHankaku() {

    };
    ZenkakuHankaku.value = new ZenkakuHankaku();
    return ZenkakuHankaku;
})();
var F = (function () {
    function F(value0) {
        this.value0 = value0;
    };
    F.create = function (value0) {
        return new F(value0);
    };
    return F;
})();
var Soft = (function () {
    function Soft(value0) {
        this.value0 = value0;
    };
    Soft.create = function (value0) {
        return new Soft(value0);
    };
    return Soft;
})();
var ChannelDown = (function () {
    function ChannelDown() {

    };
    ChannelDown.value = new ChannelDown();
    return ChannelDown;
})();
var ChannelUp = (function () {
    function ChannelUp() {

    };
    ChannelUp.value = new ChannelUp();
    return ChannelUp;
})();
var Close = (function () {
    function Close() {

    };
    Close.value = new Close();
    return Close;
})();
var MailForward = (function () {
    function MailForward() {

    };
    MailForward.value = new MailForward();
    return MailForward;
})();
var MailReply = (function () {
    function MailReply() {

    };
    MailReply.value = new MailReply();
    return MailReply;
})();
var MailSend = (function () {
    function MailSend() {

    };
    MailSend.value = new MailSend();
    return MailSend;
})();
var MediaClose = (function () {
    function MediaClose() {

    };
    MediaClose.value = new MediaClose();
    return MediaClose;
})();
var MediaFastForward = (function () {
    function MediaFastForward() {

    };
    MediaFastForward.value = new MediaFastForward();
    return MediaFastForward;
})();
var MediaPause = (function () {
    function MediaPause() {

    };
    MediaPause.value = new MediaPause();
    return MediaPause;
})();
var MediaPlay = (function () {
    function MediaPlay() {

    };
    MediaPlay.value = new MediaPlay();
    return MediaPlay;
})();
var MediaPlayPause = (function () {
    function MediaPlayPause() {

    };
    MediaPlayPause.value = new MediaPlayPause();
    return MediaPlayPause;
})();
var MediaRecord = (function () {
    function MediaRecord() {

    };
    MediaRecord.value = new MediaRecord();
    return MediaRecord;
})();
var MediaRewind = (function () {
    function MediaRewind() {

    };
    MediaRewind.value = new MediaRewind();
    return MediaRewind;
})();
var MediaStop = (function () {
    function MediaStop() {

    };
    MediaStop.value = new MediaStop();
    return MediaStop;
})();
var MediaTrackNext = (function () {
    function MediaTrackNext() {

    };
    MediaTrackNext.value = new MediaTrackNext();
    return MediaTrackNext;
})();
var MediaTrackPrevious = (function () {
    function MediaTrackPrevious() {

    };
    MediaTrackPrevious.value = new MediaTrackPrevious();
    return MediaTrackPrevious;
})();
var New = (function () {
    function New() {

    };
    New.value = new New();
    return New;
})();
var Open = (function () {
    function Open() {

    };
    Open.value = new Open();
    return Open;
})();
var Print = (function () {
    function Print() {

    };
    Print.value = new Print();
    return Print;
})();
var Save = (function () {
    function Save() {

    };
    Save.value = new Save();
    return Save;
})();
var SpellCheck = (function () {
    function SpellCheck() {

    };
    SpellCheck.value = new SpellCheck();
    return SpellCheck;
})();
var Key11 = (function () {
    function Key11() {

    };
    Key11.value = new Key11();
    return Key11;
})();
var Key12 = (function () {
    function Key12() {

    };
    Key12.value = new Key12();
    return Key12;
})();
var AudioBalanceLeft = (function () {
    function AudioBalanceLeft() {

    };
    AudioBalanceLeft.value = new AudioBalanceLeft();
    return AudioBalanceLeft;
})();
var AudioBalanceRight = (function () {
    function AudioBalanceRight() {

    };
    AudioBalanceRight.value = new AudioBalanceRight();
    return AudioBalanceRight;
})();
var AudioBassBoostDown = (function () {
    function AudioBassBoostDown() {

    };
    AudioBassBoostDown.value = new AudioBassBoostDown();
    return AudioBassBoostDown;
})();
var AudioBassBoostToggle = (function () {
    function AudioBassBoostToggle() {

    };
    AudioBassBoostToggle.value = new AudioBassBoostToggle();
    return AudioBassBoostToggle;
})();
var AudioBassBoostUp = (function () {
    function AudioBassBoostUp() {

    };
    AudioBassBoostUp.value = new AudioBassBoostUp();
    return AudioBassBoostUp;
})();
var AudioFaderFront = (function () {
    function AudioFaderFront() {

    };
    AudioFaderFront.value = new AudioFaderFront();
    return AudioFaderFront;
})();
var AudioFaderRear = (function () {
    function AudioFaderRear() {

    };
    AudioFaderRear.value = new AudioFaderRear();
    return AudioFaderRear;
})();
var AudioSurroundModeNext = (function () {
    function AudioSurroundModeNext() {

    };
    AudioSurroundModeNext.value = new AudioSurroundModeNext();
    return AudioSurroundModeNext;
})();
var AudioTrebleDown = (function () {
    function AudioTrebleDown() {

    };
    AudioTrebleDown.value = new AudioTrebleDown();
    return AudioTrebleDown;
})();
var AudioTrebleUp = (function () {
    function AudioTrebleUp() {

    };
    AudioTrebleUp.value = new AudioTrebleUp();
    return AudioTrebleUp;
})();
var AudioVolumeDown = (function () {
    function AudioVolumeDown() {

    };
    AudioVolumeDown.value = new AudioVolumeDown();
    return AudioVolumeDown;
})();
var AudioVolumeUp = (function () {
    function AudioVolumeUp() {

    };
    AudioVolumeUp.value = new AudioVolumeUp();
    return AudioVolumeUp;
})();
var AudioVolumeMute = (function () {
    function AudioVolumeMute() {

    };
    AudioVolumeMute.value = new AudioVolumeMute();
    return AudioVolumeMute;
})();
var MicrophoneToggle = (function () {
    function MicrophoneToggle() {

    };
    MicrophoneToggle.value = new MicrophoneToggle();
    return MicrophoneToggle;
})();
var MicrophoneVolumeDown = (function () {
    function MicrophoneVolumeDown() {

    };
    MicrophoneVolumeDown.value = new MicrophoneVolumeDown();
    return MicrophoneVolumeDown;
})();
var MicrophoneVolumeUp = (function () {
    function MicrophoneVolumeUp() {

    };
    MicrophoneVolumeUp.value = new MicrophoneVolumeUp();
    return MicrophoneVolumeUp;
})();
var MicrophoneVolumeMute = (function () {
    function MicrophoneVolumeMute() {

    };
    MicrophoneVolumeMute.value = new MicrophoneVolumeMute();
    return MicrophoneVolumeMute;
})();
var SpeechCorrectionList = (function () {
    function SpeechCorrectionList() {

    };
    SpeechCorrectionList.value = new SpeechCorrectionList();
    return SpeechCorrectionList;
})();
var SpeechInputToggle = (function () {
    function SpeechInputToggle() {

    };
    SpeechInputToggle.value = new SpeechInputToggle();
    return SpeechInputToggle;
})();
var LaunchApplication = (function () {
    function LaunchApplication(value0) {
        this.value0 = value0;
    };
    LaunchApplication.create = function (value0) {
        return new LaunchApplication(value0);
    };
    return LaunchApplication;
})();
var LaunchCalendar = (function () {
    function LaunchCalendar() {

    };
    LaunchCalendar.value = new LaunchCalendar();
    return LaunchCalendar;
})();
var LaunchContacts = (function () {
    function LaunchContacts() {

    };
    LaunchContacts.value = new LaunchContacts();
    return LaunchContacts;
})();
var LaunchMail = (function () {
    function LaunchMail() {

    };
    LaunchMail.value = new LaunchMail();
    return LaunchMail;
})();
var LaunchMediaPlayer = (function () {
    function LaunchMediaPlayer() {

    };
    LaunchMediaPlayer.value = new LaunchMediaPlayer();
    return LaunchMediaPlayer;
})();
var LaunchMusicPlayer = (function () {
    function LaunchMusicPlayer() {

    };
    LaunchMusicPlayer.value = new LaunchMusicPlayer();
    return LaunchMusicPlayer;
})();
var LaunchPhone = (function () {
    function LaunchPhone() {

    };
    LaunchPhone.value = new LaunchPhone();
    return LaunchPhone;
})();
var LaunchScreenSaver = (function () {
    function LaunchScreenSaver() {

    };
    LaunchScreenSaver.value = new LaunchScreenSaver();
    return LaunchScreenSaver;
})();
var LaunchSpreadsheet = (function () {
    function LaunchSpreadsheet() {

    };
    LaunchSpreadsheet.value = new LaunchSpreadsheet();
    return LaunchSpreadsheet;
})();
var LaunchWebBrowser = (function () {
    function LaunchWebBrowser() {

    };
    LaunchWebBrowser.value = new LaunchWebBrowser();
    return LaunchWebBrowser;
})();
var LaunchWebCam = (function () {
    function LaunchWebCam() {

    };
    LaunchWebCam.value = new LaunchWebCam();
    return LaunchWebCam;
})();
var LaunchWordProcessor = (function () {
    function LaunchWordProcessor() {

    };
    LaunchWordProcessor.value = new LaunchWordProcessor();
    return LaunchWordProcessor;
})();
var BrowserBack = (function () {
    function BrowserBack() {

    };
    BrowserBack.value = new BrowserBack();
    return BrowserBack;
})();
var BrowserFavorites = (function () {
    function BrowserFavorites() {

    };
    BrowserFavorites.value = new BrowserFavorites();
    return BrowserFavorites;
})();
var BrowserForward = (function () {
    function BrowserForward() {

    };
    BrowserForward.value = new BrowserForward();
    return BrowserForward;
})();
var BrowserHome = (function () {
    function BrowserHome() {

    };
    BrowserHome.value = new BrowserHome();
    return BrowserHome;
})();
var BrowserRefresh = (function () {
    function BrowserRefresh() {

    };
    BrowserRefresh.value = new BrowserRefresh();
    return BrowserRefresh;
})();
var BrowserSearch = (function () {
    function BrowserSearch() {

    };
    BrowserSearch.value = new BrowserSearch();
    return BrowserSearch;
})();
var BrowserStop = (function () {
    function BrowserStop() {

    };
    BrowserStop.value = new BrowserStop();
    return BrowserStop;
})();
var AppSwitch = (function () {
    function AppSwitch() {

    };
    AppSwitch.value = new AppSwitch();
    return AppSwitch;
})();
var Call = (function () {
    function Call() {

    };
    Call.value = new Call();
    return Call;
})();
var Camera = (function () {
    function Camera() {

    };
    Camera.value = new Camera();
    return Camera;
})();
var CameraFocus = (function () {
    function CameraFocus() {

    };
    CameraFocus.value = new CameraFocus();
    return CameraFocus;
})();
var EndCall = (function () {
    function EndCall() {

    };
    EndCall.value = new EndCall();
    return EndCall;
})();
var GoBack = (function () {
    function GoBack() {

    };
    GoBack.value = new GoBack();
    return GoBack;
})();
var GoHome = (function () {
    function GoHome() {

    };
    GoHome.value = new GoHome();
    return GoHome;
})();
var HeadsetHook = (function () {
    function HeadsetHook() {

    };
    HeadsetHook.value = new HeadsetHook();
    return HeadsetHook;
})();
var LastNumberRedial = (function () {
    function LastNumberRedial() {

    };
    LastNumberRedial.value = new LastNumberRedial();
    return LastNumberRedial;
})();
var Notification = (function () {
    function Notification() {

    };
    Notification.value = new Notification();
    return Notification;
})();
var MannerMode = (function () {
    function MannerMode() {

    };
    MannerMode.value = new MannerMode();
    return MannerMode;
})();
var VoiceDial = (function () {
    function VoiceDial() {

    };
    VoiceDial.value = new VoiceDial();
    return VoiceDial;
})();
var TV = (function () {
    function TV() {

    };
    TV.value = new TV();
    return TV;
})();
var TV3DMode = (function () {
    function TV3DMode() {

    };
    TV3DMode.value = new TV3DMode();
    return TV3DMode;
})();
var TVAntennaCable = (function () {
    function TVAntennaCable() {

    };
    TVAntennaCable.value = new TVAntennaCable();
    return TVAntennaCable;
})();
var TVAudioDescription = (function () {
    function TVAudioDescription() {

    };
    TVAudioDescription.value = new TVAudioDescription();
    return TVAudioDescription;
})();
var TVAudioDescriptionMixDown = (function () {
    function TVAudioDescriptionMixDown() {

    };
    TVAudioDescriptionMixDown.value = new TVAudioDescriptionMixDown();
    return TVAudioDescriptionMixDown;
})();
var TVAudioDescriptionMixUp = (function () {
    function TVAudioDescriptionMixUp() {

    };
    TVAudioDescriptionMixUp.value = new TVAudioDescriptionMixUp();
    return TVAudioDescriptionMixUp;
})();
var TVContentsMenu = (function () {
    function TVContentsMenu() {

    };
    TVContentsMenu.value = new TVContentsMenu();
    return TVContentsMenu;
})();
var TVDataService = (function () {
    function TVDataService() {

    };
    TVDataService.value = new TVDataService();
    return TVDataService;
})();
var TVInput = (function () {
    function TVInput() {

    };
    TVInput.value = new TVInput();
    return TVInput;
})();
var TVInputComponent = (function () {
    function TVInputComponent(value0) {
        this.value0 = value0;
    };
    TVInputComponent.create = function (value0) {
        return new TVInputComponent(value0);
    };
    return TVInputComponent;
})();
var TVInputComposite = (function () {
    function TVInputComposite(value0) {
        this.value0 = value0;
    };
    TVInputComposite.create = function (value0) {
        return new TVInputComposite(value0);
    };
    return TVInputComposite;
})();
var TVInputHDMI = (function () {
    function TVInputHDMI(value0) {
        this.value0 = value0;
    };
    TVInputHDMI.create = function (value0) {
        return new TVInputHDMI(value0);
    };
    return TVInputHDMI;
})();
var TVInputVGA1 = (function () {
    function TVInputVGA1() {

    };
    TVInputVGA1.value = new TVInputVGA1();
    return TVInputVGA1;
})();
var TVMediaContext = (function () {
    function TVMediaContext() {

    };
    TVMediaContext.value = new TVMediaContext();
    return TVMediaContext;
})();
var TVNetwork = (function () {
    function TVNetwork() {

    };
    TVNetwork.value = new TVNetwork();
    return TVNetwork;
})();
var TVNumberEntry = (function () {
    function TVNumberEntry() {

    };
    TVNumberEntry.value = new TVNumberEntry();
    return TVNumberEntry;
})();
var TVPower = (function () {
    function TVPower() {

    };
    TVPower.value = new TVPower();
    return TVPower;
})();
var TVRadioService = (function () {
    function TVRadioService() {

    };
    TVRadioService.value = new TVRadioService();
    return TVRadioService;
})();
var TVSatellite = (function () {
    function TVSatellite() {

    };
    TVSatellite.value = new TVSatellite();
    return TVSatellite;
})();
var TVSatelliteBS = (function () {
    function TVSatelliteBS() {

    };
    TVSatelliteBS.value = new TVSatelliteBS();
    return TVSatelliteBS;
})();
var TVSatelliteCS = (function () {
    function TVSatelliteCS() {

    };
    TVSatelliteCS.value = new TVSatelliteCS();
    return TVSatelliteCS;
})();
var TVSatelliteToggle = (function () {
    function TVSatelliteToggle() {

    };
    TVSatelliteToggle.value = new TVSatelliteToggle();
    return TVSatelliteToggle;
})();
var TVTerrestrialAnalog = (function () {
    function TVTerrestrialAnalog() {

    };
    TVTerrestrialAnalog.value = new TVTerrestrialAnalog();
    return TVTerrestrialAnalog;
})();
var TVTerrestrialDigital = (function () {
    function TVTerrestrialDigital() {

    };
    TVTerrestrialDigital.value = new TVTerrestrialDigital();
    return TVTerrestrialDigital;
})();
var TVTimer = (function () {
    function TVTimer() {

    };
    TVTimer.value = new TVTimer();
    return TVTimer;
})();
var AVRInput = (function () {
    function AVRInput() {

    };
    AVRInput.value = new AVRInput();
    return AVRInput;
})();
var AVRPower = (function () {
    function AVRPower() {

    };
    AVRPower.value = new AVRPower();
    return AVRPower;
})();
var ColorF0Red = (function () {
    function ColorF0Red() {

    };
    ColorF0Red.value = new ColorF0Red();
    return ColorF0Red;
})();
var ColorF1Green = (function () {
    function ColorF1Green() {

    };
    ColorF1Green.value = new ColorF1Green();
    return ColorF1Green;
})();
var ColorF2Yellow = (function () {
    function ColorF2Yellow() {

    };
    ColorF2Yellow.value = new ColorF2Yellow();
    return ColorF2Yellow;
})();
var ColorF3Blue = (function () {
    function ColorF3Blue() {

    };
    ColorF3Blue.value = new ColorF3Blue();
    return ColorF3Blue;
})();
var ColorF4Grey = (function () {
    function ColorF4Grey() {

    };
    ColorF4Grey.value = new ColorF4Grey();
    return ColorF4Grey;
})();
var ColorF5Brown = (function () {
    function ColorF5Brown() {

    };
    ColorF5Brown.value = new ColorF5Brown();
    return ColorF5Brown;
})();
var ClosedCaptionToggle = (function () {
    function ClosedCaptionToggle() {

    };
    ClosedCaptionToggle.value = new ClosedCaptionToggle();
    return ClosedCaptionToggle;
})();
var Dimmer = (function () {
    function Dimmer() {

    };
    Dimmer.value = new Dimmer();
    return Dimmer;
})();
var DisplaySwap = (function () {
    function DisplaySwap() {

    };
    DisplaySwap.value = new DisplaySwap();
    return DisplaySwap;
})();
var DVR = (function () {
    function DVR() {

    };
    DVR.value = new DVR();
    return DVR;
})();
var Exit = (function () {
    function Exit() {

    };
    Exit.value = new Exit();
    return Exit;
})();
var FavoriteClear = (function () {
    function FavoriteClear(value0) {
        this.value0 = value0;
    };
    FavoriteClear.create = function (value0) {
        return new FavoriteClear(value0);
    };
    return FavoriteClear;
})();
var FavoriteRecall = (function () {
    function FavoriteRecall(value0) {
        this.value0 = value0;
    };
    FavoriteRecall.create = function (value0) {
        return new FavoriteRecall(value0);
    };
    return FavoriteRecall;
})();
var FavoriteStore = (function () {
    function FavoriteStore(value0) {
        this.value0 = value0;
    };
    FavoriteStore.create = function (value0) {
        return new FavoriteStore(value0);
    };
    return FavoriteStore;
})();
var Guide = (function () {
    function Guide() {

    };
    Guide.value = new Guide();
    return Guide;
})();
var GuideNextDay = (function () {
    function GuideNextDay() {

    };
    GuideNextDay.value = new GuideNextDay();
    return GuideNextDay;
})();
var GuidePreviousDay = (function () {
    function GuidePreviousDay() {

    };
    GuidePreviousDay.value = new GuidePreviousDay();
    return GuidePreviousDay;
})();
var Info = (function () {
    function Info() {

    };
    Info.value = new Info();
    return Info;
})();
var InstantReplay = (function () {
    function InstantReplay() {

    };
    InstantReplay.value = new InstantReplay();
    return InstantReplay;
})();
var Link = (function () {
    function Link() {

    };
    Link.value = new Link();
    return Link;
})();
var ListProgram = (function () {
    function ListProgram() {

    };
    ListProgram.value = new ListProgram();
    return ListProgram;
})();
var LiveContent = (function () {
    function LiveContent() {

    };
    LiveContent.value = new LiveContent();
    return LiveContent;
})();
var Lock = (function () {
    function Lock() {

    };
    Lock.value = new Lock();
    return Lock;
})();
var MediaApps = (function () {
    function MediaApps() {

    };
    MediaApps.value = new MediaApps();
    return MediaApps;
})();
var MediaAudioTrack = (function () {
    function MediaAudioTrack() {

    };
    MediaAudioTrack.value = new MediaAudioTrack();
    return MediaAudioTrack;
})();
var MediaLast = (function () {
    function MediaLast() {

    };
    MediaLast.value = new MediaLast();
    return MediaLast;
})();
var MediaSkipBackward = (function () {
    function MediaSkipBackward() {

    };
    MediaSkipBackward.value = new MediaSkipBackward();
    return MediaSkipBackward;
})();
var MediaSkipForward = (function () {
    function MediaSkipForward() {

    };
    MediaSkipForward.value = new MediaSkipForward();
    return MediaSkipForward;
})();
var MediaStepBackward = (function () {
    function MediaStepBackward() {

    };
    MediaStepBackward.value = new MediaStepBackward();
    return MediaStepBackward;
})();
var MediaStepForward = (function () {
    function MediaStepForward() {

    };
    MediaStepForward.value = new MediaStepForward();
    return MediaStepForward;
})();
var MediaTopMenu = (function () {
    function MediaTopMenu() {

    };
    MediaTopMenu.value = new MediaTopMenu();
    return MediaTopMenu;
})();
var NavigateIn = (function () {
    function NavigateIn() {

    };
    NavigateIn.value = new NavigateIn();
    return NavigateIn;
})();
var NavigateNext = (function () {
    function NavigateNext() {

    };
    NavigateNext.value = new NavigateNext();
    return NavigateNext;
})();
var NavigateOut = (function () {
    function NavigateOut() {

    };
    NavigateOut.value = new NavigateOut();
    return NavigateOut;
})();
var NavigatePrevious = (function () {
    function NavigatePrevious() {

    };
    NavigatePrevious.value = new NavigatePrevious();
    return NavigatePrevious;
})();
var NextFavoriteChannel = (function () {
    function NextFavoriteChannel() {

    };
    NextFavoriteChannel.value = new NextFavoriteChannel();
    return NextFavoriteChannel;
})();
var NextUserProfile = (function () {
    function NextUserProfile() {

    };
    NextUserProfile.value = new NextUserProfile();
    return NextUserProfile;
})();
var OnDemand = (function () {
    function OnDemand() {

    };
    OnDemand.value = new OnDemand();
    return OnDemand;
})();
var Pairing = (function () {
    function Pairing() {

    };
    Pairing.value = new Pairing();
    return Pairing;
})();
var PinPDown = (function () {
    function PinPDown() {

    };
    PinPDown.value = new PinPDown();
    return PinPDown;
})();
var PinPMove = (function () {
    function PinPMove() {

    };
    PinPMove.value = new PinPMove();
    return PinPMove;
})();
var PinPToggle = (function () {
    function PinPToggle() {

    };
    PinPToggle.value = new PinPToggle();
    return PinPToggle;
})();
var PinPUp = (function () {
    function PinPUp() {

    };
    PinPUp.value = new PinPUp();
    return PinPUp;
})();
var PlaySpeedDown = (function () {
    function PlaySpeedDown() {

    };
    PlaySpeedDown.value = new PlaySpeedDown();
    return PlaySpeedDown;
})();
var PlaySpeedReset = (function () {
    function PlaySpeedReset() {

    };
    PlaySpeedReset.value = new PlaySpeedReset();
    return PlaySpeedReset;
})();
var PlaySpeedUp = (function () {
    function PlaySpeedUp() {

    };
    PlaySpeedUp.value = new PlaySpeedUp();
    return PlaySpeedUp;
})();
var RandomToggle = (function () {
    function RandomToggle() {

    };
    RandomToggle.value = new RandomToggle();
    return RandomToggle;
})();
var RcLowBattery = (function () {
    function RcLowBattery() {

    };
    RcLowBattery.value = new RcLowBattery();
    return RcLowBattery;
})();
var RecordSpeedNext = (function () {
    function RecordSpeedNext() {

    };
    RecordSpeedNext.value = new RecordSpeedNext();
    return RecordSpeedNext;
})();
var RfBypass = (function () {
    function RfBypass() {

    };
    RfBypass.value = new RfBypass();
    return RfBypass;
})();
var ScanChannelsToggle = (function () {
    function ScanChannelsToggle() {

    };
    ScanChannelsToggle.value = new ScanChannelsToggle();
    return ScanChannelsToggle;
})();
var ScreenModeNext = (function () {
    function ScreenModeNext() {

    };
    ScreenModeNext.value = new ScreenModeNext();
    return ScreenModeNext;
})();
var Settings = (function () {
    function Settings() {

    };
    Settings.value = new Settings();
    return Settings;
})();
var SplitScreenToggle = (function () {
    function SplitScreenToggle() {

    };
    SplitScreenToggle.value = new SplitScreenToggle();
    return SplitScreenToggle;
})();
var STBInput = (function () {
    function STBInput() {

    };
    STBInput.value = new STBInput();
    return STBInput;
})();
var STBPower = (function () {
    function STBPower() {

    };
    STBPower.value = new STBPower();
    return STBPower;
})();
var Subtitle = (function () {
    function Subtitle() {

    };
    Subtitle.value = new Subtitle();
    return Subtitle;
})();
var Teletext = (function () {
    function Teletext() {

    };
    Teletext.value = new Teletext();
    return Teletext;
})();
var VideoModeNext = (function () {
    function VideoModeNext() {

    };
    VideoModeNext.value = new VideoModeNext();
    return VideoModeNext;
})();
var Wink = (function () {
    function Wink() {

    };
    Wink.value = new Wink();
    return Wink;
})();
var ZoomToggle = (function () {
    function ZoomToggle() {

    };
    ZoomToggle.value = new ZoomToggle();
    return ZoomToggle;
})();
var unparse = function (v) {
    if (v instanceof Unicode) {
        return v.value0;
    };
    if (v instanceof Unidentified) {
        return "Unidentified";
    };
    if (v instanceof Alt) {
        return "Alt";
    };
    if (v instanceof AltGraph) {
        return "AltGraph";
    };
    if (v instanceof CapsLock) {
        return "CapsLock";
    };
    if (v instanceof Control) {
        return "Control";
    };
    if (v instanceof Fn) {
        return "Fn";
    };
    if (v instanceof FnLock) {
        return "FnLock";
    };
    if (v instanceof Meta) {
        return "Meta";
    };
    if (v instanceof NumLock) {
        return "NumLock";
    };
    if (v instanceof ScrollLock) {
        return "ScrollLock";
    };
    if (v instanceof Shift) {
        return "Shift";
    };
    if (v instanceof $$Symbol) {
        return "Symbol";
    };
    if (v instanceof SymbolLock) {
        return "SymbolLock";
    };
    if (v instanceof Hyper) {
        return "Hyper";
    };
    if (v instanceof Super) {
        return "Super";
    };
    if (v instanceof Enter) {
        return "Enter";
    };
    if (v instanceof Tab) {
        return "Tab";
    };
    if (v instanceof ArrowDown) {
        return "ArrowDown";
    };
    if (v instanceof ArrowLeft) {
        return "ArrowLeft";
    };
    if (v instanceof ArrowRight) {
        return "ArrowRight";
    };
    if (v instanceof ArrowUp) {
        return "ArrowUp";
    };
    if (v instanceof End) {
        return "End";
    };
    if (v instanceof Home) {
        return "Home";
    };
    if (v instanceof PageDown) {
        return "PageDown";
    };
    if (v instanceof PageUp) {
        return "PageUp";
    };
    if (v instanceof Backspace) {
        return "Backspace";
    };
    if (v instanceof Clear) {
        return "Clear";
    };
    if (v instanceof Copy) {
        return "Copy";
    };
    if (v instanceof CrSel) {
        return "CrSel";
    };
    if (v instanceof Cut) {
        return "Cut";
    };
    if (v instanceof Delete) {
        return "Delete";
    };
    if (v instanceof EraseEof) {
        return "EraseEof";
    };
    if (v instanceof ExSel) {
        return "ExSel";
    };
    if (v instanceof Insert) {
        return "Insert";
    };
    if (v instanceof Paste) {
        return "Paste";
    };
    if (v instanceof Redo) {
        return "Redo";
    };
    if (v instanceof Undo) {
        return "Undo";
    };
    if (v instanceof Accept) {
        return "Accept";
    };
    if (v instanceof Again) {
        return "Again";
    };
    if (v instanceof Attn) {
        return "Attn";
    };
    if (v instanceof Cancel) {
        return "Cancel";
    };
    if (v instanceof ContextMenu) {
        return "ContextMenu";
    };
    if (v instanceof Escape) {
        return "Escape";
    };
    if (v instanceof Execute) {
        return "Execute";
    };
    if (v instanceof Find) {
        return "Find";
    };
    if (v instanceof Help) {
        return "Help";
    };
    if (v instanceof Pause) {
        return "Pause";
    };
    if (v instanceof Play) {
        return "Play";
    };
    if (v instanceof Props) {
        return "Props";
    };
    if (v instanceof Select) {
        return "Select";
    };
    if (v instanceof ZoomIn) {
        return "ZoomIn";
    };
    if (v instanceof ZoomOut) {
        return "ZoomOut";
    };
    if (v instanceof BrightnessDown) {
        return "BrightnessDown";
    };
    if (v instanceof BrightnessUp) {
        return "BrightnessUp";
    };
    if (v instanceof Eject) {
        return "Eject";
    };
    if (v instanceof LogOff) {
        return "LogOff";
    };
    if (v instanceof Power) {
        return "Power";
    };
    if (v instanceof PowerOff) {
        return "PowerOff";
    };
    if (v instanceof PrintScreen) {
        return "PrintScreen";
    };
    if (v instanceof Hibernate) {
        return "Hibernate";
    };
    if (v instanceof Standby) {
        return "Standby";
    };
    if (v instanceof WakeUp) {
        return "WakeUp";
    };
    if (v instanceof AllCandidates) {
        return "AllCandidates";
    };
    if (v instanceof Alphanumeric) {
        return "Alphanumeric";
    };
    if (v instanceof CodeInput) {
        return "CodeInput";
    };
    if (v instanceof Compose) {
        return "Compose";
    };
    if (v instanceof Convert) {
        return "Convert";
    };
    if (v instanceof Dead) {
        return "Dead";
    };
    if (v instanceof FinalMode) {
        return "FinalMode";
    };
    if (v instanceof GroupFirst) {
        return "GroupFirst";
    };
    if (v instanceof GroupLast) {
        return "GroupLast";
    };
    if (v instanceof GroupNext) {
        return "GroupNext";
    };
    if (v instanceof GroupPrevious) {
        return "GroupPrevious";
    };
    if (v instanceof ModeChange) {
        return "ModeChange";
    };
    if (v instanceof NextCandidate) {
        return "NextCandidate";
    };
    if (v instanceof NonConvert) {
        return "NonConvert";
    };
    if (v instanceof PreviousCandidate) {
        return "PreviousCandidate";
    };
    if (v instanceof Process) {
        return "Process";
    };
    if (v instanceof SingleCandidate) {
        return "SingleCandidate";
    };
    if (v instanceof HangulMode) {
        return "HangulMode";
    };
    if (v instanceof HanjaMode) {
        return "HanjaMode";
    };
    if (v instanceof JunjaMode) {
        return "JunjaMode";
    };
    if (v instanceof Eisu) {
        return "Eisu";
    };
    if (v instanceof Hankaku) {
        return "Hankaku";
    };
    if (v instanceof Hiragana) {
        return "Hiragana";
    };
    if (v instanceof HiraganaKatakana) {
        return "HiraganaKatakana";
    };
    if (v instanceof KanaMode) {
        return "KanaMode";
    };
    if (v instanceof KanjiMode) {
        return "KanjiMode";
    };
    if (v instanceof Katakana) {
        return "Katakana";
    };
    if (v instanceof Romaji) {
        return "Romaji";
    };
    if (v instanceof Zenkaku) {
        return "Zenkaku";
    };
    if (v instanceof ZenkakuHankaku) {
        return "ZenkakuHankaku";
    };
    if (v instanceof F) {
        return "F" + Data_Show.show(Data_Show.showInt)(v.value0);
    };
    if (v instanceof Soft) {
        return "Soft" + Data_Show.show(Data_Show.showInt)(v.value0);
    };
    if (v instanceof ChannelDown) {
        return "ChannelDown";
    };
    if (v instanceof ChannelUp) {
        return "ChannelUp";
    };
    if (v instanceof Close) {
        return "Close";
    };
    if (v instanceof MailForward) {
        return "MailForward";
    };
    if (v instanceof MailReply) {
        return "MailReply";
    };
    if (v instanceof MailSend) {
        return "MailSend";
    };
    if (v instanceof MediaClose) {
        return "MediaClose";
    };
    if (v instanceof MediaFastForward) {
        return "MediaFastForward";
    };
    if (v instanceof MediaPause) {
        return "MediaPause";
    };
    if (v instanceof MediaPlay) {
        return "MediaPlay";
    };
    if (v instanceof MediaPlayPause) {
        return "MediaPlayPause";
    };
    if (v instanceof MediaRecord) {
        return "MediaRecord";
    };
    if (v instanceof MediaRewind) {
        return "MediaRewind";
    };
    if (v instanceof MediaStop) {
        return "MediaStop";
    };
    if (v instanceof MediaTrackNext) {
        return "MediaTrackNext";
    };
    if (v instanceof MediaTrackPrevious) {
        return "MediaTrackPrevious";
    };
    if (v instanceof New) {
        return "New";
    };
    if (v instanceof Open) {
        return "Open";
    };
    if (v instanceof Print) {
        return "Print";
    };
    if (v instanceof Save) {
        return "Save";
    };
    if (v instanceof SpellCheck) {
        return "SpellCheck";
    };
    if (v instanceof Key11) {
        return "Key11";
    };
    if (v instanceof Key12) {
        return "Key12";
    };
    if (v instanceof AudioBalanceLeft) {
        return "AudioBalanceLeft";
    };
    if (v instanceof AudioBalanceRight) {
        return "AudioBalanceRight";
    };
    if (v instanceof AudioBassBoostDown) {
        return "AudioBassBoostDown";
    };
    if (v instanceof AudioBassBoostToggle) {
        return "AudioBassBoostToggle";
    };
    if (v instanceof AudioBassBoostUp) {
        return "AudioBassBoostUp";
    };
    if (v instanceof AudioFaderFront) {
        return "AudioFaderFront";
    };
    if (v instanceof AudioFaderRear) {
        return "AudioFaderRear";
    };
    if (v instanceof AudioSurroundModeNext) {
        return "AudioSurroundModeNext";
    };
    if (v instanceof AudioTrebleDown) {
        return "AudioTrebleDown";
    };
    if (v instanceof AudioTrebleUp) {
        return "AudioTrebleUp";
    };
    if (v instanceof AudioVolumeDown) {
        return "AudioVolumeDown";
    };
    if (v instanceof AudioVolumeUp) {
        return "AudioVolumeUp";
    };
    if (v instanceof AudioVolumeMute) {
        return "AudioVolumeMute";
    };
    if (v instanceof MicrophoneToggle) {
        return "MicrophoneToggle";
    };
    if (v instanceof MicrophoneVolumeDown) {
        return "MicrophoneVolumeDown";
    };
    if (v instanceof MicrophoneVolumeUp) {
        return "MicrophoneVolumeUp";
    };
    if (v instanceof MicrophoneVolumeMute) {
        return "MicrophoneVolumeMute";
    };
    if (v instanceof SpeechCorrectionList) {
        return "SpeechCorrectionList";
    };
    if (v instanceof SpeechInputToggle) {
        return "SpeechInputToggle";
    };
    if (v instanceof LaunchApplication) {
        return "LaunchApplication" + Data_Show.show(Data_Show.showInt)(v.value0);
    };
    if (v instanceof LaunchCalendar) {
        return "LaunchCalendar";
    };
    if (v instanceof LaunchContacts) {
        return "LaunchContacts";
    };
    if (v instanceof LaunchMail) {
        return "LaunchMail";
    };
    if (v instanceof LaunchMediaPlayer) {
        return "LaunchMediaPlayer";
    };
    if (v instanceof LaunchMusicPlayer) {
        return "LaunchMusicPlayer";
    };
    if (v instanceof LaunchPhone) {
        return "LaunchPhone";
    };
    if (v instanceof LaunchScreenSaver) {
        return "LaunchScreenSaver";
    };
    if (v instanceof LaunchSpreadsheet) {
        return "LaunchSpreadsheet";
    };
    if (v instanceof LaunchWebBrowser) {
        return "LaunchWebBrowser";
    };
    if (v instanceof LaunchWebCam) {
        return "LaunchWebCam";
    };
    if (v instanceof LaunchWordProcessor) {
        return "LaunchWordProcessor";
    };
    if (v instanceof BrowserBack) {
        return "BrowserBack";
    };
    if (v instanceof BrowserFavorites) {
        return "BrowserFavorites";
    };
    if (v instanceof BrowserForward) {
        return "BrowserForward";
    };
    if (v instanceof BrowserHome) {
        return "BrowserHome";
    };
    if (v instanceof BrowserRefresh) {
        return "BrowserRefresh";
    };
    if (v instanceof BrowserSearch) {
        return "BrowserSearch";
    };
    if (v instanceof BrowserStop) {
        return "BrowserStop";
    };
    if (v instanceof AppSwitch) {
        return "AppSwitch";
    };
    if (v instanceof Call) {
        return "Call";
    };
    if (v instanceof Camera) {
        return "Camera";
    };
    if (v instanceof CameraFocus) {
        return "CameraFocus";
    };
    if (v instanceof EndCall) {
        return "EndCall";
    };
    if (v instanceof GoBack) {
        return "GoBack";
    };
    if (v instanceof GoHome) {
        return "GoHome";
    };
    if (v instanceof HeadsetHook) {
        return "HeadsetHook";
    };
    if (v instanceof LastNumberRedial) {
        return "LastNumberRedial";
    };
    if (v instanceof Notification) {
        return "Notification";
    };
    if (v instanceof MannerMode) {
        return "MannerMode";
    };
    if (v instanceof VoiceDial) {
        return "VoiceDial";
    };
    if (v instanceof TV) {
        return "TV";
    };
    if (v instanceof TV3DMode) {
        return "TV3DMode";
    };
    if (v instanceof TVAntennaCable) {
        return "TVAntennaCable";
    };
    if (v instanceof TVAudioDescription) {
        return "TVAudioDescription";
    };
    if (v instanceof TVAudioDescriptionMixDown) {
        return "TVAudioDescriptionMixDown";
    };
    if (v instanceof TVAudioDescriptionMixUp) {
        return "TVAudioDescriptionMixUp";
    };
    if (v instanceof TVContentsMenu) {
        return "TVContentsMenu";
    };
    if (v instanceof TVDataService) {
        return "TVDataService";
    };
    if (v instanceof TVInput) {
        return "TVInput";
    };
    if (v instanceof TVInputComponent) {
        return "TVInputComponent" + Data_Show.show(Data_Show.showInt)(v.value0);
    };
    if (v instanceof TVInputComposite) {
        return "TVInputComposite" + Data_Show.show(Data_Show.showInt)(v.value0);
    };
    if (v instanceof TVInputHDMI) {
        return "TVInputHDMI" + Data_Show.show(Data_Show.showInt)(v.value0);
    };
    if (v instanceof TVInputVGA1) {
        return "TVInputVGA1";
    };
    if (v instanceof TVMediaContext) {
        return "TVMediaContext";
    };
    if (v instanceof TVNetwork) {
        return "TVNetwork";
    };
    if (v instanceof TVNumberEntry) {
        return "TVNumberEntry";
    };
    if (v instanceof TVPower) {
        return "TVPower";
    };
    if (v instanceof TVRadioService) {
        return "TVRadioService";
    };
    if (v instanceof TVSatellite) {
        return "TVSatellite";
    };
    if (v instanceof TVSatelliteBS) {
        return "TVSatelliteBS";
    };
    if (v instanceof TVSatelliteCS) {
        return "TVSatelliteCS";
    };
    if (v instanceof TVSatelliteToggle) {
        return "TVSatelliteToggle";
    };
    if (v instanceof TVTerrestrialAnalog) {
        return "TVTerrestrialAnalog";
    };
    if (v instanceof TVTerrestrialDigital) {
        return "TVTerrestrialDigital";
    };
    if (v instanceof TVTimer) {
        return "TVTimer";
    };
    if (v instanceof AVRInput) {
        return "AVRInput";
    };
    if (v instanceof AVRPower) {
        return "AVRPower";
    };
    if (v instanceof ColorF0Red) {
        return "ColorF0Red";
    };
    if (v instanceof ColorF1Green) {
        return "ColorF1Green";
    };
    if (v instanceof ColorF2Yellow) {
        return "ColorF2Yellow";
    };
    if (v instanceof ColorF3Blue) {
        return "ColorF3Blue";
    };
    if (v instanceof ColorF4Grey) {
        return "ColorF4Grey";
    };
    if (v instanceof ColorF5Brown) {
        return "ColorF5Brown";
    };
    if (v instanceof ClosedCaptionToggle) {
        return "ClosedCaptionToggle";
    };
    if (v instanceof Dimmer) {
        return "Dimmer";
    };
    if (v instanceof DisplaySwap) {
        return "DisplaySwap";
    };
    if (v instanceof DVR) {
        return "DVR";
    };
    if (v instanceof Exit) {
        return "Exit";
    };
    if (v instanceof FavoriteClear) {
        return "FavoriteClear" + Data_Show.show(Data_Show.showInt)(v.value0);
    };
    if (v instanceof FavoriteRecall) {
        return "FavoriteRecall" + Data_Show.show(Data_Show.showInt)(v.value0);
    };
    if (v instanceof FavoriteStore) {
        return "FavoriteStore" + Data_Show.show(Data_Show.showInt)(v.value0);
    };
    if (v instanceof Guide) {
        return "Guide";
    };
    if (v instanceof GuideNextDay) {
        return "GuideNextDay";
    };
    if (v instanceof GuidePreviousDay) {
        return "GuidePreviousDay";
    };
    if (v instanceof Info) {
        return "Info";
    };
    if (v instanceof InstantReplay) {
        return "InstantReplay";
    };
    if (v instanceof Link) {
        return "Link";
    };
    if (v instanceof ListProgram) {
        return "ListProgram";
    };
    if (v instanceof LiveContent) {
        return "LiveContent";
    };
    if (v instanceof Lock) {
        return "Lock";
    };
    if (v instanceof MediaApps) {
        return "MediaApps";
    };
    if (v instanceof MediaAudioTrack) {
        return "MediaAudioTrack";
    };
    if (v instanceof MediaLast) {
        return "MediaLast";
    };
    if (v instanceof MediaSkipBackward) {
        return "MediaSkipBackward";
    };
    if (v instanceof MediaSkipForward) {
        return "MediaSkipForward";
    };
    if (v instanceof MediaStepBackward) {
        return "MediaStepBackward";
    };
    if (v instanceof MediaStepForward) {
        return "MediaStepForward";
    };
    if (v instanceof MediaTopMenu) {
        return "MediaTopMenu";
    };
    if (v instanceof NavigateIn) {
        return "NavigateIn";
    };
    if (v instanceof NavigateNext) {
        return "NavigateNext";
    };
    if (v instanceof NavigateOut) {
        return "NavigateOut";
    };
    if (v instanceof NavigatePrevious) {
        return "NavigatePrevious";
    };
    if (v instanceof NextFavoriteChannel) {
        return "NextFavoriteChannel";
    };
    if (v instanceof NextUserProfile) {
        return "NextUserProfile";
    };
    if (v instanceof OnDemand) {
        return "OnDemand";
    };
    if (v instanceof Pairing) {
        return "Pairing";
    };
    if (v instanceof PinPDown) {
        return "PinPDown";
    };
    if (v instanceof PinPMove) {
        return "PinPMove";
    };
    if (v instanceof PinPToggle) {
        return "PinPToggle";
    };
    if (v instanceof PinPUp) {
        return "PinPUp";
    };
    if (v instanceof PlaySpeedDown) {
        return "PlaySpeedDown";
    };
    if (v instanceof PlaySpeedReset) {
        return "PlaySpeedReset";
    };
    if (v instanceof PlaySpeedUp) {
        return "PlaySpeedUp";
    };
    if (v instanceof RandomToggle) {
        return "RandomToggle";
    };
    if (v instanceof RcLowBattery) {
        return "RcLowBattery";
    };
    if (v instanceof RecordSpeedNext) {
        return "RecordSpeedNext";
    };
    if (v instanceof RfBypass) {
        return "RfBypass";
    };
    if (v instanceof ScanChannelsToggle) {
        return "ScanChannelsToggle";
    };
    if (v instanceof ScreenModeNext) {
        return "ScreenModeNext";
    };
    if (v instanceof Settings) {
        return "Settings";
    };
    if (v instanceof SplitScreenToggle) {
        return "SplitScreenToggle";
    };
    if (v instanceof STBInput) {
        return "STBInput";
    };
    if (v instanceof STBPower) {
        return "STBPower";
    };
    if (v instanceof Subtitle) {
        return "Subtitle";
    };
    if (v instanceof Teletext) {
        return "Teletext";
    };
    if (v instanceof VideoModeNext) {
        return "VideoModeNext";
    };
    if (v instanceof Wink) {
        return "Wink";
    };
    if (v instanceof ZoomToggle) {
        return "ZoomToggle";
    };
    throw new Error("Failed pattern match at Web.UIEvents.Key.Internal line 792, column 1 - line 792, column 25: " + [ v.constructor.name ]);
};
var tryParse = function (prefix) {
    return Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(Data_Int.fromString)(Data_String.stripPrefix(prefix));
};
var toModifier = function (v) {
    if (v instanceof Alt) {
        return new Data_Maybe.Just(Web_UIEvents_Key_Internal_Modifier.Alt.value);
    };
    if (v instanceof AltGraph) {
        return new Data_Maybe.Just(Web_UIEvents_Key_Internal_Modifier.AltGraph.value);
    };
    if (v instanceof CapsLock) {
        return new Data_Maybe.Just(Web_UIEvents_Key_Internal_Modifier.CapsLock.value);
    };
    if (v instanceof Control) {
        return new Data_Maybe.Just(Web_UIEvents_Key_Internal_Modifier.Control.value);
    };
    if (v instanceof Fn) {
        return new Data_Maybe.Just(Web_UIEvents_Key_Internal_Modifier.Fn.value);
    };
    if (v instanceof FnLock) {
        return new Data_Maybe.Just(Web_UIEvents_Key_Internal_Modifier.FnLock.value);
    };
    if (v instanceof Meta) {
        return new Data_Maybe.Just(Web_UIEvents_Key_Internal_Modifier.Meta.value);
    };
    if (v instanceof NumLock) {
        return new Data_Maybe.Just(Web_UIEvents_Key_Internal_Modifier.NumLock.value);
    };
    if (v instanceof ScrollLock) {
        return new Data_Maybe.Just(Web_UIEvents_Key_Internal_Modifier.ScrollLock.value);
    };
    if (v instanceof Shift) {
        return new Data_Maybe.Just(Web_UIEvents_Key_Internal_Modifier.Shift.value);
    };
    if (v instanceof $$Symbol) {
        return new Data_Maybe.Just(Web_UIEvents_Key_Internal_Modifier["Symbol"].value);
    };
    if (v instanceof SymbolLock) {
        return new Data_Maybe.Just(Web_UIEvents_Key_Internal_Modifier.SymbolLock.value);
    };
    if (v instanceof Hyper) {
        return new Data_Maybe.Just(Web_UIEvents_Key_Internal_Modifier.Hyper.value);
    };
    if (v instanceof Super) {
        return new Data_Maybe.Just(Web_UIEvents_Key_Internal_Modifier.Super.value);
    };
    return Data_Maybe.Nothing.value;
};
var parseImpl = function (v) {
    if (v === "Unidentified") {
        return new Data_Maybe.Just(Unidentified.value);
    };
    if (v === "Alt") {
        return new Data_Maybe.Just(Alt.value);
    };
    if (v === "AltGraph") {
        return new Data_Maybe.Just(AltGraph.value);
    };
    if (v === "CapsLock") {
        return new Data_Maybe.Just(CapsLock.value);
    };
    if (v === "Control") {
        return new Data_Maybe.Just(Control.value);
    };
    if (v === "Fn") {
        return new Data_Maybe.Just(Fn.value);
    };
    if (v === "FnLock") {
        return new Data_Maybe.Just(FnLock.value);
    };
    if (v === "Meta") {
        return new Data_Maybe.Just(Meta.value);
    };
    if (v === "NumLock") {
        return new Data_Maybe.Just(NumLock.value);
    };
    if (v === "ScrollLock") {
        return new Data_Maybe.Just(ScrollLock.value);
    };
    if (v === "Shift") {
        return new Data_Maybe.Just(Shift.value);
    };
    if (v === "Symbol") {
        return new Data_Maybe.Just($$Symbol.value);
    };
    if (v === "SymbolLock") {
        return new Data_Maybe.Just(SymbolLock.value);
    };
    if (v === "Hyper") {
        return new Data_Maybe.Just(Hyper.value);
    };
    if (v === "Super") {
        return new Data_Maybe.Just(Super.value);
    };
    if (v === "Enter") {
        return new Data_Maybe.Just(Enter.value);
    };
    if (v === "Tab") {
        return new Data_Maybe.Just(Tab.value);
    };
    if (v === "ArrowDown") {
        return new Data_Maybe.Just(ArrowDown.value);
    };
    if (v === "ArrowLeft") {
        return new Data_Maybe.Just(ArrowLeft.value);
    };
    if (v === "ArrowRight") {
        return new Data_Maybe.Just(ArrowRight.value);
    };
    if (v === "ArrowUp") {
        return new Data_Maybe.Just(ArrowUp.value);
    };
    if (v === "End") {
        return new Data_Maybe.Just(End.value);
    };
    if (v === "Home") {
        return new Data_Maybe.Just(Home.value);
    };
    if (v === "PageDown") {
        return new Data_Maybe.Just(PageDown.value);
    };
    if (v === "PageUp") {
        return new Data_Maybe.Just(PageUp.value);
    };
    if (v === "Backspace") {
        return new Data_Maybe.Just(Backspace.value);
    };
    if (v === "Clear") {
        return new Data_Maybe.Just(Clear.value);
    };
    if (v === "Copy") {
        return new Data_Maybe.Just(Copy.value);
    };
    if (v === "CrSel") {
        return new Data_Maybe.Just(CrSel.value);
    };
    if (v === "Cut") {
        return new Data_Maybe.Just(Cut.value);
    };
    if (v === "Delete") {
        return new Data_Maybe.Just(Delete.value);
    };
    if (v === "EraseEof") {
        return new Data_Maybe.Just(EraseEof.value);
    };
    if (v === "ExSel") {
        return new Data_Maybe.Just(ExSel.value);
    };
    if (v === "Insert") {
        return new Data_Maybe.Just(Insert.value);
    };
    if (v === "Paste") {
        return new Data_Maybe.Just(Paste.value);
    };
    if (v === "Redo") {
        return new Data_Maybe.Just(Redo.value);
    };
    if (v === "Undo") {
        return new Data_Maybe.Just(Undo.value);
    };
    if (v === "Accept") {
        return new Data_Maybe.Just(Accept.value);
    };
    if (v === "Again") {
        return new Data_Maybe.Just(Again.value);
    };
    if (v === "Attn") {
        return new Data_Maybe.Just(Attn.value);
    };
    if (v === "Cancel") {
        return new Data_Maybe.Just(Cancel.value);
    };
    if (v === "ContextMenu") {
        return new Data_Maybe.Just(ContextMenu.value);
    };
    if (v === "Escape") {
        return new Data_Maybe.Just(Escape.value);
    };
    if (v === "Execute") {
        return new Data_Maybe.Just(Execute.value);
    };
    if (v === "Find") {
        return new Data_Maybe.Just(Find.value);
    };
    if (v === "Help") {
        return new Data_Maybe.Just(Help.value);
    };
    if (v === "Pause") {
        return new Data_Maybe.Just(Pause.value);
    };
    if (v === "Play") {
        return new Data_Maybe.Just(Play.value);
    };
    if (v === "Props") {
        return new Data_Maybe.Just(Props.value);
    };
    if (v === "Select") {
        return new Data_Maybe.Just(Select.value);
    };
    if (v === "ZoomIn") {
        return new Data_Maybe.Just(ZoomIn.value);
    };
    if (v === "ZoomOut") {
        return new Data_Maybe.Just(ZoomOut.value);
    };
    if (v === "BrightnessDown") {
        return new Data_Maybe.Just(BrightnessDown.value);
    };
    if (v === "BrightnessUp") {
        return new Data_Maybe.Just(BrightnessUp.value);
    };
    if (v === "Eject") {
        return new Data_Maybe.Just(Eject.value);
    };
    if (v === "LogOff") {
        return new Data_Maybe.Just(LogOff.value);
    };
    if (v === "Power") {
        return new Data_Maybe.Just(Power.value);
    };
    if (v === "PowerOff") {
        return new Data_Maybe.Just(PowerOff.value);
    };
    if (v === "PrintScreen") {
        return new Data_Maybe.Just(PrintScreen.value);
    };
    if (v === "Hibernate") {
        return new Data_Maybe.Just(Hibernate.value);
    };
    if (v === "Standby") {
        return new Data_Maybe.Just(Standby.value);
    };
    if (v === "WakeUp") {
        return new Data_Maybe.Just(WakeUp.value);
    };
    if (v === "AllCandidates") {
        return new Data_Maybe.Just(AllCandidates.value);
    };
    if (v === "Alphanumeric") {
        return new Data_Maybe.Just(Alphanumeric.value);
    };
    if (v === "CodeInput") {
        return new Data_Maybe.Just(CodeInput.value);
    };
    if (v === "Compose") {
        return new Data_Maybe.Just(Compose.value);
    };
    if (v === "Convert") {
        return new Data_Maybe.Just(Convert.value);
    };
    if (v === "Dead") {
        return new Data_Maybe.Just(Dead.value);
    };
    if (v === "FinalMode") {
        return new Data_Maybe.Just(FinalMode.value);
    };
    if (v === "GroupFirst") {
        return new Data_Maybe.Just(GroupFirst.value);
    };
    if (v === "GroupLast") {
        return new Data_Maybe.Just(GroupLast.value);
    };
    if (v === "GroupNext") {
        return new Data_Maybe.Just(GroupNext.value);
    };
    if (v === "GroupPrevious") {
        return new Data_Maybe.Just(GroupPrevious.value);
    };
    if (v === "ModeChange") {
        return new Data_Maybe.Just(ModeChange.value);
    };
    if (v === "NextCandidate") {
        return new Data_Maybe.Just(NextCandidate.value);
    };
    if (v === "NonConvert") {
        return new Data_Maybe.Just(NonConvert.value);
    };
    if (v === "PreviousCandidate") {
        return new Data_Maybe.Just(PreviousCandidate.value);
    };
    if (v === "Process") {
        return new Data_Maybe.Just(Process.value);
    };
    if (v === "SingleCandidate") {
        return new Data_Maybe.Just(SingleCandidate.value);
    };
    if (v === "HangulMode") {
        return new Data_Maybe.Just(HangulMode.value);
    };
    if (v === "HanjaMode") {
        return new Data_Maybe.Just(HanjaMode.value);
    };
    if (v === "JunjaMode") {
        return new Data_Maybe.Just(JunjaMode.value);
    };
    if (v === "Eisu") {
        return new Data_Maybe.Just(Eisu.value);
    };
    if (v === "Hankaku") {
        return new Data_Maybe.Just(Hankaku.value);
    };
    if (v === "Hiragana") {
        return new Data_Maybe.Just(Hiragana.value);
    };
    if (v === "HiraganaKatakana") {
        return new Data_Maybe.Just(HiraganaKatakana.value);
    };
    if (v === "KanaMode") {
        return new Data_Maybe.Just(KanaMode.value);
    };
    if (v === "KanjiMode") {
        return new Data_Maybe.Just(KanjiMode.value);
    };
    if (v === "Katakana") {
        return new Data_Maybe.Just(Katakana.value);
    };
    if (v === "Romaji") {
        return new Data_Maybe.Just(Romaji.value);
    };
    if (v === "Zenkaku") {
        return new Data_Maybe.Just(Zenkaku.value);
    };
    if (v === "ZenkakuHankaku") {
        return new Data_Maybe.Just(ZenkakuHankaku.value);
    };
    var v1 = function (v2) {
        var v3 = function (v4) {
            if (v === "ChannelDown") {
                return new Data_Maybe.Just(ChannelDown.value);
            };
            if (v === "ChannelUp") {
                return new Data_Maybe.Just(ChannelUp.value);
            };
            if (v === "Close") {
                return new Data_Maybe.Just(Close.value);
            };
            if (v === "MailForward") {
                return new Data_Maybe.Just(MailForward.value);
            };
            if (v === "MailReply") {
                return new Data_Maybe.Just(MailReply.value);
            };
            if (v === "MailSend") {
                return new Data_Maybe.Just(MailSend.value);
            };
            if (v === "MediaClose") {
                return new Data_Maybe.Just(MediaClose.value);
            };
            if (v === "MediaFastForward") {
                return new Data_Maybe.Just(MediaFastForward.value);
            };
            if (v === "MediaPause") {
                return new Data_Maybe.Just(MediaPause.value);
            };
            if (v === "MediaPlay") {
                return new Data_Maybe.Just(MediaPlay.value);
            };
            if (v === "MediaPlayPause") {
                return new Data_Maybe.Just(MediaPlayPause.value);
            };
            if (v === "MediaRecord") {
                return new Data_Maybe.Just(MediaRecord.value);
            };
            if (v === "MediaRewind") {
                return new Data_Maybe.Just(MediaRewind.value);
            };
            if (v === "MediaStop") {
                return new Data_Maybe.Just(MediaStop.value);
            };
            if (v === "MediaTrackNext") {
                return new Data_Maybe.Just(MediaTrackNext.value);
            };
            if (v === "MediaTrackPrevious") {
                return new Data_Maybe.Just(MediaTrackPrevious.value);
            };
            if (v === "New") {
                return new Data_Maybe.Just(New.value);
            };
            if (v === "Open") {
                return new Data_Maybe.Just(Open.value);
            };
            if (v === "Print") {
                return new Data_Maybe.Just(Print.value);
            };
            if (v === "Save") {
                return new Data_Maybe.Just(Save.value);
            };
            if (v === "SpellCheck") {
                return new Data_Maybe.Just(SpellCheck.value);
            };
            if (v === "Key11") {
                return new Data_Maybe.Just(Key11.value);
            };
            if (v === "Key12") {
                return new Data_Maybe.Just(Key12.value);
            };
            if (v === "AudioBalanceLeft") {
                return new Data_Maybe.Just(AudioBalanceLeft.value);
            };
            if (v === "AudioBalanceRight") {
                return new Data_Maybe.Just(AudioBalanceRight.value);
            };
            if (v === "AudioBassBoostDown") {
                return new Data_Maybe.Just(AudioBassBoostDown.value);
            };
            if (v === "AudioBassBoostToggle") {
                return new Data_Maybe.Just(AudioBassBoostToggle.value);
            };
            if (v === "AudioBassBoostUp") {
                return new Data_Maybe.Just(AudioBassBoostUp.value);
            };
            if (v === "AudioFaderFront") {
                return new Data_Maybe.Just(AudioFaderFront.value);
            };
            if (v === "AudioFaderRear") {
                return new Data_Maybe.Just(AudioFaderRear.value);
            };
            if (v === "AudioSurroundModeNext") {
                return new Data_Maybe.Just(AudioSurroundModeNext.value);
            };
            if (v === "AudioTrebleDown") {
                return new Data_Maybe.Just(AudioTrebleDown.value);
            };
            if (v === "AudioTrebleUp") {
                return new Data_Maybe.Just(AudioTrebleUp.value);
            };
            if (v === "AudioVolumeDown") {
                return new Data_Maybe.Just(AudioVolumeDown.value);
            };
            if (v === "AudioVolumeUp") {
                return new Data_Maybe.Just(AudioVolumeUp.value);
            };
            if (v === "AudioVolumeMute") {
                return new Data_Maybe.Just(AudioVolumeMute.value);
            };
            if (v === "MicrophoneToggle") {
                return new Data_Maybe.Just(MicrophoneToggle.value);
            };
            if (v === "MicrophoneVolumeDown") {
                return new Data_Maybe.Just(MicrophoneVolumeDown.value);
            };
            if (v === "MicrophoneVolumeUp") {
                return new Data_Maybe.Just(MicrophoneVolumeUp.value);
            };
            if (v === "MicrophoneVolumeMute") {
                return new Data_Maybe.Just(MicrophoneVolumeMute.value);
            };
            if (v === "SpeechCorrectionList") {
                return new Data_Maybe.Just(SpeechCorrectionList.value);
            };
            if (v === "SpeechInputToggle") {
                return new Data_Maybe.Just(SpeechInputToggle.value);
            };
            var v5 = function (v6) {
                if (v === "LaunchCalendar") {
                    return new Data_Maybe.Just(LaunchCalendar.value);
                };
                if (v === "LaunchContacts") {
                    return new Data_Maybe.Just(LaunchContacts.value);
                };
                if (v === "LaunchMail") {
                    return new Data_Maybe.Just(LaunchMail.value);
                };
                if (v === "LaunchMediaPlayer") {
                    return new Data_Maybe.Just(LaunchMediaPlayer.value);
                };
                if (v === "LaunchMusicPlayer") {
                    return new Data_Maybe.Just(LaunchMusicPlayer.value);
                };
                if (v === "LaunchPhone") {
                    return new Data_Maybe.Just(LaunchPhone.value);
                };
                if (v === "LaunchScreenSaver") {
                    return new Data_Maybe.Just(LaunchScreenSaver.value);
                };
                if (v === "LaunchSpreadsheet") {
                    return new Data_Maybe.Just(LaunchSpreadsheet.value);
                };
                if (v === "LaunchWebBrowser") {
                    return new Data_Maybe.Just(LaunchWebBrowser.value);
                };
                if (v === "LaunchWebCam") {
                    return new Data_Maybe.Just(LaunchWebCam.value);
                };
                if (v === "LaunchWordProcessor") {
                    return new Data_Maybe.Just(LaunchWordProcessor.value);
                };
                if (v === "BrowserBack") {
                    return new Data_Maybe.Just(BrowserBack.value);
                };
                if (v === "BrowserFavorites") {
                    return new Data_Maybe.Just(BrowserFavorites.value);
                };
                if (v === "BrowserForward") {
                    return new Data_Maybe.Just(BrowserForward.value);
                };
                if (v === "BrowserHome") {
                    return new Data_Maybe.Just(BrowserHome.value);
                };
                if (v === "BrowserRefresh") {
                    return new Data_Maybe.Just(BrowserRefresh.value);
                };
                if (v === "BrowserSearch") {
                    return new Data_Maybe.Just(BrowserSearch.value);
                };
                if (v === "BrowserStop") {
                    return new Data_Maybe.Just(BrowserStop.value);
                };
                if (v === "AppSwitch") {
                    return new Data_Maybe.Just(AppSwitch.value);
                };
                if (v === "Call") {
                    return new Data_Maybe.Just(Call.value);
                };
                if (v === "Camera") {
                    return new Data_Maybe.Just(Camera.value);
                };
                if (v === "CameraFocus") {
                    return new Data_Maybe.Just(CameraFocus.value);
                };
                if (v === "EndCall") {
                    return new Data_Maybe.Just(EndCall.value);
                };
                if (v === "GoBack") {
                    return new Data_Maybe.Just(GoBack.value);
                };
                if (v === "GoHome") {
                    return new Data_Maybe.Just(GoHome.value);
                };
                if (v === "HeadsetHook") {
                    return new Data_Maybe.Just(HeadsetHook.value);
                };
                if (v === "LastNumberRedial") {
                    return new Data_Maybe.Just(LastNumberRedial.value);
                };
                if (v === "Notification") {
                    return new Data_Maybe.Just(Notification.value);
                };
                if (v === "MannerMode") {
                    return new Data_Maybe.Just(MannerMode.value);
                };
                if (v === "VoiceDial") {
                    return new Data_Maybe.Just(VoiceDial.value);
                };
                if (v === "TV") {
                    return new Data_Maybe.Just(TV.value);
                };
                if (v === "TV3DMode") {
                    return new Data_Maybe.Just(TV3DMode.value);
                };
                if (v === "TVAntennaCable") {
                    return new Data_Maybe.Just(TVAntennaCable.value);
                };
                if (v === "TVAudioDescription") {
                    return new Data_Maybe.Just(TVAudioDescription.value);
                };
                if (v === "TVAudioDescriptionMixDown") {
                    return new Data_Maybe.Just(TVAudioDescriptionMixDown.value);
                };
                if (v === "TVAudioDescriptionMixUp") {
                    return new Data_Maybe.Just(TVAudioDescriptionMixUp.value);
                };
                if (v === "TVContentsMenu") {
                    return new Data_Maybe.Just(TVContentsMenu.value);
                };
                if (v === "TVDataService") {
                    return new Data_Maybe.Just(TVDataService.value);
                };
                if (v === "TVInput") {
                    return new Data_Maybe.Just(TVInput.value);
                };
                var v7 = function (v8) {
                    var v9 = function (v10) {
                        var v11 = function (v12) {
                            if (v === "TVInputVGA1") {
                                return new Data_Maybe.Just(TVInputVGA1.value);
                            };
                            if (v === "TVMediaContext") {
                                return new Data_Maybe.Just(TVMediaContext.value);
                            };
                            if (v === "TVNetwork") {
                                return new Data_Maybe.Just(TVNetwork.value);
                            };
                            if (v === "TVNumberEntry") {
                                return new Data_Maybe.Just(TVNumberEntry.value);
                            };
                            if (v === "TVPower") {
                                return new Data_Maybe.Just(TVPower.value);
                            };
                            if (v === "TVRadioService") {
                                return new Data_Maybe.Just(TVRadioService.value);
                            };
                            if (v === "TVSatellite") {
                                return new Data_Maybe.Just(TVSatellite.value);
                            };
                            if (v === "TVSatelliteBS") {
                                return new Data_Maybe.Just(TVSatelliteBS.value);
                            };
                            if (v === "TVSatelliteCS") {
                                return new Data_Maybe.Just(TVSatelliteCS.value);
                            };
                            if (v === "TVSatelliteToggle") {
                                return new Data_Maybe.Just(TVSatelliteToggle.value);
                            };
                            if (v === "TVTerrestrialAnalog") {
                                return new Data_Maybe.Just(TVTerrestrialAnalog.value);
                            };
                            if (v === "TVTerrestrialDigital") {
                                return new Data_Maybe.Just(TVTerrestrialDigital.value);
                            };
                            if (v === "TVTimer") {
                                return new Data_Maybe.Just(TVTimer.value);
                            };
                            if (v === "AVRInput") {
                                return new Data_Maybe.Just(AVRInput.value);
                            };
                            if (v === "AVRPower") {
                                return new Data_Maybe.Just(AVRPower.value);
                            };
                            if (v === "ColorF0Red") {
                                return new Data_Maybe.Just(ColorF0Red.value);
                            };
                            if (v === "ColorF1Green") {
                                return new Data_Maybe.Just(ColorF1Green.value);
                            };
                            if (v === "ColorF2Yellow") {
                                return new Data_Maybe.Just(ColorF2Yellow.value);
                            };
                            if (v === "ColorF3Blue") {
                                return new Data_Maybe.Just(ColorF3Blue.value);
                            };
                            if (v === "ColorF4Grey") {
                                return new Data_Maybe.Just(ColorF4Grey.value);
                            };
                            if (v === "ColorF5Brown") {
                                return new Data_Maybe.Just(ColorF5Brown.value);
                            };
                            if (v === "ClosedCaptionToggle") {
                                return new Data_Maybe.Just(ClosedCaptionToggle.value);
                            };
                            if (v === "Dimmer") {
                                return new Data_Maybe.Just(Dimmer.value);
                            };
                            if (v === "DisplaySwap") {
                                return new Data_Maybe.Just(DisplaySwap.value);
                            };
                            if (v === "DVR") {
                                return new Data_Maybe.Just(DVR.value);
                            };
                            if (v === "Exit") {
                                return new Data_Maybe.Just(Exit.value);
                            };
                            var v13 = function (v14) {
                                var v15 = function (v16) {
                                    var v17 = function (v18) {
                                        if (v === "Guide") {
                                            return new Data_Maybe.Just(Guide.value);
                                        };
                                        if (v === "GuideNextDay") {
                                            return new Data_Maybe.Just(GuideNextDay.value);
                                        };
                                        if (v === "GuidePreviousDay") {
                                            return new Data_Maybe.Just(GuidePreviousDay.value);
                                        };
                                        if (v === "Info") {
                                            return new Data_Maybe.Just(Info.value);
                                        };
                                        if (v === "InstantReplay") {
                                            return new Data_Maybe.Just(InstantReplay.value);
                                        };
                                        if (v === "Link") {
                                            return new Data_Maybe.Just(Link.value);
                                        };
                                        if (v === "ListProgram") {
                                            return new Data_Maybe.Just(ListProgram.value);
                                        };
                                        if (v === "LiveContent") {
                                            return new Data_Maybe.Just(LiveContent.value);
                                        };
                                        if (v === "Lock") {
                                            return new Data_Maybe.Just(Lock.value);
                                        };
                                        if (v === "MediaApps") {
                                            return new Data_Maybe.Just(MediaApps.value);
                                        };
                                        if (v === "MediaAudioTrack") {
                                            return new Data_Maybe.Just(MediaAudioTrack.value);
                                        };
                                        if (v === "MediaLast") {
                                            return new Data_Maybe.Just(MediaLast.value);
                                        };
                                        if (v === "MediaSkipBackward") {
                                            return new Data_Maybe.Just(MediaSkipBackward.value);
                                        };
                                        if (v === "MediaSkipForward") {
                                            return new Data_Maybe.Just(MediaSkipForward.value);
                                        };
                                        if (v === "MediaStepBackward") {
                                            return new Data_Maybe.Just(MediaStepBackward.value);
                                        };
                                        if (v === "MediaStepForward") {
                                            return new Data_Maybe.Just(MediaStepForward.value);
                                        };
                                        if (v === "MediaTopMenu") {
                                            return new Data_Maybe.Just(MediaTopMenu.value);
                                        };
                                        if (v === "NavigateIn") {
                                            return new Data_Maybe.Just(NavigateIn.value);
                                        };
                                        if (v === "NavigateNext") {
                                            return new Data_Maybe.Just(NavigateNext.value);
                                        };
                                        if (v === "NavigateOut") {
                                            return new Data_Maybe.Just(NavigateOut.value);
                                        };
                                        if (v === "NavigatePrevious") {
                                            return new Data_Maybe.Just(NavigatePrevious.value);
                                        };
                                        if (v === "NextFavoriteChannel") {
                                            return new Data_Maybe.Just(NextFavoriteChannel.value);
                                        };
                                        if (v === "NextUserProfile") {
                                            return new Data_Maybe.Just(NextUserProfile.value);
                                        };
                                        if (v === "OnDemand") {
                                            return new Data_Maybe.Just(OnDemand.value);
                                        };
                                        if (v === "Pairing") {
                                            return new Data_Maybe.Just(Pairing.value);
                                        };
                                        if (v === "PinPDown") {
                                            return new Data_Maybe.Just(PinPDown.value);
                                        };
                                        if (v === "PinPMove") {
                                            return new Data_Maybe.Just(PinPMove.value);
                                        };
                                        if (v === "PinPToggle") {
                                            return new Data_Maybe.Just(PinPToggle.value);
                                        };
                                        if (v === "PinPUp") {
                                            return new Data_Maybe.Just(PinPUp.value);
                                        };
                                        if (v === "PlaySpeedDown") {
                                            return new Data_Maybe.Just(PlaySpeedDown.value);
                                        };
                                        if (v === "PlaySpeedReset") {
                                            return new Data_Maybe.Just(PlaySpeedReset.value);
                                        };
                                        if (v === "PlaySpeedUp") {
                                            return new Data_Maybe.Just(PlaySpeedUp.value);
                                        };
                                        if (v === "RandomToggle") {
                                            return new Data_Maybe.Just(RandomToggle.value);
                                        };
                                        if (v === "RcLowBattery") {
                                            return new Data_Maybe.Just(RcLowBattery.value);
                                        };
                                        if (v === "RecordSpeedNext") {
                                            return new Data_Maybe.Just(RecordSpeedNext.value);
                                        };
                                        if (v === "RfBypass") {
                                            return new Data_Maybe.Just(RfBypass.value);
                                        };
                                        if (v === "ScanChannelsToggle") {
                                            return new Data_Maybe.Just(ScanChannelsToggle.value);
                                        };
                                        if (v === "ScreenModeNext") {
                                            return new Data_Maybe.Just(ScreenModeNext.value);
                                        };
                                        if (v === "Settings") {
                                            return new Data_Maybe.Just(Settings.value);
                                        };
                                        if (v === "SplitScreenToggle") {
                                            return new Data_Maybe.Just(SplitScreenToggle.value);
                                        };
                                        if (v === "STBInput") {
                                            return new Data_Maybe.Just(STBInput.value);
                                        };
                                        if (v === "STBPower") {
                                            return new Data_Maybe.Just(STBPower.value);
                                        };
                                        if (v === "Subtitle") {
                                            return new Data_Maybe.Just(Subtitle.value);
                                        };
                                        if (v === "Teletext") {
                                            return new Data_Maybe.Just(Teletext.value);
                                        };
                                        if (v === "VideoModeNext") {
                                            return new Data_Maybe.Just(VideoModeNext.value);
                                        };
                                        if (v === "Wink") {
                                            return new Data_Maybe.Just(Wink.value);
                                        };
                                        if (v === "ZoomToggle") {
                                            return new Data_Maybe.Just(ZoomToggle.value);
                                        };
                                        return Data_Maybe.Nothing.value;
                                    };
                                    var $85 = tryParse("FavoriteStore")(v);
                                    if ($85 instanceof Data_Maybe.Just) {
                                        return new Data_Maybe.Just(new FavoriteStore($85.value0));
                                    };
                                    return v17(true);
                                };
                                var $88 = tryParse("FavoriteRecall")(v);
                                if ($88 instanceof Data_Maybe.Just) {
                                    return new Data_Maybe.Just(new FavoriteRecall($88.value0));
                                };
                                return v15(true);
                            };
                            var $91 = tryParse("FavoriteClear")(v);
                            if ($91 instanceof Data_Maybe.Just) {
                                return new Data_Maybe.Just(new FavoriteClear($91.value0));
                            };
                            return v13(true);
                        };
                        var $94 = tryParse("TVInputHDMI")(v);
                        if ($94 instanceof Data_Maybe.Just) {
                            return new Data_Maybe.Just(new TVInputHDMI($94.value0));
                        };
                        return v11(true);
                    };
                    var $97 = tryParse("TVInputComposite")(v);
                    if ($97 instanceof Data_Maybe.Just) {
                        return new Data_Maybe.Just(new TVInputComposite($97.value0));
                    };
                    return v9(true);
                };
                var $100 = tryParse("TVInputComponent")(v);
                if ($100 instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just(new TVInputComponent($100.value0));
                };
                return v7(true);
            };
            var $103 = tryParse("LaunchApplication")(v);
            if ($103 instanceof Data_Maybe.Just) {
                return new Data_Maybe.Just(new LaunchApplication($103.value0));
            };
            return v5(true);
        };
        var $106 = tryParse("Soft")(v);
        if ($106 instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just(new Soft($106.value0));
        };
        return v3(true);
    };
    var $109 = tryParse("F")(v);
    if ($109 instanceof Data_Maybe.Just) {
        return new Data_Maybe.Just(new F($109.value0));
    };
    return v1(true);
};
var fromModifier = function (v) {
    if (v instanceof Web_UIEvents_Key_Internal_Modifier.Alt) {
        return Alt.value;
    };
    if (v instanceof Web_UIEvents_Key_Internal_Modifier.AltGraph) {
        return AltGraph.value;
    };
    if (v instanceof Web_UIEvents_Key_Internal_Modifier.CapsLock) {
        return CapsLock.value;
    };
    if (v instanceof Web_UIEvents_Key_Internal_Modifier.Control) {
        return Control.value;
    };
    if (v instanceof Web_UIEvents_Key_Internal_Modifier.Fn) {
        return Fn.value;
    };
    if (v instanceof Web_UIEvents_Key_Internal_Modifier.FnLock) {
        return FnLock.value;
    };
    if (v instanceof Web_UIEvents_Key_Internal_Modifier.Meta) {
        return Meta.value;
    };
    if (v instanceof Web_UIEvents_Key_Internal_Modifier.NumLock) {
        return NumLock.value;
    };
    if (v instanceof Web_UIEvents_Key_Internal_Modifier.ScrollLock) {
        return ScrollLock.value;
    };
    if (v instanceof Web_UIEvents_Key_Internal_Modifier.Shift) {
        return Shift.value;
    };
    if (v instanceof Web_UIEvents_Key_Internal_Modifier["Symbol"]) {
        return $$Symbol.value;
    };
    if (v instanceof Web_UIEvents_Key_Internal_Modifier.SymbolLock) {
        return SymbolLock.value;
    };
    if (v instanceof Web_UIEvents_Key_Internal_Modifier.Hyper) {
        return Hyper.value;
    };
    if (v instanceof Web_UIEvents_Key_Internal_Modifier.Super) {
        return Super.value;
    };
    throw new Error("Failed pattern match at Web.UIEvents.Key.Internal line 1050, column 1 - line 1050, column 32: " + [ v.constructor.name ]);
};
var eqKey = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Unicode && y instanceof Unicode) {
            return x.value0 === y.value0;
        };
        if (x instanceof Unidentified && y instanceof Unidentified) {
            return true;
        };
        if (x instanceof Alt && y instanceof Alt) {
            return true;
        };
        if (x instanceof AltGraph && y instanceof AltGraph) {
            return true;
        };
        if (x instanceof CapsLock && y instanceof CapsLock) {
            return true;
        };
        if (x instanceof Control && y instanceof Control) {
            return true;
        };
        if (x instanceof Fn && y instanceof Fn) {
            return true;
        };
        if (x instanceof FnLock && y instanceof FnLock) {
            return true;
        };
        if (x instanceof Meta && y instanceof Meta) {
            return true;
        };
        if (x instanceof NumLock && y instanceof NumLock) {
            return true;
        };
        if (x instanceof ScrollLock && y instanceof ScrollLock) {
            return true;
        };
        if (x instanceof Shift && y instanceof Shift) {
            return true;
        };
        if (x instanceof $$Symbol && y instanceof $$Symbol) {
            return true;
        };
        if (x instanceof SymbolLock && y instanceof SymbolLock) {
            return true;
        };
        if (x instanceof Hyper && y instanceof Hyper) {
            return true;
        };
        if (x instanceof Super && y instanceof Super) {
            return true;
        };
        if (x instanceof Enter && y instanceof Enter) {
            return true;
        };
        if (x instanceof Tab && y instanceof Tab) {
            return true;
        };
        if (x instanceof ArrowDown && y instanceof ArrowDown) {
            return true;
        };
        if (x instanceof ArrowLeft && y instanceof ArrowLeft) {
            return true;
        };
        if (x instanceof ArrowRight && y instanceof ArrowRight) {
            return true;
        };
        if (x instanceof ArrowUp && y instanceof ArrowUp) {
            return true;
        };
        if (x instanceof End && y instanceof End) {
            return true;
        };
        if (x instanceof Home && y instanceof Home) {
            return true;
        };
        if (x instanceof PageDown && y instanceof PageDown) {
            return true;
        };
        if (x instanceof PageUp && y instanceof PageUp) {
            return true;
        };
        if (x instanceof Backspace && y instanceof Backspace) {
            return true;
        };
        if (x instanceof Clear && y instanceof Clear) {
            return true;
        };
        if (x instanceof Copy && y instanceof Copy) {
            return true;
        };
        if (x instanceof CrSel && y instanceof CrSel) {
            return true;
        };
        if (x instanceof Cut && y instanceof Cut) {
            return true;
        };
        if (x instanceof Delete && y instanceof Delete) {
            return true;
        };
        if (x instanceof EraseEof && y instanceof EraseEof) {
            return true;
        };
        if (x instanceof ExSel && y instanceof ExSel) {
            return true;
        };
        if (x instanceof Insert && y instanceof Insert) {
            return true;
        };
        if (x instanceof Paste && y instanceof Paste) {
            return true;
        };
        if (x instanceof Redo && y instanceof Redo) {
            return true;
        };
        if (x instanceof Undo && y instanceof Undo) {
            return true;
        };
        if (x instanceof Accept && y instanceof Accept) {
            return true;
        };
        if (x instanceof Again && y instanceof Again) {
            return true;
        };
        if (x instanceof Attn && y instanceof Attn) {
            return true;
        };
        if (x instanceof Cancel && y instanceof Cancel) {
            return true;
        };
        if (x instanceof ContextMenu && y instanceof ContextMenu) {
            return true;
        };
        if (x instanceof Escape && y instanceof Escape) {
            return true;
        };
        if (x instanceof Execute && y instanceof Execute) {
            return true;
        };
        if (x instanceof Find && y instanceof Find) {
            return true;
        };
        if (x instanceof Help && y instanceof Help) {
            return true;
        };
        if (x instanceof Pause && y instanceof Pause) {
            return true;
        };
        if (x instanceof Play && y instanceof Play) {
            return true;
        };
        if (x instanceof Props && y instanceof Props) {
            return true;
        };
        if (x instanceof Select && y instanceof Select) {
            return true;
        };
        if (x instanceof ZoomIn && y instanceof ZoomIn) {
            return true;
        };
        if (x instanceof ZoomOut && y instanceof ZoomOut) {
            return true;
        };
        if (x instanceof BrightnessDown && y instanceof BrightnessDown) {
            return true;
        };
        if (x instanceof BrightnessUp && y instanceof BrightnessUp) {
            return true;
        };
        if (x instanceof Eject && y instanceof Eject) {
            return true;
        };
        if (x instanceof LogOff && y instanceof LogOff) {
            return true;
        };
        if (x instanceof Power && y instanceof Power) {
            return true;
        };
        if (x instanceof PowerOff && y instanceof PowerOff) {
            return true;
        };
        if (x instanceof PrintScreen && y instanceof PrintScreen) {
            return true;
        };
        if (x instanceof Hibernate && y instanceof Hibernate) {
            return true;
        };
        if (x instanceof Standby && y instanceof Standby) {
            return true;
        };
        if (x instanceof WakeUp && y instanceof WakeUp) {
            return true;
        };
        if (x instanceof AllCandidates && y instanceof AllCandidates) {
            return true;
        };
        if (x instanceof Alphanumeric && y instanceof Alphanumeric) {
            return true;
        };
        if (x instanceof CodeInput && y instanceof CodeInput) {
            return true;
        };
        if (x instanceof Compose && y instanceof Compose) {
            return true;
        };
        if (x instanceof Convert && y instanceof Convert) {
            return true;
        };
        if (x instanceof Dead && y instanceof Dead) {
            return true;
        };
        if (x instanceof FinalMode && y instanceof FinalMode) {
            return true;
        };
        if (x instanceof GroupFirst && y instanceof GroupFirst) {
            return true;
        };
        if (x instanceof GroupLast && y instanceof GroupLast) {
            return true;
        };
        if (x instanceof GroupNext && y instanceof GroupNext) {
            return true;
        };
        if (x instanceof GroupPrevious && y instanceof GroupPrevious) {
            return true;
        };
        if (x instanceof ModeChange && y instanceof ModeChange) {
            return true;
        };
        if (x instanceof NextCandidate && y instanceof NextCandidate) {
            return true;
        };
        if (x instanceof NonConvert && y instanceof NonConvert) {
            return true;
        };
        if (x instanceof PreviousCandidate && y instanceof PreviousCandidate) {
            return true;
        };
        if (x instanceof Process && y instanceof Process) {
            return true;
        };
        if (x instanceof SingleCandidate && y instanceof SingleCandidate) {
            return true;
        };
        if (x instanceof HangulMode && y instanceof HangulMode) {
            return true;
        };
        if (x instanceof HanjaMode && y instanceof HanjaMode) {
            return true;
        };
        if (x instanceof JunjaMode && y instanceof JunjaMode) {
            return true;
        };
        if (x instanceof Eisu && y instanceof Eisu) {
            return true;
        };
        if (x instanceof Hankaku && y instanceof Hankaku) {
            return true;
        };
        if (x instanceof Hiragana && y instanceof Hiragana) {
            return true;
        };
        if (x instanceof HiraganaKatakana && y instanceof HiraganaKatakana) {
            return true;
        };
        if (x instanceof KanaMode && y instanceof KanaMode) {
            return true;
        };
        if (x instanceof KanjiMode && y instanceof KanjiMode) {
            return true;
        };
        if (x instanceof Katakana && y instanceof Katakana) {
            return true;
        };
        if (x instanceof Romaji && y instanceof Romaji) {
            return true;
        };
        if (x instanceof Zenkaku && y instanceof Zenkaku) {
            return true;
        };
        if (x instanceof ZenkakuHankaku && y instanceof ZenkakuHankaku) {
            return true;
        };
        if (x instanceof F && y instanceof F) {
            return x.value0 === y.value0;
        };
        if (x instanceof Soft && y instanceof Soft) {
            return x.value0 === y.value0;
        };
        if (x instanceof ChannelDown && y instanceof ChannelDown) {
            return true;
        };
        if (x instanceof ChannelUp && y instanceof ChannelUp) {
            return true;
        };
        if (x instanceof Close && y instanceof Close) {
            return true;
        };
        if (x instanceof MailForward && y instanceof MailForward) {
            return true;
        };
        if (x instanceof MailReply && y instanceof MailReply) {
            return true;
        };
        if (x instanceof MailSend && y instanceof MailSend) {
            return true;
        };
        if (x instanceof MediaClose && y instanceof MediaClose) {
            return true;
        };
        if (x instanceof MediaFastForward && y instanceof MediaFastForward) {
            return true;
        };
        if (x instanceof MediaPause && y instanceof MediaPause) {
            return true;
        };
        if (x instanceof MediaPlay && y instanceof MediaPlay) {
            return true;
        };
        if (x instanceof MediaPlayPause && y instanceof MediaPlayPause) {
            return true;
        };
        if (x instanceof MediaRecord && y instanceof MediaRecord) {
            return true;
        };
        if (x instanceof MediaRewind && y instanceof MediaRewind) {
            return true;
        };
        if (x instanceof MediaStop && y instanceof MediaStop) {
            return true;
        };
        if (x instanceof MediaTrackNext && y instanceof MediaTrackNext) {
            return true;
        };
        if (x instanceof MediaTrackPrevious && y instanceof MediaTrackPrevious) {
            return true;
        };
        if (x instanceof New && y instanceof New) {
            return true;
        };
        if (x instanceof Open && y instanceof Open) {
            return true;
        };
        if (x instanceof Print && y instanceof Print) {
            return true;
        };
        if (x instanceof Save && y instanceof Save) {
            return true;
        };
        if (x instanceof SpellCheck && y instanceof SpellCheck) {
            return true;
        };
        if (x instanceof Key11 && y instanceof Key11) {
            return true;
        };
        if (x instanceof Key12 && y instanceof Key12) {
            return true;
        };
        if (x instanceof AudioBalanceLeft && y instanceof AudioBalanceLeft) {
            return true;
        };
        if (x instanceof AudioBalanceRight && y instanceof AudioBalanceRight) {
            return true;
        };
        if (x instanceof AudioBassBoostDown && y instanceof AudioBassBoostDown) {
            return true;
        };
        if (x instanceof AudioBassBoostToggle && y instanceof AudioBassBoostToggle) {
            return true;
        };
        if (x instanceof AudioBassBoostUp && y instanceof AudioBassBoostUp) {
            return true;
        };
        if (x instanceof AudioFaderFront && y instanceof AudioFaderFront) {
            return true;
        };
        if (x instanceof AudioFaderRear && y instanceof AudioFaderRear) {
            return true;
        };
        if (x instanceof AudioSurroundModeNext && y instanceof AudioSurroundModeNext) {
            return true;
        };
        if (x instanceof AudioTrebleDown && y instanceof AudioTrebleDown) {
            return true;
        };
        if (x instanceof AudioTrebleUp && y instanceof AudioTrebleUp) {
            return true;
        };
        if (x instanceof AudioVolumeDown && y instanceof AudioVolumeDown) {
            return true;
        };
        if (x instanceof AudioVolumeUp && y instanceof AudioVolumeUp) {
            return true;
        };
        if (x instanceof AudioVolumeMute && y instanceof AudioVolumeMute) {
            return true;
        };
        if (x instanceof MicrophoneToggle && y instanceof MicrophoneToggle) {
            return true;
        };
        if (x instanceof MicrophoneVolumeDown && y instanceof MicrophoneVolumeDown) {
            return true;
        };
        if (x instanceof MicrophoneVolumeUp && y instanceof MicrophoneVolumeUp) {
            return true;
        };
        if (x instanceof MicrophoneVolumeMute && y instanceof MicrophoneVolumeMute) {
            return true;
        };
        if (x instanceof SpeechCorrectionList && y instanceof SpeechCorrectionList) {
            return true;
        };
        if (x instanceof SpeechInputToggle && y instanceof SpeechInputToggle) {
            return true;
        };
        if (x instanceof LaunchApplication && y instanceof LaunchApplication) {
            return x.value0 === y.value0;
        };
        if (x instanceof LaunchCalendar && y instanceof LaunchCalendar) {
            return true;
        };
        if (x instanceof LaunchContacts && y instanceof LaunchContacts) {
            return true;
        };
        if (x instanceof LaunchMail && y instanceof LaunchMail) {
            return true;
        };
        if (x instanceof LaunchMediaPlayer && y instanceof LaunchMediaPlayer) {
            return true;
        };
        if (x instanceof LaunchMusicPlayer && y instanceof LaunchMusicPlayer) {
            return true;
        };
        if (x instanceof LaunchPhone && y instanceof LaunchPhone) {
            return true;
        };
        if (x instanceof LaunchScreenSaver && y instanceof LaunchScreenSaver) {
            return true;
        };
        if (x instanceof LaunchSpreadsheet && y instanceof LaunchSpreadsheet) {
            return true;
        };
        if (x instanceof LaunchWebBrowser && y instanceof LaunchWebBrowser) {
            return true;
        };
        if (x instanceof LaunchWebCam && y instanceof LaunchWebCam) {
            return true;
        };
        if (x instanceof LaunchWordProcessor && y instanceof LaunchWordProcessor) {
            return true;
        };
        if (x instanceof BrowserBack && y instanceof BrowserBack) {
            return true;
        };
        if (x instanceof BrowserFavorites && y instanceof BrowserFavorites) {
            return true;
        };
        if (x instanceof BrowserForward && y instanceof BrowserForward) {
            return true;
        };
        if (x instanceof BrowserHome && y instanceof BrowserHome) {
            return true;
        };
        if (x instanceof BrowserRefresh && y instanceof BrowserRefresh) {
            return true;
        };
        if (x instanceof BrowserSearch && y instanceof BrowserSearch) {
            return true;
        };
        if (x instanceof BrowserStop && y instanceof BrowserStop) {
            return true;
        };
        if (x instanceof AppSwitch && y instanceof AppSwitch) {
            return true;
        };
        if (x instanceof Call && y instanceof Call) {
            return true;
        };
        if (x instanceof Camera && y instanceof Camera) {
            return true;
        };
        if (x instanceof CameraFocus && y instanceof CameraFocus) {
            return true;
        };
        if (x instanceof EndCall && y instanceof EndCall) {
            return true;
        };
        if (x instanceof GoBack && y instanceof GoBack) {
            return true;
        };
        if (x instanceof GoHome && y instanceof GoHome) {
            return true;
        };
        if (x instanceof HeadsetHook && y instanceof HeadsetHook) {
            return true;
        };
        if (x instanceof LastNumberRedial && y instanceof LastNumberRedial) {
            return true;
        };
        if (x instanceof Notification && y instanceof Notification) {
            return true;
        };
        if (x instanceof MannerMode && y instanceof MannerMode) {
            return true;
        };
        if (x instanceof VoiceDial && y instanceof VoiceDial) {
            return true;
        };
        if (x instanceof TV && y instanceof TV) {
            return true;
        };
        if (x instanceof TV3DMode && y instanceof TV3DMode) {
            return true;
        };
        if (x instanceof TVAntennaCable && y instanceof TVAntennaCable) {
            return true;
        };
        if (x instanceof TVAudioDescription && y instanceof TVAudioDescription) {
            return true;
        };
        if (x instanceof TVAudioDescriptionMixDown && y instanceof TVAudioDescriptionMixDown) {
            return true;
        };
        if (x instanceof TVAudioDescriptionMixUp && y instanceof TVAudioDescriptionMixUp) {
            return true;
        };
        if (x instanceof TVContentsMenu && y instanceof TVContentsMenu) {
            return true;
        };
        if (x instanceof TVDataService && y instanceof TVDataService) {
            return true;
        };
        if (x instanceof TVInput && y instanceof TVInput) {
            return true;
        };
        if (x instanceof TVInputComponent && y instanceof TVInputComponent) {
            return x.value0 === y.value0;
        };
        if (x instanceof TVInputComposite && y instanceof TVInputComposite) {
            return x.value0 === y.value0;
        };
        if (x instanceof TVInputHDMI && y instanceof TVInputHDMI) {
            return x.value0 === y.value0;
        };
        if (x instanceof TVInputVGA1 && y instanceof TVInputVGA1) {
            return true;
        };
        if (x instanceof TVMediaContext && y instanceof TVMediaContext) {
            return true;
        };
        if (x instanceof TVNetwork && y instanceof TVNetwork) {
            return true;
        };
        if (x instanceof TVNumberEntry && y instanceof TVNumberEntry) {
            return true;
        };
        if (x instanceof TVPower && y instanceof TVPower) {
            return true;
        };
        if (x instanceof TVRadioService && y instanceof TVRadioService) {
            return true;
        };
        if (x instanceof TVSatellite && y instanceof TVSatellite) {
            return true;
        };
        if (x instanceof TVSatelliteBS && y instanceof TVSatelliteBS) {
            return true;
        };
        if (x instanceof TVSatelliteCS && y instanceof TVSatelliteCS) {
            return true;
        };
        if (x instanceof TVSatelliteToggle && y instanceof TVSatelliteToggle) {
            return true;
        };
        if (x instanceof TVTerrestrialAnalog && y instanceof TVTerrestrialAnalog) {
            return true;
        };
        if (x instanceof TVTerrestrialDigital && y instanceof TVTerrestrialDigital) {
            return true;
        };
        if (x instanceof TVTimer && y instanceof TVTimer) {
            return true;
        };
        if (x instanceof AVRInput && y instanceof AVRInput) {
            return true;
        };
        if (x instanceof AVRPower && y instanceof AVRPower) {
            return true;
        };
        if (x instanceof ColorF0Red && y instanceof ColorF0Red) {
            return true;
        };
        if (x instanceof ColorF1Green && y instanceof ColorF1Green) {
            return true;
        };
        if (x instanceof ColorF2Yellow && y instanceof ColorF2Yellow) {
            return true;
        };
        if (x instanceof ColorF3Blue && y instanceof ColorF3Blue) {
            return true;
        };
        if (x instanceof ColorF4Grey && y instanceof ColorF4Grey) {
            return true;
        };
        if (x instanceof ColorF5Brown && y instanceof ColorF5Brown) {
            return true;
        };
        if (x instanceof ClosedCaptionToggle && y instanceof ClosedCaptionToggle) {
            return true;
        };
        if (x instanceof Dimmer && y instanceof Dimmer) {
            return true;
        };
        if (x instanceof DisplaySwap && y instanceof DisplaySwap) {
            return true;
        };
        if (x instanceof DVR && y instanceof DVR) {
            return true;
        };
        if (x instanceof Exit && y instanceof Exit) {
            return true;
        };
        if (x instanceof FavoriteClear && y instanceof FavoriteClear) {
            return x.value0 === y.value0;
        };
        if (x instanceof FavoriteRecall && y instanceof FavoriteRecall) {
            return x.value0 === y.value0;
        };
        if (x instanceof FavoriteStore && y instanceof FavoriteStore) {
            return x.value0 === y.value0;
        };
        if (x instanceof Guide && y instanceof Guide) {
            return true;
        };
        if (x instanceof GuideNextDay && y instanceof GuideNextDay) {
            return true;
        };
        if (x instanceof GuidePreviousDay && y instanceof GuidePreviousDay) {
            return true;
        };
        if (x instanceof Info && y instanceof Info) {
            return true;
        };
        if (x instanceof InstantReplay && y instanceof InstantReplay) {
            return true;
        };
        if (x instanceof Link && y instanceof Link) {
            return true;
        };
        if (x instanceof ListProgram && y instanceof ListProgram) {
            return true;
        };
        if (x instanceof LiveContent && y instanceof LiveContent) {
            return true;
        };
        if (x instanceof Lock && y instanceof Lock) {
            return true;
        };
        if (x instanceof MediaApps && y instanceof MediaApps) {
            return true;
        };
        if (x instanceof MediaAudioTrack && y instanceof MediaAudioTrack) {
            return true;
        };
        if (x instanceof MediaLast && y instanceof MediaLast) {
            return true;
        };
        if (x instanceof MediaSkipBackward && y instanceof MediaSkipBackward) {
            return true;
        };
        if (x instanceof MediaSkipForward && y instanceof MediaSkipForward) {
            return true;
        };
        if (x instanceof MediaStepBackward && y instanceof MediaStepBackward) {
            return true;
        };
        if (x instanceof MediaStepForward && y instanceof MediaStepForward) {
            return true;
        };
        if (x instanceof MediaTopMenu && y instanceof MediaTopMenu) {
            return true;
        };
        if (x instanceof NavigateIn && y instanceof NavigateIn) {
            return true;
        };
        if (x instanceof NavigateNext && y instanceof NavigateNext) {
            return true;
        };
        if (x instanceof NavigateOut && y instanceof NavigateOut) {
            return true;
        };
        if (x instanceof NavigatePrevious && y instanceof NavigatePrevious) {
            return true;
        };
        if (x instanceof NextFavoriteChannel && y instanceof NextFavoriteChannel) {
            return true;
        };
        if (x instanceof NextUserProfile && y instanceof NextUserProfile) {
            return true;
        };
        if (x instanceof OnDemand && y instanceof OnDemand) {
            return true;
        };
        if (x instanceof Pairing && y instanceof Pairing) {
            return true;
        };
        if (x instanceof PinPDown && y instanceof PinPDown) {
            return true;
        };
        if (x instanceof PinPMove && y instanceof PinPMove) {
            return true;
        };
        if (x instanceof PinPToggle && y instanceof PinPToggle) {
            return true;
        };
        if (x instanceof PinPUp && y instanceof PinPUp) {
            return true;
        };
        if (x instanceof PlaySpeedDown && y instanceof PlaySpeedDown) {
            return true;
        };
        if (x instanceof PlaySpeedReset && y instanceof PlaySpeedReset) {
            return true;
        };
        if (x instanceof PlaySpeedUp && y instanceof PlaySpeedUp) {
            return true;
        };
        if (x instanceof RandomToggle && y instanceof RandomToggle) {
            return true;
        };
        if (x instanceof RcLowBattery && y instanceof RcLowBattery) {
            return true;
        };
        if (x instanceof RecordSpeedNext && y instanceof RecordSpeedNext) {
            return true;
        };
        if (x instanceof RfBypass && y instanceof RfBypass) {
            return true;
        };
        if (x instanceof ScanChannelsToggle && y instanceof ScanChannelsToggle) {
            return true;
        };
        if (x instanceof ScreenModeNext && y instanceof ScreenModeNext) {
            return true;
        };
        if (x instanceof Settings && y instanceof Settings) {
            return true;
        };
        if (x instanceof SplitScreenToggle && y instanceof SplitScreenToggle) {
            return true;
        };
        if (x instanceof STBInput && y instanceof STBInput) {
            return true;
        };
        if (x instanceof STBPower && y instanceof STBPower) {
            return true;
        };
        if (x instanceof Subtitle && y instanceof Subtitle) {
            return true;
        };
        if (x instanceof Teletext && y instanceof Teletext) {
            return true;
        };
        if (x instanceof VideoModeNext && y instanceof VideoModeNext) {
            return true;
        };
        if (x instanceof Wink && y instanceof Wink) {
            return true;
        };
        if (x instanceof ZoomToggle && y instanceof ZoomToggle) {
            return true;
        };
        return false;
    };
});
var ordKey = new Data_Ord.Ord(function () {
    return eqKey;
}, function (x) {
    return function (y) {
        if (x instanceof Unicode && y instanceof Unicode) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        if (x instanceof Unicode) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Unicode) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Unidentified && y instanceof Unidentified) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Unidentified) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Unidentified) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Alt && y instanceof Alt) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Alt) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Alt) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AltGraph && y instanceof AltGraph) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AltGraph) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AltGraph) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof CapsLock && y instanceof CapsLock) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof CapsLock) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof CapsLock) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Control && y instanceof Control) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Control) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Control) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Fn && y instanceof Fn) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Fn) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Fn) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof FnLock && y instanceof FnLock) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof FnLock) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof FnLock) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Meta && y instanceof Meta) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Meta) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Meta) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof NumLock && y instanceof NumLock) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof NumLock) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof NumLock) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ScrollLock && y instanceof ScrollLock) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ScrollLock) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ScrollLock) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Shift && y instanceof Shift) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Shift) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Shift) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof $$Symbol && y instanceof $$Symbol) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof $$Symbol) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof $$Symbol) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof SymbolLock && y instanceof SymbolLock) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof SymbolLock) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof SymbolLock) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Hyper && y instanceof Hyper) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Hyper) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Hyper) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Super && y instanceof Super) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Super) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Super) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Enter && y instanceof Enter) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Enter) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Enter) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Tab && y instanceof Tab) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Tab) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Tab) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ArrowDown && y instanceof ArrowDown) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ArrowDown) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ArrowDown) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ArrowLeft && y instanceof ArrowLeft) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ArrowLeft) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ArrowLeft) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ArrowRight && y instanceof ArrowRight) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ArrowRight) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ArrowRight) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ArrowUp && y instanceof ArrowUp) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ArrowUp) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ArrowUp) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof End && y instanceof End) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof End) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof End) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Home && y instanceof Home) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Home) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Home) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PageDown && y instanceof PageDown) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof PageDown) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof PageDown) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PageUp && y instanceof PageUp) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof PageUp) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof PageUp) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Backspace && y instanceof Backspace) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Backspace) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Backspace) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Clear && y instanceof Clear) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Clear) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Clear) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Copy && y instanceof Copy) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Copy) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Copy) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof CrSel && y instanceof CrSel) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof CrSel) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof CrSel) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Cut && y instanceof Cut) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Cut) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Cut) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Delete && y instanceof Delete) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Delete) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Delete) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof EraseEof && y instanceof EraseEof) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof EraseEof) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof EraseEof) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ExSel && y instanceof ExSel) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ExSel) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ExSel) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Insert && y instanceof Insert) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Insert) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Insert) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Paste && y instanceof Paste) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Paste) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Paste) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Redo && y instanceof Redo) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Redo) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Redo) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Undo && y instanceof Undo) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Undo) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Undo) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Accept && y instanceof Accept) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Accept) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Accept) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Again && y instanceof Again) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Again) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Again) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Attn && y instanceof Attn) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Attn) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Attn) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Cancel && y instanceof Cancel) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Cancel) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Cancel) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ContextMenu && y instanceof ContextMenu) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ContextMenu) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ContextMenu) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Escape && y instanceof Escape) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Escape) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Escape) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Execute && y instanceof Execute) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Execute) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Execute) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Find && y instanceof Find) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Find) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Find) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Help && y instanceof Help) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Help) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Help) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Pause && y instanceof Pause) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Pause) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Pause) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Play && y instanceof Play) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Play) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Play) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Props && y instanceof Props) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Props) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Props) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Select && y instanceof Select) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Select) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Select) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ZoomIn && y instanceof ZoomIn) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ZoomIn) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ZoomIn) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ZoomOut && y instanceof ZoomOut) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ZoomOut) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ZoomOut) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof BrightnessDown && y instanceof BrightnessDown) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof BrightnessDown) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof BrightnessDown) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof BrightnessUp && y instanceof BrightnessUp) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof BrightnessUp) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof BrightnessUp) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Eject && y instanceof Eject) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Eject) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Eject) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof LogOff && y instanceof LogOff) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof LogOff) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof LogOff) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Power && y instanceof Power) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Power) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Power) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PowerOff && y instanceof PowerOff) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof PowerOff) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof PowerOff) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PrintScreen && y instanceof PrintScreen) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof PrintScreen) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof PrintScreen) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Hibernate && y instanceof Hibernate) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Hibernate) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Hibernate) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Standby && y instanceof Standby) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Standby) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Standby) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof WakeUp && y instanceof WakeUp) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof WakeUp) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof WakeUp) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AllCandidates && y instanceof AllCandidates) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AllCandidates) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AllCandidates) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Alphanumeric && y instanceof Alphanumeric) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Alphanumeric) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Alphanumeric) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof CodeInput && y instanceof CodeInput) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof CodeInput) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof CodeInput) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Compose && y instanceof Compose) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Compose) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Compose) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Convert && y instanceof Convert) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Convert) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Convert) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Dead && y instanceof Dead) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Dead) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Dead) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof FinalMode && y instanceof FinalMode) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof FinalMode) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof FinalMode) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof GroupFirst && y instanceof GroupFirst) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof GroupFirst) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof GroupFirst) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof GroupLast && y instanceof GroupLast) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof GroupLast) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof GroupLast) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof GroupNext && y instanceof GroupNext) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof GroupNext) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof GroupNext) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof GroupPrevious && y instanceof GroupPrevious) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof GroupPrevious) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof GroupPrevious) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ModeChange && y instanceof ModeChange) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ModeChange) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ModeChange) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof NextCandidate && y instanceof NextCandidate) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof NextCandidate) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof NextCandidate) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof NonConvert && y instanceof NonConvert) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof NonConvert) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof NonConvert) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PreviousCandidate && y instanceof PreviousCandidate) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof PreviousCandidate) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof PreviousCandidate) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Process && y instanceof Process) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Process) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Process) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof SingleCandidate && y instanceof SingleCandidate) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof SingleCandidate) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof SingleCandidate) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof HangulMode && y instanceof HangulMode) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof HangulMode) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof HangulMode) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof HanjaMode && y instanceof HanjaMode) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof HanjaMode) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof HanjaMode) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof JunjaMode && y instanceof JunjaMode) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof JunjaMode) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof JunjaMode) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Eisu && y instanceof Eisu) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Eisu) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Eisu) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Hankaku && y instanceof Hankaku) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Hankaku) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Hankaku) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Hiragana && y instanceof Hiragana) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Hiragana) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Hiragana) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof HiraganaKatakana && y instanceof HiraganaKatakana) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof HiraganaKatakana) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof HiraganaKatakana) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof KanaMode && y instanceof KanaMode) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof KanaMode) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof KanaMode) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof KanjiMode && y instanceof KanjiMode) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof KanjiMode) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof KanjiMode) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Katakana && y instanceof Katakana) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Katakana) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Katakana) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Romaji && y instanceof Romaji) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Romaji) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Romaji) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Zenkaku && y instanceof Zenkaku) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Zenkaku) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Zenkaku) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ZenkakuHankaku && y instanceof ZenkakuHankaku) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ZenkakuHankaku) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ZenkakuHankaku) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof F && y instanceof F) {
            return Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
        };
        if (x instanceof F) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof F) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Soft && y instanceof Soft) {
            return Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
        };
        if (x instanceof Soft) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Soft) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ChannelDown && y instanceof ChannelDown) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ChannelDown) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ChannelDown) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ChannelUp && y instanceof ChannelUp) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ChannelUp) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ChannelUp) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Close && y instanceof Close) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Close) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Close) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MailForward && y instanceof MailForward) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MailForward) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MailForward) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MailReply && y instanceof MailReply) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MailReply) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MailReply) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MailSend && y instanceof MailSend) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MailSend) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MailSend) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaClose && y instanceof MediaClose) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MediaClose) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MediaClose) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaFastForward && y instanceof MediaFastForward) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MediaFastForward) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MediaFastForward) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaPause && y instanceof MediaPause) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MediaPause) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MediaPause) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaPlay && y instanceof MediaPlay) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MediaPlay) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MediaPlay) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaPlayPause && y instanceof MediaPlayPause) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MediaPlayPause) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MediaPlayPause) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaRecord && y instanceof MediaRecord) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MediaRecord) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MediaRecord) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaRewind && y instanceof MediaRewind) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MediaRewind) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MediaRewind) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaStop && y instanceof MediaStop) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MediaStop) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MediaStop) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaTrackNext && y instanceof MediaTrackNext) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MediaTrackNext) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MediaTrackNext) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaTrackPrevious && y instanceof MediaTrackPrevious) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MediaTrackPrevious) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MediaTrackPrevious) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof New && y instanceof New) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof New) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof New) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Open && y instanceof Open) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Open) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Open) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Print && y instanceof Print) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Print) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Print) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Save && y instanceof Save) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Save) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Save) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof SpellCheck && y instanceof SpellCheck) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof SpellCheck) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof SpellCheck) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Key11 && y instanceof Key11) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Key11) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Key11) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Key12 && y instanceof Key12) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Key12) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Key12) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AudioBalanceLeft && y instanceof AudioBalanceLeft) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AudioBalanceLeft) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AudioBalanceLeft) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AudioBalanceRight && y instanceof AudioBalanceRight) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AudioBalanceRight) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AudioBalanceRight) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AudioBassBoostDown && y instanceof AudioBassBoostDown) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AudioBassBoostDown) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AudioBassBoostDown) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AudioBassBoostToggle && y instanceof AudioBassBoostToggle) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AudioBassBoostToggle) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AudioBassBoostToggle) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AudioBassBoostUp && y instanceof AudioBassBoostUp) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AudioBassBoostUp) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AudioBassBoostUp) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AudioFaderFront && y instanceof AudioFaderFront) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AudioFaderFront) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AudioFaderFront) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AudioFaderRear && y instanceof AudioFaderRear) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AudioFaderRear) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AudioFaderRear) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AudioSurroundModeNext && y instanceof AudioSurroundModeNext) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AudioSurroundModeNext) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AudioSurroundModeNext) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AudioTrebleDown && y instanceof AudioTrebleDown) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AudioTrebleDown) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AudioTrebleDown) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AudioTrebleUp && y instanceof AudioTrebleUp) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AudioTrebleUp) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AudioTrebleUp) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AudioVolumeDown && y instanceof AudioVolumeDown) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AudioVolumeDown) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AudioVolumeDown) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AudioVolumeUp && y instanceof AudioVolumeUp) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AudioVolumeUp) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AudioVolumeUp) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AudioVolumeMute && y instanceof AudioVolumeMute) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AudioVolumeMute) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AudioVolumeMute) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MicrophoneToggle && y instanceof MicrophoneToggle) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MicrophoneToggle) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MicrophoneToggle) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MicrophoneVolumeDown && y instanceof MicrophoneVolumeDown) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MicrophoneVolumeDown) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MicrophoneVolumeDown) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MicrophoneVolumeUp && y instanceof MicrophoneVolumeUp) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MicrophoneVolumeUp) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MicrophoneVolumeUp) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MicrophoneVolumeMute && y instanceof MicrophoneVolumeMute) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MicrophoneVolumeMute) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MicrophoneVolumeMute) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof SpeechCorrectionList && y instanceof SpeechCorrectionList) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof SpeechCorrectionList) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof SpeechCorrectionList) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof SpeechInputToggle && y instanceof SpeechInputToggle) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof SpeechInputToggle) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof SpeechInputToggle) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof LaunchApplication && y instanceof LaunchApplication) {
            return Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
        };
        if (x instanceof LaunchApplication) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof LaunchApplication) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof LaunchCalendar && y instanceof LaunchCalendar) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof LaunchCalendar) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof LaunchCalendar) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof LaunchContacts && y instanceof LaunchContacts) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof LaunchContacts) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof LaunchContacts) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof LaunchMail && y instanceof LaunchMail) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof LaunchMail) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof LaunchMail) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof LaunchMediaPlayer && y instanceof LaunchMediaPlayer) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof LaunchMediaPlayer) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof LaunchMediaPlayer) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof LaunchMusicPlayer && y instanceof LaunchMusicPlayer) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof LaunchMusicPlayer) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof LaunchMusicPlayer) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof LaunchPhone && y instanceof LaunchPhone) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof LaunchPhone) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof LaunchPhone) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof LaunchScreenSaver && y instanceof LaunchScreenSaver) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof LaunchScreenSaver) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof LaunchScreenSaver) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof LaunchSpreadsheet && y instanceof LaunchSpreadsheet) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof LaunchSpreadsheet) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof LaunchSpreadsheet) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof LaunchWebBrowser && y instanceof LaunchWebBrowser) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof LaunchWebBrowser) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof LaunchWebBrowser) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof LaunchWebCam && y instanceof LaunchWebCam) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof LaunchWebCam) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof LaunchWebCam) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof LaunchWordProcessor && y instanceof LaunchWordProcessor) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof LaunchWordProcessor) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof LaunchWordProcessor) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof BrowserBack && y instanceof BrowserBack) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof BrowserBack) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof BrowserBack) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof BrowserFavorites && y instanceof BrowserFavorites) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof BrowserFavorites) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof BrowserFavorites) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof BrowserForward && y instanceof BrowserForward) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof BrowserForward) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof BrowserForward) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof BrowserHome && y instanceof BrowserHome) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof BrowserHome) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof BrowserHome) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof BrowserRefresh && y instanceof BrowserRefresh) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof BrowserRefresh) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof BrowserRefresh) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof BrowserSearch && y instanceof BrowserSearch) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof BrowserSearch) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof BrowserSearch) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof BrowserStop && y instanceof BrowserStop) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof BrowserStop) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof BrowserStop) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AppSwitch && y instanceof AppSwitch) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AppSwitch) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AppSwitch) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Call && y instanceof Call) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Call) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Call) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Camera && y instanceof Camera) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Camera) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Camera) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof CameraFocus && y instanceof CameraFocus) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof CameraFocus) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof CameraFocus) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof EndCall && y instanceof EndCall) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof EndCall) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof EndCall) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof GoBack && y instanceof GoBack) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof GoBack) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof GoBack) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof GoHome && y instanceof GoHome) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof GoHome) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof GoHome) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof HeadsetHook && y instanceof HeadsetHook) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof HeadsetHook) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof HeadsetHook) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof LastNumberRedial && y instanceof LastNumberRedial) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof LastNumberRedial) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof LastNumberRedial) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Notification && y instanceof Notification) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Notification) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Notification) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MannerMode && y instanceof MannerMode) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MannerMode) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MannerMode) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof VoiceDial && y instanceof VoiceDial) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof VoiceDial) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof VoiceDial) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TV && y instanceof TV) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TV) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TV) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TV3DMode && y instanceof TV3DMode) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TV3DMode) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TV3DMode) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVAntennaCable && y instanceof TVAntennaCable) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVAntennaCable) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVAntennaCable) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVAudioDescription && y instanceof TVAudioDescription) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVAudioDescription) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVAudioDescription) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVAudioDescriptionMixDown && y instanceof TVAudioDescriptionMixDown) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVAudioDescriptionMixDown) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVAudioDescriptionMixDown) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVAudioDescriptionMixUp && y instanceof TVAudioDescriptionMixUp) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVAudioDescriptionMixUp) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVAudioDescriptionMixUp) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVContentsMenu && y instanceof TVContentsMenu) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVContentsMenu) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVContentsMenu) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVDataService && y instanceof TVDataService) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVDataService) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVDataService) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVInput && y instanceof TVInput) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVInput) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVInput) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVInputComponent && y instanceof TVInputComponent) {
            return Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
        };
        if (x instanceof TVInputComponent) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVInputComponent) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVInputComposite && y instanceof TVInputComposite) {
            return Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
        };
        if (x instanceof TVInputComposite) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVInputComposite) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVInputHDMI && y instanceof TVInputHDMI) {
            return Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
        };
        if (x instanceof TVInputHDMI) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVInputHDMI) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVInputVGA1 && y instanceof TVInputVGA1) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVInputVGA1) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVInputVGA1) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVMediaContext && y instanceof TVMediaContext) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVMediaContext) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVMediaContext) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVNetwork && y instanceof TVNetwork) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVNetwork) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVNetwork) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVNumberEntry && y instanceof TVNumberEntry) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVNumberEntry) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVNumberEntry) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVPower && y instanceof TVPower) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVPower) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVPower) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVRadioService && y instanceof TVRadioService) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVRadioService) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVRadioService) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVSatellite && y instanceof TVSatellite) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVSatellite) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVSatellite) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVSatelliteBS && y instanceof TVSatelliteBS) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVSatelliteBS) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVSatelliteBS) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVSatelliteCS && y instanceof TVSatelliteCS) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVSatelliteCS) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVSatelliteCS) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVSatelliteToggle && y instanceof TVSatelliteToggle) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVSatelliteToggle) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVSatelliteToggle) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVTerrestrialAnalog && y instanceof TVTerrestrialAnalog) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVTerrestrialAnalog) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVTerrestrialAnalog) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVTerrestrialDigital && y instanceof TVTerrestrialDigital) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVTerrestrialDigital) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVTerrestrialDigital) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TVTimer && y instanceof TVTimer) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TVTimer) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TVTimer) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AVRInput && y instanceof AVRInput) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AVRInput) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AVRInput) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AVRPower && y instanceof AVRPower) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AVRPower) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AVRPower) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ColorF0Red && y instanceof ColorF0Red) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ColorF0Red) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ColorF0Red) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ColorF1Green && y instanceof ColorF1Green) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ColorF1Green) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ColorF1Green) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ColorF2Yellow && y instanceof ColorF2Yellow) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ColorF2Yellow) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ColorF2Yellow) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ColorF3Blue && y instanceof ColorF3Blue) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ColorF3Blue) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ColorF3Blue) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ColorF4Grey && y instanceof ColorF4Grey) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ColorF4Grey) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ColorF4Grey) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ColorF5Brown && y instanceof ColorF5Brown) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ColorF5Brown) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ColorF5Brown) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ClosedCaptionToggle && y instanceof ClosedCaptionToggle) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ClosedCaptionToggle) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ClosedCaptionToggle) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Dimmer && y instanceof Dimmer) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Dimmer) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Dimmer) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof DisplaySwap && y instanceof DisplaySwap) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof DisplaySwap) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof DisplaySwap) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof DVR && y instanceof DVR) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof DVR) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof DVR) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Exit && y instanceof Exit) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Exit) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Exit) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof FavoriteClear && y instanceof FavoriteClear) {
            return Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
        };
        if (x instanceof FavoriteClear) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof FavoriteClear) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof FavoriteRecall && y instanceof FavoriteRecall) {
            return Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
        };
        if (x instanceof FavoriteRecall) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof FavoriteRecall) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof FavoriteStore && y instanceof FavoriteStore) {
            return Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
        };
        if (x instanceof FavoriteStore) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof FavoriteStore) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Guide && y instanceof Guide) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Guide) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Guide) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof GuideNextDay && y instanceof GuideNextDay) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof GuideNextDay) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof GuideNextDay) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof GuidePreviousDay && y instanceof GuidePreviousDay) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof GuidePreviousDay) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof GuidePreviousDay) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Info && y instanceof Info) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Info) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Info) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof InstantReplay && y instanceof InstantReplay) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof InstantReplay) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof InstantReplay) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Link && y instanceof Link) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Link) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Link) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ListProgram && y instanceof ListProgram) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ListProgram) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ListProgram) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof LiveContent && y instanceof LiveContent) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof LiveContent) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof LiveContent) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Lock && y instanceof Lock) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Lock) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Lock) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaApps && y instanceof MediaApps) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MediaApps) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MediaApps) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaAudioTrack && y instanceof MediaAudioTrack) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MediaAudioTrack) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MediaAudioTrack) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaLast && y instanceof MediaLast) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MediaLast) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MediaLast) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaSkipBackward && y instanceof MediaSkipBackward) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MediaSkipBackward) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MediaSkipBackward) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaSkipForward && y instanceof MediaSkipForward) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MediaSkipForward) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MediaSkipForward) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaStepBackward && y instanceof MediaStepBackward) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MediaStepBackward) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MediaStepBackward) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaStepForward && y instanceof MediaStepForward) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MediaStepForward) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MediaStepForward) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MediaTopMenu && y instanceof MediaTopMenu) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MediaTopMenu) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MediaTopMenu) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof NavigateIn && y instanceof NavigateIn) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof NavigateIn) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof NavigateIn) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof NavigateNext && y instanceof NavigateNext) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof NavigateNext) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof NavigateNext) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof NavigateOut && y instanceof NavigateOut) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof NavigateOut) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof NavigateOut) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof NavigatePrevious && y instanceof NavigatePrevious) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof NavigatePrevious) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof NavigatePrevious) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof NextFavoriteChannel && y instanceof NextFavoriteChannel) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof NextFavoriteChannel) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof NextFavoriteChannel) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof NextUserProfile && y instanceof NextUserProfile) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof NextUserProfile) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof NextUserProfile) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof OnDemand && y instanceof OnDemand) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof OnDemand) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof OnDemand) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Pairing && y instanceof Pairing) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Pairing) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Pairing) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PinPDown && y instanceof PinPDown) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof PinPDown) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof PinPDown) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PinPMove && y instanceof PinPMove) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof PinPMove) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof PinPMove) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PinPToggle && y instanceof PinPToggle) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof PinPToggle) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof PinPToggle) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PinPUp && y instanceof PinPUp) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof PinPUp) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof PinPUp) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PlaySpeedDown && y instanceof PlaySpeedDown) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof PlaySpeedDown) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof PlaySpeedDown) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PlaySpeedReset && y instanceof PlaySpeedReset) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof PlaySpeedReset) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof PlaySpeedReset) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PlaySpeedUp && y instanceof PlaySpeedUp) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof PlaySpeedUp) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof PlaySpeedUp) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof RandomToggle && y instanceof RandomToggle) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof RandomToggle) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof RandomToggle) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof RcLowBattery && y instanceof RcLowBattery) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof RcLowBattery) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof RcLowBattery) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof RecordSpeedNext && y instanceof RecordSpeedNext) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof RecordSpeedNext) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof RecordSpeedNext) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof RfBypass && y instanceof RfBypass) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof RfBypass) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof RfBypass) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ScanChannelsToggle && y instanceof ScanChannelsToggle) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ScanChannelsToggle) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ScanChannelsToggle) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ScreenModeNext && y instanceof ScreenModeNext) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof ScreenModeNext) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ScreenModeNext) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Settings && y instanceof Settings) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Settings) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Settings) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof SplitScreenToggle && y instanceof SplitScreenToggle) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof SplitScreenToggle) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof SplitScreenToggle) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof STBInput && y instanceof STBInput) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof STBInput) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof STBInput) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof STBPower && y instanceof STBPower) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof STBPower) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof STBPower) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Subtitle && y instanceof Subtitle) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Subtitle) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Subtitle) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Teletext && y instanceof Teletext) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Teletext) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Teletext) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof VideoModeNext && y instanceof VideoModeNext) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof VideoModeNext) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof VideoModeNext) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Wink && y instanceof Wink) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Wink) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Wink) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ZoomToggle && y instanceof ZoomToggle) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Web.UIEvents.Key.Internal line 271, column 8 - line 271, column 34: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var category = function (v) {
    if (v instanceof Unicode) {
        return Web_UIEvents_Key_Internal_Category.Character.value;
    };
    if (v instanceof Unidentified) {
        return Web_UIEvents_Key_Internal_Category.Special.value;
    };
    if (v instanceof Alt) {
        return Web_UIEvents_Key_Internal_Category.Modifier.value;
    };
    if (v instanceof AltGraph) {
        return Web_UIEvents_Key_Internal_Category.Modifier.value;
    };
    if (v instanceof CapsLock) {
        return Web_UIEvents_Key_Internal_Category.Modifier.value;
    };
    if (v instanceof Control) {
        return Web_UIEvents_Key_Internal_Category.Modifier.value;
    };
    if (v instanceof Fn) {
        return Web_UIEvents_Key_Internal_Category.Modifier.value;
    };
    if (v instanceof FnLock) {
        return Web_UIEvents_Key_Internal_Category.Modifier.value;
    };
    if (v instanceof Meta) {
        return Web_UIEvents_Key_Internal_Category.Modifier.value;
    };
    if (v instanceof NumLock) {
        return Web_UIEvents_Key_Internal_Category.Modifier.value;
    };
    if (v instanceof ScrollLock) {
        return Web_UIEvents_Key_Internal_Category.Modifier.value;
    };
    if (v instanceof Shift) {
        return Web_UIEvents_Key_Internal_Category.Modifier.value;
    };
    if (v instanceof $$Symbol) {
        return Web_UIEvents_Key_Internal_Category.Modifier.value;
    };
    if (v instanceof SymbolLock) {
        return Web_UIEvents_Key_Internal_Category.Modifier.value;
    };
    if (v instanceof Hyper) {
        return Web_UIEvents_Key_Internal_Category.Modifier.value;
    };
    if (v instanceof Super) {
        return Web_UIEvents_Key_Internal_Category.Modifier.value;
    };
    if (v instanceof Enter) {
        return Web_UIEvents_Key_Internal_Category.Whitespace.value;
    };
    if (v instanceof Tab) {
        return Web_UIEvents_Key_Internal_Category.Whitespace.value;
    };
    if (v instanceof ArrowDown) {
        return Web_UIEvents_Key_Internal_Category.Navigation.value;
    };
    if (v instanceof ArrowLeft) {
        return Web_UIEvents_Key_Internal_Category.Navigation.value;
    };
    if (v instanceof ArrowRight) {
        return Web_UIEvents_Key_Internal_Category.Navigation.value;
    };
    if (v instanceof ArrowUp) {
        return Web_UIEvents_Key_Internal_Category.Navigation.value;
    };
    if (v instanceof End) {
        return Web_UIEvents_Key_Internal_Category.Navigation.value;
    };
    if (v instanceof Home) {
        return Web_UIEvents_Key_Internal_Category.Navigation.value;
    };
    if (v instanceof PageDown) {
        return Web_UIEvents_Key_Internal_Category.Navigation.value;
    };
    if (v instanceof PageUp) {
        return Web_UIEvents_Key_Internal_Category.Navigation.value;
    };
    if (v instanceof Backspace) {
        return Web_UIEvents_Key_Internal_Category.Editing.value;
    };
    if (v instanceof Clear) {
        return Web_UIEvents_Key_Internal_Category.Editing.value;
    };
    if (v instanceof Copy) {
        return Web_UIEvents_Key_Internal_Category.Editing.value;
    };
    if (v instanceof CrSel) {
        return Web_UIEvents_Key_Internal_Category.Editing.value;
    };
    if (v instanceof Cut) {
        return Web_UIEvents_Key_Internal_Category.Editing.value;
    };
    if (v instanceof Delete) {
        return Web_UIEvents_Key_Internal_Category.Editing.value;
    };
    if (v instanceof EraseEof) {
        return Web_UIEvents_Key_Internal_Category.Editing.value;
    };
    if (v instanceof ExSel) {
        return Web_UIEvents_Key_Internal_Category.Editing.value;
    };
    if (v instanceof Insert) {
        return Web_UIEvents_Key_Internal_Category.Editing.value;
    };
    if (v instanceof Paste) {
        return Web_UIEvents_Key_Internal_Category.Editing.value;
    };
    if (v instanceof Redo) {
        return Web_UIEvents_Key_Internal_Category.Editing.value;
    };
    if (v instanceof Undo) {
        return Web_UIEvents_Key_Internal_Category.Editing.value;
    };
    if (v instanceof Accept) {
        return Web_UIEvents_Key_Internal_Category.UI.value;
    };
    if (v instanceof Again) {
        return Web_UIEvents_Key_Internal_Category.UI.value;
    };
    if (v instanceof Attn) {
        return Web_UIEvents_Key_Internal_Category.UI.value;
    };
    if (v instanceof Cancel) {
        return Web_UIEvents_Key_Internal_Category.UI.value;
    };
    if (v instanceof ContextMenu) {
        return Web_UIEvents_Key_Internal_Category.UI.value;
    };
    if (v instanceof Escape) {
        return Web_UIEvents_Key_Internal_Category.UI.value;
    };
    if (v instanceof Execute) {
        return Web_UIEvents_Key_Internal_Category.UI.value;
    };
    if (v instanceof Find) {
        return Web_UIEvents_Key_Internal_Category.UI.value;
    };
    if (v instanceof Help) {
        return Web_UIEvents_Key_Internal_Category.UI.value;
    };
    if (v instanceof Pause) {
        return Web_UIEvents_Key_Internal_Category.UI.value;
    };
    if (v instanceof Play) {
        return Web_UIEvents_Key_Internal_Category.UI.value;
    };
    if (v instanceof Props) {
        return Web_UIEvents_Key_Internal_Category.UI.value;
    };
    if (v instanceof Select) {
        return Web_UIEvents_Key_Internal_Category.UI.value;
    };
    if (v instanceof ZoomIn) {
        return Web_UIEvents_Key_Internal_Category.UI.value;
    };
    if (v instanceof ZoomOut) {
        return Web_UIEvents_Key_Internal_Category.UI.value;
    };
    if (v instanceof BrightnessDown) {
        return Web_UIEvents_Key_Internal_Category.Device.value;
    };
    if (v instanceof BrightnessUp) {
        return Web_UIEvents_Key_Internal_Category.Device.value;
    };
    if (v instanceof Eject) {
        return Web_UIEvents_Key_Internal_Category.Device.value;
    };
    if (v instanceof LogOff) {
        return Web_UIEvents_Key_Internal_Category.Device.value;
    };
    if (v instanceof Power) {
        return Web_UIEvents_Key_Internal_Category.Device.value;
    };
    if (v instanceof PowerOff) {
        return Web_UIEvents_Key_Internal_Category.Device.value;
    };
    if (v instanceof PrintScreen) {
        return Web_UIEvents_Key_Internal_Category.Device.value;
    };
    if (v instanceof Hibernate) {
        return Web_UIEvents_Key_Internal_Category.Device.value;
    };
    if (v instanceof Standby) {
        return Web_UIEvents_Key_Internal_Category.Device.value;
    };
    if (v instanceof WakeUp) {
        return Web_UIEvents_Key_Internal_Category.Device.value;
    };
    if (v instanceof AllCandidates) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof Alphanumeric) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof CodeInput) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof Compose) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof Convert) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof Dead) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof FinalMode) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof GroupFirst) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof GroupLast) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof GroupNext) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof GroupPrevious) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof ModeChange) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof NextCandidate) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof NonConvert) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof PreviousCandidate) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof Process) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof SingleCandidate) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof HangulMode) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof HanjaMode) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof JunjaMode) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof Eisu) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof Hankaku) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof Hiragana) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof HiraganaKatakana) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof KanaMode) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof KanjiMode) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof Katakana) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof Romaji) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof Zenkaku) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof ZenkakuHankaku) {
        return Web_UIEvents_Key_Internal_Category.Composition.value;
    };
    if (v instanceof F) {
        return Web_UIEvents_Key_Internal_Category["Function"].value;
    };
    if (v instanceof Soft) {
        return Web_UIEvents_Key_Internal_Category["Function"].value;
    };
    if (v instanceof ChannelDown) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof ChannelUp) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof Close) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof MailForward) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof MailReply) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof MailSend) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof MediaClose) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof MediaFastForward) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof MediaPause) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof MediaPlay) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof MediaPlayPause) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof MediaRecord) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof MediaRewind) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof MediaStop) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof MediaTrackNext) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof MediaTrackPrevious) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof New) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof Open) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof Print) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof Save) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof SpellCheck) {
        return Web_UIEvents_Key_Internal_Category.Multimedia.value;
    };
    if (v instanceof Key11) {
        return Web_UIEvents_Key_Internal_Category.MultimediaNumpad.value;
    };
    if (v instanceof Key12) {
        return Web_UIEvents_Key_Internal_Category.MultimediaNumpad.value;
    };
    if (v instanceof AudioBalanceLeft) {
        return Web_UIEvents_Key_Internal_Category.Audio.value;
    };
    if (v instanceof AudioBalanceRight) {
        return Web_UIEvents_Key_Internal_Category.Audio.value;
    };
    if (v instanceof AudioBassBoostDown) {
        return Web_UIEvents_Key_Internal_Category.Audio.value;
    };
    if (v instanceof AudioBassBoostToggle) {
        return Web_UIEvents_Key_Internal_Category.Audio.value;
    };
    if (v instanceof AudioBassBoostUp) {
        return Web_UIEvents_Key_Internal_Category.Audio.value;
    };
    if (v instanceof AudioFaderFront) {
        return Web_UIEvents_Key_Internal_Category.Audio.value;
    };
    if (v instanceof AudioFaderRear) {
        return Web_UIEvents_Key_Internal_Category.Audio.value;
    };
    if (v instanceof AudioSurroundModeNext) {
        return Web_UIEvents_Key_Internal_Category.Audio.value;
    };
    if (v instanceof AudioTrebleDown) {
        return Web_UIEvents_Key_Internal_Category.Audio.value;
    };
    if (v instanceof AudioTrebleUp) {
        return Web_UIEvents_Key_Internal_Category.Audio.value;
    };
    if (v instanceof AudioVolumeDown) {
        return Web_UIEvents_Key_Internal_Category.Audio.value;
    };
    if (v instanceof AudioVolumeUp) {
        return Web_UIEvents_Key_Internal_Category.Audio.value;
    };
    if (v instanceof AudioVolumeMute) {
        return Web_UIEvents_Key_Internal_Category.Audio.value;
    };
    if (v instanceof MicrophoneToggle) {
        return Web_UIEvents_Key_Internal_Category.Audio.value;
    };
    if (v instanceof MicrophoneVolumeDown) {
        return Web_UIEvents_Key_Internal_Category.Audio.value;
    };
    if (v instanceof MicrophoneVolumeUp) {
        return Web_UIEvents_Key_Internal_Category.Audio.value;
    };
    if (v instanceof MicrophoneVolumeMute) {
        return Web_UIEvents_Key_Internal_Category.Audio.value;
    };
    if (v instanceof SpeechCorrectionList) {
        return Web_UIEvents_Key_Internal_Category.Speech.value;
    };
    if (v instanceof SpeechInputToggle) {
        return Web_UIEvents_Key_Internal_Category.Speech.value;
    };
    if (v instanceof LaunchApplication) {
        return Web_UIEvents_Key_Internal_Category.Application.value;
    };
    if (v instanceof LaunchCalendar) {
        return Web_UIEvents_Key_Internal_Category.Application.value;
    };
    if (v instanceof LaunchContacts) {
        return Web_UIEvents_Key_Internal_Category.Application.value;
    };
    if (v instanceof LaunchMail) {
        return Web_UIEvents_Key_Internal_Category.Application.value;
    };
    if (v instanceof LaunchMediaPlayer) {
        return Web_UIEvents_Key_Internal_Category.Application.value;
    };
    if (v instanceof LaunchMusicPlayer) {
        return Web_UIEvents_Key_Internal_Category.Application.value;
    };
    if (v instanceof LaunchPhone) {
        return Web_UIEvents_Key_Internal_Category.Application.value;
    };
    if (v instanceof LaunchScreenSaver) {
        return Web_UIEvents_Key_Internal_Category.Application.value;
    };
    if (v instanceof LaunchSpreadsheet) {
        return Web_UIEvents_Key_Internal_Category.Application.value;
    };
    if (v instanceof LaunchWebBrowser) {
        return Web_UIEvents_Key_Internal_Category.Application.value;
    };
    if (v instanceof LaunchWebCam) {
        return Web_UIEvents_Key_Internal_Category.Application.value;
    };
    if (v instanceof LaunchWordProcessor) {
        return Web_UIEvents_Key_Internal_Category.Application.value;
    };
    if (v instanceof BrowserBack) {
        return Web_UIEvents_Key_Internal_Category.Browser.value;
    };
    if (v instanceof BrowserFavorites) {
        return Web_UIEvents_Key_Internal_Category.Browser.value;
    };
    if (v instanceof BrowserForward) {
        return Web_UIEvents_Key_Internal_Category.Browser.value;
    };
    if (v instanceof BrowserHome) {
        return Web_UIEvents_Key_Internal_Category.Browser.value;
    };
    if (v instanceof BrowserRefresh) {
        return Web_UIEvents_Key_Internal_Category.Browser.value;
    };
    if (v instanceof BrowserSearch) {
        return Web_UIEvents_Key_Internal_Category.Browser.value;
    };
    if (v instanceof BrowserStop) {
        return Web_UIEvents_Key_Internal_Category.Browser.value;
    };
    if (v instanceof AppSwitch) {
        return Web_UIEvents_Key_Internal_Category.MobilePhone.value;
    };
    if (v instanceof Call) {
        return Web_UIEvents_Key_Internal_Category.MobilePhone.value;
    };
    if (v instanceof Camera) {
        return Web_UIEvents_Key_Internal_Category.MobilePhone.value;
    };
    if (v instanceof CameraFocus) {
        return Web_UIEvents_Key_Internal_Category.MobilePhone.value;
    };
    if (v instanceof EndCall) {
        return Web_UIEvents_Key_Internal_Category.MobilePhone.value;
    };
    if (v instanceof GoBack) {
        return Web_UIEvents_Key_Internal_Category.MobilePhone.value;
    };
    if (v instanceof GoHome) {
        return Web_UIEvents_Key_Internal_Category.MobilePhone.value;
    };
    if (v instanceof HeadsetHook) {
        return Web_UIEvents_Key_Internal_Category.MobilePhone.value;
    };
    if (v instanceof LastNumberRedial) {
        return Web_UIEvents_Key_Internal_Category.MobilePhone.value;
    };
    if (v instanceof Notification) {
        return Web_UIEvents_Key_Internal_Category.MobilePhone.value;
    };
    if (v instanceof MannerMode) {
        return Web_UIEvents_Key_Internal_Category.MobilePhone.value;
    };
    if (v instanceof VoiceDial) {
        return Web_UIEvents_Key_Internal_Category.MobilePhone.value;
    };
    if (v instanceof TV) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TV3DMode) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVAntennaCable) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVAudioDescription) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVAudioDescriptionMixDown) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVAudioDescriptionMixUp) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVContentsMenu) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVDataService) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVInput) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVInputComponent) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVInputComposite) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVInputHDMI) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVInputVGA1) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVMediaContext) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVNetwork) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVNumberEntry) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVPower) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVRadioService) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVSatellite) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVSatelliteBS) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVSatelliteCS) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVSatelliteToggle) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVTerrestrialAnalog) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVTerrestrialDigital) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof TVTimer) {
        return Web_UIEvents_Key_Internal_Category.TV.value;
    };
    if (v instanceof AVRInput) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof AVRPower) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof ColorF0Red) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof ColorF1Green) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof ColorF2Yellow) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof ColorF3Blue) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof ColorF4Grey) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof ColorF5Brown) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof ClosedCaptionToggle) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof Dimmer) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof DisplaySwap) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof DVR) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof Exit) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof FavoriteClear) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof FavoriteRecall) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof FavoriteStore) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof Guide) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof GuideNextDay) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof GuidePreviousDay) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof Info) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof InstantReplay) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof Link) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof ListProgram) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof LiveContent) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof Lock) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof MediaApps) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof MediaAudioTrack) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof MediaLast) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof MediaSkipBackward) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof MediaSkipForward) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof MediaStepBackward) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof MediaStepForward) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof MediaTopMenu) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof NavigateIn) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof NavigateNext) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof NavigateOut) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof NavigatePrevious) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof NextFavoriteChannel) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof NextUserProfile) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof OnDemand) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof Pairing) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof PinPDown) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof PinPMove) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof PinPToggle) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof PinPUp) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof PlaySpeedDown) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof PlaySpeedReset) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof PlaySpeedUp) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof RandomToggle) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof RcLowBattery) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof RecordSpeedNext) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof RfBypass) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof ScanChannelsToggle) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof ScreenModeNext) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof Settings) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof SplitScreenToggle) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof STBInput) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof STBPower) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof Subtitle) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof Teletext) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof VideoModeNext) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof Wink) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    if (v instanceof ZoomToggle) {
        return Web_UIEvents_Key_Internal_Category.MediaController.value;
    };
    throw new Error("Failed pattern match at Web.UIEvents.Key.Internal line 276, column 1 - line 276, column 28: " + [ v.constructor.name ]);
};
module.exports = {
    Unicode: Unicode,
    Unidentified: Unidentified,
    Alt: Alt,
    AltGraph: AltGraph,
    CapsLock: CapsLock,
    Control: Control,
    Fn: Fn,
    FnLock: FnLock,
    Meta: Meta,
    NumLock: NumLock,
    ScrollLock: ScrollLock,
    Shift: Shift,
    "Symbol": $$Symbol,
    SymbolLock: SymbolLock,
    Hyper: Hyper,
    Super: Super,
    Enter: Enter,
    Tab: Tab,
    ArrowDown: ArrowDown,
    ArrowLeft: ArrowLeft,
    ArrowRight: ArrowRight,
    ArrowUp: ArrowUp,
    End: End,
    Home: Home,
    PageDown: PageDown,
    PageUp: PageUp,
    Backspace: Backspace,
    Clear: Clear,
    Copy: Copy,
    CrSel: CrSel,
    Cut: Cut,
    Delete: Delete,
    EraseEof: EraseEof,
    ExSel: ExSel,
    Insert: Insert,
    Paste: Paste,
    Redo: Redo,
    Undo: Undo,
    Accept: Accept,
    Again: Again,
    Attn: Attn,
    Cancel: Cancel,
    ContextMenu: ContextMenu,
    Escape: Escape,
    Execute: Execute,
    Find: Find,
    Help: Help,
    Pause: Pause,
    Play: Play,
    Props: Props,
    Select: Select,
    ZoomIn: ZoomIn,
    ZoomOut: ZoomOut,
    BrightnessDown: BrightnessDown,
    BrightnessUp: BrightnessUp,
    Eject: Eject,
    LogOff: LogOff,
    Power: Power,
    PowerOff: PowerOff,
    PrintScreen: PrintScreen,
    Hibernate: Hibernate,
    Standby: Standby,
    WakeUp: WakeUp,
    AllCandidates: AllCandidates,
    Alphanumeric: Alphanumeric,
    CodeInput: CodeInput,
    Compose: Compose,
    Convert: Convert,
    Dead: Dead,
    FinalMode: FinalMode,
    GroupFirst: GroupFirst,
    GroupLast: GroupLast,
    GroupNext: GroupNext,
    GroupPrevious: GroupPrevious,
    ModeChange: ModeChange,
    NextCandidate: NextCandidate,
    NonConvert: NonConvert,
    PreviousCandidate: PreviousCandidate,
    Process: Process,
    SingleCandidate: SingleCandidate,
    HangulMode: HangulMode,
    HanjaMode: HanjaMode,
    JunjaMode: JunjaMode,
    Eisu: Eisu,
    Hankaku: Hankaku,
    Hiragana: Hiragana,
    HiraganaKatakana: HiraganaKatakana,
    KanaMode: KanaMode,
    KanjiMode: KanjiMode,
    Katakana: Katakana,
    Romaji: Romaji,
    Zenkaku: Zenkaku,
    ZenkakuHankaku: ZenkakuHankaku,
    F: F,
    Soft: Soft,
    ChannelDown: ChannelDown,
    ChannelUp: ChannelUp,
    Close: Close,
    MailForward: MailForward,
    MailReply: MailReply,
    MailSend: MailSend,
    MediaClose: MediaClose,
    MediaFastForward: MediaFastForward,
    MediaPause: MediaPause,
    MediaPlay: MediaPlay,
    MediaPlayPause: MediaPlayPause,
    MediaRecord: MediaRecord,
    MediaRewind: MediaRewind,
    MediaStop: MediaStop,
    MediaTrackNext: MediaTrackNext,
    MediaTrackPrevious: MediaTrackPrevious,
    New: New,
    Open: Open,
    Print: Print,
    Save: Save,
    SpellCheck: SpellCheck,
    Key11: Key11,
    Key12: Key12,
    AudioBalanceLeft: AudioBalanceLeft,
    AudioBalanceRight: AudioBalanceRight,
    AudioBassBoostDown: AudioBassBoostDown,
    AudioBassBoostToggle: AudioBassBoostToggle,
    AudioBassBoostUp: AudioBassBoostUp,
    AudioFaderFront: AudioFaderFront,
    AudioFaderRear: AudioFaderRear,
    AudioSurroundModeNext: AudioSurroundModeNext,
    AudioTrebleDown: AudioTrebleDown,
    AudioTrebleUp: AudioTrebleUp,
    AudioVolumeDown: AudioVolumeDown,
    AudioVolumeUp: AudioVolumeUp,
    AudioVolumeMute: AudioVolumeMute,
    MicrophoneToggle: MicrophoneToggle,
    MicrophoneVolumeDown: MicrophoneVolumeDown,
    MicrophoneVolumeUp: MicrophoneVolumeUp,
    MicrophoneVolumeMute: MicrophoneVolumeMute,
    SpeechCorrectionList: SpeechCorrectionList,
    SpeechInputToggle: SpeechInputToggle,
    LaunchApplication: LaunchApplication,
    LaunchCalendar: LaunchCalendar,
    LaunchContacts: LaunchContacts,
    LaunchMail: LaunchMail,
    LaunchMediaPlayer: LaunchMediaPlayer,
    LaunchMusicPlayer: LaunchMusicPlayer,
    LaunchPhone: LaunchPhone,
    LaunchScreenSaver: LaunchScreenSaver,
    LaunchSpreadsheet: LaunchSpreadsheet,
    LaunchWebBrowser: LaunchWebBrowser,
    LaunchWebCam: LaunchWebCam,
    LaunchWordProcessor: LaunchWordProcessor,
    BrowserBack: BrowserBack,
    BrowserFavorites: BrowserFavorites,
    BrowserForward: BrowserForward,
    BrowserHome: BrowserHome,
    BrowserRefresh: BrowserRefresh,
    BrowserSearch: BrowserSearch,
    BrowserStop: BrowserStop,
    AppSwitch: AppSwitch,
    Call: Call,
    Camera: Camera,
    CameraFocus: CameraFocus,
    EndCall: EndCall,
    GoBack: GoBack,
    GoHome: GoHome,
    HeadsetHook: HeadsetHook,
    LastNumberRedial: LastNumberRedial,
    Notification: Notification,
    MannerMode: MannerMode,
    VoiceDial: VoiceDial,
    TV: TV,
    TV3DMode: TV3DMode,
    TVAntennaCable: TVAntennaCable,
    TVAudioDescription: TVAudioDescription,
    TVAudioDescriptionMixDown: TVAudioDescriptionMixDown,
    TVAudioDescriptionMixUp: TVAudioDescriptionMixUp,
    TVContentsMenu: TVContentsMenu,
    TVDataService: TVDataService,
    TVInput: TVInput,
    TVInputComponent: TVInputComponent,
    TVInputComposite: TVInputComposite,
    TVInputHDMI: TVInputHDMI,
    TVInputVGA1: TVInputVGA1,
    TVMediaContext: TVMediaContext,
    TVNetwork: TVNetwork,
    TVNumberEntry: TVNumberEntry,
    TVPower: TVPower,
    TVRadioService: TVRadioService,
    TVSatellite: TVSatellite,
    TVSatelliteBS: TVSatelliteBS,
    TVSatelliteCS: TVSatelliteCS,
    TVSatelliteToggle: TVSatelliteToggle,
    TVTerrestrialAnalog: TVTerrestrialAnalog,
    TVTerrestrialDigital: TVTerrestrialDigital,
    TVTimer: TVTimer,
    AVRInput: AVRInput,
    AVRPower: AVRPower,
    ColorF0Red: ColorF0Red,
    ColorF1Green: ColorF1Green,
    ColorF2Yellow: ColorF2Yellow,
    ColorF3Blue: ColorF3Blue,
    ColorF4Grey: ColorF4Grey,
    ColorF5Brown: ColorF5Brown,
    ClosedCaptionToggle: ClosedCaptionToggle,
    Dimmer: Dimmer,
    DisplaySwap: DisplaySwap,
    DVR: DVR,
    Exit: Exit,
    FavoriteClear: FavoriteClear,
    FavoriteRecall: FavoriteRecall,
    FavoriteStore: FavoriteStore,
    Guide: Guide,
    GuideNextDay: GuideNextDay,
    GuidePreviousDay: GuidePreviousDay,
    Info: Info,
    InstantReplay: InstantReplay,
    Link: Link,
    ListProgram: ListProgram,
    LiveContent: LiveContent,
    Lock: Lock,
    MediaApps: MediaApps,
    MediaAudioTrack: MediaAudioTrack,
    MediaLast: MediaLast,
    MediaSkipBackward: MediaSkipBackward,
    MediaSkipForward: MediaSkipForward,
    MediaStepBackward: MediaStepBackward,
    MediaStepForward: MediaStepForward,
    MediaTopMenu: MediaTopMenu,
    NavigateIn: NavigateIn,
    NavigateNext: NavigateNext,
    NavigateOut: NavigateOut,
    NavigatePrevious: NavigatePrevious,
    NextFavoriteChannel: NextFavoriteChannel,
    NextUserProfile: NextUserProfile,
    OnDemand: OnDemand,
    Pairing: Pairing,
    PinPDown: PinPDown,
    PinPMove: PinPMove,
    PinPToggle: PinPToggle,
    PinPUp: PinPUp,
    PlaySpeedDown: PlaySpeedDown,
    PlaySpeedReset: PlaySpeedReset,
    PlaySpeedUp: PlaySpeedUp,
    RandomToggle: RandomToggle,
    RcLowBattery: RcLowBattery,
    RecordSpeedNext: RecordSpeedNext,
    RfBypass: RfBypass,
    ScanChannelsToggle: ScanChannelsToggle,
    ScreenModeNext: ScreenModeNext,
    Settings: Settings,
    SplitScreenToggle: SplitScreenToggle,
    STBInput: STBInput,
    STBPower: STBPower,
    Subtitle: Subtitle,
    Teletext: Teletext,
    VideoModeNext: VideoModeNext,
    Wink: Wink,
    ZoomToggle: ZoomToggle,
    tryParse: tryParse,
    category: category,
    parseImpl: parseImpl,
    unparse: unparse,
    fromModifier: fromModifier,
    toModifier: toModifier,
    eqKey: eqKey,
    ordKey: ordKey
};

},{"../Control.Bind":11,"../Data.Eq":157,"../Data.Int":193,"../Data.Maybe":234,"../Data.Ord":251,"../Data.Ordering":252,"../Data.Semigroup":271,"../Data.Show":276,"../Data.String":288,"../Prelude":358,"../Web.UIEvents.Key.Internal.Category":370,"../Web.UIEvents.Key.Internal.Modifier":371}],373:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Lens = require("../Data.Lens");
var Data_Lens_Iso = require("../Data.Lens.Iso");
var Data_Lens_Prism = require("../Data.Lens.Prism");
var Data_Maybe = require("../Data.Maybe");
var Data_String_CodePoints = require("../Data.String.CodePoints");
var Prelude = require("../Prelude");
var Web_UIEvents_Key_Internal = require("../Web.UIEvents.Key.Internal");
var Web_UIEvents_Key_Internal_Modifier = require("../Web.UIEvents.Key.Internal.Modifier");
var _Unicode = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Web_UIEvents_Key_Internal.Unicode.create)(function (v) {
        if (v instanceof Web_UIEvents_Key_Internal.Unicode) {
            return new Data_Maybe.Just(v.value0);
        };
        return Data_Maybe.Nothing.value;
    })(dictChoice);
};
var _space = function (dictChoice) {
    return function ($10) {
        return _Unicode(dictChoice)(Data_Lens_Prism.only(Data_Eq.eqString)(" ")(dictChoice)($10));
    };
};
var _Modifier = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Web_UIEvents_Key_Internal.fromModifier)(Web_UIEvents_Key_Internal.toModifier)(dictChoice);
};
var _CodePoint = function (dictChoice) {
    return function ($11) {
        return _Unicode(dictChoice)(Data_Lens_Iso.iso(Data_String_CodePoints.toCodePointArray)(Data_String_CodePoints.fromCodePointArray)(dictChoice.Profunctor0())(Data_Lens_Prism["prism'"](Control_Applicative.pure(Control_Applicative.applicativeArray))(function (v) {
            if (v.length === 1) {
                return new Data_Maybe.Just(v[0]);
            };
            return Data_Maybe.Nothing.value;
        })(dictChoice)($11)));
    };
};
module.exports = {
    _space: _space,
    _Unicode: _Unicode,
    _CodePoint: _CodePoint,
    _Modifier: _Modifier
};

},{"../Control.Applicative":5,"../Control.Semigroupoid":66,"../Data.Eq":157,"../Data.Lens":225,"../Data.Lens.Iso":214,"../Data.Lens.Prism":221,"../Data.Maybe":234,"../Data.String.CodePoints":282,"../Prelude":358,"../Web.UIEvents.Key.Internal":372,"../Web.UIEvents.Key.Internal.Modifier":371}],374:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Prelude = require("../Prelude");
var Web_UIEvents_Key_Details = require("../Web.UIEvents.Key.Details");
var Web_UIEvents_Key_Internal = require("../Web.UIEvents.Key.Internal");
var parse = function (s) {
    return Data_Maybe["maybe'"](function (v) {
        return Web_UIEvents_Key_Details.normalizeKeyString(s);
    })(Control_Applicative.pure(Data_Maybe.applicativeMaybe))(Web_UIEvents_Key_Internal.parseImpl(s));
};
module.exports = {
    parse: parse
};

},{"../Control.Applicative":5,"../Data.Function":172,"../Data.Maybe":234,"../Prelude":358,"../Web.UIEvents.Key.Details":369,"../Web.UIEvents.Key.Internal":372}],375:[function(require,module,exports){
require('Halogen.Behavior').main();

},{"Halogen.Behavior":328}]},{},[375]);
